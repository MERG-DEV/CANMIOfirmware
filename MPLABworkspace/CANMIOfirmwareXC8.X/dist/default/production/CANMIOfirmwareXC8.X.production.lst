

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Apr 10 16:25:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	vectors,global,abs,reloc=2,class=MYVECTS,delta=1
     6                           	psect	eeprom_data,global,class=EEDATA,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	_moduleNvDefs_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    11                           	psect	_FCUparams_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    12                           	psect	_FLiMparams_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    13                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    16                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    30                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	text0,global,reloc=2,class=CODE,delta=1
    32                           	psect	text1,global,reloc=2,class=CODE,delta=1
    33                           	psect	text2,global,reloc=2,class=CODE,delta=1
    34                           	psect	text3,global,reloc=2,class=CODE,delta=1
    35                           	psect	text4,global,reloc=2,class=CODE,delta=1
    36                           	psect	text5,global,reloc=2,class=CODE,delta=1
    37                           	psect	text6,global,reloc=2,class=CODE,delta=1
    38                           	psect	text7,global,reloc=2,class=CODE,delta=1
    39                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text9,global,reloc=2,class=CODE,delta=1
    41                           	psect	text10,global,reloc=2,class=CODE,delta=1
    42                           	psect	text11,global,reloc=2,class=CODE,delta=1
    43                           	psect	text12,global,reloc=2,class=CODE,delta=1
    44                           	psect	text13,global,reloc=2,class=CODE,delta=1
    45                           	psect	text14,global,reloc=2,class=CODE,delta=1
    46                           	psect	text15,global,reloc=2,class=CODE,delta=1
    47                           	psect	text16,global,reloc=2,class=CODE,delta=1
    48                           	psect	text17,global,reloc=2,class=CODE,delta=1
    49                           	psect	text18,global,reloc=2,class=CODE,delta=1
    50                           	psect	text19,global,reloc=2,class=CODE,delta=1
    51                           	psect	text20,global,reloc=2,class=CODE,delta=1
    52                           	psect	text21,global,reloc=2,class=CODE,delta=1
    53                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text23,global,reloc=2,class=CODE,delta=1
    55                           	psect	text24,global,reloc=2,class=CODE,delta=1
    56                           	psect	text25,global,reloc=2,class=CODE,delta=1
    57                           	psect	text26,global,reloc=2,class=CODE,delta=1
    58                           	psect	text27,global,reloc=2,class=CODE,delta=1
    59                           	psect	text28,global,reloc=2,class=CODE,delta=1
    60                           	psect	text29,global,reloc=2,class=CODE,delta=1
    61                           	psect	text30,global,reloc=2,class=CODE,delta=1
    62                           	psect	text31,global,reloc=2,class=CODE,delta=1
    63                           	psect	text32,global,reloc=2,class=CODE,delta=1
    64                           	psect	text33,global,reloc=2,class=CODE,delta=1
    65                           	psect	text34,global,reloc=2,class=CODE,delta=1
    66                           	psect	text35,global,reloc=2,class=CODE,delta=1
    67                           	psect	text36,global,reloc=2,class=CODE,delta=1
    68                           	psect	text37,global,reloc=2,class=CODE,delta=1
    69                           	psect	text38,global,reloc=2,class=CODE,delta=1
    70                           	psect	text39,global,reloc=2,class=CODE,delta=1
    71                           	psect	text40,global,reloc=2,class=CODE,delta=1
    72                           	psect	text41,global,reloc=2,class=CODE,delta=1
    73                           	psect	text42,global,reloc=2,class=CODE,delta=1
    74                           	psect	text43,global,reloc=2,class=CODE,delta=1
    75                           	psect	text44,global,reloc=2,class=CODE,delta=1
    76                           	psect	text45,global,reloc=2,class=CODE,delta=1
    77                           	psect	text46,global,reloc=2,class=CODE,delta=1
    78                           	psect	text47,global,reloc=2,class=CODE,delta=1
    79                           	psect	text48,global,reloc=2,class=CODE,delta=1
    80                           	psect	text49,global,reloc=2,class=CODE,delta=1
    81                           	psect	text50,global,reloc=2,class=CODE,delta=1
    82                           	psect	text51,global,reloc=2,class=CODE,delta=1
    83                           	psect	text52,global,reloc=2,class=CODE,delta=1
    84                           	psect	text53,global,reloc=2,class=CODE,delta=1
    85                           	psect	text54,global,reloc=2,class=CODE,delta=1
    86                           	psect	text55,global,reloc=2,class=CODE,delta=1
    87                           	psect	text56,global,reloc=2,class=CODE,delta=1
    88                           	psect	text57,global,reloc=2,class=CODE,delta=1
    89                           	psect	text58,global,reloc=2,class=CODE,delta=1
    90                           	psect	text59,global,reloc=2,class=CODE,delta=1
    91                           	psect	text60,global,reloc=2,class=CODE,delta=1
    92                           	psect	text61,global,reloc=2,class=CODE,delta=1
    93                           	psect	text62,global,reloc=2,class=CODE,delta=1
    94                           	psect	text63,global,reloc=2,class=CODE,delta=1
    95                           	psect	text64,global,reloc=2,class=CODE,delta=1
    96                           	psect	text65,global,reloc=2,class=CODE,delta=1
    97                           	psect	text66,global,reloc=2,class=CODE,delta=1
    98                           	psect	text67,global,reloc=2,class=CODE,delta=1
    99                           	psect	text68,global,reloc=2,class=CODE,delta=1
   100                           	psect	text69,global,reloc=2,class=CODE,delta=1
   101                           	psect	text70,global,reloc=2,class=CODE,delta=1
   102                           	psect	text71,global,reloc=2,class=CODE,delta=1
   103                           	psect	text72,global,reloc=2,class=CODE,delta=1
   104                           	psect	text73,global,reloc=2,class=CODE,delta=1
   105                           	psect	text74,global,reloc=2,class=CODE,delta=1
   106                           	psect	text75,global,reloc=2,class=CODE,delta=1
   107                           	psect	text76,global,reloc=2,class=CODE,delta=1
   108                           	psect	text77,global,reloc=2,class=CODE,delta=1
   109                           	psect	text78,global,reloc=2,class=CODE,delta=1
   110                           	psect	text79,global,reloc=2,class=CODE,delta=1
   111                           	psect	text80,global,reloc=2,class=CODE,delta=1
   112                           	psect	text81,global,reloc=2,class=CODE,delta=1
   113                           	psect	text82,global,reloc=2,class=CODE,delta=1
   114                           	psect	text83,global,reloc=2,class=CODE,delta=1
   115                           	psect	text84,global,reloc=2,class=CODE,delta=1
   116                           	psect	text85,global,reloc=2,class=CODE,delta=1
   117                           	psect	text86,global,reloc=2,class=CODE,delta=1
   118                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text88,global,reloc=2,class=CODE,delta=1
   120                           	psect	text89,global,reloc=2,class=CODE,delta=1
   121                           	psect	text90,global,reloc=2,class=CODE,delta=1
   122                           	psect	text91,global,reloc=2,class=CODE,delta=1
   123                           	psect	text92,global,reloc=2,class=CODE,delta=1
   124                           	psect	text93,global,reloc=2,class=CODE,delta=1
   125                           	psect	text94,global,reloc=2,class=CODE,delta=1
   126                           	psect	text95,global,reloc=2,class=CODE,delta=1
   127                           	psect	text96,global,reloc=2,class=CODE,delta=1
   128                           	psect	text97,global,reloc=2,class=CODE,delta=1
   129                           	psect	text98,global,reloc=2,class=CODE,delta=1
   130                           	psect	text99,global,reloc=2,class=CODE,delta=1
   131                           	psect	text100,global,reloc=2,class=CODE,delta=1
   132                           	psect	text101,global,reloc=2,class=CODE,delta=1
   133                           	psect	text102,global,reloc=2,class=CODE,delta=1
   134                           	psect	text103,global,reloc=2,class=CODE,delta=1
   135                           	psect	text104,global,reloc=2,class=CODE,delta=1
   136                           	psect	text105,global,reloc=2,class=CODE,delta=1
   137                           	psect	text106,global,reloc=2,class=CODE,delta=1
   138                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text109,global,reloc=2,class=CODE,delta=1
   141                           	psect	text110,global,reloc=2,class=CODE,delta=1
   142                           	psect	text111,global,reloc=2,class=CODE,delta=1
   143                           	psect	text112,global,reloc=2,class=CODE,delta=1
   144                           	psect	text113,global,reloc=2,class=CODE,delta=1
   145                           	psect	text114,global,reloc=2,class=CODE,delta=1
   146                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text116,global,reloc=2,class=CODE,delta=1
   148                           	psect	text117,global,reloc=2,class=CODE,delta=1
   149                           	psect	text118,global,reloc=2,class=CODE,delta=1
   150                           	psect	text119,global,reloc=2,class=CODE,delta=1
   151                           	psect	text120,global,reloc=2,class=CODE,delta=1
   152                           	psect	text121,global,reloc=2,class=CODE,delta=1
   153                           	psect	text122,global,reloc=2,class=CODE,delta=1
   154                           	psect	text123,global,reloc=2,class=CODE,delta=1
   155                           	psect	text124,global,reloc=2,class=CODE,delta=1
   156                           	psect	text125,global,reloc=2,class=CODE,delta=1
   157                           	psect	text126,global,reloc=2,class=CODE,delta=1
   158                           	psect	text127,global,reloc=2,class=CODE,delta=1
   159                           	psect	text128,global,reloc=2,class=CODE,delta=1
   160                           	psect	text129,global,reloc=2,class=CODE,delta=1
   161                           	psect	text130,global,reloc=2,class=CODE,delta=1
   162                           	psect	text131,global,reloc=2,class=CODE,delta=1
   163                           	psect	text132,global,reloc=2,class=CODE,delta=1
   164                           	psect	text133,global,reloc=2,class=CODE,delta=1
   165                           	psect	text134,global,reloc=2,class=CODE,delta=1
   166                           	psect	text135,global,reloc=2,class=CODE,delta=1
   167                           	psect	text136,global,reloc=2,class=CODE,delta=1
   168                           	psect	text137,global,reloc=2,class=CODE,delta=1
   169                           	psect	text138,global,reloc=2,class=CODE,delta=1
   170                           	psect	text139,global,reloc=2,class=CODE,delta=1
   171                           	psect	text140,global,reloc=2,class=CODE,delta=1
   172                           	psect	text141,global,reloc=2,class=CODE,delta=1
   173                           	psect	text142,global,reloc=2,class=CODE,delta=1
   174                           	psect	text143,global,reloc=2,class=CODE,delta=1
   175                           	psect	text144,global,reloc=2,class=CODE,delta=1
   176                           	psect	text145,global,reloc=2,class=CODE,delta=1
   177                           	psect	text146,global,reloc=2,class=CODE,delta=1
   178                           	psect	text147,global,reloc=2,class=CODE,delta=1
   179                           	psect	text148,global,reloc=2,class=CODE,delta=1
   180                           	psect	text149,global,reloc=2,class=CODE,delta=1
   181                           	psect	text150,global,reloc=2,class=CODE,delta=1
   182                           	psect	text151,global,reloc=2,class=CODE,delta=1
   183                           	psect	text152,global,reloc=2,class=CODE,delta=1
   184                           	psect	text153,global,reloc=2,class=CODE,delta=1
   185                           	psect	text154,global,reloc=2,class=CODE,delta=1
   186                           	psect	text155,global,reloc=2,class=CODE,delta=1
   187                           	psect	text156,global,reloc=2,class=CODE,delta=1
   188                           	psect	text157,global,reloc=2,class=CODE,delta=1
   189                           	psect	text158,global,reloc=2,class=CODE,delta=1
   190                           	psect	text159,global,reloc=2,class=CODE,delta=1
   191                           	psect	text160,global,reloc=2,class=CODE,delta=1
   192                           	psect	text161,global,reloc=2,class=CODE,delta=1
   193                           	psect	text162,global,reloc=2,class=CODE,delta=1
   194                           	psect	text163,global,reloc=2,class=CODE,delta=1
   195                           	psect	text164,global,reloc=2,class=CODE,delta=1
   196                           	psect	text165,global,reloc=2,class=CODE,delta=1
   197                           	psect	text166,global,reloc=2,class=CODE,delta=1
   198                           	psect	text167,global,reloc=2,class=CODE,delta=1
   199                           	psect	text168,global,reloc=2,class=CODE,delta=1
   200                           	psect	text169,global,reloc=2,class=CODE,delta=1
   201                           	psect	text170,global,reloc=2,class=CODE,delta=1
   202                           	psect	text171,global,reloc=2,class=CODE,delta=1
   203                           	psect	text172,global,reloc=2,class=CODE,delta=1
   204                           	psect	text173,global,reloc=2,class=CODE,delta=1
   205                           	psect	text174,global,reloc=2,class=CODE,delta=1
   206                           	psect	text175,global,reloc=2,class=CODE,delta=1
   207                           	psect	text176,global,reloc=2,class=CODE,delta=1
   208                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   209                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   210                           	psect	text179,global,reloc=2,class=CODE,delta=1
   211                           	psect	text180,global,reloc=2,class=CODE,delta=1
   212                           	psect	text181,global,reloc=2,class=CODE,delta=1
   213                           	psect	text182,global,reloc=2,class=CODE,delta=1
   214                           	psect	text183,global,reloc=2,class=CODE,delta=1
   215                           	psect	text184,global,reloc=2,class=CODE,delta=1
   216                           	psect	text185,global,reloc=2,class=CODE,delta=1
   217                           	psect	text186,global,reloc=2,class=CODE,delta=1
   218                           	psect	text187,global,reloc=2,class=CODE,delta=1
   219                           	psect	text188,global,reloc=2,class=CODE,delta=1
   220                           	psect	text189,global,reloc=2,class=CODE,delta=1
   221                           	psect	text190,global,reloc=2,class=CODE,delta=1
   222                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   224                           	psect	text192,global,reloc=2,class=CODE,delta=1
   225                           	psect	text193,global,reloc=2,class=CODE,delta=1
   226                           	psect	text194,global,reloc=2,class=CODE,delta=1
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   229                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   230                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   231                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   232  0000                     
   233                           ; Version 2.35
   234                           ; Generated 05/05/2021 GMT
   235                           ; 
   236                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   237                           ; All rights reserved.
   238                           ; 
   239                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   240                           ; 
   241                           ; Redistribution and use in source and binary forms, with or without modification, are
   242                           ; permitted provided that the following conditions are met:
   243                           ; 
   244                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   245                           ;        conditions and the following disclaimer.
   246                           ; 
   247                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   248                           ;        of conditions and the following disclaimer in the documentation and/or other
   249                           ;        materials provided with the distribution. Publication is not required when
   250                           ;        this file is used in an embedded application.
   251                           ; 
   252                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   253                           ;        software without specific prior written permission.
   254                           ; 
   255                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   256                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   257                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   258                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   259                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   260                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   261                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   262                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   263                           ; 
   264                           ; 
   265                           ; Code-generator required, PIC18F26K80 Definitions
   266                           ; 
   267                           ; SFR Addresses
   268  0000                     
   269                           	psect	vectors
   270  000800                     	org	2048	;# 
   271  000800  EF20 F004          	goto	2112	;# 
   272  000808                     	org	2056	;# 
   273  000808  EF24 F004          	goto	2120	;# 
   274  000818                     	org	2072	;# 
   275  000818  EF2C F004          	goto	2136	;# 
   276                           
   277                           	psect	eeprom_data
   278  F003FF                     	org	1023	;# 
   279  F003FF  00                 	db	0	;# 
   280  0000                     
   281                           	psect	idataBANK0
   282  00A716                     __pidataBANK0:
   283                           	callstack 0
   284                           
   285                           ;initializer for _eventTable
   286  00A716  80                 	db	128
   287  00A717  EF                 	db	239
   288  00A718  00                 	db	0
   289                           
   290                           	psect	idataBANK1
   291  00A719                     __pidataBANK1:
   292                           	callstack 0
   293                           
   294                           ;initializer for _NvBytePtr
   295  00A719  80                 	db	128
   296  00A71A  FF                 	db	255
   297  00A71B  00                 	db	0
   298  0000                     _moduleNvDefs_absaddr	set	65408
   299                           
   300                           	psect	smallconst
   301  000F00                     __psmallconst:
   302                           	callstack 0
   303  000F00  00                 	db	0
   304  000F01                     _configs:
   305                           	callstack 0
   306  000F01  0B                 	db	11
   307  000F02  43                 	db	67
   308  000F03  00                 	db	0
   309  000F04  FF                 	db	255
   310  000F05  0C                 	db	12
   311  000F06  43                 	db	67
   312  000F07  01                 	db	1
   313  000F08  FF                 	db	255
   314  000F09  0D                 	db	13
   315  000F0A  43                 	db	67
   316  000F0B  02                 	db	2
   317  000F0C  FF                 	db	255
   318  000F0D  0E                 	db	14
   319  000F0E  43                 	db	67
   320  000F0F  03                 	db	3
   321  000F10  FF                 	db	255
   322  000F11  0F                 	db	15
   323  000F12  43                 	db	67
   324  000F13  04                 	db	4
   325  000F14  FF                 	db	255
   326  000F15  10                 	db	16
   327  000F16  43                 	db	67
   328  000F17  05                 	db	5
   329  000F18  FF                 	db	255
   330  000F19  11                 	db	17
   331  000F1A  43                 	db	67
   332  000F1B  06                 	db	6
   333  000F1C  FF                 	db	255
   334  000F1D  12                 	db	18
   335  000F1E  43                 	db	67
   336  000F1F  07                 	db	7
   337  000F20  FF                 	db	255
   338  000F21  15                 	db	21
   339  000F22  42                 	db	66
   340  000F23  00                 	db	0
   341  000F24  0A                 	db	10
   342  000F25  16                 	db	22
   343  000F26  42                 	db	66
   344  000F27  01                 	db	1
   345  000F28  08                 	db	8
   346  000F29  19                 	db	25
   347  000F2A  42                 	db	66
   348  000F2B  04                 	db	4
   349  000F2C  09                 	db	9
   350  000F2D  1A                 	db	26
   351  000F2E  42                 	db	66
   352  000F2F  05                 	db	5
   353  000F30  FF                 	db	255
   354  000F31  03                 	db	3
   355  000F32  41                 	db	65
   356  000F33  01                 	db	1
   357  000F34  01                 	db	1
   358  000F35  02                 	db	2
   359  000F36  41                 	db	65
   360  000F37  00                 	db	0
   361  000F38  00                 	db	0
   362  000F39  05                 	db	5
   363  000F3A  41                 	db	65
   364  000F3B  03                 	db	3
   365  000F3C  03                 	db	3
   366  000F3D  07                 	db	7
   367  000F3E  41                 	db	65
   368  000F3F  05                 	db	5
   369  000F40  04                 	db	4
   370  000F41                     __end_of_configs:
   371                           	callstack 0
   372  0000                     _FCUparams_absaddr	set	2104
   373  000F41                     _spareparams:
   374                           	callstack 0
   375  000F41  00                 	db	0
   376  000F42  00                 	db	0
   377  000F43  00                 	db	0
   378  000F44  00                 	db	0
   379  000F45                     __end_of_spareparams:
   380                           	callstack 0
   381  0000                     _devId	set	4194302
   382  0000                     _nodeVarTable	set	65408
   383  0000                     _FLiMparams_absaddr	set	2080
   384  000F45                     _module_type:
   385  000F45  4D                 	db	77
   386  000F46  49                 	db	73
   387  000F47  4F                 	db	79
   388  000F48  20                 	db	32
   389  000F49  20                 	db	32
   390  000F4A  20                 	db	32
   391  000F4B  20                 	db	32
   392  000F4C  00                 	db	0
   393  000F4D                     __end_of_module_type:
   394                           	callstack 0
   395  0000                     _moduleNvDefs_absaddr	set	65408
   396  000F4D  00                 	db	0	; dummy byte at the end
   397  0000                     
   398                           	psect	_moduleNvDefs_text
   399  00FF80                     __p_moduleNvDefs_text:
   400                           	callstack 0
   401  00FF80                     _moduleNvDefs:
   402                           	callstack 0
   403  00FF80  00                 	db	0
   404  00FF81  00                 	db	0
   405  00FF82  00                 	db	0
   406  00FF83  00                 	db	0
   407  00FF84  00                 	db	0
   408  00FF85  00                 	db	0
   409  00FF86  00                 	db	0
   410  00FF87  00                 	db	0
   411  00FF88  00                 	db	0
   412  00FF89  00                 	db	0
   413  00FF8A  00                 	db	0
   414  00FF8B  00                 	db	0
   415  00FF8C  00                 	db	0
   416  00FF8D  00                 	db	0
   417  00FF8E  00                 	db	0
   418  00FF8F  00                 	db	0
   419  00FF90  00                 	db	0
   420  00FF91  00                 	db	0
   421  00FF92  00                 	db	0
   422  00FF93  00                 	db	0
   423  00FF94  00                 	db	0
   424  00FF95  00                 	db	0
   425  00FF96  00                 	db	0
   426  00FF97  00                 	db	0
   427  00FF98  00                 	db	0
   428  00FF99  00                 	db	0
   429  00FF9A  00                 	db	0
   430  00FF9B  00                 	db	0
   431  00FF9C  00                 	db	0
   432  00FF9D  00                 	db	0
   433  00FF9E  00                 	db	0
   434  00FF9F  00                 	db	0
   435  00FFA0  00                 	db	0
   436  00FFA1  00                 	db	0
   437  00FFA2  00                 	db	0
   438  00FFA3  00                 	db	0
   439  00FFA4  00                 	db	0
   440  00FFA5  00                 	db	0
   441  00FFA6  00                 	db	0
   442  00FFA7  00                 	db	0
   443  00FFA8  00                 	db	0
   444  00FFA9  00                 	db	0
   445  00FFAA  00                 	db	0
   446  00FFAB  00                 	db	0
   447  00FFAC  00                 	db	0
   448  00FFAD  00                 	db	0
   449  00FFAE  00                 	db	0
   450  00FFAF  00                 	db	0
   451  00FFB0  00                 	db	0
   452  00FFB1  00                 	db	0
   453  00FFB2  00                 	db	0
   454  00FFB3  00                 	db	0
   455  00FFB4  00                 	db	0
   456  00FFB5  00                 	db	0
   457  00FFB6  00                 	db	0
   458  00FFB7  00                 	db	0
   459  00FFB8  00                 	db	0
   460  00FFB9  00                 	db	0
   461  00FFBA  00                 	db	0
   462  00FFBB  00                 	db	0
   463  00FFBC  00                 	db	0
   464  00FFBD  00                 	db	0
   465  00FFBE  00                 	db	0
   466  00FFBF  00                 	db	0
   467  00FFC0  00                 	db	0
   468  00FFC1  00                 	db	0
   469  00FFC2  00                 	db	0
   470  00FFC3  00                 	db	0
   471  00FFC4  00                 	db	0
   472  00FFC5  00                 	db	0
   473  00FFC6  00                 	db	0
   474  00FFC7  00                 	db	0
   475  00FFC8  00                 	db	0
   476  00FFC9  00                 	db	0
   477  00FFCA  00                 	db	0
   478  00FFCB  00                 	db	0
   479  00FFCC  00                 	db	0
   480  00FFCD  00                 	db	0
   481  00FFCE  00                 	db	0
   482  00FFCF  00                 	db	0
   483  00FFD0  00                 	db	0
   484  00FFD1  00                 	db	0
   485  00FFD2  00                 	db	0
   486  00FFD3  00                 	db	0
   487  00FFD4  00                 	db	0
   488  00FFD5  00                 	db	0
   489  00FFD6  00                 	db	0
   490  00FFD7  00                 	db	0
   491  00FFD8  00                 	db	0
   492  00FFD9  00                 	db	0
   493  00FFDA  00                 	db	0
   494  00FFDB  00                 	db	0
   495  00FFDC  00                 	db	0
   496  00FFDD  00                 	db	0
   497  00FFDE  00                 	db	0
   498  00FFDF  00                 	db	0
   499  00FFE0  00                 	db	0
   500  00FFE1  00                 	db	0
   501  00FFE2  00                 	db	0
   502  00FFE3  00                 	db	0
   503  00FFE4  00                 	db	0
   504  00FFE5  00                 	db	0
   505  00FFE6  00                 	db	0
   506  00FFE7  00                 	db	0
   507  00FFE8  00                 	db	0
   508  00FFE9  00                 	db	0
   509  00FFEA  00                 	db	0
   510  00FFEB  00                 	db	0
   511  00FFEC  00                 	db	0
   512  00FFED  00                 	db	0
   513  00FFEE  00                 	db	0
   514  00FFEF  00                 	db	0
   515  00FFF0  00                 	db	0
   516  00FFF1  00                 	db	0
   517  00FFF2  00                 	db	0
   518  00FFF3  00                 	db	0
   519  00FFF4  00                 	db	0
   520  00FFF5  00                 	db	0
   521  00FFF6  00                 	db	0
   522  00FFF7  00                 	db	0
   523  00FFF8  00                 	db	0
   524  00FFF9  00                 	db	0
   525  00FFFA  00                 	db	0
   526  00FFFB  00                 	db	0
   527  00FFFC  00                 	db	0
   528  00FFFD  00                 	db	0
   529  00FFFE  00                 	db	0
   530  00FFFF  00                 	db	0
   531  010000                     __end_of_moduleNvDefs:
   532                           	callstack 0
   533  0000                     _FCUparams_absaddr	set	2104
   534                           
   535                           	psect	_FCUparams_text
   536  000838                     __p_FCUparams_text:
   537                           	callstack 0
   538  000838                     _FCUparams:
   539                           	callstack 0
   540  000838  0014               	dw	20
   541  00083A  0F45               	dw	_module_type& (0+65535)
   542  00083C  0000               	dw	_module_type shr (0+16)
   543  00083E  034E               	dw	846
   544  000840                     __end_of_FCUparams:
   545                           	callstack 0
   546  0000                     _devId	set	4194302
   547  0000                     _nodeVarTable	set	65408
   548  0000                     _FLiMparams_absaddr	set	2080
   549                           
   550                           	psect	_FLiMparams_text
   551  000820                     __p_FLiMparams_text:
   552                           	callstack 0
   553  000820                     _FLiMparams:
   554                           	callstack 0
   555  000820  A5                 	db	165
   556  000821  63                 	db	99
   557  000822  20                 	db	32
   558  000823  FF                 	db	255
   559  000824  14                 	db	20
   560  000825  7F                 	db	127
   561  000826  03                 	db	3
   562  000827  1B                 	db	27
   563  000828  0F                 	db	15
   564  000829  01                 	db	1
   565  00082A  0800               	dw	2048
   566  00082C  0000               	dw	0
   567  00082E  0000               	dw	0
   568  000830  0000               	dw	0
   569  000832  01                 	db	1
   570  000833  01                 	db	1
   571  000834                     __end_of_FLiMparams:
   572                           	callstack 0
   573  0000                     _EEDATA	set	3955
   574  0000                     _EEADR	set	3956
   575  0000                     _EEADRH	set	3957
   576  0000                     _COMSTATbits	set	3953
   577  0000                     _PIR5bits	set	3959
   578  0000                     _PIE5bits	set	3958
   579  0000                     _TXBIEbits	set	3711
   580  0000                     _BIE0	set	3710
   581  0000                     _MSEL3	set	3708
   582  0000                     _MSEL2	set	3707
   583  0000                     _MSEL1	set	3706
   584  0000                     _MSEL0	set	3705
   585  0000                     _RXFBCON7	set	3704
   586  0000                     _RXFBCON6	set	3703
   587  0000                     _RXFBCON5	set	3702
   588  0000                     _RXFBCON4	set	3701
   589  0000                     _RXFBCON3	set	3700
   590  0000                     _RXFBCON2	set	3699
   591  0000                     _RXFBCON1	set	3698
   592  0000                     _RXF0SIDL	set	3809
   593  0000                     _RXM0SIDH	set	3832
   594  0000                     _CIOCON	set	3952
   595  0000                     _ECANCON	set	3954
   596  0000                     _TMR3L	set	4018
   597  0000                     _TMR3H	set	4019
   598  0000                     _TMR1L	set	4046
   599  0000                     _TMR1H	set	4047
   600  0000                     _T3CONbits	set	4017
   601  0000                     _ANCON1	set	3932
   602  0000                     _ANCON0	set	3933
   603  0000                     _ADRESL	set	4035
   604  0000                     _ADRESH	set	4036
   605  0000                     _ADCON0bits	set	4034
   606  0000                     _B0CON	set	3712
   607                           
   608                           	psect	nvBANK0
   609  0000EC                     __pnvBANK0:
   610                           	callstack 0
   611  0000EC                     _NV:
   612                           	callstack 0
   613  0000EC                     	ds	2
   614                           
   615                           	psect	nvBANK1
   616  0001F6                     __pnvBANK1:
   617                           	callstack 0
   618  0001F6                     _flashblock:
   619                           	callstack 0
   620  0001F6                     	ds	2
   621  0000                     _TXB2CONbits	set	3840
   622  0000                     _TXB1CONbits	set	3856
   623  0000                     _TXB0CONbits	set	3872
   624  0000                     _T0CONbits	set	4053
   625  0000                     _LATBbits	set	3978
   626  0000                     _TRISBbits	set	3987
   627  0000                     _EECON1	set	3967
   628  0000                     _TBLPTRU	set	4088
   629  0000                     _PORTAbits	set	3968
   630  0000                     _BRGCON1	set	3651
   631  0000                     _BSEL0	set	3709
   632  0000                     _WPUB	set	3931
   633  0000                     _PORTA	set	3968
   634  0000                     _LATA	set	3977
   635  0000                     _ADCON2bits	set	4032
   636  0000                     _ADCON1bits	set	4033
   637  0000                     _T1CONbits	set	4045
   638  0000                     _RCONbits	set	4048
   639  0000                     _TRISA	set	3986
   640  0000                     _OSCTUNEbits	set	3995
   641  0000                     _LATC	set	3979
   642  0000                     _LATB	set	3978
   643  0000                     _PORTC	set	3970
   644  0000                     _PORTB	set	3969
   645  0000                     _PIE1bits	set	3997
   646  0000                     _PIR1bits	set	3998
   647  0000                     _T0CON	set	4053
   648  0000                     _INTCON2bits	set	4081
   649  0000                     _TBLPTR	set	4086
   650  0000                     _TABLAT	set	4085
   651  0000                     _INTCONbits	set	4082
   652  0000                     _CANSTATbits	set	3950
   653  0000                     _CANCON	set	3951
   654  0000                     _IPR5	set	3960
   655  0000                     _RXB0CON	set	3936
   656  0000                     _TRISC	set	3988
   657  0000                     _TRISB	set	3987
   658  0000                     _PIE2bits	set	4000
   659  0000                     _PIR2bits	set	4001
   660  0000                     _T1GCONbits	set	4010
   661  0000                     _T3GCONbits	set	4016
   662  0000                     _PIR4bits	set	4023
   663  0000                     _EECON2	set	3966
   664  0000                     _EECON1bits	set	3967
   665  0000                     _RXFBCON0	set	3697
   666  0000                     _BRGCON3	set	3653
   667  0000                     _BRGCON2	set	3652
   668  0000                     _TXB2SIDL	set	3842
   669  0000                     _TXB2SIDH	set	3841
   670  0000                     _TXB2DLC	set	3845
   671  0000                     _TXB2CON	set	3840
   672  0000                     _TXB1CON	set	3856
   673  0000                     _RXM1EIDL	set	3839
   674  0000                     _RXM1EIDH	set	3838
   675  0000                     _RXM1SIDL	set	3837
   676  0000                     _RXM1SIDH	set	3836
   677  0000                     _RXM0EIDL	set	3835
   678  0000                     _RXM0EIDH	set	3834
   679  0000                     _RXM0SIDL	set	3833
   680  0000                     _TXB0CON	set	3872
   681  0000                     _RXB1CON	set	3888
   682  0000                     _B1CON	set	3728
   683  0000                     _B2CON	set	3744
   684  0000                     _B3CON	set	3760
   685  0000                     _B4CON	set	3776
   686  0000                     _B5CON	set	3792
   687  0000                     _TXB0SIDL	set	3874
   688  0000                     _TXB0SIDH	set	3873
   689  0000                     _TXB0DLC	set	3877
   690  0000                     _TXB1SIDL	set	3858
   691  0000                     _TXB1SIDH	set	3857
   692  0000                     _TXB1DLC	set	3861
   693  0000                     _TMR0H	set	4055
   694  0000                     _TMR0L	set	4054
   695                           
   696                           ; #config settings
   697                           
   698                           	psect	cinit
   699  007A54                     __pcinit:
   700                           	callstack 0
   701  007A54                     start_initialization:
   702                           	callstack 0
   703  007A54                     __initialization:
   704                           	callstack 0
   705                           
   706                           ; Initialize objects allocated to BANK1 (3 bytes)
   707                           ; load TBLPTR registers with __pidataBANK1
   708  007A54  0E19               	movlw	low __pidataBANK1
   709  007A56  6EF6               	movwf	tblptrl,c
   710  007A58  0EA7               	movlw	high __pidataBANK1
   711  007A5A  6EF7               	movwf	tblptrh,c
   712  007A5C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   713  007A5E  6EF8               	movwf	tblptru,c
   714  007A60  0009               	tblrd		*+	;fetch initializer
   715  007A62  CFF5 F1F3          	movff	tablat,__pdataBANK1
   716  007A66  0009               	tblrd		*+	;fetch initializer
   717  007A68  CFF5 F1F4          	movff	tablat,__pdataBANK1+1
   718  007A6C  0009               	tblrd		*+	;fetch initializer
   719  007A6E  CFF5 F1F5          	movff	tablat,__pdataBANK1+2
   720                           
   721                           ; Initialize objects allocated to BANK0 (3 bytes)
   722                           ; load TBLPTR registers with __pidataBANK0
   723  007A72  0E16               	movlw	low __pidataBANK0
   724  007A74  6EF6               	movwf	tblptrl,c
   725  007A76  0EA7               	movlw	high __pidataBANK0
   726  007A78  6EF7               	movwf	tblptrh,c
   727  007A7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   728  007A7C  6EF8               	movwf	tblptru,c
   729  007A7E  0009               	tblrd		*+	;fetch initializer
   730  007A80  CFF5 F0E9          	movff	tablat,__pdataBANK0
   731  007A84  0009               	tblrd		*+	;fetch initializer
   732  007A86  CFF5 F0EA          	movff	tablat,__pdataBANK0+1
   733  007A8A  0009               	tblrd		*+	;fetch initializer
   734  007A8C  CFF5 F0EB          	movff	tablat,__pdataBANK0+2
   735                           
   736                           ; Clear objects allocated to BIGRAM (640 bytes)
   737  007A90  EE07  F000         	lfsr	0,__pbssBIGRAM
   738  007A94  EE12 F080          	lfsr	1,640
   739  007A98                     clear_0:
   740  007A98  6AEE               	clrf	postinc0,c
   741  007A9A  50E5               	movf	postdec1,w,c
   742  007A9C  50E1               	movf	fsr1l,w,c
   743  007A9E  E1FC               	bnz	clear_0
   744  007AA0  50E2               	movf	fsr1h,w,c
   745  007AA2  E1FA               	bnz	clear_0
   746                           
   747                           ; Clear objects allocated to BANK6 (256 bytes)
   748  007AA4  EE06  F000         	lfsr	0,__pbssBANK6
   749  007AA8  EE11 F000          	lfsr	1,256
   750  007AAC                     clear_1:
   751  007AAC  6AEE               	clrf	postinc0,c
   752  007AAE  50E5               	movf	postdec1,w,c
   753  007AB0  50E1               	movf	fsr1l,w,c
   754  007AB2  E1FC               	bnz	clear_1
   755  007AB4  50E2               	movf	fsr1h,w,c
   756  007AB6  E1FA               	bnz	clear_1
   757                           
   758                           ; Clear objects allocated to BANK5 (256 bytes)
   759  007AB8  EE05  F000         	lfsr	0,__pbssBANK5
   760  007ABC  EE11 F000          	lfsr	1,256
   761  007AC0                     clear_2:
   762  007AC0  6AEE               	clrf	postinc0,c
   763  007AC2  50E5               	movf	postdec1,w,c
   764  007AC4  50E1               	movf	fsr1l,w,c
   765  007AC6  E1FC               	bnz	clear_2
   766  007AC8  50E2               	movf	fsr1h,w,c
   767  007ACA  E1FA               	bnz	clear_2
   768                           
   769                           ; Clear objects allocated to BANK4 (128 bytes)
   770  007ACC  EE04  F000         	lfsr	0,__pbssBANK4
   771  007AD0  0E80               	movlw	128
   772  007AD2                     clear_3:
   773  007AD2  6AEE               	clrf	postinc0,c
   774  007AD4  06E8               	decf	wreg,f,c
   775  007AD6  E1FD               	bnz	clear_3
   776                           
   777                           ; Clear objects allocated to BANK3 (200 bytes)
   778  007AD8  EE03  F000         	lfsr	0,__pbssBANK3
   779  007ADC  0EC8               	movlw	200
   780  007ADE                     clear_4:
   781  007ADE  6AEE               	clrf	postinc0,c
   782  007AE0  06E8               	decf	wreg,f,c
   783  007AE2  E1FD               	bnz	clear_4
   784                           
   785                           ; Clear objects allocated to BANK2 (204 bytes)
   786  007AE4  EE02  F000         	lfsr	0,__pbssBANK2
   787  007AE8  0ECC               	movlw	204
   788  007AEA                     clear_5:
   789  007AEA  6AEE               	clrf	postinc0,c
   790  007AEC  06E8               	decf	wreg,f,c
   791  007AEE  E1FD               	bnz	clear_5
   792                           
   793                           ; Clear objects allocated to BANK1 (237 bytes)
   794  007AF0  EE01  F000         	lfsr	0,__pbssBANK1
   795  007AF4  0EED               	movlw	237
   796  007AF6                     clear_6:
   797  007AF6  6AEE               	clrf	postinc0,c
   798  007AF8  06E8               	decf	wreg,f,c
   799  007AFA  E1FD               	bnz	clear_6
   800                           
   801                           ; Clear objects allocated to BANK0 (3 bytes)
   802  007AFC  0100               	movlb	0
   803  007AFE  6BE8               	clrf	(__pbssBANK0+2)& (0+255),b
   804  007B00  6BE7               	clrf	(__pbssBANK0+1)& (0+255),b
   805  007B02  6BE6               	clrf	__pbssBANK0& (0+255),b
   806                           
   807                           ; Clear objects allocated to COMRAM (44 bytes)
   808  007B04  EE00  F001         	lfsr	0,__pbssCOMRAM
   809  007B08  0E2C               	movlw	44
   810  007B0A                     clear_7:
   811  007B0A  6AEE               	clrf	postinc0,c
   812  007B0C  06E8               	decf	wreg,f,c
   813  007B0E  E1FD               	bnz	clear_7
   814  007B10                     end_of_initialization:
   815                           	callstack 0
   816  007B10                     __end_of__initialization:
   817                           	callstack 0
   818  007B10  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   819  007B12  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   820  007B14  0100               	movlb	0
   821  007B16  EFD9  F023         	goto	_main	;jump to C main() function
   822                           
   823                           	psect	bssCOMRAM
   824  000001                     __pbssCOMRAM:
   825                           	callstack 0
   826  000001                     _nodeID:
   827                           	callstack 0
   828  000001                     	ds	2
   829  000003                     _timerExtension2:
   830                           	callstack 0
   831  000003                     	ds	1
   832  000004                     _timerExtension1:
   833                           	callstack 0
   834  000004                     	ds	1
   835  000005                     _flashFlags:
   836                           	callstack 0
   837  000005                     	ds	1
   838  000006                     _prevFlimState:
   839                           	callstack 0
   840  000006                     	ds	1
   841  000007                     _enumerationInProgress:
   842                           	callstack 0
   843  000007                     	ds	1
   844  000008                     _resultRequired:
   845                           	callstack 0
   846  000008                     	ds	1
   847  000009                     _enumerationRequired:
   848                           	callstack 0
   849  000009                     	ds	1
   850  00000A                     _maxCanRxFifo:
   851                           	callstack 0
   852  00000A                     	ds	1
   853  00000B                     _maxCanTxFifo:
   854                           	callstack 0
   855  00000B                     	ds	1
   856  00000C                     _canTransmitFailed:
   857                           	callstack 0
   858  00000C                     	ds	1
   859  00000D                     _larbRetryCount:
   860                           	callstack 0
   861  00000D                     	ds	1
   862  00000E                     _rxIndexNextUsed:
   863                           	callstack 0
   864  00000E                     	ds	1
   865  00000F                     _rxIndexNextFree:
   866                           	callstack 0
   867  00000F                     	ds	1
   868  000010                     _txIndexNextUsed:
   869                           	callstack 0
   870  000010                     	ds	1
   871  000011                     _txIndexNextFree:
   872                           	callstack 0
   873  000011                     	ds	1
   874  000012                     _servoInBlock:
   875                           	callstack 0
   876  000012                     	ds	1
   877  000013                     _timedResponseStep:
   878                           	callstack 0
   879  000013                     	ds	1
   880  000014                     _timedResponse:
   881                           	callstack 0
   882  000014                     	ds	1
   883  000015                     _started:
   884                           	callstack 0
   885  000015                     	ds	1
   886  000016                     _flimState:
   887                           	callstack 0
   888  000016                     	ds	1
   889  000017                     _clkMHz:
   890                           	callstack 0
   891  000017                     	ds	1
   892  000018                     _haveRequestedAdc:
   893                           	callstack 0
   894  000018                     	ds	1
   895  000019                     _setupState:
   896                           	callstack 0
   897  000019                     	ds	1
   898  00001A                     _setupIo:
   899                           	callstack 0
   900  00001A                     	ds	1
   901  00001B                     _expedited:
   902                           	callstack 0
   903  00001B                     	ds	1
   904  00001C                     _cbusMsg:
   905                           	callstack 0
   906  00001C                     	ds	16
   907  00002C                     _canID:
   908                           	callstack 0
   909  00002C                     	ds	1
   910                           
   911                           	psect	bssBANK0
   912  0000E6                     __pbssBANK0:
   913                           	callstack 0
   914  0000E6                     _io@main$F1444:
   915                           	callstack 0
   916  0000E6                     	ds	1
   917  0000E7                     _io:
   918                           	callstack 0
   919  0000E7                     	ds	1
   920  0000E8                     _portInProgress:
   921                           	callstack 0
   922  0000E8                     	ds	1
   923                           
   924                           	psect	dataBANK0
   925  0000E9                     __pdataBANK0:
   926                           	callstack 0
   927  0000E9                     _eventTable:
   928                           	callstack 0
   929  0000E9                     	ds	3
   930                           
   931                           	psect	bssBANK1
   932  000100                     __pbssBANK1:
   933                           	callstack 0
   934  000100                     _speed:
   935                           	callstack 0
   936  000100                     	ds	32
   937  000120                     _pollCount:
   938                           	callstack 0
   939  000120                     	ds	16
   940  000130                     _stepsPerPollSpeed:
   941                           	callstack 0
   942  000130                     	ds	16
   943  000140                     _servoState:
   944                           	callstack 0
   945  000140                     	ds	16
   946  000150                     _outputState:
   947                           	callstack 0
   948  000150                     	ds	16
   949  000160                     _flashDelays:
   950                           	callstack 0
   951  000160                     	ds	16
   952  000170                     _targetPos:
   953                           	callstack 0
   954  000170                     	ds	16
   955  000180                     _currentPos:
   956                           	callstack 0
   957  000180                     	ds	16
   958  000190                     _analogueState:
   959                           	callstack 0
   960  000190                     	ds	16
   961  0001A0                     _flickerTime:
   962                           	callstack 0
   963  0001A0                     	ds	4
   964  0001A4                     _flashTime:
   965                           	callstack 0
   966  0001A4                     	ds	4
   967  0001A8                     _producedEvent:
   968                           	callstack 0
   969  0001A8                     	ds	4
   970  0001AC                     _switchTime:
   971                           	callstack 0
   972  0001AC                     	ds	4
   973  0001B0                     _enumerationStartTime:
   974                           	callstack 0
   975  0001B0                     	ds	4
   976  0001B4                     _canTransmitTimeout:
   977                           	callstack 0
   978  0001B4                     	ds	4
   979  0001B8                     _startWait:
   980                           	callstack 0
   981  0001B8                     	ds	4
   982  0001BC                     _lastTimedResponseTime:
   983                           	callstack 0
   984  0001BC                     	ds	4
   985  0001C0                     _lastActionPollTime:
   986                           	callstack 0
   987  0001C0                     	ds	4
   988  0001C4                     _lastInputScanTime:
   989                           	callstack 0
   990  0001C4                     	ds	4
   991  0001C8                     _lastServoStartTime:
   992                           	callstack 0
   993  0001C8                     	ds	4
   994  0001CC                     _startTime:
   995                           	callstack 0
   996  0001CC                     	ds	4
   997  0001D0                     _deviceid:
   998                           	callstack 0
   999  0001D0                     	ds	2
  1000  0001D2                     _flickerState:
  1001                           	callstack 0
  1002  0001D2                     	ds	1
  1003  0001D3                     _flashState:
  1004                           	callstack 0
  1005  0001D3                     	ds	1
  1006  0001D4                     _flashidx:
  1007                           	callstack 0
  1008  0001D4                     	ds	1
  1009  0001D5                     _NV_changed:
  1010                           	callstack 0
  1011  0001D5                     	ds	1
  1012  0001D6                     _FlashStatus:
  1013                           	callstack 0
  1014  0001D6                     	ds	1
  1015  0001D7                     _FLiMFlash:
  1016                           	callstack 0
  1017  0001D7                     	ds	1
  1018  0001D8                     _rxFifoUsage:
  1019                           	callstack 0
  1020  0001D8                     	ds	1
  1021  0001D9                     _txFifoUsage:
  1022                           	callstack 0
  1023  0001D9                     	ds	1
  1024  0001DA                     _rxOflowCount:
  1025                           	callstack 0
  1026  0001DA                     	ds	1
  1027  0001DB                     _txOflowCount:
  1028                           	callstack 0
  1029  0001DB                     	ds	1
  1030  0001DC                     _txTimeoutCount:
  1031                           	callstack 0
  1032  0001DC                     	ds	1
  1033  0001DD                     _txErrCount:
  1034                           	callstack 0
  1035  0001DD                     	ds	1
  1036  0001DE                     _larbCount:
  1037                           	callstack 0
  1038  0001DE                     	ds	1
  1039  0001DF                     _expeditedWriteIdx:
  1040                           	callstack 0
  1041  0001DF                     	ds	1
  1042  0001E0                     _expeditedReadIdx:
  1043                           	callstack 0
  1044  0001E0                     	ds	1
  1045  0001E1                     _normalWriteIdx:
  1046                           	callstack 0
  1047  0001E1                     	ds	1
  1048  0001E2                     _normalReadIdx:
  1049                           	callstack 0
  1050  0001E2                     	ds	1
  1051  0001E3                     _expeditedQueue:
  1052                           	callstack 0
  1053  0001E3                     	ds	5
  1054  0001E8                     _normalQueue:
  1055                           	callstack 0
  1056  0001E8                     	ds	5
  1057                           
  1058                           	psect	dataBANK1
  1059  0001F3                     __pdataBANK1:
  1060                           	callstack 0
  1061  0001F3                     _NvBytePtr:
  1062                           	callstack 0
  1063  0001F3                     	ds	3
  1064                           
  1065                           	psect	bssBANK2
  1066  000200                     __pbssBANK2:
  1067                           	callstack 0
  1068  000200                     _ticksWhenStopped:
  1069                           	callstack 0
  1070  000200                     	ds	64
  1071  000240                     _evs:
  1072                           	callstack 0
  1073  000240                     	ds	20
  1074  000254                     _enumerationResults:
  1075                           	callstack 0
  1076  000254                     	ds	16
  1077  000264                     _loopCount:
  1078                           	callstack 0
  1079  000264                     	ds	16
  1080  000274                     _pollsPerStepSpeed:
  1081                           	callstack 0
  1082  000274                     	ds	16
  1083  000284                     _delayCount:
  1084                           	callstack 0
  1085  000284                     	ds	16
  1086  000294                     _inputState:
  1087                           	callstack 0
  1088  000294                     	ds	16
  1089  0002A4                     _pulseDelays:
  1090                           	callstack 0
  1091  0002A4                     	ds	16
  1092  0002B4                     _bounceState:
  1093                           	callstack 0
  1094  0002B4                     	ds	16
  1095  0002C4                     _expeditedQueueBuf:
  1096                           	callstack 0
  1097  0002C4                     	ds	8
  1098                           
  1099                           	psect	bssBANK3
  1100  000300                     __pbssBANK3:
  1101                           	callstack 0
  1102  000300                     _happening2Event:
  1103                           	callstack 0
  1104  000300                     	ds	72
  1105  000348                     _flashbuf:
  1106                           	callstack 0
  1107  000348                     	ds	64
  1108  000388                     _normalQueueBuf:
  1109                           	callstack 0
  1110  000388                     	ds	64
  1111                           
  1112                           	psect	bssBANK4
  1113  000400                     __pbssBANK4:
  1114                           	callstack 0
  1115  000400                     _nvCache:
  1116                           	callstack 0
  1117  000400                     	ds	128
  1118                           
  1119                           	psect	bssBANK5
  1120  000500                     __pbssBANK5:
  1121                           	callstack 0
  1122  000500                     _canRxFifo:
  1123                           	callstack 0
  1124  000500                     	ds	256
  1125                           
  1126                           	psect	bssBANK6
  1127  000600                     __pbssBANK6:
  1128                           	callstack 0
  1129  000600                     _canTxFifo:
  1130                           	callstack 0
  1131  000600                     	ds	256
  1132                           
  1133                           	psect	bssBIGRAM
  1134  000700                     __pbssBIGRAM:
  1135                           	callstack 0
  1136  000700                     _eventChains:
  1137                           	callstack 0
  1138  000700                     	ds	640
  1139                           
  1140                           	psect	cstackBANK2
  1141  0002CC                     __pcstackBANK2:
  1142                           	callstack 0
  1143  0002CC                     checkCBUS@msg:
  1144                           	callstack 0
  1145                           
  1146                           ; 20 bytes @ 0x0
  1147  0002CC                     	ds	20
  1148  0002E0                     ??_main:
  1149                           
  1150                           ; 1 bytes @ 0x14
  1151  0002E0                     	ds	9
  1152                           
  1153                           	psect	cstackBANK1
  1154  0001ED                     __pcstackBANK1:
  1155                           	callstack 0
  1156  0001ED                     ??_parseFLiMCmd:
  1157                           
  1158                           ; 1 bytes @ 0x0
  1159  0001ED                     	ds	6
  1160                           
  1161                           	psect	cstackBANK0
  1162  000060                     __pcstackBANK0:
  1163                           	callstack 0
  1164  000060                     ??_canFillRxFifo:
  1165                           
  1166                           ; 1 bytes @ 0x0
  1167  000060                     	ds	5
  1168  000065                     _canFillRxFifo$3504:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x5
  1172  000065                     	ds	2
  1173  000067                     canFillRxFifo@hiIndex:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x7
  1177  000067                     	ds	1
  1178  000068                     canFillRxFifo@ptr:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x8
  1182  000068                     	ds	2
  1183  00006A                     ??_low_isr:
  1184                           
  1185                           ; 1 bytes @ 0xA
  1186  00006A                     	ds	7
  1187  000071                     ??_readInput:
  1188  000071                     ??_bounceUp:
  1189  000071                     ??_writeFlashShort:
  1190  000071                     ?__PointBuffer:
  1191                           	callstack 0
  1192  000071                     ?_readCPUType:
  1193                           	callstack 0
  1194  000071                     ?___wmul:
  1195                           	callstack 0
  1196  000071                     ?___lwdiv:
  1197                           	callstack 0
  1198  000071                     ?___lwmod:
  1199                           	callstack 0
  1200  000071                     ?_tickGet:
  1201                           	callstack 0
  1202  000071                     ?___lmul:
  1203                           	callstack 0
  1204  000071                     initAnaloguePort@io:
  1205                           	callstack 0
  1206  000071                     initBounce@io:
  1207                           	callstack 0
  1208  000071                     initOutputs@io:
  1209                           	callstack 0
  1210  000071                     setOutputPin@state:
  1211                           	callstack 0
  1212  000071                     needsStarting@action:
  1213                           	callstack 0
  1214  000071                     completed@action:
  1215                           	callstack 0
  1216  000071                     startServoOutput@action:
  1217                           	callstack 0
  1218  000071                     startBounceOutput@action:
  1219                           	callstack 0
  1220  000071                     startMultiOutput@action:
  1221                           	callstack 0
  1222  000071                     setServoState@action:
  1223                           	callstack 0
  1224  000071                     setBounceState@action:
  1225                           	callstack 0
  1226  000071                     setMultiState@action:
  1227                           	callstack 0
  1228  000071                     setServoPosition@pos:
  1229                           	callstack 0
  1230  000071                     doEnum@sendResult:
  1231                           	callstack 0
  1232  000071                     evtIdxToTableIndex@evtIdx:
  1233                           	callstack 0
  1234  000071                     tableIndexToEvtIdx@tableIndex:
  1235                           	callstack 0
  1236  000071                     setStatusLed@FLiMLED:
  1237                           	callstack 0
  1238  000071                     initTicker@priority:
  1239                           	callstack 0
  1240  000071                     ___lbdiv@divisor:
  1241                           	callstack 0
  1242  000071                     push@q:
  1243                           	callstack 0
  1244  000071                     pop@q:
  1245                           	callstack 0
  1246  000071                     peek@q:
  1247                           	callstack 0
  1248  000071                     quantity@q:
  1249                           	callstack 0
  1250  000071                     delete@q:
  1251                           	callstack 0
  1252  000071                     thisNN@rx_ptr:
  1253                           	callstack 0
  1254  000071                     ee_read@addr:
  1255                           	callstack 0
  1256  000071                     ___wmul@multiplier:
  1257                           	callstack 0
  1258  000071                     ___lwdiv@dividend:
  1259                           	callstack 0
  1260  000071                     ___lwmod@dividend:
  1261                           	callstack 0
  1262  000071                     memcpy@d1:
  1263                           	callstack 0
  1264  000071                     getParFlags@paramptr:
  1265                           	callstack 0
  1266  000071                     ___lmul@multiplier:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x11
  1270  000071                     	ds	1
  1271  000072                     ??_setOutputPin:
  1272  000072                     ??_setServoState:
  1273  000072                     ??_startServoOutput:
  1274  000072                     ??_setBounceState:
  1275  000072                     ??_setMultiState:
  1276  000072                     ??_startMultiOutput:
  1277  000072                     needsStarting@type:
  1278                           	callstack 0
  1279  000072                     completed@type:
  1280                           	callstack 0
  1281  000072                     startBounceOutput@io:
  1282                           	callstack 0
  1283  000072                     setServoPosition@io:
  1284                           	callstack 0
  1285  000072                     initTicker@divider:
  1286                           	callstack 0
  1287  000072                     ___lbdiv@dividend:
  1288                           	callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x12
  1291  000072                     	ds	1
  1292  000073                     ??_pop:
  1293  000073                     ??_quantity:
  1294  000073                     ??_thisNN:
  1295  000073                     ?_ee_read_short:
  1296                           	callstack 0
  1297  000073                     push@a:
  1298                           	callstack 0
  1299  000073                     peek@index:
  1300                           	callstack 0
  1301  000073                     delete@index:
  1302                           	callstack 0
  1303  000073                     startMultiOutput@io:
  1304                           	callstack 0
  1305  000073                     __PointBuffer@b:
  1306                           	callstack 0
  1307  000073                     initTicker@i:
  1308                           	callstack 0
  1309  000073                     ___lbdiv@counter:
  1310                           	callstack 0
  1311  000073                     ee_write@addr:
  1312                           	callstack 0
  1313  000073                     ee_read_short@addr:
  1314                           	callstack 0
  1315  000073                     ___wmul@multiplicand:
  1316                           	callstack 0
  1317  000073                     ___lwdiv@divisor:
  1318                           	callstack 0
  1319  000073                     ___lwmod@divisor:
  1320                           	callstack 0
  1321  000073                     memcpy@s1:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x13
  1325  000073                     	ds	1
  1326  000074                     ??_push:
  1327  000074                     ??_peek:
  1328  000074                     ??_delete:
  1329  000074                     startServoOutput@io:
  1330                           	callstack 0
  1331  000074                     setServoState@io:
  1332                           	callstack 0
  1333  000074                     setBounceState@io:
  1334                           	callstack 0
  1335  000074                     ___lbdiv@quotient:
  1336                           	callstack 0
  1337  000074                     __PointBuffer@pt:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x14
  1341  000074                     	ds	1
  1342  000075                     ??_ee_read_short:
  1343  000075                     readInput@io:
  1344                           	callstack 0
  1345  000075                     needsStarting@io:
  1346                           	callstack 0
  1347  000075                     _completed$2368:
  1348                           	callstack 0
  1349  000075                     setMultiState@io:
  1350                           	callstack 0
  1351  000075                     writeFlashShort@i:
  1352                           	callstack 0
  1353  000075                     ee_write@data:
  1354                           	callstack 0
  1355  000075                     tickGet@IntFlag2:
  1356                           	callstack 0
  1357  000075                     ___lwdiv@counter:
  1358                           	callstack 0
  1359  000075                     ___lwmod@counter:
  1360                           	callstack 0
  1361  000075                     ___wmul@product:
  1362                           	callstack 0
  1363  000075                     memcpy@n:
  1364                           	callstack 0
  1365  000075                     ___lmul@multiplicand:
  1366                           	callstack 0
  1367                           
  1368                           ; 4 bytes @ 0x15
  1369  000075                     	ds	1
  1370  000076                     ??_initInputScan:
  1371  000076                     setOutputPin@io:
  1372                           	callstack 0
  1373  000076                     setOutputState@action:
  1374                           	callstack 0
  1375  000076                     completed@io:
  1376                           	callstack 0
  1377  000076                     pop@ret:
  1378                           	callstack 0
  1379  000076                     ee_write@interruptEnabled:
  1380                           	callstack 0
  1381  000076                     tickGet@IntFlag1:
  1382                           	callstack 0
  1383  000076                     readFlashBlock@flashAddr:
  1384                           	callstack 0
  1385  000076                     ___lwdiv@quotient:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x16
  1389  000076                     	ds	1
  1390  000077                     ??_setupTimer1:
  1391  000077                     ??_setupTimer3:
  1392  000077                     ??_deleteActionQueue:
  1393  000077                     ??_setNewCanId:
  1394  000077                     ?___awdiv:
  1395                           	callstack 0
  1396  000077                     popAction@ret:
  1397                           	callstack 0
  1398  000077                     peekActionQueue@index:
  1399                           	callstack 0
  1400  000077                     setDigitalOutput@state:
  1401                           	callstack 0
  1402  000077                     setOutputState@type:
  1403                           	callstack 0
  1404  000077                     memcpy@tmp:
  1405                           	callstack 0
  1406  000077                     ee_write_short@addr:
  1407                           	callstack 0
  1408  000077                     ___awdiv@dividend:
  1409                           	callstack 0
  1410  000077                     tickGet@currentTime:
  1411                           	callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x17
  1414  000077                     	ds	1
  1415  000078                     ??_readFlashBlock:
  1416  000078                     ??_setDigitalOutput:
  1417  000078                     deleteActionQueue@index:
  1418                           	callstack 0
  1419  000078                     bounceUp@reversed:
  1420                           	callstack 0
  1421  000078                     initInputScan@input:
  1422                           	callstack 0
  1423  000078                     validateNV@oldValue:
  1424                           	callstack 0
  1425  000078                     setOutputState@io:
  1426                           	callstack 0
  1427  000078                     ee_read_short@ee_addr:
  1428                           	callstack 0
  1429  000078                     memcpy@d:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x18
  1433  000078                     	ds	1
  1434  000079                     bounceUp@midway:
  1435                           	callstack 0
  1436  000079                     validateNV@value:
  1437                           	callstack 0
  1438  000079                     setNewCanId@newCanId:
  1439                           	callstack 0
  1440  000079                     setupTimer1@ticks:
  1441                           	callstack 0
  1442  000079                     setupTimer3@ticks:
  1443                           	callstack 0
  1444  000079                     ee_write_short@data:
  1445                           	callstack 0
  1446  000079                     ___awdiv@divisor:
  1447                           	callstack 0
  1448  000079                     ___lmul@product:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x19
  1452  000079                     	ds	1
  1453  00007A                     ??_validateNV:
  1454  00007A                     bounceUp@io:
  1455                           	callstack 0
  1456  00007A                     setDigitalOutput@pinState:
  1457                           	callstack 0
  1458  00007A                     ee_read_short@ret:
  1459                           	callstack 0
  1460  00007A                     memcpy@s:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x1A
  1464  00007A                     	ds	1
  1465  00007B                     ??_shortFlicker:
  1466  00007B                     ??_doFLiMFlash:
  1467  00007B                     setDigitalOutput@io:
  1468                           	callstack 0
  1469  00007B                     setupTimer1@io:
  1470                           	callstack 0
  1471  00007B                     setupTimer3@io:
  1472                           	callstack 0
  1473  00007B                     canInit@initCanID:
  1474                           	callstack 0
  1475  00007B                     ___awdiv@counter:
  1476                           	callstack 0
  1477  00007B                     checkIncomingPacket@ptr:
  1478                           	callstack 0
  1479  00007B                     ee_write_short@ee_addr:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x1B
  1483  00007B                     	ds	1
  1484  00007C                     ??_checkFlashing:
  1485  00007C                     ??_configIO:
  1486  00007C                     ??_canInit:
  1487  00007C                     pushAction@a:
  1488                           	callstack 0
  1489  00007C                     validateNV@io:
  1490                           	callstack 0
  1491  00007C                     setOutputPosition@pos:
  1492                           	callstack 0
  1493  00007C                     canTX@msg:
  1494                           	callstack 0
  1495  00007C                     readFlashBlock@i:
  1496                           	callstack 0
  1497  00007C                     startFLiMFlash@fast:
  1498                           	callstack 0
  1499  00007C                     ___awdiv@sign:
  1500                           	callstack 0
  1501  00007C                     insertIntoRxFifo@ptr:
  1502                           	callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x1C
  1505  00007C                     	ds	1
  1506  00007D                     ??_canTX:
  1507  00007D                     ??_checkIncomingPacket:
  1508  00007D                     ??_validStart:
  1509  00007D                     ?_loadNvCache:
  1510                           	callstack 0
  1511  00007D                     ?_getNN:
  1512                           	callstack 0
  1513  00007D                     ?_getEN:
  1514                           	callstack 0
  1515  00007D                     validateNV@index:
  1516                           	callstack 0
  1517  00007D                     setOutputPosition@type:
  1518                           	callstack 0
  1519  00007D                     doWait@duration:
  1520                           	callstack 0
  1521  00007D                     _startFLiMFlash$4941:
  1522                           	callstack 0
  1523  00007D                     ___awdiv@quotient:
  1524                           	callstack 0
  1525  00007D                     writeFlashImage@addr:
  1526                           	callstack 0
  1527                           
  1528                           ; 3 bytes @ 0x1D
  1529  00007D                     	ds	1
  1530  00007E                     ??_insertIntoRxFifo:
  1531  00007E                     ??_setOutputPosition:
  1532  00007E                     cbusInit@initNodeID:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x1E
  1536  00007E                     	ds	1
  1537  00007F                     ??_loadNvCache:
  1538  00007F                     ??_doWait:
  1539  00007F                     ??_getNN:
  1540  00007F                     ??_getEN:
  1541  00007F                     ??_bounceDown:
  1542  00007F                     canQueueRx@msg:
  1543                           	callstack 0
  1544  00007F                     validStart@tableIndex:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x1F
  1548  00007F                     	ds	1
  1549  000080                     setOutputPosition@io:
  1550                           	callstack 0
  1551  000080                     validStart@f:
  1552                           	callstack 0
  1553  000080                     writeFlashImage@data:
  1554                           	callstack 0
  1555  000080                     _configIO$1531:
  1556                           	callstack 0
  1557  000080                     loadNvCache@np:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x20
  1561  000080                     	ds	1
  1562  000081                     ??_initServos:
  1563  000081                     ??_getEVs:
  1564  000081                     ??_numEv:
  1565  000081                     ??_writeFlashImage:
  1566  000081                     ?_getEv:
  1567                           	callstack 0
  1568  000081                     checkIncomingPacket@msgFound:
  1569                           	callstack 0
  1570  000081                     getEv@evNum:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x21
  1574  000081                     	ds	1
  1575  000082                     configIO@action:
  1576                           	callstack 0
  1577  000082                     loadNvCache@i:
  1578                           	callstack 0
  1579  000082                     checkIncomingPacket@incomingCanId:
  1580                           	callstack 0
  1581  000082                     canTX@ptr:
  1582                           	callstack 0
  1583  000082                     getNN@hi:
  1584                           	callstack 0
  1585  000082                     getEN@hi:
  1586                           	callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x22
  1589  000082                     	ds	1
  1590  000083                     ??_getEv:
  1591  000083                     configIO@i:
  1592                           	callstack 0
  1593  000083                     numEv@num:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x23
  1597  000083                     	ds	1
  1598  000084                     numEv@f:
  1599                           	callstack 0
  1600  000084                     getEVs@f:
  1601                           	callstack 0
  1602  000084                     _canTX$3451:
  1603                           	callstack 0
  1604  000084                     getNN@lo:
  1605                           	callstack 0
  1606  000084                     getEN@lo:
  1607                           	callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x24
  1610  000084                     	ds	1
  1611  000085                     initServos@io:
  1612                           	callstack 0
  1613  000085                     numEv@tableIndex:
  1614                           	callstack 0
  1615  000085                     getEVs@evIdx:
  1616                           	callstack 0
  1617  000085                     writeFlashImage@offset:
  1618                           	callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x25
  1621  000085                     	ds	1
  1622  000086                     bounceDown@reversed:
  1623                           	callstack 0
  1624  000086                     canTX@fullUp:
  1625                           	callstack 0
  1626  000086                     getEVs@tableIndex:
  1627                           	callstack 0
  1628  000086                     getNN@f:
  1629                           	callstack 0
  1630  000086                     getEN@tableIndex:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x26
  1634  000086                     	ds	1
  1635  000087                     canTX@hiIndex:
  1636                           	callstack 0
  1637  000087                     getEVs@evNum:
  1638                           	callstack 0
  1639  000087                     getNN@tableIndex:
  1640                           	callstack 0
  1641  000087                     bounceDown@tmp:
  1642                           	callstack 0
  1643  000087                     writeFlashByte@flashAddr:
  1644                           	callstack 0
  1645  000087                     setFlashWord@flashAddr:
  1646                           	callstack 0
  1647                           
  1648                           ; 3 bytes @ 0x27
  1649  000087                     	ds	1
  1650  000088                     canSend@msg:
  1651                           	callstack 0
  1652  000088                     getEv@f:
  1653                           	callstack 0
  1654  000088                     processEvent@msg:
  1655                           	callstack 0
  1656  000088                     getHash@nn:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x28
  1660  000088                     	ds	1
  1661  000089                     bounceDown@io:
  1662                           	callstack 0
  1663  000089                     canSend@msgLen:
  1664                           	callstack 0
  1665  000089                     getEv@tableIndex:
  1666                           	callstack 0
  1667  000089                     getProducedEvent@happening:
  1668                           	callstack 0
  1669                           
  1670                           ; 1 bytes @ 0x29
  1671  000089                     	ds	1
  1672  00008A                     ??_processEvent:
  1673  00008A                     canSend@success:
  1674                           	callstack 0
  1675  00008A                     writeFlashByte@flashData:
  1676                           	callstack 0
  1677  00008A                     getHash@en:
  1678                           	callstack 0
  1679  00008A                     setFlashWord@flashData:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x2A
  1683  00008A                     	ds	1
  1684  00008B                     defaultNVs@type:
  1685                           	callstack 0
  1686  00008B                     cbusSendMsg@msg:
  1687                           	callstack 0
  1688                           
  1689                           ; 1 bytes @ 0x2B
  1690  00008B                     	ds	1
  1691  00008C                     ??_defaultNVs:
  1692  00008C                     ??_cbusSendMsg:
  1693  00008C                     ??_setFlashWord:
  1694  00008C                     ??_getHash:
  1695  00008C                     processEvent@tableIndex:
  1696                           	callstack 0
  1697                           
  1698                           ; 1 bytes @ 0x2C
  1699  00008C                     	ds	1
  1700  00008D                     processEvent@opc:
  1701                           	callstack 0
  1702  00008D                     getHash@hash:
  1703                           	callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x2D
  1706  00008D                     	ds	1
  1707  00008E                     ??_rebuildHashtable:
  1708  00008E                     defaultNVs@i:
  1709                           	callstack 0
  1710  00008E                     cbusSendMsg@cbusNum:
  1711                           	callstack 0
  1712  00008E                     processEvent@nextAction:
  1713                           	callstack 0
  1714  00008E                     findEvent@nodeNumber:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x2E
  1718  00008E                     	ds	1
  1719  00008F                     ??_doRqnp:
  1720  00008F                     cbusSendMsgMyNN@msg:
  1721                           	callstack 0
  1722  00008F                     cbusSendMsgNN@eventNode:
  1723                           	callstack 0
  1724  00008F                     doRqmn@namadr:
  1725                           	callstack 0
  1726                           
  1727                           ; 4 bytes @ 0x2F
  1728  00008F                     	ds	1
  1729  000090                     processEvent@nextSimultaneous:
  1730                           	callstack 0
  1731  000090                     cbusSendMsgMyNN@cbusNum:
  1732                           	callstack 0
  1733  000090                     findEvent@eventNumber:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x30
  1737  000090                     	ds	1
  1738  000091                     processEvent@io:
  1739                           	callstack 0
  1740  000091                     cbusSendOpcMyNN@opc:
  1741                           	callstack 0
  1742  000091                     cbusSendMsgNN@msg:
  1743                           	callstack 0
  1744                           
  1745                           ; 1 bytes @ 0x31
  1746  000091                     	ds	1
  1747  000092                     ??_findEvent:
  1748  000092                     processEvent@masked_action:
  1749                           	callstack 0
  1750  000092                     cbusSendOpcMyNN@msg:
  1751                           	callstack 0
  1752  000092                     cbusSendMsgNN@cbusNum:
  1753                           	callstack 0
  1754  000092                     rebuildHashtable@a:
  1755                           	callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x32
  1758  000092                     	ds	1
  1759  000093                     processEvent@ca:
  1760                           	callstack 0
  1761  000093                     cbusSendOpcMyNN@cbusNum:
  1762                           	callstack 0
  1763  000093                     cbusSendOpcNN@opc:
  1764                           	callstack 0
  1765  000093                     doError@code:
  1766                           	callstack 0
  1767  000093                     cbusSendEventWithData@eventNode:
  1768                           	callstack 0
  1769  000093                     QNNrespond@paramptr:
  1770                           	callstack 0
  1771  000093                     doRqmn@namptr:
  1772                           	callstack 0
  1773                           
  1774                           ; 3 bytes @ 0x33
  1775  000093                     	ds	1
  1776  000094                     ??_processEnumeration:
  1777  000094                     ??_doRqnpn:
  1778  000094                     ??_doNnevn:
  1779  000094                     processEvent@e:
  1780                           	callstack 0
  1781  000094                     doNenrd@index:
  1782                           	callstack 0
  1783  000094                     doRqevn@count:
  1784                           	callstack 0
  1785  000094                     rebuildHashtable@hash:
  1786                           	callstack 0
  1787  000094                     doReval@evNum:
  1788                           	callstack 0
  1789  000094                     cbusSendOpcNN@nodeID:
  1790                           	callstack 0
  1791  000094                     findEvent@nn:
  1792                           	callstack 0
  1793  000094                     doNvrd@flashIndex:
  1794                           	callstack 0
  1795                           
  1796                           ; 2 bytes @ 0x34
  1797  000094                     	ds	1
  1798  000095                     ??_doReval:
  1799  000095                     doNenrd@tableIndex:
  1800                           	callstack 0
  1801  000095                     doRqevn@i:
  1802                           	callstack 0
  1803  000095                     rebuildHashtable@happening:
  1804                           	callstack 0
  1805  000095                     processEvent@action:
  1806                           	callstack 0
  1807  000095                     cbusSendEventWithData@eventNum:
  1808                           	callstack 0
  1809  000095                     doRqnp@paramptr:
  1810                           	callstack 0
  1811                           
  1812                           ; 3 bytes @ 0x35
  1813  000095                     	ds	1
  1814  000096                     cbusSendOpcNN@msg:
  1815                           	callstack 0
  1816  000096                     doNnevn@f:
  1817                           	callstack 0
  1818  000096                     rebuildHashtable@chainIdx:
  1819                           	callstack 0
  1820  000096                     doNvrd@NVindex:
  1821                           	callstack 0
  1822  000096                     doRqmn@copyCounter:
  1823                           	callstack 0
  1824  000096                     doReval@evIndex:
  1825                           	callstack 0
  1826  000096                     doNenrd@n:
  1827                           	callstack 0
  1828  000096                     findEvent@en:
  1829                           	callstack 0
  1830                           
  1831                           ; 2 bytes @ 0x36
  1832  000096                     	ds	1
  1833  000097                     cbusSendOpcNN@cbusNum:
  1834                           	callstack 0
  1835  000097                     cbusSendEventWithData@onEvent:
  1836                           	callstack 0
  1837  000097                     doNnevn@count:
  1838                           	callstack 0
  1839  000097                     rebuildHashtable@tableIndex:
  1840                           	callstack 0
  1841  000097                     doReval@enNum:
  1842                           	callstack 0
  1843                           
  1844                           ; 1 bytes @ 0x37
  1845  000097                     	ds	1
  1846  000098                     ??_clearAllEvents:
  1847  000098                     ??_removeTableEntry:
  1848  000098                     processEnumeration@enumResult:
  1849                           	callstack 0
  1850  000098                     cbusSendEventWithData@msg:
  1851                           	callstack 0
  1852  000098                     doNnevn@i:
  1853                           	callstack 0
  1854  000098                     findEvent@hash:
  1855                           	callstack 0
  1856  000098                     doRqnp@copyCounter:
  1857                           	callstack 0
  1858  000098                     SaveNodeDetails@nodeID:
  1859                           	callstack 0
  1860  000098                     doReval@evVal:
  1861                           	callstack 0
  1862  000098                     requestNodeNumber@local_cbusMsg:
  1863                           	callstack 0
  1864                           
  1865                           ; 9 bytes @ 0x38
  1866  000098                     	ds	1
  1867  000099                     processEnumeration@newCanId:
  1868                           	callstack 0
  1869  000099                     cbusSendEventWithData@datalen:
  1870                           	callstack 0
  1871  000099                     findEvent@chainIdx:
  1872                           	callstack 0
  1873                           
  1874                           ; 1 bytes @ 0x39
  1875  000099                     	ds	1
  1876  00009A                     ??_cbusSendEventWithData:
  1877  00009A                     processEnumeration@i:
  1878                           	callstack 0
  1879  00009A                     findEvent@tableIndex:
  1880                           	callstack 0
  1881  00009A                     SaveNodeDetails@flimState:
  1882                           	callstack 0
  1883  00009A                     doReval@tableIndex:
  1884                           	callstack 0
  1885                           
  1886                           ; 1 bytes @ 0x3A
  1887  00009A                     	ds	1
  1888  00009B                     canbusRecv@msg:
  1889                           	callstack 0
  1890  00009B                     parseCbusEvent@msg:
  1891                           	callstack 0
  1892  00009B                     doSnn@rx_ptr:
  1893                           	callstack 0
  1894  00009B                     doReqev@nodeNumber:
  1895                           	callstack 0
  1896  00009B                     doAreq@nodeNumber:
  1897                           	callstack 0
  1898  00009B                     doRqnpn@paramptr:
  1899                           	callstack 0
  1900                           
  1901                           ; 3 bytes @ 0x3B
  1902  00009B                     	ds	1
  1903  00009C                     cbusSendEventWithData@ret:
  1904                           	callstack 0
  1905                           
  1906                           ; 1 bytes @ 0x3C
  1907  00009C                     	ds	1
  1908  00009D                     ??_doSnn:
  1909  00009D                     ??_canbusRecv:
  1910  00009D                     ??_parseCbusEvent:
  1911  00009D                     cbusSendEventWithData@cbusNum:
  1912                           	callstack 0
  1913  00009D                     clearAllEvents@tableIndex:
  1914                           	callstack 0
  1915  00009D                     removeTableEntry@f:
  1916                           	callstack 0
  1917  00009D                     doReqev@eventNumber:
  1918                           	callstack 0
  1919  00009D                     doAreq@eventNumber:
  1920                           	callstack 0
  1921                           
  1922                           ; 2 bytes @ 0x3D
  1923  00009D                     	ds	1
  1924  00009E                     canbusRecv@msgFound:
  1925                           	callstack 0
  1926  00009E                     removeTableEntry@tableIndex:
  1927                           	callstack 0
  1928  00009E                     parseCbusEvent@tableIndex:
  1929                           	callstack 0
  1930  00009E                     doRqnpn@idx:
  1931                           	callstack 0
  1932  00009E                     cbusSendEvent@eventNode:
  1933                           	callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x3E
  1936  00009E                     	ds	1
  1937  00009F                     ??_doAreq:
  1938  00009F                     checkRemoveTableEntry@tableIndex:
  1939                           	callstack 0
  1940  00009F                     doReqev@evNum:
  1941                           	callstack 0
  1942  00009F                     canbusRecv@ptr:
  1943                           	callstack 0
  1944  00009F                     removeEvent@nodeNumber:
  1945                           	callstack 0
  1946  00009F                     parseCbusEvent@eventNumber:
  1947                           	callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x3F
  1950  00009F                     	ds	1
  1951  0000A0                     ??_doReqev:
  1952  0000A0                     checkRemoveTableEntry@e:
  1953                           	callstack 0
  1954  0000A0                     cbusSendEvent@eventNum:
  1955                           	callstack 0
  1956                           
  1957                           ; 2 bytes @ 0x40
  1958  0000A0                     	ds	1
  1959  0000A1                     ??_FLiMSWCheck:
  1960  0000A1                     writeEv@evNum:
  1961                           	callstack 0
  1962  0000A1                     doReqev@tableIndex:
  1963                           	callstack 0
  1964  0000A1                     cbusMsgReceived@msg:
  1965                           	callstack 0
  1966  0000A1                     removeEvent@eventNumber:
  1967                           	callstack 0
  1968  0000A1                     parseCbusEvent@nodeNumber:
  1969                           	callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x41
  1972  0000A1                     	ds	1
  1973  0000A2                     cbusSendEvent@onEvent:
  1974                           	callstack 0
  1975  0000A2                     writeEv@evVal:
  1976                           	callstack 0
  1977  0000A2                     doReqev@evVal:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x42
  1981  0000A2                     	ds	1
  1982  0000A3                     ??_writeEv:
  1983  0000A3                     cbusMsgReceived@cbusNum:
  1984                           	callstack 0
  1985  0000A3                     removeEvent@tableIndex:
  1986                           	callstack 0
  1987  0000A3                     doAreq@thisBit:
  1988                           	callstack 0
  1989  0000A3                     cbusSendEvent@msg:
  1990                           	callstack 0
  1991                           
  1992                           ; 10 bytes @ 0x43
  1993  0000A3                     	ds	1
  1994  0000A4                     doAreq@thisByte:
  1995                           	callstack 0
  1996  0000A4                     doEvuln@nodeNumber:
  1997                           	callstack 0
  1998                           
  1999                           ; 2 bytes @ 0x44
  2000  0000A4                     	ds	1
  2001  0000A5                     doAreq@status:
  2002                           	callstack 0
  2003                           
  2004                           ; 1 bytes @ 0x45
  2005  0000A5                     	ds	1
  2006  0000A6                     doEvuln@eventNumber:
  2007                           	callstack 0
  2008  0000A6                     _doAreq$4586:
  2009                           	callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x46
  2012  0000A6                     	ds	2
  2013  0000A8                     _doAreq$4587:
  2014                           	callstack 0
  2015                           
  2016                           ; 2 bytes @ 0x48
  2017  0000A8                     	ds	2
  2018  0000AA                     doAreq@tableIndex:
  2019                           	callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x4A
  2022  0000AA                     	ds	1
  2023  0000AB                     doAreq@ev0:
  2024                           	callstack 0
  2025                           
  2026                           ; 2 bytes @ 0x4B
  2027  0000AB                     	ds	2
  2028  0000AD                     cbusSendEvent@cbusNum:
  2029                           	callstack 0
  2030  0000AD                     writeEv@startIndex:
  2031                           	callstack 0
  2032  0000AD                     doAreq@happening:
  2033                           	callstack 0
  2034                           
  2035                           ; 1 bytes @ 0x4D
  2036  0000AD                     	ds	1
  2037  0000AE                     writeEv@nextF:
  2038                           	callstack 0
  2039  0000AE                     sendProducedEvent@on:
  2040                           	callstack 0
  2041                           
  2042                           ; 1 bytes @ 0x4E
  2043  0000AE                     	ds	1
  2044  0000AF                     ??_sendProducedEvent:
  2045  0000AF                     writeEv@e:
  2046                           	callstack 0
  2047                           
  2048                           ; 1 bytes @ 0x4F
  2049  0000AF                     	ds	1
  2050  0000B0                     writeEv@f:
  2051                           	callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x50
  2054  0000B0                     	ds	1
  2055  0000B1                     writeEv@tableIndex:
  2056                           	callstack 0
  2057  0000B1                     sendProducedEvent@status:
  2058                           	callstack 0
  2059                           
  2060                           ; 1 bytes @ 0x51
  2061  0000B1                     	ds	1
  2062  0000B2                     writeEv@nextIdx:
  2063                           	callstack 0
  2064  0000B2                     sendProducedEvent@thisBit:
  2065                           	callstack 0
  2066                           
  2067                           ; 1 bytes @ 0x52
  2068  0000B2                     	ds	1
  2069  0000B3                     sendProducedEvent@thisByte:
  2070                           	callstack 0
  2071  0000B3                     deleteHappeningRange@number:
  2072                           	callstack 0
  2073  0000B3                     deleteActionRange@number:
  2074                           	callstack 0
  2075  0000B3                     addEvent@nodeNumber:
  2076                           	callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x53
  2079  0000B3                     	ds	1
  2080  0000B4                     ??_deleteActionRange:
  2081  0000B4                     ??_deleteHappeningRange:
  2082  0000B4                     sendProducedEvent@happening:
  2083                           	callstack 0
  2084                           
  2085                           ; 1 bytes @ 0x54
  2086  0000B4                     	ds	1
  2087  0000B5                     ??_pollServos:
  2088  0000B5                     ??_pollAnalogue:
  2089  0000B5                     ??_processOutputs:
  2090  0000B5                     ??_inputScan:
  2091  0000B5                     sendInvertedProducedEvent@state:
  2092                           	callstack 0
  2093  0000B5                     addEvent@eventNumber:
  2094                           	callstack 0
  2095                           
  2096                           ; 2 bytes @ 0x55
  2097  0000B5                     	ds	1
  2098  0000B6                     sendInvertedProducedEvent@invert:
  2099                           	callstack 0
  2100                           
  2101                           ; 1 bytes @ 0x56
  2102  0000B6                     	ds	1
  2103  0000B7                     sendInvertedProducedEvent@can_send_on:
  2104                           	callstack 0
  2105  0000B7                     addEvent@evNum:
  2106                           	callstack 0
  2107                           
  2108                           ; 1 bytes @ 0x57
  2109  0000B7                     	ds	1
  2110  0000B8                     processOutputs@io:
  2111                           	callstack 0
  2112  0000B8                     sendInvertedProducedEvent@can_send_off:
  2113                           	callstack 0
  2114  0000B8                     addEvent@evVal:
  2115                           	callstack 0
  2116  0000B8                     pollAnalogue@hhysteresis:
  2117                           	callstack 0
  2118                           
  2119                           ; 2 bytes @ 0x58
  2120  0000B8                     	ds	1
  2121  0000B9                     inputScan@change:
  2122                           	callstack 0
  2123  0000B9                     sendInvertedProducedEvent@happening:
  2124                           	callstack 0
  2125  0000B9                     addEvent@forceOwnNN:
  2126                           	callstack 0
  2127  0000B9                     deleteHappeningRange@action:
  2128                           	callstack 0
  2129  0000B9                     deleteActionRange@updated:
  2130                           	callstack 0
  2131                           
  2132                           ; 1 bytes @ 0x59
  2133  0000B9                     	ds	1
  2134  0000BA                     ??_addEvent:
  2135  0000BA                     inputScan@input:
  2136                           	callstack 0
  2137  0000BA                     deleteHappeningRange@pa:
  2138                           	callstack 0
  2139  0000BA                     deleteActionRange@action:
  2140                           	callstack 0
  2141  0000BA                     pollAnalogue@lhysteresis:
  2142                           	callstack 0
  2143  0000BA                     _sendInvertedProducedEvent$1832:
  2144                           	callstack 0
  2145                           
  2146                           ; 2 bytes @ 0x5A
  2147  0000BA                     	ds	1
  2148  0000BB                     deleteHappeningRange@tableIndex:
  2149                           	callstack 0
  2150  0000BB                     deleteActionRange@e:
  2151                           	callstack 0
  2152                           
  2153                           ; 1 bytes @ 0x5B
  2154  0000BB                     	ds	1
  2155  0000BC                     sendInvertedProducedEvent@state_to_send:
  2156                           	callstack 0
  2157  0000BC                     deleteActionRange@tableIndex:
  2158                           	callstack 0
  2159  0000BC                     pollAnalogue@hthreshold:
  2160                           	callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x5C
  2163  0000BC                     	ds	1
  2164  0000BD                     ??_APP_doSOD:
  2165  0000BD                     startDigitalOutput@state:
  2166                           	callstack 0
  2167  0000BD                     clearEvents@io:
  2168                           	callstack 0
  2169  0000BD                     pollServos@target:
  2170                           	callstack 0
  2171                           
  2172                           ; 1 bytes @ 0x5D
  2173  0000BD                     	ds	1
  2174  0000BE                     ??_startDigitalOutput:
  2175  0000BE                     pollServos@beforeMidway:
  2176                           	callstack 0
  2177  0000BE                     pollAnalogue@lthreshold:
  2178                           	callstack 0
  2179                           
  2180                           ; 2 bytes @ 0x5E
  2181  0000BE                     	ds	1
  2182  0000BF                     pollServos@midway:
  2183                           	callstack 0
  2184                           
  2185                           ; 1 bytes @ 0x5F
  2186  0000BF                     	ds	1
  2187  0000C0                     pollServos@io:
  2188                           	callstack 0
  2189  0000C0                     pollAnalogue@adc:
  2190                           	callstack 0
  2191  0000C0                     _startDigitalOutput$680:
  2192                           	callstack 0
  2193                           
  2194                           ; 2 bytes @ 0x60
  2195  0000C0                     	ds	1
  2196  0000C1                     ??_startServos:
  2197                           
  2198                           ; 1 bytes @ 0x61
  2199  0000C1                     	ds	1
  2200  0000C2                     startDigitalOutput@pinState:
  2201                           	callstack 0
  2202                           
  2203                           ; 1 bytes @ 0x62
  2204  0000C2                     	ds	1
  2205  0000C3                     startDigitalOutput@actionState:
  2206                           	callstack 0
  2207  0000C3                     startServos@type:
  2208                           	callstack 0
  2209                           
  2210                           ; 1 bytes @ 0x63
  2211  0000C3                     	ds	1
  2212  0000C4                     startDigitalOutput@io:
  2213                           	callstack 0
  2214  0000C4                     addEvent@error:
  2215                           	callstack 0
  2216                           
  2217                           ; 1 bytes @ 0x64
  2218  0000C4                     	ds	1
  2219  0000C5                     startOutput@action:
  2220                           	callstack 0
  2221  0000C5                     addEvent@f:
  2222                           	callstack 0
  2223                           
  2224                           ; 1 bytes @ 0x65
  2225  0000C5                     	ds	1
  2226  0000C6                     startOutput@type:
  2227                           	callstack 0
  2228  0000C6                     addEvent@e:
  2229                           	callstack 0
  2230                           
  2231                           ; 1 bytes @ 0x66
  2232  0000C6                     	ds	1
  2233  0000C7                     _APP_doSOD$1818:
  2234                           	callstack 0
  2235  0000C7                     startOutput@io:
  2236                           	callstack 0
  2237  0000C7                     addEvent@tableIndex:
  2238                           	callstack 0
  2239                           
  2240                           ; 1 bytes @ 0x67
  2241  0000C7                     	ds	1
  2242  0000C8                     ??_processActions:
  2243  0000C8                     defaultEvents@type:
  2244                           	callstack 0
  2245  0000C8                     _APP_doSOD$1819:
  2246                           	callstack 0
  2247  0000C8                     APP_addEvent@nodeNumber:
  2248                           	callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x68
  2251  0000C8                     	ds	1
  2252  0000C9                     APP_doSOD@step:
  2253                           	callstack 0
  2254  0000C9                     defaultEvents@en:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x69
  2258  0000C9                     	ds	1
  2259  0000CA                     processActions@simultaneous:
  2260                           	callstack 0
  2261  0000CA                     APP_doSOD@send_on_ok:
  2262                           	callstack 0
  2263  0000CA                     APP_addEvent@eventNumber:
  2264                           	callstack 0
  2265                           
  2266                           ; 2 bytes @ 0x6A
  2267  0000CA                     	ds	1
  2268  0000CB                     defaultEvents@io:
  2269                           	callstack 0
  2270  0000CB                     processActions@peekItem:
  2271                           	callstack 0
  2272  0000CB                     APP_doSOD@send_off_ok:
  2273                           	callstack 0
  2274                           
  2275                           ; 1 bytes @ 0x6B
  2276  0000CB                     	ds	1
  2277  0000CC                     setType@type:
  2278                           	callstack 0
  2279  0000CC                     APP_addEvent@evNum:
  2280                           	callstack 0
  2281  0000CC                     processActions@type:
  2282                           	callstack 0
  2283  0000CC                     APP_doSOD@disable_SOD_response:
  2284                           	callstack 0
  2285                           
  2286                           ; 1 bytes @ 0x6C
  2287  0000CC                     	ds	1
  2288  0000CD                     ??_setType:
  2289  0000CD                     APP_addEvent@evVal:
  2290                           	callstack 0
  2291  0000CD                     processActions@nextType:
  2292                           	callstack 0
  2293  0000CD                     APP_doSOD@disable_off:
  2294                           	callstack 0
  2295                           
  2296                           ; 1 bytes @ 0x6D
  2297  0000CD                     	ds	1
  2298  0000CE                     APP_addEvent@forceOwnNN:
  2299                           	callstack 0
  2300  0000CE                     processActions@io:
  2301                           	callstack 0
  2302  0000CE                     APP_doSOD@event_inverted:
  2303                           	callstack 0
  2304                           
  2305                           ; 1 bytes @ 0x6E
  2306  0000CE                     	ds	1
  2307  0000CF                     APP_addEvent@tableIndex:
  2308                           	callstack 0
  2309  0000CF                     processActions@nextIo:
  2310                           	callstack 0
  2311  0000CF                     APP_doSOD@flags:
  2312                           	callstack 0
  2313  0000CF                     setType@addr:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x6F
  2317  0000CF                     	ds	1
  2318  0000D0                     processActions@action:
  2319                           	callstack 0
  2320  0000D0                     APP_doSOD@value:
  2321                           	callstack 0
  2322  0000D0                     doEvlrn@nodeNumber:
  2323                           	callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x70
  2326  0000D0                     	ds	1
  2327  0000D1                     setType@io:
  2328                           	callstack 0
  2329  0000D1                     processActions@ioAction:
  2330                           	callstack 0
  2331  0000D1                     APP_doSOD@happeningIndex:
  2332                           	callstack 0
  2333                           
  2334                           ; 1 bytes @ 0x71
  2335  0000D1                     	ds	1
  2336  0000D2                     ??_initialise:
  2337  0000D2                     processActions@nextAction:
  2338                           	callstack 0
  2339  0000D2                     APP_doSOD@io:
  2340                           	callstack 0
  2341  0000D2                     actUponNVchange@oldValue:
  2342                           	callstack 0
  2343  0000D2                     doEvlrn@eventNumber:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x72
  2347  0000D2                     	ds	1
  2348  0000D3                     actUponNVchange@value:
  2349                           	callstack 0
  2350  0000D3                     doTimedResponse@n:
  2351                           	callstack 0
  2352                           
  2353                           ; 2 bytes @ 0x73
  2354  0000D3                     	ds	1
  2355  0000D4                     ??_actUponNVchange:
  2356  0000D4                     doEvlrn@evNum:
  2357                           	callstack 0
  2358                           
  2359                           ; 1 bytes @ 0x74
  2360  0000D4                     	ds	1
  2361  0000D5                     doEvlrn@evVal:
  2362                           	callstack 0
  2363                           
  2364                           ; 1 bytes @ 0x75
  2365  0000D5                     	ds	1
  2366  0000D6                     initialise@action:
  2367                           	callstack 0
  2368  0000D6                     doEvlrn@error:
  2369                           	callstack 0
  2370  0000D6                     _actUponNVchange$2139:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x76
  2374  0000D6                     	ds	1
  2375  0000D7                     initialise@simultaneous:
  2376                           	callstack 0
  2377                           
  2378                           ; 1 bytes @ 0x77
  2379  0000D7                     	ds	1
  2380  0000D8                     initialise@i:
  2381                           	callstack 0
  2382  0000D8                     actUponNVchange@index:
  2383                           	callstack 0
  2384                           
  2385                           ; 1 bytes @ 0x78
  2386  0000D8                     	ds	1
  2387  0000D9                     initialise@evIndex:
  2388                           	callstack 0
  2389  0000D9                     actUponNVchange@io:
  2390                           	callstack 0
  2391                           
  2392                           ; 1 bytes @ 0x79
  2393  0000D9                     	ds	1
  2394  0000DA                     doNvset@NVvalue:
  2395                           	callstack 0
  2396  0000DA                     initialise@ev:
  2397                           	callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x7A
  2400  0000DA                     	ds	1
  2401  0000DB                     ??_doNvset:
  2402                           
  2403                           ; 1 bytes @ 0x7B
  2404  0000DB                     	ds	1
  2405  0000DC                     initialise@en:
  2406                           	callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x7C
  2409  0000DC                     	ds	1
  2410  0000DD                     doNvset@flashIndex:
  2411                           	callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x7D
  2414  0000DD                     	ds	1
  2415  0000DE                     initialise@paction:
  2416                           	callstack 0
  2417                           
  2418                           ; 1 bytes @ 0x7E
  2419  0000DE                     	ds	1
  2420  0000DF                     doNvset@oldValue:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x7F
  2424  0000DF                     	ds	1
  2425  0000E0                     doNvset@NVindex:
  2426                           	callstack 0
  2427                           
  2428                           ; 1 bytes @ 0x80
  2429  0000E0                     	ds	1
  2430  0000E1                     parseFLiMCmd@rx_ptr:
  2431                           	callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x81
  2434  0000E1                     	ds	2
  2435  0000E3                     parseFLiMCmd@cmdProcessed:
  2436                           	callstack 0
  2437                           
  2438                           ; 1 bytes @ 0x83
  2439  0000E3                     	ds	1
  2440  0000E4                     parseCBUSMsg@msg:
  2441                           	callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x84
  2444  0000E4                     	ds	2
  2445  0000E6                     
  2446                           ; 1 bytes @ 0x86
  2447                           
  2448                           	psect	cstackCOMRAM
  2449  00002D                     __pcstackCOMRAM:
  2450                           	callstack 0
  2451  00002D                     i2setOutputPin@state:
  2452                           	callstack 0
  2453                           
  2454                           ; 1 bytes @ 0x0
  2455  00002D                     	ds	1
  2456  00002E                     ??i2_setOutputPin:
  2457                           
  2458                           ; 1 bytes @ 0x1
  2459  00002E                     	ds	4
  2460  000032                     i2setOutputPin@io:
  2461                           	callstack 0
  2462                           
  2463                           ; 1 bytes @ 0x5
  2464  000032                     	ds	1
  2465  000033                     ??_timer1DoneInterruptHandler:
  2466  000033                     ??_timer3DoneInterruptHandler:
  2467                           
  2468                           ; 1 bytes @ 0x6
  2469  000033                     	ds	2
  2470  000035                     ??_high_isr:
  2471                           
  2472                           ; 1 bytes @ 0x8
  2473  000035                     	ds	8
  2474  00003D                     ?i1__PointBuffer:
  2475                           	callstack 0
  2476  00003D                     ?i1_tickGet:
  2477                           	callstack 0
  2478  00003D                     i1doEnum@sendResult:
  2479                           	callstack 0
  2480  00003D                     i1memcpy@d1:
  2481                           	callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x10
  2484  00003D                     	ds	2
  2485  00003F                     i1__PointBuffer@b:
  2486                           	callstack 0
  2487  00003F                     i1memcpy@s1:
  2488                           	callstack 0
  2489                           
  2490                           ; 2 bytes @ 0x12
  2491  00003F                     	ds	1
  2492  000040                     i1__PointBuffer@pt:
  2493                           	callstack 0
  2494                           
  2495                           ; 2 bytes @ 0x13
  2496  000040                     	ds	1
  2497  000041                     i1tickGet@IntFlag2:
  2498                           	callstack 0
  2499  000041                     i1memcpy@n:
  2500                           	callstack 0
  2501                           
  2502                           ; 2 bytes @ 0x14
  2503  000041                     	ds	1
  2504  000042                     i1tickGet@IntFlag1:
  2505                           	callstack 0
  2506                           
  2507                           ; 1 bytes @ 0x15
  2508  000042                     	ds	1
  2509  000043                     i1memcpy@tmp:
  2510                           	callstack 0
  2511  000043                     i1tickGet@currentTime:
  2512                           	callstack 0
  2513                           
  2514                           ; 4 bytes @ 0x16
  2515  000043                     	ds	1
  2516  000044                     i1memcpy@d:
  2517                           	callstack 0
  2518                           
  2519                           ; 2 bytes @ 0x17
  2520  000044                     	ds	2
  2521  000046                     i1memcpy@s:
  2522                           	callstack 0
  2523                           
  2524                           ; 2 bytes @ 0x19
  2525  000046                     	ds	1
  2526  000047                     i1checkIncomingPacket@ptr:
  2527                           	callstack 0
  2528                           
  2529                           ; 2 bytes @ 0x1A
  2530  000047                     	ds	1
  2531  000048                     ??_checkTxFifo:
  2532  000048                     i1insertIntoRxFifo@ptr:
  2533                           	callstack 0
  2534                           
  2535                           ; 2 bytes @ 0x1B
  2536  000048                     	ds	1
  2537  000049                     ??i1_checkIncomingPacket:
  2538  000049                     checkTxFifo@ptr:
  2539                           	callstack 0
  2540                           
  2541                           ; 2 bytes @ 0x1C
  2542  000049                     	ds	1
  2543  00004A                     ??i1_insertIntoRxFifo:
  2544                           
  2545                           ; 1 bytes @ 0x1D
  2546  00004A                     	ds	1
  2547  00004B                     ??_checkCANTimeout:
  2548  00004B                     
  2549                           ; 1 bytes @ 0x1E
  2550  00004B                     	ds	2
  2551  00004D                     i1checkIncomingPacket@msgFound:
  2552                           	callstack 0
  2553                           
  2554                           ; 1 bytes @ 0x20
  2555  00004D                     	ds	1
  2556  00004E                     i1checkIncomingPacket@incomingCanId:
  2557                           	callstack 0
  2558                           
  2559                           ; 1 bytes @ 0x21
  2560  00004E                     	ds	1
  2561  00004F                     
  2562                           ; 1 bytes @ 0x22
  2563 ;;
  2564 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
  2565 ;;
  2566 ;; *************** function _main *****************
  2567 ;; Defined at:
  2568 ;;		line 311 in file "../../github/CANMIOfirmware/main.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  2  511[None  ] int 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 3E/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2584 ;;      Temps:          0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2585 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2586 ;;Total ram usage:        9 bytes
  2587 ;; Hardware stack levels required when called: 28
  2588 ;; This function calls:
  2589 ;;		_FLiMSWCheck
  2590 ;;		___lmul
  2591 ;;		_checkCBUS
  2592 ;;		_checkFlashing
  2593 ;;		_doTimedResponse
  2594 ;;		_initRomOps
  2595 ;;		_initStatusLeds
  2596 ;;		_initialise
  2597 ;;		_inputScan
  2598 ;;		_loadNvCache
  2599 ;;		_pollAnalogue
  2600 ;;		_processActions
  2601 ;;		_processOutputs
  2602 ;;		_sendProducedEvent
  2603 ;;		_startServos
  2604 ;;		_tickGet
  2605 ;; This function is called by:
  2606 ;;		Startup code after reset
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text0
  2611  0047B2                     __ptext0:
  2612                           	callstack 0
  2613  0047B2                     _main:
  2614                           	callstack 3
  2615                           
  2616                           ;main.c: 316: eventTable = (const EventTable *)0xEF80U;
  2617                           
  2618                           ;incstack = 0
  2619  0047B2  0E80               	movlw	128
  2620  0047B4  0100               	movlb	0	; () banked
  2621  0047B6  6FE9               	movwf	_eventTable& (0+255),b
  2622  0047B8  0EEF               	movlw	239
  2623  0047BA  6FEA               	movwf	(_eventTable+1)& (0+255),b
  2624  0047BC  0E00               	movlw	0
  2625  0047BE  6FEB               	movwf	(_eventTable+2)& (0+255),b
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;main.c: 320: initRomOps();
  2629  0047C0  EC42  F053         	call	_initRomOps	;wreg free
  2630                           
  2631                           ; BSR set to: 1
  2632                           ;main.c: 323: NV = loadNvCache();
  2633  0047C4  EC0C  F04F         	call	_loadNvCache	;wreg free
  2634  0047C8  C07D  F0EC         	movff	?_loadNvCache,_NV
  2635  0047CC  C07E  F0ED         	movff	?_loadNvCache+1,_NV+1
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;main.c: 326: initStatusLeds();
  2639  0047D0  EC46  F052         	call	_initStatusLeds	;wreg free
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;main.c: 327: initialise();
  2643  0047D4  ECF9  F01C         	call	_initialise	;wreg free
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;main.c: 329: startTime.Val = tickGet();
  2647  0047D8  EC9D  F04B         	call	_tickGet	;wreg free
  2648  0047DC  C071  F1CC         	movff	?_tickGet,_startTime
  2649  0047E0  C072  F1CD         	movff	?_tickGet+1,_startTime+1
  2650  0047E4  C073  F1CE         	movff	?_tickGet+2,_startTime+2
  2651  0047E8  C074  F1CF         	movff	?_tickGet+3,_startTime+3
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;main.c: 330: lastServoStartTime.Val = startTime.Val;
  2655  0047EC  C1CC  F1C8         	movff	_startTime,_lastServoStartTime
  2656  0047F0  C1CD  F1C9         	movff	_startTime+1,_lastServoStartTime+1
  2657  0047F4  C1CE  F1CA         	movff	_startTime+2,_lastServoStartTime+2
  2658  0047F8  C1CF  F1CB         	movff	_startTime+3,_lastServoStartTime+3
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;main.c: 331: lastInputScanTime.Val = startTime.Val;
  2662  0047FC  C1CC  F1C4         	movff	_startTime,_lastInputScanTime
  2663  004800  C1CD  F1C5         	movff	_startTime+1,_lastInputScanTime+1
  2664  004804  C1CE  F1C6         	movff	_startTime+2,_lastInputScanTime+2
  2665  004808  C1CF  F1C7         	movff	_startTime+3,_lastInputScanTime+3
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;main.c: 332: lastActionPollTime.Val = startTime.Val;
  2669  00480C  C1CC  F1C0         	movff	_startTime,_lastActionPollTime
  2670  004810  C1CD  F1C1         	movff	_startTime+1,_lastActionPollTime+1
  2671  004814  C1CE  F1C2         	movff	_startTime+2,_lastActionPollTime+2
  2672  004818  C1CF  F1C3         	movff	_startTime+3,_lastActionPollTime+3
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 334: lastTimedResponseTime.Val = startTime.Val;
  2676  00481C  C1CC  F1BC         	movff	_startTime,_lastTimedResponseTime
  2677  004820  C1CD  F1BD         	movff	_startTime+1,_lastTimedResponseTime+1
  2678  004824  C1CE  F1BE         	movff	_startTime+2,_lastTimedResponseTime+2
  2679  004828  C1CF  F1BF         	movff	_startTime+3,_lastTimedResponseTime+3
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;main.c: 336: started = 0;
  2683  00482C  0E00               	movlw	0
  2684  00482E  6E15               	movwf	_started^0,c
  2685  004830                     l21711:
  2686                           
  2687                           ;main.c: 340: if (!started && (unsigned char)((tickGet() - startTime.Val) > (unsigned lo
      +                          ng)((NV->sendSodDelay * (62500/10)) + (62500*2)))) {
  2688  004830  5015               	movf	_started^0,w,c
  2689  004832  A4D8               	btfss	status,2,c
  2690  004834  D059               	goto	l21719
  2691  004836  EC9D  F04B         	call	_tickGet	;wreg free
  2692  00483A  0101               	movlb	1	; () banked
  2693  00483C  51CC               	movf	_startTime& (0+255),w,b
  2694  00483E  0100               	movlb	0	; () banked
  2695  004840  5D71               	subwf	?_tickGet& (0+255),w,b
  2696  004842  0102               	movlb	2	; () banked
  2697  004844  6FE0               	movwf	??_main& (0+255),b
  2698  004846  0101               	movlb	1	; () banked
  2699  004848  51CD               	movf	(_startTime+1)& (0+255),w,b
  2700  00484A  0100               	movlb	0	; () banked
  2701  00484C  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  2702  00484E  0102               	movlb	2	; () banked
  2703  004850  6FE1               	movwf	(??_main+1)& (0+255),b
  2704  004852  0101               	movlb	1	; () banked
  2705  004854  51CE               	movf	(_startTime+2)& (0+255),w,b
  2706  004856  0100               	movlb	0	; () banked
  2707  004858  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  2708  00485A  0102               	movlb	2	; () banked
  2709  00485C  6FE2               	movwf	(??_main+2)& (0+255),b
  2710  00485E  0101               	movlb	1	; () banked
  2711  004860  51CF               	movf	(_startTime+3)& (0+255),w,b
  2712  004862  0100               	movlb	0	; () banked
  2713  004864  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  2714  004866  0102               	movlb	2	; () banked
  2715  004868  6FE3               	movwf	(??_main+3)& (0+255),b
  2716  00486A  0100               	movlb	0	; () banked
  2717  00486C  EE20 F001          	lfsr	2,1
  2718  004870  51EC               	movf	_NV& (0+255),w,b
  2719  004872  26D9               	addwf	fsr2l,f,c
  2720  004874  51ED               	movf	(_NV+1)& (0+255),w,b
  2721  004876  22DA               	addwfc	fsr2h,f,c
  2722  004878  50DF               	movf	indf2,w,c
  2723  00487A  0102               	movlb	2	; () banked
  2724  00487C  6FE4               	movwf	(??_main+4)& (0+255),b
  2725  00487E  51E4               	movf	(??_main+4)& (0+255),w,b
  2726  004880  0100               	movlb	0	; () banked
  2727  004882  6F71               	movwf	___lmul@multiplier& (0+255),b
  2728  004884  6B72               	clrf	(___lmul@multiplier+1)& (0+255),b
  2729  004886  6B73               	clrf	(___lmul@multiplier+2)& (0+255),b
  2730  004888  6B74               	clrf	(___lmul@multiplier+3)& (0+255),b
  2731  00488A  0E6A               	movlw	106
  2732  00488C  6F75               	movwf	___lmul@multiplicand& (0+255),b
  2733  00488E  0E18               	movlw	24
  2734  004890  6F76               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2735  004892  0E00               	movlw	0
  2736  004894  6F77               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2737  004896  0E00               	movlw	0
  2738  004898  6F78               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2739  00489A  ECF5  F04B         	call	___lmul	;wreg free
  2740  00489E  0E48               	movlw	72
  2741  0048A0  2571               	addwf	?___lmul& (0+255),w,b
  2742  0048A2  0102               	movlb	2	; () banked
  2743  0048A4  6FE5               	movwf	(??_main+5)& (0+255),b
  2744  0048A6  0EE8               	movlw	232
  2745  0048A8  0100               	movlb	0	; () banked
  2746  0048AA  2172               	addwfc	(?___lmul+1)& (0+255),w,b
  2747  0048AC  0102               	movlb	2	; () banked
  2748  0048AE  6FE6               	movwf	(??_main+6)& (0+255),b
  2749  0048B0  0E01               	movlw	1
  2750  0048B2  0100               	movlb	0	; () banked
  2751  0048B4  2173               	addwfc	(?___lmul+2)& (0+255),w,b
  2752  0048B6  0102               	movlb	2	; () banked
  2753  0048B8  6FE7               	movwf	(??_main+7)& (0+255),b
  2754  0048BA  0E00               	movlw	0
  2755  0048BC  0100               	movlb	0	; () banked
  2756  0048BE  2174               	addwfc	(?___lmul+3)& (0+255),w,b
  2757  0048C0  0102               	movlb	2	; () banked
  2758  0048C2  6FE8               	movwf	(??_main+8)& (0+255),b
  2759  0048C4  51E0               	movf	??_main& (0+255),w,b
  2760  0048C6  5DE5               	subwf	(??_main+5)& (0+255),w,b
  2761  0048C8  51E1               	movf	(??_main+1)& (0+255),w,b
  2762  0048CA  59E6               	subwfb	(??_main+6)& (0+255),w,b
  2763  0048CC  51E2               	movf	(??_main+2)& (0+255),w,b
  2764  0048CE  59E7               	subwfb	(??_main+7)& (0+255),w,b
  2765  0048D0  51E3               	movf	(??_main+3)& (0+255),w,b
  2766  0048D2  59E8               	subwfb	(??_main+8)& (0+255),w,b
  2767  0048D4  B0D8               	btfsc	status,0,c
  2768  0048D6  D008               	goto	l21719
  2769                           
  2770                           ; BSR set to: 2
  2771                           ;main.c: 341: started = 1;
  2772  0048D8  0E01               	movlw	1
  2773  0048DA  6E15               	movwf	_started^0,c
  2774                           
  2775                           ; BSR set to: 2
  2776                           ;main.c: 343: sendProducedEvent(1U, 1);
  2777  0048DC  0E01               	movlw	1
  2778  0048DE  0100               	movlb	0	; () banked
  2779  0048E0  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  2780  0048E2  0E01               	movlw	1
  2781  0048E4  EC54  F03C         	call	_sendProducedEvent
  2782  0048E8                     l21719:
  2783                           
  2784                           ;main.c: 345: };main.c: 346: checkCBUS();
  2785  0048E8  ECB4  F046         	call	_checkCBUS	;wreg free
  2786                           
  2787                           ;main.c: 347: FLiMSWCheck();
  2788  0048EC  EC37  F033         	call	_FLiMSWCheck	;wreg free
  2789                           
  2790                           ;main.c: 351: if ((tickGet() - lastServoStartTime.Val) > 5*(62500/2000)) {
  2791  0048F0  EC9D  F04B         	call	_tickGet	;wreg free
  2792  0048F4  0101               	movlb	1	; () banked
  2793  0048F6  51C8               	movf	_lastServoStartTime& (0+255),w,b
  2794  0048F8  0100               	movlb	0	; () banked
  2795  0048FA  5D71               	subwf	?_tickGet& (0+255),w,b
  2796  0048FC  0102               	movlb	2	; () banked
  2797  0048FE  6FE0               	movwf	??_main& (0+255),b
  2798  004900  0101               	movlb	1	; () banked
  2799  004902  51C9               	movf	(_lastServoStartTime+1)& (0+255),w,b
  2800  004904  0100               	movlb	0	; () banked
  2801  004906  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  2802  004908  0102               	movlb	2	; () banked
  2803  00490A  6FE1               	movwf	(??_main+1)& (0+255),b
  2804  00490C  0101               	movlb	1	; () banked
  2805  00490E  51CA               	movf	(_lastServoStartTime+2)& (0+255),w,b
  2806  004910  0100               	movlb	0	; () banked
  2807  004912  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  2808  004914  0102               	movlb	2	; () banked
  2809  004916  6FE2               	movwf	(??_main+2)& (0+255),b
  2810  004918  0101               	movlb	1	; () banked
  2811  00491A  51CB               	movf	(_lastServoStartTime+3)& (0+255),w,b
  2812  00491C  0100               	movlb	0	; () banked
  2813  00491E  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  2814  004920  0102               	movlb	2	; () banked
  2815  004922  6FE3               	movwf	(??_main+3)& (0+255),b
  2816  004924  51E3               	movf	(??_main+3)& (0+255),w,b
  2817  004926  11E2               	iorwf	(??_main+2)& (0+255),w,b
  2818  004928  11E1               	iorwf	(??_main+1)& (0+255),w,b
  2819  00492A  E104               	bnz	u27900
  2820  00492C  0E9C               	movlw	156
  2821  00492E  5DE0               	subwf	??_main& (0+255),w,b
  2822  004930  A0D8               	btfss	status,0,c
  2823  004932  D00C               	goto	l21729
  2824  004934                     u27900:
  2825                           
  2826                           ; BSR set to: 2
  2827                           ;main.c: 352: startServos();
  2828  004934  ECED  F03D         	call	_startServos	;wreg free
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main.c: 353: lastServoStartTime.Val = tickGet();
  2832  004938  EC9D  F04B         	call	_tickGet	;wreg free
  2833  00493C  C071  F1C8         	movff	?_tickGet,_lastServoStartTime
  2834  004940  C072  F1C9         	movff	?_tickGet+1,_lastServoStartTime+1
  2835  004944  C073  F1CA         	movff	?_tickGet+2,_lastServoStartTime+2
  2836  004948  C074  F1CB         	movff	?_tickGet+3,_lastServoStartTime+3
  2837  00494C                     l21729:
  2838                           
  2839                           ;main.c: 354: };main.c: 356: if (started) {
  2840  00494C  5015               	movf	_started^0,w,c
  2841  00494E  B4D8               	btfsc	status,2,c
  2842  004950  D0B4               	goto	l21751
  2843                           
  2844                           ;main.c: 357: if ((tickGet() - lastInputScanTime.Val) > 5*(62500/1000)) {
  2845  004952  EC9D  F04B         	call	_tickGet	;wreg free
  2846  004956  0101               	movlb	1	; () banked
  2847  004958  51C4               	movf	_lastInputScanTime& (0+255),w,b
  2848  00495A  0100               	movlb	0	; () banked
  2849  00495C  5D71               	subwf	?_tickGet& (0+255),w,b
  2850  00495E  0102               	movlb	2	; () banked
  2851  004960  6FE0               	movwf	??_main& (0+255),b
  2852  004962  0101               	movlb	1	; () banked
  2853  004964  51C5               	movf	(_lastInputScanTime+1)& (0+255),w,b
  2854  004966  0100               	movlb	0	; () banked
  2855  004968  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  2856  00496A  0102               	movlb	2	; () banked
  2857  00496C  6FE1               	movwf	(??_main+1)& (0+255),b
  2858  00496E  0101               	movlb	1	; () banked
  2859  004970  51C6               	movf	(_lastInputScanTime+2)& (0+255),w,b
  2860  004972  0100               	movlb	0	; () banked
  2861  004974  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  2862  004976  0102               	movlb	2	; () banked
  2863  004978  6FE2               	movwf	(??_main+2)& (0+255),b
  2864  00497A  0101               	movlb	1	; () banked
  2865  00497C  51C7               	movf	(_lastInputScanTime+3)& (0+255),w,b
  2866  00497E  0100               	movlb	0	; () banked
  2867  004980  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  2868  004982  0102               	movlb	2	; () banked
  2869  004984  6FE3               	movwf	(??_main+3)& (0+255),b
  2870  004986  51E3               	movf	(??_main+3)& (0+255),w,b
  2871  004988  11E2               	iorwf	(??_main+2)& (0+255),w,b
  2872  00498A  E106               	bnz	u27920
  2873  00498C  0E37               	movlw	55
  2874  00498E  5DE0               	subwf	??_main& (0+255),w,b
  2875  004990  0E01               	movlw	1
  2876  004992  59E1               	subwfb	(??_main+1)& (0+255),w,b
  2877  004994  A0D8               	btfss	status,0,c
  2878  004996  D00C               	goto	l21737
  2879  004998                     u27920:
  2880                           
  2881                           ; BSR set to: 2
  2882                           ;main.c: 358: inputScan();
  2883  004998  EC4D  F022         	call	_inputScan	;wreg free
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;main.c: 359: lastInputScanTime.Val = tickGet();
  2887  00499C  EC9D  F04B         	call	_tickGet	;wreg free
  2888  0049A0  C071  F1C4         	movff	?_tickGet,_lastInputScanTime
  2889  0049A4  C072  F1C5         	movff	?_tickGet+1,_lastInputScanTime+1
  2890  0049A8  C073  F1C6         	movff	?_tickGet+2,_lastInputScanTime+2
  2891  0049AC  C074  F1C7         	movff	?_tickGet+3,_lastInputScanTime+3
  2892  0049B0                     l21737:
  2893                           
  2894                           ;main.c: 360: };main.c: 361: if ((tickGet() - lastActionPollTime.Val) > 100*(62500/1000)
      +                          ) {
  2895  0049B0  EC9D  F04B         	call	_tickGet	;wreg free
  2896  0049B4  0101               	movlb	1	; () banked
  2897  0049B6  51C0               	movf	_lastActionPollTime& (0+255),w,b
  2898  0049B8  0100               	movlb	0	; () banked
  2899  0049BA  5D71               	subwf	?_tickGet& (0+255),w,b
  2900  0049BC  0102               	movlb	2	; () banked
  2901  0049BE  6FE0               	movwf	??_main& (0+255),b
  2902  0049C0  0101               	movlb	1	; () banked
  2903  0049C2  51C1               	movf	(_lastActionPollTime+1)& (0+255),w,b
  2904  0049C4  0100               	movlb	0	; () banked
  2905  0049C6  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  2906  0049C8  0102               	movlb	2	; () banked
  2907  0049CA  6FE1               	movwf	(??_main+1)& (0+255),b
  2908  0049CC  0101               	movlb	1	; () banked
  2909  0049CE  51C2               	movf	(_lastActionPollTime+2)& (0+255),w,b
  2910  0049D0  0100               	movlb	0	; () banked
  2911  0049D2  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  2912  0049D4  0102               	movlb	2	; () banked
  2913  0049D6  6FE2               	movwf	(??_main+2)& (0+255),b
  2914  0049D8  0101               	movlb	1	; () banked
  2915  0049DA  51C3               	movf	(_lastActionPollTime+3)& (0+255),w,b
  2916  0049DC  0100               	movlb	0	; () banked
  2917  0049DE  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  2918  0049E0  0102               	movlb	2	; () banked
  2919  0049E2  6FE3               	movwf	(??_main+3)& (0+255),b
  2920  0049E4  51E3               	movf	(??_main+3)& (0+255),w,b
  2921  0049E6  11E2               	iorwf	(??_main+2)& (0+255),w,b
  2922  0049E8  E106               	bnz	u27930
  2923  0049EA  0E39               	movlw	57
  2924  0049EC  5DE0               	subwf	??_main& (0+255),w,b
  2925  0049EE  0E18               	movlw	24
  2926  0049F0  59E1               	subwfb	(??_main+1)& (0+255),w,b
  2927  0049F2  A0D8               	btfss	status,0,c
  2928  0049F4  D00E               	goto	l21743
  2929  0049F6                     u27930:
  2930                           
  2931                           ; BSR set to: 2
  2932                           ;main.c: 362: processActions();
  2933  0049F6  EC1D  F02C         	call	_processActions	;wreg free
  2934                           
  2935                           ;main.c: 363: processOutputs();
  2936  0049FA  ECF7  F02A         	call	_processOutputs	;wreg free
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;main.c: 364: lastActionPollTime.Val = tickGet();
  2940  0049FE  EC9D  F04B         	call	_tickGet	;wreg free
  2941  004A02  C071  F1C0         	movff	?_tickGet,_lastActionPollTime
  2942  004A06  C072  F1C1         	movff	?_tickGet+1,_lastActionPollTime+1
  2943  004A0A  C073  F1C2         	movff	?_tickGet+2,_lastActionPollTime+2
  2944  004A0E  C074  F1C3         	movff	?_tickGet+3,_lastActionPollTime+3
  2945  004A12                     l21743:
  2946                           
  2947                           ;main.c: 365: };main.c: 367: if ((tickGet() - lastTimedResponseTime.Val) > (unsigned lon
      +                          g)((NV->responseDelay) * (62500/1000))) {
  2948  004A12  EC9D  F04B         	call	_tickGet	;wreg free
  2949  004A16  0101               	movlb	1	; () banked
  2950  004A18  51BC               	movf	_lastTimedResponseTime& (0+255),w,b
  2951  004A1A  0100               	movlb	0	; () banked
  2952  004A1C  5D71               	subwf	?_tickGet& (0+255),w,b
  2953  004A1E  0102               	movlb	2	; () banked
  2954  004A20  6FE0               	movwf	??_main& (0+255),b
  2955  004A22  0101               	movlb	1	; () banked
  2956  004A24  51BD               	movf	(_lastTimedResponseTime+1)& (0+255),w,b
  2957  004A26  0100               	movlb	0	; () banked
  2958  004A28  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  2959  004A2A  0102               	movlb	2	; () banked
  2960  004A2C  6FE1               	movwf	(??_main+1)& (0+255),b
  2961  004A2E  0101               	movlb	1	; () banked
  2962  004A30  51BE               	movf	(_lastTimedResponseTime+2)& (0+255),w,b
  2963  004A32  0100               	movlb	0	; () banked
  2964  004A34  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  2965  004A36  0102               	movlb	2	; () banked
  2966  004A38  6FE2               	movwf	(??_main+2)& (0+255),b
  2967  004A3A  0101               	movlb	1	; () banked
  2968  004A3C  51BF               	movf	(_lastTimedResponseTime+3)& (0+255),w,b
  2969  004A3E  0100               	movlb	0	; () banked
  2970  004A40  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  2971  004A42  0102               	movlb	2	; () banked
  2972  004A44  6FE3               	movwf	(??_main+3)& (0+255),b
  2973  004A46  0100               	movlb	0	; () banked
  2974  004A48  EE20 F005          	lfsr	2,5
  2975  004A4C  51EC               	movf	_NV& (0+255),w,b
  2976  004A4E  26D9               	addwf	fsr2l,f,c
  2977  004A50  51ED               	movf	(_NV+1)& (0+255),w,b
  2978  004A52  22DA               	addwfc	fsr2h,f,c
  2979  004A54  50DF               	movf	indf2,w,c
  2980  004A56  0102               	movlb	2	; () banked
  2981  004A58  6FE4               	movwf	(??_main+4)& (0+255),b
  2982  004A5A  51E4               	movf	(??_main+4)& (0+255),w,b
  2983  004A5C  0100               	movlb	0	; () banked
  2984  004A5E  6F71               	movwf	___lmul@multiplier& (0+255),b
  2985  004A60  6B72               	clrf	(___lmul@multiplier+1)& (0+255),b
  2986  004A62  6B73               	clrf	(___lmul@multiplier+2)& (0+255),b
  2987  004A64  6B74               	clrf	(___lmul@multiplier+3)& (0+255),b
  2988  004A66  0E3E               	movlw	62
  2989  004A68  6F75               	movwf	___lmul@multiplicand& (0+255),b
  2990  004A6A  0E00               	movlw	0
  2991  004A6C  6F76               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2992  004A6E  0E00               	movlw	0
  2993  004A70  6F77               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2994  004A72  0E00               	movlw	0
  2995  004A74  6F78               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2996  004A76  ECF5  F04B         	call	___lmul	;wreg free
  2997  004A7A  0102               	movlb	2	; () banked
  2998  004A7C  51E0               	movf	??_main& (0+255),w,b
  2999  004A7E  0100               	movlb	0	; () banked
  3000  004A80  5D71               	subwf	?___lmul& (0+255),w,b
  3001  004A82  0102               	movlb	2	; () banked
  3002  004A84  51E1               	movf	(??_main+1)& (0+255),w,b
  3003  004A86  0100               	movlb	0	; () banked
  3004  004A88  5972               	subwfb	(?___lmul+1)& (0+255),w,b
  3005  004A8A  0102               	movlb	2	; () banked
  3006  004A8C  51E2               	movf	(??_main+2)& (0+255),w,b
  3007  004A8E  0100               	movlb	0	; () banked
  3008  004A90  5973               	subwfb	(?___lmul+2)& (0+255),w,b
  3009  004A92  0102               	movlb	2	; () banked
  3010  004A94  51E3               	movf	(??_main+3)& (0+255),w,b
  3011  004A96  0100               	movlb	0	; () banked
  3012  004A98  5974               	subwfb	(?___lmul+3)& (0+255),w,b
  3013  004A9A  B0D8               	btfsc	status,0,c
  3014  004A9C  D00C               	goto	l21749
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 368: doTimedResponse();
  3018  004A9E  EC1D  F045         	call	_doTimedResponse	;wreg free
  3019                           
  3020                           ;main.c: 369: lastTimedResponseTime.Val = tickGet();
  3021  004AA2  EC9D  F04B         	call	_tickGet	;wreg free
  3022  004AA6  C071  F1BC         	movff	?_tickGet,_lastTimedResponseTime
  3023  004AAA  C072  F1BD         	movff	?_tickGet+1,_lastTimedResponseTime+1
  3024  004AAE  C073  F1BE         	movff	?_tickGet+2,_lastTimedResponseTime+2
  3025  004AB2  C074  F1BF         	movff	?_tickGet+3,_lastTimedResponseTime+3
  3026  004AB6                     l21749:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;main.c: 370: };main.c: 373: pollAnalogue();
  3030  004AB6  EC38  F012         	call	_pollAnalogue	;wreg free
  3031  004ABA                     l21751:
  3032                           
  3033                           ;main.c: 375: };main.c: 377: checkFlashing();
  3034  004ABA  ECA5  F039         	call	_checkFlashing	;wreg free
  3035  004ABE  D6B8               	goto	l21711
  3036  004AC0                     __end_of_main:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _startServos *****************
  3040 ;; Defined at:
  3041 ;;		line 159 in file "../../github/CANMIOfirmware/servo.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  type            1   99[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 3F/2
  3052 ;;		On exit  : 3F/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;Total ram usage:        3 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 17
  3062 ;; This function calls:
  3063 ;;		_pollServos
  3064 ;;		_setupTimer1
  3065 ;;		_setupTimer3
  3066 ;; This function is called by:
  3067 ;;		_main
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text1
  3072  007BDA                     __ptext1:
  3073                           	callstack 0
  3074  007BDA                     _startServos:
  3075                           	callstack 13
  3076                           
  3077                           ; BSR set to: 2
  3078                           ;servo.c: 160: unsigned char type;;servo.c: 163: servoInBlock++;
  3079                           
  3080                           ;incstack = 0
  3081  007BDA  2A12               	incf	_servoInBlock^0,f,c
  3082                           
  3083                           ; BSR set to: 2
  3084                           ;servo.c: 164: if (servoInBlock >= 8U) {
  3085  007BDC  0E07               	movlw	7
  3086  007BDE  6412               	cpfsgt	_servoInBlock^0,c
  3087  007BE0  D004               	goto	l21485
  3088                           
  3089                           ; BSR set to: 2
  3090                           ;servo.c: 165: servoInBlock = 0;
  3091  007BE2  0E00               	movlw	0
  3092  007BE4  6E12               	movwf	_servoInBlock^0,c
  3093                           
  3094                           ; BSR set to: 2
  3095                           ;servo.c: 166: pollServos();
  3096  007BE6  ECA7  F007         	call	_pollServos	;wreg free
  3097  007BEA                     l21485:
  3098                           
  3099                           ;servo.c: 167: };servo.c: 168: type = NV->io[servoInBlock].type;
  3100  007BEA  5012               	movf	_servoInBlock^0,w,c
  3101  007BEC  0D07               	mullw	7
  3102  007BEE  C0EC  F0C1         	movff	_NV,??_startServos
  3103  007BF2  C0ED  F0C2         	movff	_NV+1,??_startServos+1
  3104  007BF6  50F3               	movf	243,w,c
  3105  007BF8  0100               	movlb	0	; () banked
  3106  007BFA  27C1               	addwf	??_startServos& (0+255),f,b
  3107  007BFC  50F4               	movf	244,w,c
  3108  007BFE  23C2               	addwfc	(??_startServos+1)& (0+255),f,b
  3109  007C00  0E10               	movlw	16
  3110  007C02  25C1               	addwf	??_startServos& (0+255),w,b
  3111  007C04  6ED9               	movwf	fsr2l,c
  3112  007C06  0E00               	movlw	0
  3113  007C08  21C2               	addwfc	(??_startServos+1)& (0+255),w,b
  3114  007C0A  6EDA               	movwf	fsr2h,c
  3115  007C0C  50DF               	movf	indf2,w,c
  3116  007C0E  6FC3               	movwf	startServos@type& (0+255),b
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;servo.c: 169: if ((type == 2U) || (type == 3U) || (type == 4U)) {
  3120  007C10  0E02               	movlw	2
  3121  007C12  19C3               	xorwf	startServos@type& (0+255),w,b
  3122  007C14  B4D8               	btfsc	status,2,c
  3123  007C16  D008               	goto	u27560
  3124                           
  3125                           ; BSR set to: 0
  3126  007C18  0E03               	movlw	3
  3127  007C1A  19C3               	xorwf	startServos@type& (0+255),w,b
  3128  007C1C  B4D8               	btfsc	status,2,c
  3129  007C1E  D004               	goto	u27560
  3130                           
  3131                           ; BSR set to: 0
  3132  007C20  0E04               	movlw	4
  3133  007C22  19C3               	xorwf	startServos@type& (0+255),w,b
  3134  007C24  A4D8               	btfss	status,2,c
  3135  007C26  D00C               	goto	l21497
  3136  007C28                     u27560:
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;servo.c: 170: if (servoState[servoInBlock] != OFF) setupTimer1(servoInBlock);
  3140  007C28  0E40               	movlw	low _servoState
  3141  007C2A  2412               	addwf	_servoInBlock^0,w,c
  3142  007C2C  6ED9               	movwf	fsr2l,c
  3143  007C2E  6ADA               	clrf	fsr2h,c
  3144  007C30  0E01               	movlw	high _servoState
  3145  007C32  22DA               	addwfc	fsr2h,f,c
  3146  007C34  50DF               	movf	indf2,w,c
  3147  007C36  B4D8               	btfsc	status,2,c
  3148  007C38  D003               	goto	l21497
  3149                           
  3150                           ; BSR set to: 0
  3151  007C3A  5012               	movf	_servoInBlock^0,w,c
  3152  007C3C  ECE1  F047         	call	_setupTimer1
  3153  007C40                     l21497:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;servo.c: 171: };servo.c: 172: type = NV->io[servoInBlock+8U].type;
  3157  007C40  5012               	movf	_servoInBlock^0,w,c
  3158  007C42  0D07               	mullw	7
  3159  007C44  C0EC  F0C1         	movff	_NV,??_startServos
  3160  007C48  C0ED  F0C2         	movff	_NV+1,??_startServos+1
  3161  007C4C  50F3               	movf	243,w,c
  3162  007C4E  27C1               	addwf	??_startServos& (0+255),f,b
  3163  007C50  50F4               	movf	244,w,c
  3164  007C52  23C2               	addwfc	(??_startServos+1)& (0+255),f,b
  3165  007C54  0E48               	movlw	72
  3166  007C56  25C1               	addwf	??_startServos& (0+255),w,b
  3167  007C58  6ED9               	movwf	fsr2l,c
  3168  007C5A  0E00               	movlw	0
  3169  007C5C  21C2               	addwfc	(??_startServos+1)& (0+255),w,b
  3170  007C5E  6EDA               	movwf	fsr2h,c
  3171  007C60  50DF               	movf	indf2,w,c
  3172  007C62  6FC3               	movwf	startServos@type& (0+255),b
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;servo.c: 173: if ((type == 2U) || (type == 3U) || (type == 4U)) {
  3176  007C64  0E02               	movlw	2
  3177  007C66  19C3               	xorwf	startServos@type& (0+255),w,b
  3178  007C68  B4D8               	btfsc	status,2,c
  3179  007C6A  D008               	goto	u27600
  3180                           
  3181                           ; BSR set to: 0
  3182  007C6C  0E03               	movlw	3
  3183  007C6E  19C3               	xorwf	startServos@type& (0+255),w,b
  3184  007C70  B4D8               	btfsc	status,2,c
  3185  007C72  D004               	goto	u27600
  3186                           
  3187                           ; BSR set to: 0
  3188  007C74  0E04               	movlw	4
  3189  007C76  19C3               	xorwf	startServos@type& (0+255),w,b
  3190  007C78  A4D8               	btfss	status,2,c
  3191  007C7A  0012               	return	
  3192  007C7C                     u27600:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;servo.c: 174: if (servoState[servoInBlock+8U] != OFF) setupTimer3(servoInBlock+8U);
  3196  007C7C  0E48               	movlw	low (_servoState+8)
  3197  007C7E  2412               	addwf	_servoInBlock^0,w,c
  3198  007C80  6ED9               	movwf	fsr2l,c
  3199  007C82  6ADA               	clrf	fsr2h,c
  3200  007C84  0E01               	movlw	high (_servoState+8)
  3201  007C86  22DA               	addwfc	fsr2h,f,c
  3202  007C88  50DF               	movf	indf2,w,c
  3203  007C8A  B4D8               	btfsc	status,2,c
  3204  007C8C  0012               	return	
  3205                           
  3206                           ; BSR set to: 0
  3207  007C8E  5012               	movf	_servoInBlock^0,w,c
  3208  007C90  0F08               	addlw	8
  3209  007C92  ECA9  F047         	call	_setupTimer3
  3210                           
  3211                           ; BSR set to: 0
  3212  007C96  0012               	return		;funcret
  3213  007C98                     __end_of_startServos:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _setupTimer3 *****************
  3217 ;; Defined at:
  3218 ;;		line 194 in file "../../github/CANMIOfirmware/servo.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  io              1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  io              1   27[BANK0 ] unsigned char 
  3223 ;;  ticks           2   25[BANK0 ] unsigned int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 3F/0
  3230 ;;		On exit  : 3F/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;Total ram usage:        5 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 9
  3240 ;; This function calls:
  3241 ;;		___wmul
  3242 ;;		_setOutputPin
  3243 ;; This function is called by:
  3244 ;;		_startServos
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text2
  3249  008F52                     __ptext2:
  3250                           	callstack 0
  3251  008F52                     _setupTimer3:
  3252                           	callstack 20
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;incstack = 0
  3256                           ;setupTimer3@io stored from wreg
  3257  008F52  6F7B               	movwf	setupTimer3@io& (0+255),b
  3258                           
  3259                           ;servo.c: 195: WORD ticks = 0xFFFF -(3600U + (WORD)19U * currentPos[io]);
  3260  008F54  0E80               	movlw	low _currentPos
  3261  008F56  0100               	movlb	0	; () banked
  3262  008F58  257B               	addwf	setupTimer3@io& (0+255),w,b
  3263  008F5A  6ED9               	movwf	fsr2l,c
  3264  008F5C  6ADA               	clrf	fsr2h,c
  3265  008F5E  0E01               	movlw	high _currentPos
  3266  008F60  22DA               	addwfc	fsr2h,f,c
  3267  008F62  50DF               	movf	indf2,w,c
  3268  008F64  6F77               	movwf	??_setupTimer3& (0+255),b
  3269  008F66  5177               	movf	??_setupTimer3& (0+255),w,b
  3270  008F68  6F71               	movwf	___wmul@multiplier& (0+255),b
  3271  008F6A  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
  3272  008F6C  0EFF               	movlw	255
  3273  008F6E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3274  008F70  0EED               	movlw	237
  3275  008F72  6F73               	movwf	___wmul@multiplicand& (0+255),b
  3276  008F74  ECEA  F051         	call	___wmul	;wreg free
  3277  008F78  0EEF               	movlw	239
  3278  008F7A  2571               	addwf	?___wmul& (0+255),w,b
  3279  008F7C  6F79               	movwf	setupTimer3@ticks& (0+255),b
  3280  008F7E  0EF1               	movlw	241
  3281  008F80  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  3282  008F82  6F7A               	movwf	(setupTimer3@ticks+1)& (0+255),b
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;servo.c: 196: TMR3H = ticks >> 8;
  3286  008F84  C07A  FFB3         	movff	setupTimer3@ticks+1,4019	;volatile
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;servo.c: 197: TMR3L = ticks & 0xFF;
  3290  008F88  C079  FFB2         	movff	setupTimer3@ticks,4018	;volatile
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;servo.c: 199: setOutputPin(io, (unsigned char)( ! (NV->io[io].flags & 0x20U)));
  3294  008F8C  517B               	movf	setupTimer3@io& (0+255),w,b
  3295  008F8E  0D07               	mullw	7
  3296  008F90  C0EC  F077         	movff	_NV,??_setupTimer3
  3297  008F94  C0ED  F078         	movff	_NV+1,??_setupTimer3+1
  3298  008F98  50F3               	movf	243,w,c
  3299  008F9A  2777               	addwf	??_setupTimer3& (0+255),f,b
  3300  008F9C  50F4               	movf	244,w,c
  3301  008F9E  2378               	addwfc	(??_setupTimer3+1)& (0+255),f,b
  3302  008FA0  0E11               	movlw	17
  3303  008FA2  2577               	addwf	??_setupTimer3& (0+255),w,b
  3304  008FA4  6ED9               	movwf	fsr2l,c
  3305  008FA6  0E00               	movlw	0
  3306  008FA8  2178               	addwfc	(??_setupTimer3+1)& (0+255),w,b
  3307  008FAA  6EDA               	movwf	fsr2h,c
  3308  008FAC  BADF               	btfsc	indf2,5,c
  3309  008FAE  D002               	goto	u26380
  3310  008FB0  0E01               	movlw	1
  3311  008FB2  D001               	goto	u26390
  3312  008FB4                     u26380:
  3313  008FB4  0E00               	movlw	0
  3314  008FB6                     u26390:
  3315  008FB6  6F71               	movwf	setOutputPin@state& (0+255),b
  3316  008FB8  517B               	movf	setupTimer3@io& (0+255),w,b
  3317  008FBA  EC90  F031         	call	_setOutputPin
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;servo.c: 200: T3CONbits.TMR3ON = 1;
  3321  008FBE  80B1               	bsf	177,0,c	;volatile
  3322                           
  3323                           ; BSR set to: 0
  3324  008FC0  0012               	return		;funcret
  3325  008FC2                     __end_of_setupTimer3:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function _setupTimer1 *****************
  3329 ;; Defined at:
  3330 ;;		line 183 in file "../../github/CANMIOfirmware/servo.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  io              1    wreg     unsigned char 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  io              1   27[BANK0 ] unsigned char 
  3335 ;;  ticks           2   25[BANK0 ] unsigned int 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 3F/0
  3342 ;;		On exit  : 3F/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;Total ram usage:        5 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 9
  3352 ;; This function calls:
  3353 ;;		___wmul
  3354 ;;		_setOutputPin
  3355 ;; This function is called by:
  3356 ;;		_startServos
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text3
  3361  008FC2                     __ptext3:
  3362                           	callstack 0
  3363  008FC2                     _setupTimer1:
  3364                           	callstack 20
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;incstack = 0
  3368                           ;setupTimer1@io stored from wreg
  3369  008FC2  6F7B               	movwf	setupTimer1@io& (0+255),b
  3370                           
  3371                           ;servo.c: 187: WORD ticks = 0xFFFF-(3600U + (WORD)19U * currentPos[io]);
  3372  008FC4  0E80               	movlw	low _currentPos
  3373  008FC6  0100               	movlb	0	; () banked
  3374  008FC8  257B               	addwf	setupTimer1@io& (0+255),w,b
  3375  008FCA  6ED9               	movwf	fsr2l,c
  3376  008FCC  6ADA               	clrf	fsr2h,c
  3377  008FCE  0E01               	movlw	high _currentPos
  3378  008FD0  22DA               	addwfc	fsr2h,f,c
  3379  008FD2  50DF               	movf	indf2,w,c
  3380  008FD4  6F77               	movwf	??_setupTimer1& (0+255),b
  3381  008FD6  5177               	movf	??_setupTimer1& (0+255),w,b
  3382  008FD8  6F71               	movwf	___wmul@multiplier& (0+255),b
  3383  008FDA  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
  3384  008FDC  0EFF               	movlw	255
  3385  008FDE  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3386  008FE0  0EED               	movlw	237
  3387  008FE2  6F73               	movwf	___wmul@multiplicand& (0+255),b
  3388  008FE4  ECEA  F051         	call	___wmul	;wreg free
  3389  008FE8  0EEF               	movlw	239
  3390  008FEA  2571               	addwf	?___wmul& (0+255),w,b
  3391  008FEC  6F79               	movwf	setupTimer1@ticks& (0+255),b
  3392  008FEE  0EF1               	movlw	241
  3393  008FF0  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  3394  008FF2  6F7A               	movwf	(setupTimer1@ticks+1)& (0+255),b
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;servo.c: 188: TMR1H = ticks >> 8;
  3398  008FF4  C07A  FFCF         	movff	setupTimer1@ticks+1,4047	;volatile
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;servo.c: 189: TMR1L = ticks & 0xFF;
  3402  008FF8  C079  FFCE         	movff	setupTimer1@ticks,4046	;volatile
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;servo.c: 191: setOutputPin(io, (unsigned char)( ! (NV->io[io].flags & 0x20U)));
  3406  008FFC  517B               	movf	setupTimer1@io& (0+255),w,b
  3407  008FFE  0D07               	mullw	7
  3408  009000  C0EC  F077         	movff	_NV,??_setupTimer1
  3409  009004  C0ED  F078         	movff	_NV+1,??_setupTimer1+1
  3410  009008  50F3               	movf	243,w,c
  3411  00900A  2777               	addwf	??_setupTimer1& (0+255),f,b
  3412  00900C  50F4               	movf	244,w,c
  3413  00900E  2378               	addwfc	(??_setupTimer1+1)& (0+255),f,b
  3414  009010  0E11               	movlw	17
  3415  009012  2577               	addwf	??_setupTimer1& (0+255),w,b
  3416  009014  6ED9               	movwf	fsr2l,c
  3417  009016  0E00               	movlw	0
  3418  009018  2178               	addwfc	(??_setupTimer1+1)& (0+255),w,b
  3419  00901A  6EDA               	movwf	fsr2h,c
  3420  00901C  BADF               	btfsc	indf2,5,c
  3421  00901E  D002               	goto	u26360
  3422  009020  0E01               	movlw	1
  3423  009022  D001               	goto	u26370
  3424  009024                     u26360:
  3425  009024  0E00               	movlw	0
  3426  009026                     u26370:
  3427  009026  6F71               	movwf	setOutputPin@state& (0+255),b
  3428  009028  517B               	movf	setupTimer1@io& (0+255),w,b
  3429  00902A  EC90  F031         	call	_setOutputPin
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;servo.c: 192: T1CONbits.TMR1ON = 1;
  3433  00902E  80CD               	bsf	205,0,c	;volatile
  3434                           
  3435                           ; BSR set to: 0
  3436  009030  0012               	return		;funcret
  3437  009032                     __end_of_setupTimer1:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _pollServos *****************
  3441 ;; Defined at:
  3442 ;;		line 228 in file "../../github/CANMIOfirmware/servo.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  io              1   96[BANK0 ] unsigned char 
  3447 ;;  midway          1   95[BANK0 ] unsigned char 
  3448 ;;  beforeMidway    1   94[BANK0 ] unsigned char 
  3449 ;;  target          1   93[BANK0 ] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 3F/2
  3456 ;;		On exit  : 3F/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3460 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3461 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3462 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3463 ;;Total ram usage:       12 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 16
  3466 ;; This function calls:
  3467 ;;		_bounceDown
  3468 ;;		_bounceUp
  3469 ;;		_ee_write
  3470 ;;		_initBounce
  3471 ;;		_sendProducedEvent
  3472 ;;		_tickGet
  3473 ;; This function is called by:
  3474 ;;		_startServos
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text4
  3479  000F4E                     __ptext4:
  3480                           	callstack 0
  3481  000F4E                     _pollServos:
  3482                           	callstack 13
  3483                           
  3484                           ; BSR set to: 2
  3485                           ;servo.c: 229: unsigned char midway;;servo.c: 230: BOOL beforeMidway;;servo.c: 231: unsi
      +                          gned char io;;servo.c: 232: unsigned char target;;servo.c: 234: for (io=0; io<16U; io++)
      +                           {
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;incstack = 0
  3489  000F4E  0E00               	movlw	0
  3490  000F50  0100               	movlb	0	; () banked
  3491  000F52  6FC0               	movwf	pollServos@io& (0+255),b
  3492  000F54  EFB7  F00E         	goto	l20857
  3493  000F58                     l20629:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;servo.c: 237: midway = (unsigned char)(NV->io[io].nv_io.nv_servo.servo_end_pos)/2U +;se
      +                          rvo.c: 238: (NV->io[io].nv_io.nv_servo.servo_start_pos)/2U;
  3497  000F58  51C0               	movf	pollServos@io& (0+255),w,b
  3498  000F5A  0D07               	mullw	7
  3499  000F5C  C0EC  F0B5         	movff	_NV,??_pollServos
  3500  000F60  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  3501  000F64  50F3               	movf	243,w,c
  3502  000F66  27B5               	addwf	??_pollServos& (0+255),f,b
  3503  000F68  50F4               	movf	244,w,c
  3504  000F6A  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  3505  000F6C  0E12               	movlw	18
  3506  000F6E  25B5               	addwf	??_pollServos& (0+255),w,b
  3507  000F70  6ED9               	movwf	fsr2l,c
  3508  000F72  0E00               	movlw	0
  3509  000F74  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  3510  000F76  6EDA               	movwf	fsr2h,c
  3511  000F78  50DF               	movf	indf2,w,c
  3512  000F7A  6FB7               	movwf	(??_pollServos+2)& (0+255),b
  3513  000F7C  90D8               	bcf	status,0,c
  3514  000F7E  33B7               	rrcf	(??_pollServos+2)& (0+255),f,b
  3515  000F80  51C0               	movf	pollServos@io& (0+255),w,b
  3516  000F82  0D07               	mullw	7
  3517  000F84  C0EC  F0B8         	movff	_NV,??_pollServos+3
  3518  000F88  C0ED  F0B9         	movff	_NV+1,??_pollServos+4
  3519  000F8C  50F3               	movf	243,w,c
  3520  000F8E  27B8               	addwf	(??_pollServos+3)& (0+255),f,b
  3521  000F90  50F4               	movf	244,w,c
  3522  000F92  23B9               	addwfc	(??_pollServos+4)& (0+255),f,b
  3523  000F94  0E13               	movlw	19
  3524  000F96  25B8               	addwf	(??_pollServos+3)& (0+255),w,b
  3525  000F98  6ED9               	movwf	fsr2l,c
  3526  000F9A  0E00               	movlw	0
  3527  000F9C  21B9               	addwfc	(??_pollServos+4)& (0+255),w,b
  3528  000F9E  6EDA               	movwf	fsr2h,c
  3529  000FA0  50DF               	movf	indf2,w,c
  3530  000FA2  6FBA               	movwf	(??_pollServos+5)& (0+255),b
  3531  000FA4  90D8               	bcf	status,0,c
  3532  000FA6  31BA               	rrcf	(??_pollServos+5)& (0+255),w,b
  3533  000FA8  25B7               	addwf	(??_pollServos+2)& (0+255),w,b
  3534  000FAA  6FBF               	movwf	pollServos@midway& (0+255),b
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;servo.c: 239: beforeMidway=0;
  3538  000FAC  0E00               	movlw	0
  3539  000FAE  6FBE               	movwf	pollServos@beforeMidway& (0+255),b
  3540                           
  3541                           ;servo.c: 240: switch (servoState[io]) {
  3542  000FB0  D28C               	goto	l20717
  3543  000FB2                     l20633:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;servo.c: 242: if (currentPos[io]==NV->io[io].nv_io.nv_servo.servo_start_pos) {
  3547  000FB2  51C0               	movf	pollServos@io& (0+255),w,b
  3548  000FB4  0D07               	mullw	7
  3549  000FB6  C0EC  F0B5         	movff	_NV,??_pollServos
  3550  000FBA  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  3551  000FBE  50F3               	movf	243,w,c
  3552  000FC0  27B5               	addwf	??_pollServos& (0+255),f,b
  3553  000FC2  50F4               	movf	244,w,c
  3554  000FC4  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  3555  000FC6  0E12               	movlw	18
  3556  000FC8  25B5               	addwf	??_pollServos& (0+255),w,b
  3557  000FCA  6ED9               	movwf	fsr2l,c
  3558  000FCC  0E00               	movlw	0
  3559  000FCE  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  3560  000FD0  6EDA               	movwf	fsr2h,c
  3561  000FD2  0E80               	movlw	low _currentPos
  3562  000FD4  25C0               	addwf	pollServos@io& (0+255),w,b
  3563  000FD6  6EE1               	movwf	fsr1l,c
  3564  000FD8  6AE2               	clrf	fsr1h,c
  3565  000FDA  0E01               	movlw	high _currentPos
  3566  000FDC  22E2               	addwfc	fsr1h,f,c
  3567  000FDE  50DE               	movf	postinc2,w,c
  3568  000FE0  18E6               	xorwf	postinc1,w,c
  3569  000FE2  A4D8               	btfss	status,2,c
  3570  000FE4  D01A               	goto	l20637
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;servo.c: 243: sendProducedEvent(((8U + 4U*(io))+0U), NV->io[io].flags & 0x40U);
  3574  000FE6  51C0               	movf	pollServos@io& (0+255),w,b
  3575  000FE8  0D07               	mullw	7
  3576  000FEA  C0EC  F0B5         	movff	_NV,??_pollServos
  3577  000FEE  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  3578  000FF2  50F3               	movf	243,w,c
  3579  000FF4  27B5               	addwf	??_pollServos& (0+255),f,b
  3580  000FF6  50F4               	movf	244,w,c
  3581  000FF8  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  3582  000FFA  0E11               	movlw	17
  3583  000FFC  25B5               	addwf	??_pollServos& (0+255),w,b
  3584  000FFE  6ED9               	movwf	fsr2l,c
  3585  001000  0E00               	movlw	0
  3586  001002  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  3587  001004  6EDA               	movwf	fsr2h,c
  3588  001006  50DF               	movf	indf2,w,c
  3589  001008  0B40               	andlw	64
  3590  00100A  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  3591  00100C  51C0               	movf	pollServos@io& (0+255),w,b
  3592  00100E  0D04               	mullw	4
  3593  001010  50F3               	movf	243,w,c
  3594  001012  0F08               	addlw	8
  3595  001014  EC54  F03C         	call	_sendProducedEvent
  3596                           
  3597                           ;servo.c: 244: } else {
  3598  001018  D019               	goto	l20639
  3599  00101A                     l20637:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;servo.c: 245: sendProducedEvent(((8U + 4U*(io))+2U), NV->io[io].flags & 0x40U);
  3603  00101A  51C0               	movf	pollServos@io& (0+255),w,b
  3604  00101C  0D07               	mullw	7
  3605  00101E  C0EC  F0B5         	movff	_NV,??_pollServos
  3606  001022  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  3607  001026  50F3               	movf	243,w,c
  3608  001028  27B5               	addwf	??_pollServos& (0+255),f,b
  3609  00102A  50F4               	movf	244,w,c
  3610  00102C  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  3611  00102E  0E11               	movlw	17
  3612  001030  25B5               	addwf	??_pollServos& (0+255),w,b
  3613  001032  6ED9               	movwf	fsr2l,c
  3614  001034  0E00               	movlw	0
  3615  001036  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  3616  001038  6EDA               	movwf	fsr2h,c
  3617  00103A  50DF               	movf	indf2,w,c
  3618  00103C  0B40               	andlw	64
  3619  00103E  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  3620  001040  51C0               	movf	pollServos@io& (0+255),w,b
  3621  001042  0D04               	mullw	4
  3622  001044  50F3               	movf	243,w,c
  3623  001046  0F0A               	addlw	10
  3624  001048  EC54  F03C         	call	_sendProducedEvent
  3625  00104C                     l20639:
  3626                           
  3627                           ;servo.c: 246: };servo.c: 247: servoState[io] = MOVING;
  3628  00104C  0E40               	movlw	low _servoState
  3629  00104E  0100               	movlb	0	; () banked
  3630  001050  25C0               	addwf	pollServos@io& (0+255),w,b
  3631  001052  6ED9               	movwf	fsr2l,c
  3632  001054  6ADA               	clrf	fsr2h,c
  3633  001056  0E01               	movlw	high _servoState
  3634  001058  22DA               	addwfc	fsr2h,f,c
  3635  00105A  0E02               	movlw	2
  3636  00105C  6EDF               	movwf	indf2,c
  3637  00105E                     l20641:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;servo.c: 250: if (targetPos[io] > currentPos[io]) {
  3641  00105E  0E70               	movlw	low _targetPos
  3642  001060  25C0               	addwf	pollServos@io& (0+255),w,b
  3643  001062  6ED9               	movwf	fsr2l,c
  3644  001064  6ADA               	clrf	fsr2h,c
  3645  001066  0E01               	movlw	high _targetPos
  3646  001068  22DA               	addwfc	fsr2h,f,c
  3647  00106A  0E80               	movlw	low _currentPos
  3648  00106C  25C0               	addwf	pollServos@io& (0+255),w,b
  3649  00106E  6EE1               	movwf	fsr1l,c
  3650  001070  6AE2               	clrf	fsr1h,c
  3651  001072  0E01               	movlw	high _currentPos
  3652  001074  22E2               	addwfc	fsr1h,f,c
  3653  001076  50DE               	movf	postinc2,w,c
  3654  001078  5CE6               	subwf	postinc1,w,c
  3655  00107A  B0D8               	btfsc	status,0,c
  3656  00107C  D0C4               	goto	l20671
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;servo.c: 251: if (currentPos[io] < midway) {
  3660  00107E  0E80               	movlw	low _currentPos
  3661  001080  25C0               	addwf	pollServos@io& (0+255),w,b
  3662  001082  6ED9               	movwf	fsr2l,c
  3663  001084  6ADA               	clrf	fsr2h,c
  3664  001086  0E01               	movlw	high _currentPos
  3665  001088  22DA               	addwfc	fsr2h,f,c
  3666  00108A  51BF               	movf	pollServos@midway& (0+255),w,b
  3667  00108C  5CDE               	subwf	postinc2,w,c
  3668  00108E  B0D8               	btfsc	status,0,c
  3669  001090  D002               	goto	l20647
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;servo.c: 252: beforeMidway = 1;
  3673  001092  0E01               	movlw	1
  3674  001094  6FBE               	movwf	pollServos@beforeMidway& (0+255),b
  3675  001096                     l20647:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;servo.c: 253: };servo.c: 255: if (stepsPerPollSpeed[io]) {
  3679  001096  0E30               	movlw	low _stepsPerPollSpeed
  3680  001098  25C0               	addwf	pollServos@io& (0+255),w,b
  3681  00109A  6ED9               	movwf	fsr2l,c
  3682  00109C  6ADA               	clrf	fsr2h,c
  3683  00109E  0E01               	movlw	high _stepsPerPollSpeed
  3684  0010A0  22DA               	addwfc	fsr2h,f,c
  3685  0010A2  50DF               	movf	indf2,w,c
  3686  0010A4  B4D8               	btfsc	status,2,c
  3687  0010A6  D042               	goto	l20655
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;servo.c: 256: if (currentPos[io] + stepsPerPollSpeed[io] < currentPos[io]) {
  3691  0010A8  0E80               	movlw	low _currentPos
  3692  0010AA  25C0               	addwf	pollServos@io& (0+255),w,b
  3693  0010AC  6ED9               	movwf	fsr2l,c
  3694  0010AE  6ADA               	clrf	fsr2h,c
  3695  0010B0  0E01               	movlw	high _currentPos
  3696  0010B2  22DA               	addwfc	fsr2h,f,c
  3697  0010B4  50DF               	movf	indf2,w,c
  3698  0010B6  6FB5               	movwf	??_pollServos& (0+255),b
  3699  0010B8  6BB6               	clrf	(??_pollServos+1)& (0+255),b
  3700  0010BA  0E80               	movlw	low _currentPos
  3701  0010BC  25C0               	addwf	pollServos@io& (0+255),w,b
  3702  0010BE  6ED9               	movwf	fsr2l,c
  3703  0010C0  6ADA               	clrf	fsr2h,c
  3704  0010C2  0E01               	movlw	high _currentPos
  3705  0010C4  22DA               	addwfc	fsr2h,f,c
  3706  0010C6  50DF               	movf	indf2,w,c
  3707  0010C8  6FB7               	movwf	(??_pollServos+2)& (0+255),b
  3708  0010CA  6BB8               	clrf	(??_pollServos+3)& (0+255),b
  3709  0010CC  0E30               	movlw	low _stepsPerPollSpeed
  3710  0010CE  25C0               	addwf	pollServos@io& (0+255),w,b
  3711  0010D0  6ED9               	movwf	fsr2l,c
  3712  0010D2  6ADA               	clrf	fsr2h,c
  3713  0010D4  0E01               	movlw	high _stepsPerPollSpeed
  3714  0010D6  22DA               	addwfc	fsr2h,f,c
  3715  0010D8  50DF               	movf	indf2,w,c
  3716  0010DA  6FB9               	movwf	(??_pollServos+4)& (0+255),b
  3717  0010DC  51B9               	movf	(??_pollServos+4)& (0+255),w,b
  3718  0010DE  27B7               	addwf	(??_pollServos+2)& (0+255),f,b
  3719  0010E0  0E00               	movlw	0
  3720  0010E2  23B8               	addwfc	(??_pollServos+3)& (0+255),f,b
  3721  0010E4  51B5               	movf	??_pollServos& (0+255),w,b
  3722  0010E6  5DB7               	subwf	(??_pollServos+2)& (0+255),w,b
  3723  0010E8  51B8               	movf	(??_pollServos+3)& (0+255),w,b
  3724  0010EA  0A80               	xorlw	128
  3725  0010EC  6FBA               	movwf	(??_pollServos+5)& (0+255),b
  3726  0010EE  51B6               	movf	(??_pollServos+1)& (0+255),w,b
  3727  0010F0  0A80               	xorlw	128
  3728  0010F2  59BA               	subwfb	(??_pollServos+5)& (0+255),w,b
  3729  0010F4  B0D8               	btfsc	status,0,c
  3730  0010F6  D009               	goto	l20653
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;servo.c: 258: currentPos[io] =255;
  3734  0010F8  0E80               	movlw	low _currentPos
  3735  0010FA  25C0               	addwf	pollServos@io& (0+255),w,b
  3736  0010FC  6ED9               	movwf	fsr2l,c
  3737  0010FE  6ADA               	clrf	fsr2h,c
  3738  001100  0E01               	movlw	high _currentPos
  3739  001102  22DA               	addwfc	fsr2h,f,c
  3740  001104  0EFF               	movlw	255
  3741  001106  6EDF               	movwf	indf2,c
  3742                           
  3743                           ;servo.c: 259: } else {
  3744  001108  D036               	goto	l20661
  3745  00110A                     l20653:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;servo.c: 260: currentPos[io] += stepsPerPollSpeed[io];
  3749  00110A  0E30               	movlw	low _stepsPerPollSpeed
  3750  00110C  25C0               	addwf	pollServos@io& (0+255),w,b
  3751  00110E  6ED9               	movwf	fsr2l,c
  3752  001110  6ADA               	clrf	fsr2h,c
  3753  001112  0E01               	movlw	high _stepsPerPollSpeed
  3754  001114  22DA               	addwfc	fsr2h,f,c
  3755  001116  50DF               	movf	indf2,w,c
  3756  001118  6FB5               	movwf	??_pollServos& (0+255),b
  3757  00111A  0E80               	movlw	low _currentPos
  3758  00111C  25C0               	addwf	pollServos@io& (0+255),w,b
  3759  00111E  6ED9               	movwf	fsr2l,c
  3760  001120  6ADA               	clrf	fsr2h,c
  3761  001122  0E01               	movlw	high _currentPos
  3762  001124  22DA               	addwfc	fsr2h,f,c
  3763  001126  51B5               	movf	??_pollServos& (0+255),w,b
  3764  001128  26DF               	addwf	indf2,f,c
  3765  00112A  D025               	goto	l20661
  3766  00112C                     l20655:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;servo.c: 263: pollCount[io]--;
  3770  00112C  0E20               	movlw	low _pollCount
  3771  00112E  25C0               	addwf	pollServos@io& (0+255),w,b
  3772  001130  6ED9               	movwf	fsr2l,c
  3773  001132  6ADA               	clrf	fsr2h,c
  3774  001134  0E01               	movlw	high _pollCount
  3775  001136  22DA               	addwfc	fsr2h,f,c
  3776  001138  06DF               	decf	indf2,f,c
  3777                           
  3778                           ;servo.c: 264: if (pollCount[io] == 0) {
  3779  00113A  0E20               	movlw	low _pollCount
  3780  00113C  25C0               	addwf	pollServos@io& (0+255),w,b
  3781  00113E  6ED9               	movwf	fsr2l,c
  3782  001140  6ADA               	clrf	fsr2h,c
  3783  001142  0E01               	movlw	high _pollCount
  3784  001144  22DA               	addwfc	fsr2h,f,c
  3785  001146  50DF               	movf	indf2,w,c
  3786  001148  A4D8               	btfss	status,2,c
  3787  00114A  D015               	goto	l20661
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;servo.c: 265: currentPos[io]++;
  3791  00114C  0E80               	movlw	low _currentPos
  3792  00114E  25C0               	addwf	pollServos@io& (0+255),w,b
  3793  001150  6ED9               	movwf	fsr2l,c
  3794  001152  6ADA               	clrf	fsr2h,c
  3795  001154  0E01               	movlw	high _currentPos
  3796  001156  22DA               	addwfc	fsr2h,f,c
  3797  001158  2ADF               	incf	indf2,f,c
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;servo.c: 266: pollCount[io] = pollsPerStepSpeed[io];
  3801  00115A  0E74               	movlw	low _pollsPerStepSpeed
  3802  00115C  25C0               	addwf	pollServos@io& (0+255),w,b
  3803  00115E  6ED9               	movwf	fsr2l,c
  3804  001160  6ADA               	clrf	fsr2h,c
  3805  001162  0E02               	movlw	high _pollsPerStepSpeed
  3806  001164  22DA               	addwfc	fsr2h,f,c
  3807  001166  0E20               	movlw	low _pollCount
  3808  001168  25C0               	addwf	pollServos@io& (0+255),w,b
  3809  00116A  6EE1               	movwf	fsr1l,c
  3810  00116C  6AE2               	clrf	fsr1h,c
  3811  00116E  0E01               	movlw	high _pollCount
  3812  001170  22E2               	addwfc	fsr1h,f,c
  3813  001172  CFDF FFE7          	movff	indf2,indf1
  3814  001176                     l20661:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;servo.c: 267: };servo.c: 268: };servo.c: 270: if (currentPos[io] > targetPos[io]) {
  3818  001176  0E80               	movlw	low _currentPos
  3819  001178  25C0               	addwf	pollServos@io& (0+255),w,b
  3820  00117A  6ED9               	movwf	fsr2l,c
  3821  00117C  6ADA               	clrf	fsr2h,c
  3822  00117E  0E01               	movlw	high _currentPos
  3823  001180  22DA               	addwfc	fsr2h,f,c
  3824  001182  0E70               	movlw	low _targetPos
  3825  001184  25C0               	addwf	pollServos@io& (0+255),w,b
  3826  001186  6EE1               	movwf	fsr1l,c
  3827  001188  6AE2               	clrf	fsr1h,c
  3828  00118A  0E01               	movlw	high _targetPos
  3829  00118C  22E2               	addwfc	fsr1h,f,c
  3830  00118E  50DE               	movf	postinc2,w,c
  3831  001190  5CE6               	subwf	postinc1,w,c
  3832  001192  B0D8               	btfsc	status,0,c
  3833  001194  D00E               	goto	l20665
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;servo.c: 271: currentPos[io] = targetPos[io];
  3837  001196  0E70               	movlw	low _targetPos
  3838  001198  25C0               	addwf	pollServos@io& (0+255),w,b
  3839  00119A  6ED9               	movwf	fsr2l,c
  3840  00119C  6ADA               	clrf	fsr2h,c
  3841  00119E  0E01               	movlw	high _targetPos
  3842  0011A0  22DA               	addwfc	fsr2h,f,c
  3843  0011A2  0E80               	movlw	low _currentPos
  3844  0011A4  25C0               	addwf	pollServos@io& (0+255),w,b
  3845  0011A6  6EE1               	movwf	fsr1l,c
  3846  0011A8  6AE2               	clrf	fsr1h,c
  3847  0011AA  0E01               	movlw	high _currentPos
  3848  0011AC  22E2               	addwfc	fsr1h,f,c
  3849  0011AE  CFDF FFE7          	movff	indf2,indf1
  3850  0011B2                     l20665:
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;servo.c: 272: };servo.c: 273: if ((currentPos[io] >= midway) && beforeMidway) {
  3854  0011B2  0E80               	movlw	low _currentPos
  3855  0011B4  25C0               	addwf	pollServos@io& (0+255),w,b
  3856  0011B6  6ED9               	movwf	fsr2l,c
  3857  0011B8  6ADA               	clrf	fsr2h,c
  3858  0011BA  0E01               	movlw	high _currentPos
  3859  0011BC  22DA               	addwfc	fsr2h,f,c
  3860  0011BE  51BF               	movf	pollServos@midway& (0+255),w,b
  3861  0011C0  5CDE               	subwf	postinc2,w,c
  3862  0011C2  A0D8               	btfss	status,0,c
  3863  0011C4  D0F0               	goto	l20701
  3864                           
  3865                           ; BSR set to: 0
  3866  0011C6  51BE               	movf	pollServos@beforeMidway& (0+255),w,b
  3867  0011C8  B4D8               	btfsc	status,2,c
  3868  0011CA  D0ED               	goto	l20701
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;servo.c: 277: sendProducedEvent(((8U + 4U*(io))+1U), (unsigned char)( ! (NV->io[io].fla
      +                          gs & 0x40U)));
  3872  0011CC  51C0               	movf	pollServos@io& (0+255),w,b
  3873  0011CE  0D07               	mullw	7
  3874  0011D0  C0EC  F0B5         	movff	_NV,??_pollServos
  3875  0011D4  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  3876  0011D8  50F3               	movf	243,w,c
  3877  0011DA  27B5               	addwf	??_pollServos& (0+255),f,b
  3878  0011DC  50F4               	movf	244,w,c
  3879  0011DE  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  3880  0011E0  0E11               	movlw	17
  3881  0011E2  25B5               	addwf	??_pollServos& (0+255),w,b
  3882  0011E4  6ED9               	movwf	fsr2l,c
  3883  0011E6  0E00               	movlw	0
  3884  0011E8  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  3885  0011EA  6EDA               	movwf	fsr2h,c
  3886  0011EC  BCDF               	btfsc	indf2,6,c
  3887  0011EE  D002               	goto	u25820
  3888  0011F0  0E01               	movlw	1
  3889  0011F2  D001               	goto	u25830
  3890  0011F4                     u25820:
  3891  0011F4  0E00               	movlw	0
  3892  0011F6                     u25830:
  3893  0011F6  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  3894  0011F8  51C0               	movf	pollServos@io& (0+255),w,b
  3895  0011FA  0D04               	mullw	4
  3896  0011FC  50F3               	movf	243,w,c
  3897  0011FE  0F09               	addlw	9
  3898  001200  EC54  F03C         	call	_sendProducedEvent
  3899  001204  D0D0               	goto	l20701
  3900  001206                     l20671:
  3901                           
  3902                           ; BSR set to: 0
  3903  001206  0E80               	movlw	low _currentPos
  3904  001208  25C0               	addwf	pollServos@io& (0+255),w,b
  3905  00120A  6ED9               	movwf	fsr2l,c
  3906  00120C  6ADA               	clrf	fsr2h,c
  3907  00120E  0E01               	movlw	high _currentPos
  3908  001210  22DA               	addwfc	fsr2h,f,c
  3909  001212  0E70               	movlw	low _targetPos
  3910  001214  25C0               	addwf	pollServos@io& (0+255),w,b
  3911  001216  6EE1               	movwf	fsr1l,c
  3912  001218  6AE2               	clrf	fsr1h,c
  3913  00121A  0E01               	movlw	high _targetPos
  3914  00121C  22E2               	addwfc	fsr1h,f,c
  3915  00121E  50DE               	movf	postinc2,w,c
  3916  001220  5CE6               	subwf	postinc1,w,c
  3917  001222  B0D8               	btfsc	status,0,c
  3918  001224  D0C0               	goto	l20701
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;servo.c: 280: if (currentPos[io] > midway) {
  3922  001226  0E80               	movlw	low _currentPos
  3923  001228  25C0               	addwf	pollServos@io& (0+255),w,b
  3924  00122A  6ED9               	movwf	fsr2l,c
  3925  00122C  6ADA               	clrf	fsr2h,c
  3926  00122E  0E01               	movlw	high _currentPos
  3927  001230  22DA               	addwfc	fsr2h,f,c
  3928  001232  50DE               	movf	postinc2,w,c
  3929  001234  5DBF               	subwf	pollServos@midway& (0+255),w,b
  3930  001236  B0D8               	btfsc	status,0,c
  3931  001238  D002               	goto	l20677
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;servo.c: 281: beforeMidway = 1;
  3935  00123A  0E01               	movlw	1
  3936  00123C  6FBE               	movwf	pollServos@beforeMidway& (0+255),b
  3937  00123E                     l20677:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;servo.c: 282: };servo.c: 284: if (stepsPerPollSpeed[io]) {
  3941  00123E  0E30               	movlw	low _stepsPerPollSpeed
  3942  001240  25C0               	addwf	pollServos@io& (0+255),w,b
  3943  001242  6ED9               	movwf	fsr2l,c
  3944  001244  6ADA               	clrf	fsr2h,c
  3945  001246  0E01               	movlw	high _stepsPerPollSpeed
  3946  001248  22DA               	addwfc	fsr2h,f,c
  3947  00124A  50DF               	movf	indf2,w,c
  3948  00124C  B4D8               	btfsc	status,2,c
  3949  00124E  D042               	goto	l20685
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;servo.c: 285: if (currentPos[io] - stepsPerPollSpeed[io] > currentPos[io]) {
  3953  001250  0E80               	movlw	low _currentPos
  3954  001252  25C0               	addwf	pollServos@io& (0+255),w,b
  3955  001254  6ED9               	movwf	fsr2l,c
  3956  001256  6ADA               	clrf	fsr2h,c
  3957  001258  0E01               	movlw	high _currentPos
  3958  00125A  22DA               	addwfc	fsr2h,f,c
  3959  00125C  50DF               	movf	indf2,w,c
  3960  00125E  6FB5               	movwf	??_pollServos& (0+255),b
  3961  001260  6BB6               	clrf	(??_pollServos+1)& (0+255),b
  3962  001262  0E30               	movlw	low _stepsPerPollSpeed
  3963  001264  25C0               	addwf	pollServos@io& (0+255),w,b
  3964  001266  6ED9               	movwf	fsr2l,c
  3965  001268  6ADA               	clrf	fsr2h,c
  3966  00126A  0E01               	movlw	high _stepsPerPollSpeed
  3967  00126C  22DA               	addwfc	fsr2h,f,c
  3968  00126E  50DF               	movf	indf2,w,c
  3969  001270  6FB7               	movwf	(??_pollServos+2)& (0+255),b
  3970  001272  51B7               	movf	(??_pollServos+2)& (0+255),w,b
  3971  001274  5FB5               	subwf	??_pollServos& (0+255),f,b
  3972  001276  0E00               	movlw	0
  3973  001278  5BB6               	subwfb	(??_pollServos+1)& (0+255),f,b
  3974  00127A  0E80               	movlw	low _currentPos
  3975  00127C  25C0               	addwf	pollServos@io& (0+255),w,b
  3976  00127E  6ED9               	movwf	fsr2l,c
  3977  001280  6ADA               	clrf	fsr2h,c
  3978  001282  0E01               	movlw	high _currentPos
  3979  001284  22DA               	addwfc	fsr2h,f,c
  3980  001286  50DF               	movf	indf2,w,c
  3981  001288  6FB8               	movwf	(??_pollServos+3)& (0+255),b
  3982  00128A  6BB9               	clrf	(??_pollServos+4)& (0+255),b
  3983  00128C  51B5               	movf	??_pollServos& (0+255),w,b
  3984  00128E  5DB8               	subwf	(??_pollServos+3)& (0+255),w,b
  3985  001290  51B9               	movf	(??_pollServos+4)& (0+255),w,b
  3986  001292  0A80               	xorlw	128
  3987  001294  6FBA               	movwf	(??_pollServos+5)& (0+255),b
  3988  001296  51B6               	movf	(??_pollServos+1)& (0+255),w,b
  3989  001298  0A80               	xorlw	128
  3990  00129A  59BA               	subwfb	(??_pollServos+5)& (0+255),w,b
  3991  00129C  B0D8               	btfsc	status,0,c
  3992  00129E  D009               	goto	l20683
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;servo.c: 287: currentPos[io] = 0;
  3996  0012A0  0E80               	movlw	low _currentPos
  3997  0012A2  25C0               	addwf	pollServos@io& (0+255),w,b
  3998  0012A4  6ED9               	movwf	fsr2l,c
  3999  0012A6  6ADA               	clrf	fsr2h,c
  4000  0012A8  0E01               	movlw	high _currentPos
  4001  0012AA  22DA               	addwfc	fsr2h,f,c
  4002  0012AC  0E00               	movlw	0
  4003  0012AE  6EDF               	movwf	indf2,c
  4004                           
  4005                           ;servo.c: 288: } else {
  4006  0012B0  D036               	goto	l20691
  4007  0012B2                     l20683:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;servo.c: 289: currentPos[io] -= stepsPerPollSpeed[io];
  4011  0012B2  0E30               	movlw	low _stepsPerPollSpeed
  4012  0012B4  25C0               	addwf	pollServos@io& (0+255),w,b
  4013  0012B6  6ED9               	movwf	fsr2l,c
  4014  0012B8  6ADA               	clrf	fsr2h,c
  4015  0012BA  0E01               	movlw	high _stepsPerPollSpeed
  4016  0012BC  22DA               	addwfc	fsr2h,f,c
  4017  0012BE  50DF               	movf	indf2,w,c
  4018  0012C0  6FB5               	movwf	??_pollServos& (0+255),b
  4019  0012C2  0E80               	movlw	low _currentPos
  4020  0012C4  25C0               	addwf	pollServos@io& (0+255),w,b
  4021  0012C6  6ED9               	movwf	fsr2l,c
  4022  0012C8  6ADA               	clrf	fsr2h,c
  4023  0012CA  0E01               	movlw	high _currentPos
  4024  0012CC  22DA               	addwfc	fsr2h,f,c
  4025  0012CE  51B5               	movf	??_pollServos& (0+255),w,b
  4026  0012D0  5EDF               	subwf	indf2,f,c
  4027  0012D2  D025               	goto	l20691
  4028  0012D4                     l20685:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;servo.c: 292: pollCount[io]--;
  4032  0012D4  0E20               	movlw	low _pollCount
  4033  0012D6  25C0               	addwf	pollServos@io& (0+255),w,b
  4034  0012D8  6ED9               	movwf	fsr2l,c
  4035  0012DA  6ADA               	clrf	fsr2h,c
  4036  0012DC  0E01               	movlw	high _pollCount
  4037  0012DE  22DA               	addwfc	fsr2h,f,c
  4038  0012E0  06DF               	decf	indf2,f,c
  4039                           
  4040                           ;servo.c: 293: if (pollCount[io] == 0) {
  4041  0012E2  0E20               	movlw	low _pollCount
  4042  0012E4  25C0               	addwf	pollServos@io& (0+255),w,b
  4043  0012E6  6ED9               	movwf	fsr2l,c
  4044  0012E8  6ADA               	clrf	fsr2h,c
  4045  0012EA  0E01               	movlw	high _pollCount
  4046  0012EC  22DA               	addwfc	fsr2h,f,c
  4047  0012EE  50DF               	movf	indf2,w,c
  4048  0012F0  A4D8               	btfss	status,2,c
  4049  0012F2  D015               	goto	l20691
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;servo.c: 294: currentPos[io]--;
  4053  0012F4  0E80               	movlw	low _currentPos
  4054  0012F6  25C0               	addwf	pollServos@io& (0+255),w,b
  4055  0012F8  6ED9               	movwf	fsr2l,c
  4056  0012FA  6ADA               	clrf	fsr2h,c
  4057  0012FC  0E01               	movlw	high _currentPos
  4058  0012FE  22DA               	addwfc	fsr2h,f,c
  4059  001300  06DF               	decf	indf2,f,c
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;servo.c: 295: pollCount[io] = pollsPerStepSpeed[io];
  4063  001302  0E74               	movlw	low _pollsPerStepSpeed
  4064  001304  25C0               	addwf	pollServos@io& (0+255),w,b
  4065  001306  6ED9               	movwf	fsr2l,c
  4066  001308  6ADA               	clrf	fsr2h,c
  4067  00130A  0E02               	movlw	high _pollsPerStepSpeed
  4068  00130C  22DA               	addwfc	fsr2h,f,c
  4069  00130E  0E20               	movlw	low _pollCount
  4070  001310  25C0               	addwf	pollServos@io& (0+255),w,b
  4071  001312  6EE1               	movwf	fsr1l,c
  4072  001314  6AE2               	clrf	fsr1h,c
  4073  001316  0E01               	movlw	high _pollCount
  4074  001318  22E2               	addwfc	fsr1h,f,c
  4075  00131A  CFDF FFE7          	movff	indf2,indf1
  4076  00131E                     l20691:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;servo.c: 296: };servo.c: 297: };servo.c: 299: if (currentPos[io] < targetPos[io]) {
  4080  00131E  0E70               	movlw	low _targetPos
  4081  001320  25C0               	addwf	pollServos@io& (0+255),w,b
  4082  001322  6ED9               	movwf	fsr2l,c
  4083  001324  6ADA               	clrf	fsr2h,c
  4084  001326  0E01               	movlw	high _targetPos
  4085  001328  22DA               	addwfc	fsr2h,f,c
  4086  00132A  0E80               	movlw	low _currentPos
  4087  00132C  25C0               	addwf	pollServos@io& (0+255),w,b
  4088  00132E  6EE1               	movwf	fsr1l,c
  4089  001330  6AE2               	clrf	fsr1h,c
  4090  001332  0E01               	movlw	high _currentPos
  4091  001334  22E2               	addwfc	fsr1h,f,c
  4092  001336  50DE               	movf	postinc2,w,c
  4093  001338  5CE6               	subwf	postinc1,w,c
  4094  00133A  B0D8               	btfsc	status,0,c
  4095  00133C  D00E               	goto	l20695
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;servo.c: 300: currentPos[io] = targetPos[io];
  4099  00133E  0E70               	movlw	low _targetPos
  4100  001340  25C0               	addwf	pollServos@io& (0+255),w,b
  4101  001342  6ED9               	movwf	fsr2l,c
  4102  001344  6ADA               	clrf	fsr2h,c
  4103  001346  0E01               	movlw	high _targetPos
  4104  001348  22DA               	addwfc	fsr2h,f,c
  4105  00134A  0E80               	movlw	low _currentPos
  4106  00134C  25C0               	addwf	pollServos@io& (0+255),w,b
  4107  00134E  6EE1               	movwf	fsr1l,c
  4108  001350  6AE2               	clrf	fsr1h,c
  4109  001352  0E01               	movlw	high _currentPos
  4110  001354  22E2               	addwfc	fsr1h,f,c
  4111  001356  CFDF FFE7          	movff	indf2,indf1
  4112  00135A                     l20695:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;servo.c: 301: };servo.c: 302: if ((currentPos[io] <= midway) && beforeMidway) {
  4116  00135A  0E80               	movlw	low _currentPos
  4117  00135C  25C0               	addwf	pollServos@io& (0+255),w,b
  4118  00135E  6ED9               	movwf	fsr2l,c
  4119  001360  6ADA               	clrf	fsr2h,c
  4120  001362  0E01               	movlw	high _currentPos
  4121  001364  22DA               	addwfc	fsr2h,f,c
  4122  001366  50DE               	movf	postinc2,w,c
  4123  001368  5DBF               	subwf	pollServos@midway& (0+255),w,b
  4124  00136A  A0D8               	btfss	status,0,c
  4125  00136C  D01C               	goto	l20701
  4126                           
  4127                           ; BSR set to: 0
  4128  00136E  51BE               	movf	pollServos@beforeMidway& (0+255),w,b
  4129  001370  B4D8               	btfsc	status,2,c
  4130  001372  D019               	goto	l20701
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;servo.c: 304: sendProducedEvent(((8U + 4U*(io))+1U), NV->io[io].flags & 0x40U);
  4134  001374  51C0               	movf	pollServos@io& (0+255),w,b
  4135  001376  0D07               	mullw	7
  4136  001378  C0EC  F0B5         	movff	_NV,??_pollServos
  4137  00137C  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4138  001380  50F3               	movf	243,w,c
  4139  001382  27B5               	addwf	??_pollServos& (0+255),f,b
  4140  001384  50F4               	movf	244,w,c
  4141  001386  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4142  001388  0E11               	movlw	17
  4143  00138A  25B5               	addwf	??_pollServos& (0+255),w,b
  4144  00138C  6ED9               	movwf	fsr2l,c
  4145  00138E  0E00               	movlw	0
  4146  001390  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4147  001392  6EDA               	movwf	fsr2h,c
  4148  001394  50DF               	movf	indf2,w,c
  4149  001396  0B40               	andlw	64
  4150  001398  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4151  00139A  51C0               	movf	pollServos@io& (0+255),w,b
  4152  00139C  0D04               	mullw	4
  4153  00139E  50F3               	movf	243,w,c
  4154  0013A0  0F09               	addlw	9
  4155  0013A2  EC54  F03C         	call	_sendProducedEvent
  4156  0013A6                     l20701:
  4157                           
  4158                           ;servo.c: 305: };servo.c: 306: };servo.c: 307: if (targetPos[io] == currentPos[io]) {
  4159  0013A6  0E80               	movlw	low _currentPos
  4160  0013A8  0100               	movlb	0	; () banked
  4161  0013AA  25C0               	addwf	pollServos@io& (0+255),w,b
  4162  0013AC  6ED9               	movwf	fsr2l,c
  4163  0013AE  6ADA               	clrf	fsr2h,c
  4164  0013B0  0E01               	movlw	high _currentPos
  4165  0013B2  22DA               	addwfc	fsr2h,f,c
  4166  0013B4  0E70               	movlw	low _targetPos
  4167  0013B6  25C0               	addwf	pollServos@io& (0+255),w,b
  4168  0013B8  6EE1               	movwf	fsr1l,c
  4169  0013BA  6AE2               	clrf	fsr1h,c
  4170  0013BC  0E01               	movlw	high _targetPos
  4171  0013BE  22E2               	addwfc	fsr1h,f,c
  4172  0013C0  50DE               	movf	postinc2,w,c
  4173  0013C2  18E6               	xorwf	postinc1,w,c
  4174  0013C4  A4D8               	btfss	status,2,c
  4175  0013C6  EF15  F00F         	goto	l20867
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;servo.c: 308: servoState[io] = STOPPED;
  4179  0013CA  0E40               	movlw	low _servoState
  4180  0013CC  25C0               	addwf	pollServos@io& (0+255),w,b
  4181  0013CE  6ED9               	movwf	fsr2l,c
  4182  0013D0  6ADA               	clrf	fsr2h,c
  4183  0013D2  0E01               	movlw	high _servoState
  4184  0013D4  22DA               	addwfc	fsr2h,f,c
  4185  0013D6  0E01               	movlw	1
  4186  0013D8  6EDF               	movwf	indf2,c
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;servo.c: 309: ticksWhenStopped[io].Val = tickGet();
  4190  0013DA  EC9D  F04B         	call	_tickGet	;wreg free
  4191  0013DE  51C0               	movf	pollServos@io& (0+255),w,b
  4192  0013E0  0D04               	mullw	4
  4193  0013E2  0E00               	movlw	low _ticksWhenStopped
  4194  0013E4  24F3               	addwf	243,w,c
  4195  0013E6  6ED9               	movwf	fsr2l,c
  4196  0013E8  0E02               	movlw	high _ticksWhenStopped
  4197  0013EA  20F4               	addwfc	prodh,w,c
  4198  0013EC  6EDA               	movwf	fsr2h,c
  4199  0013EE  C071  FFDE         	movff	?_tickGet,postinc2
  4200  0013F2  C072  FFDE         	movff	?_tickGet+1,postinc2
  4201  0013F6  C073  FFDE         	movff	?_tickGet+2,postinc2
  4202  0013FA  C074  FFDE         	movff	?_tickGet+3,postinc2
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;servo.c: 311: if (currentPos[io] == NV->io[io].nv_io.nv_servo.servo_start_pos) {
  4206  0013FE  51C0               	movf	pollServos@io& (0+255),w,b
  4207  001400  0D07               	mullw	7
  4208  001402  C0EC  F0B5         	movff	_NV,??_pollServos
  4209  001406  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4210  00140A  50F3               	movf	243,w,c
  4211  00140C  27B5               	addwf	??_pollServos& (0+255),f,b
  4212  00140E  50F4               	movf	244,w,c
  4213  001410  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4214  001412  0E12               	movlw	18
  4215  001414  25B5               	addwf	??_pollServos& (0+255),w,b
  4216  001416  6ED9               	movwf	fsr2l,c
  4217  001418  0E00               	movlw	0
  4218  00141A  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4219  00141C  6EDA               	movwf	fsr2h,c
  4220  00141E  0E80               	movlw	low _currentPos
  4221  001420  25C0               	addwf	pollServos@io& (0+255),w,b
  4222  001422  6EE1               	movwf	fsr1l,c
  4223  001424  6AE2               	clrf	fsr1h,c
  4224  001426  0E01               	movlw	high _currentPos
  4225  001428  22E2               	addwfc	fsr1h,f,c
  4226  00142A  50DE               	movf	postinc2,w,c
  4227  00142C  18E6               	xorwf	postinc1,w,c
  4228  00142E  A4D8               	btfss	status,2,c
  4229  001430  D01D               	goto	l20711
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;servo.c: 312: sendProducedEvent(((8U + 4U*(io))+0U), (unsigned char)( ! (NV->io[io].fla
      +                          gs & 0x40U)));
  4233  001432  51C0               	movf	pollServos@io& (0+255),w,b
  4234  001434  0D07               	mullw	7
  4235  001436  C0EC  F0B5         	movff	_NV,??_pollServos
  4236  00143A  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4237  00143E  50F3               	movf	243,w,c
  4238  001440  27B5               	addwf	??_pollServos& (0+255),f,b
  4239  001442  50F4               	movf	244,w,c
  4240  001444  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4241  001446  0E11               	movlw	17
  4242  001448  25B5               	addwf	??_pollServos& (0+255),w,b
  4243  00144A  6ED9               	movwf	fsr2l,c
  4244  00144C  0E00               	movlw	0
  4245  00144E  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4246  001450  6EDA               	movwf	fsr2h,c
  4247  001452  BCDF               	btfsc	indf2,6,c
  4248  001454  D002               	goto	u25940
  4249  001456  0E01               	movlw	1
  4250  001458  D001               	goto	u25950
  4251  00145A                     u25940:
  4252  00145A  0E00               	movlw	0
  4253  00145C                     u25950:
  4254  00145C  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4255  00145E  51C0               	movf	pollServos@io& (0+255),w,b
  4256  001460  0D04               	mullw	4
  4257  001462  50F3               	movf	243,w,c
  4258  001464  0F08               	addlw	8
  4259  001466  EC54  F03C         	call	_sendProducedEvent
  4260                           
  4261                           ;servo.c: 313: } else {
  4262  00146A  D01C               	goto	l20713
  4263  00146C                     l20711:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;servo.c: 314: sendProducedEvent(((8U + 4U*(io))+2U), (unsigned char)( ! (NV->io[io].fla
      +                          gs & 0x40U)));
  4267  00146C  51C0               	movf	pollServos@io& (0+255),w,b
  4268  00146E  0D07               	mullw	7
  4269  001470  C0EC  F0B5         	movff	_NV,??_pollServos
  4270  001474  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4271  001478  50F3               	movf	243,w,c
  4272  00147A  27B5               	addwf	??_pollServos& (0+255),f,b
  4273  00147C  50F4               	movf	244,w,c
  4274  00147E  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4275  001480  0E11               	movlw	17
  4276  001482  25B5               	addwf	??_pollServos& (0+255),w,b
  4277  001484  6ED9               	movwf	fsr2l,c
  4278  001486  0E00               	movlw	0
  4279  001488  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4280  00148A  6EDA               	movwf	fsr2h,c
  4281  00148C  BCDF               	btfsc	indf2,6,c
  4282  00148E  D002               	goto	u25960
  4283  001490  0E01               	movlw	1
  4284  001492  D001               	goto	u25970
  4285  001494                     u25960:
  4286  001494  0E00               	movlw	0
  4287  001496                     u25970:
  4288  001496  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4289  001498  51C0               	movf	pollServos@io& (0+255),w,b
  4290  00149A  0D04               	mullw	4
  4291  00149C  50F3               	movf	243,w,c
  4292  00149E  0F0A               	addlw	10
  4293  0014A0  EC54  F03C         	call	_sendProducedEvent
  4294  0014A4                     l20713:
  4295                           
  4296                           ;servo.c: 315: };servo.c: 316: ee_write(((WORD)(((BYTE*)(0x3FF-40)))-17)+io, currentPos[
      +                          io]);
  4297  0014A4  0EC6               	movlw	198
  4298  0014A6  0100               	movlb	0	; () banked
  4299  0014A8  25C0               	addwf	pollServos@io& (0+255),w,b
  4300  0014AA  6F73               	movwf	ee_write@addr& (0+255),b
  4301  0014AC  6B74               	clrf	(ee_write@addr+1)& (0+255),b
  4302  0014AE  0E03               	movlw	3
  4303  0014B0  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
  4304  0014B2  0E80               	movlw	low _currentPos
  4305  0014B4  25C0               	addwf	pollServos@io& (0+255),w,b
  4306  0014B6  6ED9               	movwf	fsr2l,c
  4307  0014B8  6ADA               	clrf	fsr2h,c
  4308  0014BA  0E01               	movlw	high _currentPos
  4309  0014BC  22DA               	addwfc	fsr2h,f,c
  4310  0014BE  50DF               	movf	indf2,w,c
  4311  0014C0  6F75               	movwf	ee_write@data& (0+255),b
  4312  0014C2  EC17  F04D         	call	_ee_write	;wreg free
  4313  0014C6  EF15  F00F         	goto	l20867
  4314  0014CA                     l20717:
  4315                           
  4316                           ; BSR set to: 0
  4317  0014CA  0E40               	movlw	low _servoState
  4318  0014CC  25C0               	addwf	pollServos@io& (0+255),w,b
  4319  0014CE  6ED9               	movwf	fsr2l,c
  4320  0014D0  6ADA               	clrf	fsr2h,c
  4321  0014D2  0E01               	movlw	high _servoState
  4322  0014D4  22DA               	addwfc	fsr2h,f,c
  4323  0014D6  50DF               	movf	indf2,w,c
  4324                           
  4325                           ; Switch size 1, requested type "simple"
  4326                           ; Number of cases is 2, Range of values is 2 to 3
  4327                           ; switch strategies available:
  4328                           ; Name         Instructions Cycles
  4329                           ; simple_byte            7     4 (average)
  4330                           ;	Chosen strategy is simple_byte
  4331  0014D8  0A02               	xorlw	2	; case 2
  4332  0014DA  B4D8               	btfsc	status,2,c
  4333  0014DC  D5C0               	goto	l20641
  4334  0014DE  0A01               	xorlw	1	; case 3
  4335  0014E0  B4D8               	btfsc	status,2,c
  4336  0014E2  D567               	goto	l20633
  4337  0014E4  EF15  F00F         	goto	l20867
  4338  0014E8                     l20719:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;servo.c: 324: initBounce(io);
  4342  0014E8  51C0               	movf	pollServos@io& (0+255),w,b
  4343  0014EA  EC28  F051         	call	_initBounce
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;servo.c: 325: servoState[io] = MOVING;
  4347  0014EE  0E40               	movlw	low _servoState
  4348  0014F0  25C0               	addwf	pollServos@io& (0+255),w,b
  4349  0014F2  6ED9               	movwf	fsr2l,c
  4350  0014F4  6ADA               	clrf	fsr2h,c
  4351  0014F6  0E01               	movlw	high _servoState
  4352  0014F8  22DA               	addwfc	fsr2h,f,c
  4353  0014FA  0E02               	movlw	2
  4354  0014FC  6EDF               	movwf	indf2,c
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;servo.c: 326: loopCount[io] = 0;
  4358  0014FE  0E64               	movlw	low _loopCount
  4359  001500  25C0               	addwf	pollServos@io& (0+255),w,b
  4360  001502  6ED9               	movwf	fsr2l,c
  4361  001504  6ADA               	clrf	fsr2h,c
  4362  001506  0E02               	movlw	high _loopCount
  4363  001508  22DA               	addwfc	fsr2h,f,c
  4364  00150A  0E00               	movlw	0
  4365  00150C  6EDF               	movwf	indf2,c
  4366  00150E                     l20725:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;servo.c: 330: loopCount[io]++;
  4370  00150E  0E64               	movlw	low _loopCount
  4371  001510  25C0               	addwf	pollServos@io& (0+255),w,b
  4372  001512  6ED9               	movwf	fsr2l,c
  4373  001514  6ADA               	clrf	fsr2h,c
  4374  001516  0E02               	movlw	high _loopCount
  4375  001518  22DA               	addwfc	fsr2h,f,c
  4376  00151A  2ADF               	incf	indf2,f,c
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;servo.c: 331: if (loopCount[io] >= 255U) {
  4380  00151C  0E64               	movlw	low _loopCount
  4381  00151E  25C0               	addwf	pollServos@io& (0+255),w,b
  4382  001520  6ED9               	movwf	fsr2l,c
  4383  001522  6ADA               	clrf	fsr2h,c
  4384  001524  0E02               	movlw	high _loopCount
  4385  001526  22DA               	addwfc	fsr2h,f,c
  4386  001528  28DE               	incf	postinc2,w,c
  4387  00152A  A4D8               	btfss	status,2,c
  4388  00152C  D045               	goto	l20739
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;servo.c: 332: servoState[io] = STOPPED;
  4392  00152E  0E40               	movlw	low _servoState
  4393  001530  25C0               	addwf	pollServos@io& (0+255),w,b
  4394  001532  6ED9               	movwf	fsr2l,c
  4395  001534  6ADA               	clrf	fsr2h,c
  4396  001536  0E01               	movlw	high _servoState
  4397  001538  22DA               	addwfc	fsr2h,f,c
  4398  00153A  0E01               	movlw	1
  4399  00153C  6EDF               	movwf	indf2,c
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;servo.c: 333: ticksWhenStopped[io].Val = tickGet();
  4403  00153E  EC9D  F04B         	call	_tickGet	;wreg free
  4404  001542  51C0               	movf	pollServos@io& (0+255),w,b
  4405  001544  0D04               	mullw	4
  4406  001546  0E00               	movlw	low _ticksWhenStopped
  4407  001548  24F3               	addwf	243,w,c
  4408  00154A  6ED9               	movwf	fsr2l,c
  4409  00154C  0E02               	movlw	high _ticksWhenStopped
  4410  00154E  20F4               	addwfc	prodh,w,c
  4411  001550  6EDA               	movwf	fsr2h,c
  4412  001552  C071  FFDE         	movff	?_tickGet,postinc2
  4413  001556  C072  FFDE         	movff	?_tickGet+1,postinc2
  4414  00155A  C073  FFDE         	movff	?_tickGet+2,postinc2
  4415  00155E  C074  FFDE         	movff	?_tickGet+3,postinc2
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;servo.c: 334: currentPos[io] = targetPos[io];
  4419  001562  0E70               	movlw	low _targetPos
  4420  001564  25C0               	addwf	pollServos@io& (0+255),w,b
  4421  001566  6ED9               	movwf	fsr2l,c
  4422  001568  6ADA               	clrf	fsr2h,c
  4423  00156A  0E01               	movlw	high _targetPos
  4424  00156C  22DA               	addwfc	fsr2h,f,c
  4425  00156E  0E80               	movlw	low _currentPos
  4426  001570  25C0               	addwf	pollServos@io& (0+255),w,b
  4427  001572  6EE1               	movwf	fsr1l,c
  4428  001574  6AE2               	clrf	fsr1h,c
  4429  001576  0E01               	movlw	high _currentPos
  4430  001578  22E2               	addwfc	fsr1h,f,c
  4431  00157A  CFDF FFE7          	movff	indf2,indf1
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;servo.c: 335: sendProducedEvent(((8U + 4U*(io))+0U), (unsigned char)( ! (NV->io[io].fla
      +                          gs & 0x40U)));
  4435  00157E  51C0               	movf	pollServos@io& (0+255),w,b
  4436  001580  0D07               	mullw	7
  4437  001582  C0EC  F0B5         	movff	_NV,??_pollServos
  4438  001586  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4439  00158A  50F3               	movf	243,w,c
  4440  00158C  27B5               	addwf	??_pollServos& (0+255),f,b
  4441  00158E  50F4               	movf	244,w,c
  4442  001590  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4443  001592  0E11               	movlw	17
  4444  001594  25B5               	addwf	??_pollServos& (0+255),w,b
  4445  001596  6ED9               	movwf	fsr2l,c
  4446  001598  0E00               	movlw	0
  4447  00159A  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4448  00159C  6EDA               	movwf	fsr2h,c
  4449  00159E  BCDF               	btfsc	indf2,6,c
  4450  0015A0  D002               	goto	u25990
  4451  0015A2  0E01               	movlw	1
  4452  0015A4  D001               	goto	u26000
  4453  0015A6                     u25990:
  4454  0015A6  0E00               	movlw	0
  4455  0015A8                     u26000:
  4456  0015A8  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4457  0015AA  51C0               	movf	pollServos@io& (0+255),w,b
  4458  0015AC  0D04               	mullw	4
  4459  0015AE  50F3               	movf	243,w,c
  4460  0015B0  0F08               	addlw	8
  4461  0015B2  EC54  F03C         	call	_sendProducedEvent
  4462  0015B6  D776               	goto	l20713
  4463  0015B8                     l20739:
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;servo.c: 338: };servo.c: 340: target = NV->io[io].nv_io.nv_bounce.bounce_upper_pos;
  4467  0015B8  51C0               	movf	pollServos@io& (0+255),w,b
  4468  0015BA  0D07               	mullw	7
  4469  0015BC  C0EC  F0B5         	movff	_NV,??_pollServos
  4470  0015C0  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4471  0015C4  50F3               	movf	243,w,c
  4472  0015C6  27B5               	addwf	??_pollServos& (0+255),f,b
  4473  0015C8  50F4               	movf	244,w,c
  4474  0015CA  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4475  0015CC  0E12               	movlw	18
  4476  0015CE  25B5               	addwf	??_pollServos& (0+255),w,b
  4477  0015D0  6ED9               	movwf	fsr2l,c
  4478  0015D2  0E00               	movlw	0
  4479  0015D4  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4480  0015D6  6EDA               	movwf	fsr2h,c
  4481  0015D8  50DF               	movf	indf2,w,c
  4482  0015DA  6FBD               	movwf	pollServos@target& (0+255),b
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;servo.c: 344: if (targetPos[io] == target) {
  4486  0015DC  0E70               	movlw	low _targetPos
  4487  0015DE  25C0               	addwf	pollServos@io& (0+255),w,b
  4488  0015E0  6ED9               	movwf	fsr2l,c
  4489  0015E2  6ADA               	clrf	fsr2h,c
  4490  0015E4  0E01               	movlw	high _targetPos
  4491  0015E6  22DA               	addwfc	fsr2h,f,c
  4492  0015E8  51BD               	movf	pollServos@target& (0+255),w,b
  4493  0015EA  18DE               	xorwf	postinc2,w,c
  4494  0015EC  A4D8               	btfss	status,2,c
  4495  0015EE  D04C               	goto	l20755
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;servo.c: 345: if (bounceUp(io)) {
  4499  0015F0  51C0               	movf	pollServos@io& (0+255),w,b
  4500  0015F2  EC60  F025         	call	_bounceUp
  4501  0015F6  0900               	iorlw	0
  4502  0015F8  B4D8               	btfsc	status,2,c
  4503  0015FA  EF15  F00F         	goto	l20867
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;servo.c: 346: servoState[io] = STOPPED;
  4507  0015FE  0E40               	movlw	low _servoState
  4508  001600  25C0               	addwf	pollServos@io& (0+255),w,b
  4509  001602  6ED9               	movwf	fsr2l,c
  4510  001604  6ADA               	clrf	fsr2h,c
  4511  001606  0E01               	movlw	high _servoState
  4512  001608  22DA               	addwfc	fsr2h,f,c
  4513  00160A  0E01               	movlw	1
  4514  00160C  6EDF               	movwf	indf2,c
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;servo.c: 347: ticksWhenStopped[io].Val = tickGet();
  4518  00160E  EC9D  F04B         	call	_tickGet	;wreg free
  4519  001612  51C0               	movf	pollServos@io& (0+255),w,b
  4520  001614  0D04               	mullw	4
  4521  001616  0E00               	movlw	low _ticksWhenStopped
  4522  001618  24F3               	addwf	243,w,c
  4523  00161A  6ED9               	movwf	fsr2l,c
  4524  00161C  0E02               	movlw	high _ticksWhenStopped
  4525  00161E  20F4               	addwfc	prodh,w,c
  4526  001620  6EDA               	movwf	fsr2h,c
  4527  001622  C071  FFDE         	movff	?_tickGet,postinc2
  4528  001626  C072  FFDE         	movff	?_tickGet+1,postinc2
  4529  00162A  C073  FFDE         	movff	?_tickGet+2,postinc2
  4530  00162E  C074  FFDE         	movff	?_tickGet+3,postinc2
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;servo.c: 348: currentPos[io] = targetPos[io];
  4534  001632  0E70               	movlw	low _targetPos
  4535  001634  25C0               	addwf	pollServos@io& (0+255),w,b
  4536  001636  6ED9               	movwf	fsr2l,c
  4537  001638  6ADA               	clrf	fsr2h,c
  4538  00163A  0E01               	movlw	high _targetPos
  4539  00163C  22DA               	addwfc	fsr2h,f,c
  4540  00163E  0E80               	movlw	low _currentPos
  4541  001640  25C0               	addwf	pollServos@io& (0+255),w,b
  4542  001642  6EE1               	movwf	fsr1l,c
  4543  001644  6AE2               	clrf	fsr1h,c
  4544  001646  0E01               	movlw	high _currentPos
  4545  001648  22E2               	addwfc	fsr1h,f,c
  4546  00164A  CFDF FFE7          	movff	indf2,indf1
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;servo.c: 349: sendProducedEvent(((8U + 4U*(io))+0U), (unsigned char)( ! (NV->io[io].fla
      +                          gs & 0x40U)));
  4550  00164E  51C0               	movf	pollServos@io& (0+255),w,b
  4551  001650  0D07               	mullw	7
  4552  001652  C0EC  F0B5         	movff	_NV,??_pollServos
  4553  001656  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4554  00165A  50F3               	movf	243,w,c
  4555  00165C  27B5               	addwf	??_pollServos& (0+255),f,b
  4556  00165E  50F4               	movf	244,w,c
  4557  001660  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4558  001662  0E11               	movlw	17
  4559  001664  25B5               	addwf	??_pollServos& (0+255),w,b
  4560  001666  6ED9               	movwf	fsr2l,c
  4561  001668  0E00               	movlw	0
  4562  00166A  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4563  00166C  6EDA               	movwf	fsr2h,c
  4564  00166E  BCDF               	btfsc	indf2,6,c
  4565  001670  D002               	goto	u26030
  4566  001672  0E01               	movlw	1
  4567  001674  D001               	goto	u26040
  4568  001676                     u26030:
  4569  001676  0E00               	movlw	0
  4570  001678                     u26040:
  4571  001678  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4572  00167A  51C0               	movf	pollServos@io& (0+255),w,b
  4573  00167C  0D04               	mullw	4
  4574  00167E  50F3               	movf	243,w,c
  4575  001680  0F08               	addlw	8
  4576  001682  EC54  F03C         	call	_sendProducedEvent
  4577  001686  D70E               	goto	l20713
  4578  001688                     l20755:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;servo.c: 353: if (bounceDown(io)) {
  4582  001688  51C0               	movf	pollServos@io& (0+255),w,b
  4583  00168A  EC91  F01A         	call	_bounceDown
  4584  00168E  0900               	iorlw	0
  4585  001690  B4D8               	btfsc	status,2,c
  4586  001692  D3CB               	goto	l20867
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;servo.c: 354: servoState[io] = STOPPED;
  4590  001694  0E40               	movlw	low _servoState
  4591  001696  25C0               	addwf	pollServos@io& (0+255),w,b
  4592  001698  6ED9               	movwf	fsr2l,c
  4593  00169A  6ADA               	clrf	fsr2h,c
  4594  00169C  0E01               	movlw	high _servoState
  4595  00169E  22DA               	addwfc	fsr2h,f,c
  4596  0016A0  0E01               	movlw	1
  4597  0016A2  6EDF               	movwf	indf2,c
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;servo.c: 355: ticksWhenStopped[io].Val = tickGet();
  4601  0016A4  EC9D  F04B         	call	_tickGet	;wreg free
  4602  0016A8  51C0               	movf	pollServos@io& (0+255),w,b
  4603  0016AA  0D04               	mullw	4
  4604  0016AC  0E00               	movlw	low _ticksWhenStopped
  4605  0016AE  24F3               	addwf	243,w,c
  4606  0016B0  6ED9               	movwf	fsr2l,c
  4607  0016B2  0E02               	movlw	high _ticksWhenStopped
  4608  0016B4  20F4               	addwfc	prodh,w,c
  4609  0016B6  6EDA               	movwf	fsr2h,c
  4610  0016B8  C071  FFDE         	movff	?_tickGet,postinc2
  4611  0016BC  C072  FFDE         	movff	?_tickGet+1,postinc2
  4612  0016C0  C073  FFDE         	movff	?_tickGet+2,postinc2
  4613  0016C4  C074  FFDE         	movff	?_tickGet+3,postinc2
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;servo.c: 356: currentPos[io] = targetPos[io];
  4617  0016C8  0E70               	movlw	low _targetPos
  4618  0016CA  25C0               	addwf	pollServos@io& (0+255),w,b
  4619  0016CC  6ED9               	movwf	fsr2l,c
  4620  0016CE  6ADA               	clrf	fsr2h,c
  4621  0016D0  0E01               	movlw	high _targetPos
  4622  0016D2  22DA               	addwfc	fsr2h,f,c
  4623  0016D4  0E80               	movlw	low _currentPos
  4624  0016D6  25C0               	addwf	pollServos@io& (0+255),w,b
  4625  0016D8  6EE1               	movwf	fsr1l,c
  4626  0016DA  6AE2               	clrf	fsr1h,c
  4627  0016DC  0E01               	movlw	high _currentPos
  4628  0016DE  22E2               	addwfc	fsr1h,f,c
  4629  0016E0  CFDF FFE7          	movff	indf2,indf1
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;servo.c: 357: sendProducedEvent(((8U + 4U*(io))+0U), NV->io[io].flags & 0x40U);
  4633  0016E4  51C0               	movf	pollServos@io& (0+255),w,b
  4634  0016E6  0D07               	mullw	7
  4635  0016E8  C0EC  F0B5         	movff	_NV,??_pollServos
  4636  0016EC  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4637  0016F0  50F3               	movf	243,w,c
  4638  0016F2  27B5               	addwf	??_pollServos& (0+255),f,b
  4639  0016F4  50F4               	movf	244,w,c
  4640  0016F6  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4641  0016F8  0E11               	movlw	17
  4642  0016FA  25B5               	addwf	??_pollServos& (0+255),w,b
  4643  0016FC  6ED9               	movwf	fsr2l,c
  4644  0016FE  0E00               	movlw	0
  4645  001700  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4646  001702  6EDA               	movwf	fsr2h,c
  4647  001704  50DF               	movf	indf2,w,c
  4648  001706  0B40               	andlw	64
  4649  001708  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4650  00170A  51C0               	movf	pollServos@io& (0+255),w,b
  4651  00170C  0D04               	mullw	4
  4652  00170E  50F3               	movf	243,w,c
  4653  001710  0F08               	addlw	8
  4654  001712  EC54  F03C         	call	_sendProducedEvent
  4655  001716  D6C6               	goto	l20713
  4656  001718                     l20769:
  4657                           
  4658                           ; BSR set to: 0
  4659  001718  0E40               	movlw	low _servoState
  4660  00171A  25C0               	addwf	pollServos@io& (0+255),w,b
  4661  00171C  6ED9               	movwf	fsr2l,c
  4662  00171E  6ADA               	clrf	fsr2h,c
  4663  001720  0E01               	movlw	high _servoState
  4664  001722  22DA               	addwfc	fsr2h,f,c
  4665  001724  50DF               	movf	indf2,w,c
  4666                           
  4667                           ; Switch size 1, requested type "simple"
  4668                           ; Number of cases is 2, Range of values is 2 to 3
  4669                           ; switch strategies available:
  4670                           ; Name         Instructions Cycles
  4671                           ; simple_byte            7     4 (average)
  4672                           ;	Chosen strategy is simple_byte
  4673  001726  0A02               	xorlw	2	; case 2
  4674  001728  B4D8               	btfsc	status,2,c
  4675  00172A  D6F1               	goto	l20725
  4676  00172C  0A01               	xorlw	1	; case 3
  4677  00172E  B4D8               	btfsc	status,2,c
  4678  001730  D6DB               	goto	l20719
  4679  001732  D37B               	goto	l20867
  4680  001734                     l20771:
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;servo.c: 367: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos1) {
  4684  001734  51C0               	movf	pollServos@io& (0+255),w,b
  4685  001736  0D07               	mullw	7
  4686  001738  C0EC  F0B5         	movff	_NV,??_pollServos
  4687  00173C  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4688  001740  50F3               	movf	243,w,c
  4689  001742  27B5               	addwf	??_pollServos& (0+255),f,b
  4690  001744  50F4               	movf	244,w,c
  4691  001746  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4692  001748  0E13               	movlw	19
  4693  00174A  25B5               	addwf	??_pollServos& (0+255),w,b
  4694  00174C  6ED9               	movwf	fsr2l,c
  4695  00174E  0E00               	movlw	0
  4696  001750  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4697  001752  6EDA               	movwf	fsr2h,c
  4698  001754  0E80               	movlw	low _currentPos
  4699  001756  25C0               	addwf	pollServos@io& (0+255),w,b
  4700  001758  6EE1               	movwf	fsr1l,c
  4701  00175A  6AE2               	clrf	fsr1h,c
  4702  00175C  0E01               	movlw	high _currentPos
  4703  00175E  22E2               	addwfc	fsr1h,f,c
  4704  001760  50DE               	movf	postinc2,w,c
  4705  001762  18E6               	xorwf	postinc1,w,c
  4706  001764  A4D8               	btfss	status,2,c
  4707  001766  D019               	goto	l20775
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;servo.c: 368: sendProducedEvent(((8U + 4U*(io))+0U), NV->io[io].flags & 0x40U);
  4711  001768  51C0               	movf	pollServos@io& (0+255),w,b
  4712  00176A  0D07               	mullw	7
  4713  00176C  C0EC  F0B5         	movff	_NV,??_pollServos
  4714  001770  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4715  001774  50F3               	movf	243,w,c
  4716  001776  27B5               	addwf	??_pollServos& (0+255),f,b
  4717  001778  50F4               	movf	244,w,c
  4718  00177A  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4719  00177C  0E11               	movlw	17
  4720  00177E  25B5               	addwf	??_pollServos& (0+255),w,b
  4721  001780  6ED9               	movwf	fsr2l,c
  4722  001782  0E00               	movlw	0
  4723  001784  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4724  001786  6EDA               	movwf	fsr2h,c
  4725  001788  50DF               	movf	indf2,w,c
  4726  00178A  0B40               	andlw	64
  4727  00178C  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4728  00178E  51C0               	movf	pollServos@io& (0+255),w,b
  4729  001790  0D04               	mullw	4
  4730  001792  50F3               	movf	243,w,c
  4731  001794  0F08               	addlw	8
  4732  001796  EC54  F03C         	call	_sendProducedEvent
  4733  00179A                     l20775:
  4734                           
  4735                           ;servo.c: 369: };servo.c: 370: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos
      +                          2) {
  4736  00179A  0100               	movlb	0	; () banked
  4737  00179C  51C0               	movf	pollServos@io& (0+255),w,b
  4738  00179E  0D07               	mullw	7
  4739  0017A0  C0EC  F0B5         	movff	_NV,??_pollServos
  4740  0017A4  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4741  0017A8  50F3               	movf	243,w,c
  4742  0017AA  27B5               	addwf	??_pollServos& (0+255),f,b
  4743  0017AC  50F4               	movf	244,w,c
  4744  0017AE  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4745  0017B0  0E14               	movlw	20
  4746  0017B2  25B5               	addwf	??_pollServos& (0+255),w,b
  4747  0017B4  6ED9               	movwf	fsr2l,c
  4748  0017B6  0E00               	movlw	0
  4749  0017B8  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4750  0017BA  6EDA               	movwf	fsr2h,c
  4751  0017BC  0E80               	movlw	low _currentPos
  4752  0017BE  25C0               	addwf	pollServos@io& (0+255),w,b
  4753  0017C0  6EE1               	movwf	fsr1l,c
  4754  0017C2  6AE2               	clrf	fsr1h,c
  4755  0017C4  0E01               	movlw	high _currentPos
  4756  0017C6  22E2               	addwfc	fsr1h,f,c
  4757  0017C8  50DE               	movf	postinc2,w,c
  4758  0017CA  18E6               	xorwf	postinc1,w,c
  4759  0017CC  A4D8               	btfss	status,2,c
  4760  0017CE  D019               	goto	l20779
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;servo.c: 371: sendProducedEvent(((8U + 4U*(io))+1U), NV->io[io].flags & 0x40U);
  4764  0017D0  51C0               	movf	pollServos@io& (0+255),w,b
  4765  0017D2  0D07               	mullw	7
  4766  0017D4  C0EC  F0B5         	movff	_NV,??_pollServos
  4767  0017D8  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4768  0017DC  50F3               	movf	243,w,c
  4769  0017DE  27B5               	addwf	??_pollServos& (0+255),f,b
  4770  0017E0  50F4               	movf	244,w,c
  4771  0017E2  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4772  0017E4  0E11               	movlw	17
  4773  0017E6  25B5               	addwf	??_pollServos& (0+255),w,b
  4774  0017E8  6ED9               	movwf	fsr2l,c
  4775  0017EA  0E00               	movlw	0
  4776  0017EC  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4777  0017EE  6EDA               	movwf	fsr2h,c
  4778  0017F0  50DF               	movf	indf2,w,c
  4779  0017F2  0B40               	andlw	64
  4780  0017F4  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4781  0017F6  51C0               	movf	pollServos@io& (0+255),w,b
  4782  0017F8  0D04               	mullw	4
  4783  0017FA  50F3               	movf	243,w,c
  4784  0017FC  0F09               	addlw	9
  4785  0017FE  EC54  F03C         	call	_sendProducedEvent
  4786  001802                     l20779:
  4787                           
  4788                           ;servo.c: 372: };servo.c: 373: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos
      +                          3) {
  4789  001802  0100               	movlb	0	; () banked
  4790  001804  51C0               	movf	pollServos@io& (0+255),w,b
  4791  001806  0D07               	mullw	7
  4792  001808  C0EC  F0B5         	movff	_NV,??_pollServos
  4793  00180C  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4794  001810  50F3               	movf	243,w,c
  4795  001812  27B5               	addwf	??_pollServos& (0+255),f,b
  4796  001814  50F4               	movf	244,w,c
  4797  001816  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4798  001818  0E15               	movlw	21
  4799  00181A  25B5               	addwf	??_pollServos& (0+255),w,b
  4800  00181C  6ED9               	movwf	fsr2l,c
  4801  00181E  0E00               	movlw	0
  4802  001820  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4803  001822  6EDA               	movwf	fsr2h,c
  4804  001824  0E80               	movlw	low _currentPos
  4805  001826  25C0               	addwf	pollServos@io& (0+255),w,b
  4806  001828  6EE1               	movwf	fsr1l,c
  4807  00182A  6AE2               	clrf	fsr1h,c
  4808  00182C  0E01               	movlw	high _currentPos
  4809  00182E  22E2               	addwfc	fsr1h,f,c
  4810  001830  50DE               	movf	postinc2,w,c
  4811  001832  18E6               	xorwf	postinc1,w,c
  4812  001834  A4D8               	btfss	status,2,c
  4813  001836  D019               	goto	l20783
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;servo.c: 374: sendProducedEvent(((8U + 4U*(io))+2U), NV->io[io].flags & 0x40U);
  4817  001838  51C0               	movf	pollServos@io& (0+255),w,b
  4818  00183A  0D07               	mullw	7
  4819  00183C  C0EC  F0B5         	movff	_NV,??_pollServos
  4820  001840  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4821  001844  50F3               	movf	243,w,c
  4822  001846  27B5               	addwf	??_pollServos& (0+255),f,b
  4823  001848  50F4               	movf	244,w,c
  4824  00184A  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4825  00184C  0E11               	movlw	17
  4826  00184E  25B5               	addwf	??_pollServos& (0+255),w,b
  4827  001850  6ED9               	movwf	fsr2l,c
  4828  001852  0E00               	movlw	0
  4829  001854  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4830  001856  6EDA               	movwf	fsr2h,c
  4831  001858  50DF               	movf	indf2,w,c
  4832  00185A  0B40               	andlw	64
  4833  00185C  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4834  00185E  51C0               	movf	pollServos@io& (0+255),w,b
  4835  001860  0D04               	mullw	4
  4836  001862  50F3               	movf	243,w,c
  4837  001864  0F0A               	addlw	10
  4838  001866  EC54  F03C         	call	_sendProducedEvent
  4839  00186A                     l20783:
  4840                           
  4841                           ;servo.c: 375: };servo.c: 376: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos
      +                          4) {
  4842  00186A  0100               	movlb	0	; () banked
  4843  00186C  51C0               	movf	pollServos@io& (0+255),w,b
  4844  00186E  0D07               	mullw	7
  4845  001870  C0EC  F0B5         	movff	_NV,??_pollServos
  4846  001874  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4847  001878  50F3               	movf	243,w,c
  4848  00187A  27B5               	addwf	??_pollServos& (0+255),f,b
  4849  00187C  50F4               	movf	244,w,c
  4850  00187E  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4851  001880  0E16               	movlw	22
  4852  001882  25B5               	addwf	??_pollServos& (0+255),w,b
  4853  001884  6ED9               	movwf	fsr2l,c
  4854  001886  0E00               	movlw	0
  4855  001888  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4856  00188A  6EDA               	movwf	fsr2h,c
  4857  00188C  0E80               	movlw	low _currentPos
  4858  00188E  25C0               	addwf	pollServos@io& (0+255),w,b
  4859  001890  6EE1               	movwf	fsr1l,c
  4860  001892  6AE2               	clrf	fsr1h,c
  4861  001894  0E01               	movlw	high _currentPos
  4862  001896  22E2               	addwfc	fsr1h,f,c
  4863  001898  50DE               	movf	postinc2,w,c
  4864  00189A  18E6               	xorwf	postinc1,w,c
  4865  00189C  A4D8               	btfss	status,2,c
  4866  00189E  D019               	goto	l20787
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;servo.c: 377: sendProducedEvent(((8U + 4U*(io))+3U), NV->io[io].flags & 0x40U);
  4870  0018A0  51C0               	movf	pollServos@io& (0+255),w,b
  4871  0018A2  0D07               	mullw	7
  4872  0018A4  C0EC  F0B5         	movff	_NV,??_pollServos
  4873  0018A8  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  4874  0018AC  50F3               	movf	243,w,c
  4875  0018AE  27B5               	addwf	??_pollServos& (0+255),f,b
  4876  0018B0  50F4               	movf	244,w,c
  4877  0018B2  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  4878  0018B4  0E11               	movlw	17
  4879  0018B6  25B5               	addwf	??_pollServos& (0+255),w,b
  4880  0018B8  6ED9               	movwf	fsr2l,c
  4881  0018BA  0E00               	movlw	0
  4882  0018BC  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  4883  0018BE  6EDA               	movwf	fsr2h,c
  4884  0018C0  50DF               	movf	indf2,w,c
  4885  0018C2  0B40               	andlw	64
  4886  0018C4  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  4887  0018C6  51C0               	movf	pollServos@io& (0+255),w,b
  4888  0018C8  0D04               	mullw	4
  4889  0018CA  50F3               	movf	243,w,c
  4890  0018CC  0F0B               	addlw	11
  4891  0018CE  EC54  F03C         	call	_sendProducedEvent
  4892  0018D2                     l20787:
  4893                           
  4894                           ;servo.c: 378: };servo.c: 379: servoState[io] = MOVING;
  4895  0018D2  0E40               	movlw	low _servoState
  4896  0018D4  0100               	movlb	0	; () banked
  4897  0018D6  25C0               	addwf	pollServos@io& (0+255),w,b
  4898  0018D8  6ED9               	movwf	fsr2l,c
  4899  0018DA  6ADA               	clrf	fsr2h,c
  4900  0018DC  0E01               	movlw	high _servoState
  4901  0018DE  22DA               	addwfc	fsr2h,f,c
  4902  0018E0  0E02               	movlw	2
  4903  0018E2  6EDF               	movwf	indf2,c
  4904  0018E4                     l20789:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;servo.c: 382: if (targetPos[io] > currentPos[io]) {
  4908  0018E4  0E70               	movlw	low _targetPos
  4909  0018E6  25C0               	addwf	pollServos@io& (0+255),w,b
  4910  0018E8  6ED9               	movwf	fsr2l,c
  4911  0018EA  6ADA               	clrf	fsr2h,c
  4912  0018EC  0E01               	movlw	high _targetPos
  4913  0018EE  22DA               	addwfc	fsr2h,f,c
  4914  0018F0  0E80               	movlw	low _currentPos
  4915  0018F2  25C0               	addwf	pollServos@io& (0+255),w,b
  4916  0018F4  6EE1               	movwf	fsr1l,c
  4917  0018F6  6AE2               	clrf	fsr1h,c
  4918  0018F8  0E01               	movlw	high _currentPos
  4919  0018FA  22E2               	addwfc	fsr1h,f,c
  4920  0018FC  50DE               	movf	postinc2,w,c
  4921  0018FE  5CE6               	subwf	postinc1,w,c
  4922  001900  B0D8               	btfsc	status,0,c
  4923  001902  D08F               	goto	l20809
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;servo.c: 383: if (stepsPerPollSpeed[io]) {
  4927  001904  0E30               	movlw	low _stepsPerPollSpeed
  4928  001906  25C0               	addwf	pollServos@io& (0+255),w,b
  4929  001908  6ED9               	movwf	fsr2l,c
  4930  00190A  6ADA               	clrf	fsr2h,c
  4931  00190C  0E01               	movlw	high _stepsPerPollSpeed
  4932  00190E  22DA               	addwfc	fsr2h,f,c
  4933  001910  50DF               	movf	indf2,w,c
  4934  001912  B4D8               	btfsc	status,2,c
  4935  001914  D042               	goto	l20799
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;servo.c: 384: if (currentPos[io] + stepsPerPollSpeed[io] < currentPos[io]) {
  4939  001916  0E80               	movlw	low _currentPos
  4940  001918  25C0               	addwf	pollServos@io& (0+255),w,b
  4941  00191A  6ED9               	movwf	fsr2l,c
  4942  00191C  6ADA               	clrf	fsr2h,c
  4943  00191E  0E01               	movlw	high _currentPos
  4944  001920  22DA               	addwfc	fsr2h,f,c
  4945  001922  50DF               	movf	indf2,w,c
  4946  001924  6FB5               	movwf	??_pollServos& (0+255),b
  4947  001926  6BB6               	clrf	(??_pollServos+1)& (0+255),b
  4948  001928  0E80               	movlw	low _currentPos
  4949  00192A  25C0               	addwf	pollServos@io& (0+255),w,b
  4950  00192C  6ED9               	movwf	fsr2l,c
  4951  00192E  6ADA               	clrf	fsr2h,c
  4952  001930  0E01               	movlw	high _currentPos
  4953  001932  22DA               	addwfc	fsr2h,f,c
  4954  001934  50DF               	movf	indf2,w,c
  4955  001936  6FB7               	movwf	(??_pollServos+2)& (0+255),b
  4956  001938  6BB8               	clrf	(??_pollServos+3)& (0+255),b
  4957  00193A  0E30               	movlw	low _stepsPerPollSpeed
  4958  00193C  25C0               	addwf	pollServos@io& (0+255),w,b
  4959  00193E  6ED9               	movwf	fsr2l,c
  4960  001940  6ADA               	clrf	fsr2h,c
  4961  001942  0E01               	movlw	high _stepsPerPollSpeed
  4962  001944  22DA               	addwfc	fsr2h,f,c
  4963  001946  50DF               	movf	indf2,w,c
  4964  001948  6FB9               	movwf	(??_pollServos+4)& (0+255),b
  4965  00194A  51B9               	movf	(??_pollServos+4)& (0+255),w,b
  4966  00194C  27B7               	addwf	(??_pollServos+2)& (0+255),f,b
  4967  00194E  0E00               	movlw	0
  4968  001950  23B8               	addwfc	(??_pollServos+3)& (0+255),f,b
  4969  001952  51B5               	movf	??_pollServos& (0+255),w,b
  4970  001954  5DB7               	subwf	(??_pollServos+2)& (0+255),w,b
  4971  001956  51B8               	movf	(??_pollServos+3)& (0+255),w,b
  4972  001958  0A80               	xorlw	128
  4973  00195A  6FBA               	movwf	(??_pollServos+5)& (0+255),b
  4974  00195C  51B6               	movf	(??_pollServos+1)& (0+255),w,b
  4975  00195E  0A80               	xorlw	128
  4976  001960  59BA               	subwfb	(??_pollServos+5)& (0+255),w,b
  4977  001962  B0D8               	btfsc	status,0,c
  4978  001964  D009               	goto	l20797
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;servo.c: 386: currentPos[io] =255;
  4982  001966  0E80               	movlw	low _currentPos
  4983  001968  25C0               	addwf	pollServos@io& (0+255),w,b
  4984  00196A  6ED9               	movwf	fsr2l,c
  4985  00196C  6ADA               	clrf	fsr2h,c
  4986  00196E  0E01               	movlw	high _currentPos
  4987  001970  22DA               	addwfc	fsr2h,f,c
  4988  001972  0EFF               	movlw	255
  4989  001974  6EDF               	movwf	indf2,c
  4990                           
  4991                           ;servo.c: 387: } else {
  4992  001976  D036               	goto	l20805
  4993  001978                     l20797:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;servo.c: 388: currentPos[io] += stepsPerPollSpeed[io];
  4997  001978  0E30               	movlw	low _stepsPerPollSpeed
  4998  00197A  25C0               	addwf	pollServos@io& (0+255),w,b
  4999  00197C  6ED9               	movwf	fsr2l,c
  5000  00197E  6ADA               	clrf	fsr2h,c
  5001  001980  0E01               	movlw	high _stepsPerPollSpeed
  5002  001982  22DA               	addwfc	fsr2h,f,c
  5003  001984  50DF               	movf	indf2,w,c
  5004  001986  6FB5               	movwf	??_pollServos& (0+255),b
  5005  001988  0E80               	movlw	low _currentPos
  5006  00198A  25C0               	addwf	pollServos@io& (0+255),w,b
  5007  00198C  6ED9               	movwf	fsr2l,c
  5008  00198E  6ADA               	clrf	fsr2h,c
  5009  001990  0E01               	movlw	high _currentPos
  5010  001992  22DA               	addwfc	fsr2h,f,c
  5011  001994  51B5               	movf	??_pollServos& (0+255),w,b
  5012  001996  26DF               	addwf	indf2,f,c
  5013  001998  D025               	goto	l20805
  5014  00199A                     l20799:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;servo.c: 391: pollCount[io]--;
  5018  00199A  0E20               	movlw	low _pollCount
  5019  00199C  25C0               	addwf	pollServos@io& (0+255),w,b
  5020  00199E  6ED9               	movwf	fsr2l,c
  5021  0019A0  6ADA               	clrf	fsr2h,c
  5022  0019A2  0E01               	movlw	high _pollCount
  5023  0019A4  22DA               	addwfc	fsr2h,f,c
  5024  0019A6  06DF               	decf	indf2,f,c
  5025                           
  5026                           ;servo.c: 392: if (pollCount[io] == 0) {
  5027  0019A8  0E20               	movlw	low _pollCount
  5028  0019AA  25C0               	addwf	pollServos@io& (0+255),w,b
  5029  0019AC  6ED9               	movwf	fsr2l,c
  5030  0019AE  6ADA               	clrf	fsr2h,c
  5031  0019B0  0E01               	movlw	high _pollCount
  5032  0019B2  22DA               	addwfc	fsr2h,f,c
  5033  0019B4  50DF               	movf	indf2,w,c
  5034  0019B6  A4D8               	btfss	status,2,c
  5035  0019B8  D015               	goto	l20805
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;servo.c: 393: currentPos[io]++;
  5039  0019BA  0E80               	movlw	low _currentPos
  5040  0019BC  25C0               	addwf	pollServos@io& (0+255),w,b
  5041  0019BE  6ED9               	movwf	fsr2l,c
  5042  0019C0  6ADA               	clrf	fsr2h,c
  5043  0019C2  0E01               	movlw	high _currentPos
  5044  0019C4  22DA               	addwfc	fsr2h,f,c
  5045  0019C6  2ADF               	incf	indf2,f,c
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;servo.c: 394: pollCount[io] = pollsPerStepSpeed[io];
  5049  0019C8  0E74               	movlw	low _pollsPerStepSpeed
  5050  0019CA  25C0               	addwf	pollServos@io& (0+255),w,b
  5051  0019CC  6ED9               	movwf	fsr2l,c
  5052  0019CE  6ADA               	clrf	fsr2h,c
  5053  0019D0  0E02               	movlw	high _pollsPerStepSpeed
  5054  0019D2  22DA               	addwfc	fsr2h,f,c
  5055  0019D4  0E20               	movlw	low _pollCount
  5056  0019D6  25C0               	addwf	pollServos@io& (0+255),w,b
  5057  0019D8  6EE1               	movwf	fsr1l,c
  5058  0019DA  6AE2               	clrf	fsr1h,c
  5059  0019DC  0E01               	movlw	high _pollCount
  5060  0019DE  22E2               	addwfc	fsr1h,f,c
  5061  0019E0  CFDF FFE7          	movff	indf2,indf1
  5062  0019E4                     l20805:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;servo.c: 395: };servo.c: 396: };servo.c: 397: if (currentPos[io] > targetPos[io]) {
  5066  0019E4  0E80               	movlw	low _currentPos
  5067  0019E6  25C0               	addwf	pollServos@io& (0+255),w,b
  5068  0019E8  6ED9               	movwf	fsr2l,c
  5069  0019EA  6ADA               	clrf	fsr2h,c
  5070  0019EC  0E01               	movlw	high _currentPos
  5071  0019EE  22DA               	addwfc	fsr2h,f,c
  5072  0019F0  0E70               	movlw	low _targetPos
  5073  0019F2  25C0               	addwf	pollServos@io& (0+255),w,b
  5074  0019F4  6EE1               	movwf	fsr1l,c
  5075  0019F6  6AE2               	clrf	fsr1h,c
  5076  0019F8  0E01               	movlw	high _targetPos
  5077  0019FA  22E2               	addwfc	fsr1h,f,c
  5078  0019FC  50DE               	movf	postinc2,w,c
  5079  0019FE  5CE6               	subwf	postinc1,w,c
  5080  001A00  B0D8               	btfsc	status,0,c
  5081  001A02  D09F               	goto	l1292
  5082  001A04                     u26140:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;servo.c: 398: currentPos[io] = targetPos[io];
  5086  001A04  0E70               	movlw	low _targetPos
  5087  001A06  25C0               	addwf	pollServos@io& (0+255),w,b
  5088  001A08  6ED9               	movwf	fsr2l,c
  5089  001A0A  6ADA               	clrf	fsr2h,c
  5090  001A0C  0E01               	movlw	high _targetPos
  5091  001A0E  22DA               	addwfc	fsr2h,f,c
  5092  001A10  0E80               	movlw	low _currentPos
  5093  001A12  25C0               	addwf	pollServos@io& (0+255),w,b
  5094  001A14  6EE1               	movwf	fsr1l,c
  5095  001A16  6AE2               	clrf	fsr1h,c
  5096  001A18  0E01               	movlw	high _currentPos
  5097  001A1A  22E2               	addwfc	fsr1h,f,c
  5098  001A1C  CFDF FFE7          	movff	indf2,indf1
  5099  001A20  D090               	goto	l1292
  5100  001A22                     l20809:
  5101                           
  5102                           ; BSR set to: 0
  5103  001A22  0E80               	movlw	low _currentPos
  5104  001A24  25C0               	addwf	pollServos@io& (0+255),w,b
  5105  001A26  6ED9               	movwf	fsr2l,c
  5106  001A28  6ADA               	clrf	fsr2h,c
  5107  001A2A  0E01               	movlw	high _currentPos
  5108  001A2C  22DA               	addwfc	fsr2h,f,c
  5109  001A2E  0E70               	movlw	low _targetPos
  5110  001A30  25C0               	addwf	pollServos@io& (0+255),w,b
  5111  001A32  6EE1               	movwf	fsr1l,c
  5112  001A34  6AE2               	clrf	fsr1h,c
  5113  001A36  0E01               	movlw	high _targetPos
  5114  001A38  22E2               	addwfc	fsr1h,f,c
  5115  001A3A  50DE               	movf	postinc2,w,c
  5116  001A3C  5CE6               	subwf	postinc1,w,c
  5117  001A3E  B0D8               	btfsc	status,0,c
  5118  001A40  D080               	goto	l1292
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;servo.c: 402: if (stepsPerPollSpeed[io]) {
  5122  001A42  0E30               	movlw	low _stepsPerPollSpeed
  5123  001A44  25C0               	addwf	pollServos@io& (0+255),w,b
  5124  001A46  6ED9               	movwf	fsr2l,c
  5125  001A48  6ADA               	clrf	fsr2h,c
  5126  001A4A  0E01               	movlw	high _stepsPerPollSpeed
  5127  001A4C  22DA               	addwfc	fsr2h,f,c
  5128  001A4E  50DF               	movf	indf2,w,c
  5129  001A50  B4D8               	btfsc	status,2,c
  5130  001A52  D042               	goto	l20819
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;servo.c: 403: if (currentPos[io] - stepsPerPollSpeed[io] > currentPos[io]) {
  5134  001A54  0E80               	movlw	low _currentPos
  5135  001A56  25C0               	addwf	pollServos@io& (0+255),w,b
  5136  001A58  6ED9               	movwf	fsr2l,c
  5137  001A5A  6ADA               	clrf	fsr2h,c
  5138  001A5C  0E01               	movlw	high _currentPos
  5139  001A5E  22DA               	addwfc	fsr2h,f,c
  5140  001A60  50DF               	movf	indf2,w,c
  5141  001A62  6FB5               	movwf	??_pollServos& (0+255),b
  5142  001A64  6BB6               	clrf	(??_pollServos+1)& (0+255),b
  5143  001A66  0E30               	movlw	low _stepsPerPollSpeed
  5144  001A68  25C0               	addwf	pollServos@io& (0+255),w,b
  5145  001A6A  6ED9               	movwf	fsr2l,c
  5146  001A6C  6ADA               	clrf	fsr2h,c
  5147  001A6E  0E01               	movlw	high _stepsPerPollSpeed
  5148  001A70  22DA               	addwfc	fsr2h,f,c
  5149  001A72  50DF               	movf	indf2,w,c
  5150  001A74  6FB7               	movwf	(??_pollServos+2)& (0+255),b
  5151  001A76  51B7               	movf	(??_pollServos+2)& (0+255),w,b
  5152  001A78  5FB5               	subwf	??_pollServos& (0+255),f,b
  5153  001A7A  0E00               	movlw	0
  5154  001A7C  5BB6               	subwfb	(??_pollServos+1)& (0+255),f,b
  5155  001A7E  0E80               	movlw	low _currentPos
  5156  001A80  25C0               	addwf	pollServos@io& (0+255),w,b
  5157  001A82  6ED9               	movwf	fsr2l,c
  5158  001A84  6ADA               	clrf	fsr2h,c
  5159  001A86  0E01               	movlw	high _currentPos
  5160  001A88  22DA               	addwfc	fsr2h,f,c
  5161  001A8A  50DF               	movf	indf2,w,c
  5162  001A8C  6FB8               	movwf	(??_pollServos+3)& (0+255),b
  5163  001A8E  6BB9               	clrf	(??_pollServos+4)& (0+255),b
  5164  001A90  51B5               	movf	??_pollServos& (0+255),w,b
  5165  001A92  5DB8               	subwf	(??_pollServos+3)& (0+255),w,b
  5166  001A94  51B9               	movf	(??_pollServos+4)& (0+255),w,b
  5167  001A96  0A80               	xorlw	128
  5168  001A98  6FBA               	movwf	(??_pollServos+5)& (0+255),b
  5169  001A9A  51B6               	movf	(??_pollServos+1)& (0+255),w,b
  5170  001A9C  0A80               	xorlw	128
  5171  001A9E  59BA               	subwfb	(??_pollServos+5)& (0+255),w,b
  5172  001AA0  B0D8               	btfsc	status,0,c
  5173  001AA2  D009               	goto	l20817
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;servo.c: 405: currentPos[io] = 0;
  5177  001AA4  0E80               	movlw	low _currentPos
  5178  001AA6  25C0               	addwf	pollServos@io& (0+255),w,b
  5179  001AA8  6ED9               	movwf	fsr2l,c
  5180  001AAA  6ADA               	clrf	fsr2h,c
  5181  001AAC  0E01               	movlw	high _currentPos
  5182  001AAE  22DA               	addwfc	fsr2h,f,c
  5183  001AB0  0E00               	movlw	0
  5184  001AB2  6EDF               	movwf	indf2,c
  5185                           
  5186                           ;servo.c: 406: } else {
  5187  001AB4  D036               	goto	l20825
  5188  001AB6                     l20817:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;servo.c: 407: currentPos[io] -= stepsPerPollSpeed[io];
  5192  001AB6  0E30               	movlw	low _stepsPerPollSpeed
  5193  001AB8  25C0               	addwf	pollServos@io& (0+255),w,b
  5194  001ABA  6ED9               	movwf	fsr2l,c
  5195  001ABC  6ADA               	clrf	fsr2h,c
  5196  001ABE  0E01               	movlw	high _stepsPerPollSpeed
  5197  001AC0  22DA               	addwfc	fsr2h,f,c
  5198  001AC2  50DF               	movf	indf2,w,c
  5199  001AC4  6FB5               	movwf	??_pollServos& (0+255),b
  5200  001AC6  0E80               	movlw	low _currentPos
  5201  001AC8  25C0               	addwf	pollServos@io& (0+255),w,b
  5202  001ACA  6ED9               	movwf	fsr2l,c
  5203  001ACC  6ADA               	clrf	fsr2h,c
  5204  001ACE  0E01               	movlw	high _currentPos
  5205  001AD0  22DA               	addwfc	fsr2h,f,c
  5206  001AD2  51B5               	movf	??_pollServos& (0+255),w,b
  5207  001AD4  5EDF               	subwf	indf2,f,c
  5208  001AD6  D025               	goto	l20825
  5209  001AD8                     l20819:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;servo.c: 410: pollCount[io]--;
  5213  001AD8  0E20               	movlw	low _pollCount
  5214  001ADA  25C0               	addwf	pollServos@io& (0+255),w,b
  5215  001ADC  6ED9               	movwf	fsr2l,c
  5216  001ADE  6ADA               	clrf	fsr2h,c
  5217  001AE0  0E01               	movlw	high _pollCount
  5218  001AE2  22DA               	addwfc	fsr2h,f,c
  5219  001AE4  06DF               	decf	indf2,f,c
  5220                           
  5221                           ;servo.c: 411: if (pollCount[io] == 0) {
  5222  001AE6  0E20               	movlw	low _pollCount
  5223  001AE8  25C0               	addwf	pollServos@io& (0+255),w,b
  5224  001AEA  6ED9               	movwf	fsr2l,c
  5225  001AEC  6ADA               	clrf	fsr2h,c
  5226  001AEE  0E01               	movlw	high _pollCount
  5227  001AF0  22DA               	addwfc	fsr2h,f,c
  5228  001AF2  50DF               	movf	indf2,w,c
  5229  001AF4  A4D8               	btfss	status,2,c
  5230  001AF6  D015               	goto	l20825
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;servo.c: 412: currentPos[io]--;
  5234  001AF8  0E80               	movlw	low _currentPos
  5235  001AFA  25C0               	addwf	pollServos@io& (0+255),w,b
  5236  001AFC  6ED9               	movwf	fsr2l,c
  5237  001AFE  6ADA               	clrf	fsr2h,c
  5238  001B00  0E01               	movlw	high _currentPos
  5239  001B02  22DA               	addwfc	fsr2h,f,c
  5240  001B04  06DF               	decf	indf2,f,c
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;servo.c: 413: pollCount[io] = pollsPerStepSpeed[io];
  5244  001B06  0E74               	movlw	low _pollsPerStepSpeed
  5245  001B08  25C0               	addwf	pollServos@io& (0+255),w,b
  5246  001B0A  6ED9               	movwf	fsr2l,c
  5247  001B0C  6ADA               	clrf	fsr2h,c
  5248  001B0E  0E02               	movlw	high _pollsPerStepSpeed
  5249  001B10  22DA               	addwfc	fsr2h,f,c
  5250  001B12  0E20               	movlw	low _pollCount
  5251  001B14  25C0               	addwf	pollServos@io& (0+255),w,b
  5252  001B16  6EE1               	movwf	fsr1l,c
  5253  001B18  6AE2               	clrf	fsr1h,c
  5254  001B1A  0E01               	movlw	high _pollCount
  5255  001B1C  22E2               	addwfc	fsr1h,f,c
  5256  001B1E  CFDF FFE7          	movff	indf2,indf1
  5257  001B22                     l20825:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;servo.c: 414: };servo.c: 415: };servo.c: 416: if (currentPos[io] < targetPos[io]) {
  5261  001B22  0E70               	movlw	low _targetPos
  5262  001B24  25C0               	addwf	pollServos@io& (0+255),w,b
  5263  001B26  6ED9               	movwf	fsr2l,c
  5264  001B28  6ADA               	clrf	fsr2h,c
  5265  001B2A  0E01               	movlw	high _targetPos
  5266  001B2C  22DA               	addwfc	fsr2h,f,c
  5267  001B2E  0E80               	movlw	low _currentPos
  5268  001B30  25C0               	addwf	pollServos@io& (0+255),w,b
  5269  001B32  6EE1               	movwf	fsr1l,c
  5270  001B34  6AE2               	clrf	fsr1h,c
  5271  001B36  0E01               	movlw	high _currentPos
  5272  001B38  22E2               	addwfc	fsr1h,f,c
  5273  001B3A  50DE               	movf	postinc2,w,c
  5274  001B3C  5CE6               	subwf	postinc1,w,c
  5275  001B3E  A0D8               	btfss	status,0,c
  5276  001B40  D761               	goto	u26140
  5277  001B42                     l1292:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;servo.c: 418: };servo.c: 419: };servo.c: 420: if (targetPos[io] == currentPos[io]) {
  5281  001B42  0E80               	movlw	low _currentPos
  5282  001B44  25C0               	addwf	pollServos@io& (0+255),w,b
  5283  001B46  6ED9               	movwf	fsr2l,c
  5284  001B48  6ADA               	clrf	fsr2h,c
  5285  001B4A  0E01               	movlw	high _currentPos
  5286  001B4C  22DA               	addwfc	fsr2h,f,c
  5287  001B4E  0E70               	movlw	low _targetPos
  5288  001B50  25C0               	addwf	pollServos@io& (0+255),w,b
  5289  001B52  6EE1               	movwf	fsr1l,c
  5290  001B54  6AE2               	clrf	fsr1h,c
  5291  001B56  0E01               	movlw	high _targetPos
  5292  001B58  22E2               	addwfc	fsr1h,f,c
  5293  001B5A  50DE               	movf	postinc2,w,c
  5294  001B5C  18E6               	xorwf	postinc1,w,c
  5295  001B5E  A4D8               	btfss	status,2,c
  5296  001B60  D164               	goto	l20867
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;servo.c: 421: servoState[io] = STOPPED;
  5300  001B62  0E40               	movlw	low _servoState
  5301  001B64  25C0               	addwf	pollServos@io& (0+255),w,b
  5302  001B66  6ED9               	movwf	fsr2l,c
  5303  001B68  6ADA               	clrf	fsr2h,c
  5304  001B6A  0E01               	movlw	high _servoState
  5305  001B6C  22DA               	addwfc	fsr2h,f,c
  5306  001B6E  0E01               	movlw	1
  5307  001B70  6EDF               	movwf	indf2,c
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;servo.c: 422: ticksWhenStopped[io].Val = tickGet();
  5311  001B72  EC9D  F04B         	call	_tickGet	;wreg free
  5312  001B76  51C0               	movf	pollServos@io& (0+255),w,b
  5313  001B78  0D04               	mullw	4
  5314  001B7A  0E00               	movlw	low _ticksWhenStopped
  5315  001B7C  24F3               	addwf	243,w,c
  5316  001B7E  6ED9               	movwf	fsr2l,c
  5317  001B80  0E02               	movlw	high _ticksWhenStopped
  5318  001B82  20F4               	addwfc	prodh,w,c
  5319  001B84  6EDA               	movwf	fsr2h,c
  5320  001B86  C071  FFDE         	movff	?_tickGet,postinc2
  5321  001B8A  C072  FFDE         	movff	?_tickGet+1,postinc2
  5322  001B8E  C073  FFDE         	movff	?_tickGet+2,postinc2
  5323  001B92  C074  FFDE         	movff	?_tickGet+3,postinc2
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;servo.c: 424: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos1) {
  5327  001B96  51C0               	movf	pollServos@io& (0+255),w,b
  5328  001B98  0D07               	mullw	7
  5329  001B9A  C0EC  F0B5         	movff	_NV,??_pollServos
  5330  001B9E  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5331  001BA2  50F3               	movf	243,w,c
  5332  001BA4  27B5               	addwf	??_pollServos& (0+255),f,b
  5333  001BA6  50F4               	movf	244,w,c
  5334  001BA8  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5335  001BAA  0E13               	movlw	19
  5336  001BAC  25B5               	addwf	??_pollServos& (0+255),w,b
  5337  001BAE  6ED9               	movwf	fsr2l,c
  5338  001BB0  0E00               	movlw	0
  5339  001BB2  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5340  001BB4  6EDA               	movwf	fsr2h,c
  5341  001BB6  0E80               	movlw	low _currentPos
  5342  001BB8  25C0               	addwf	pollServos@io& (0+255),w,b
  5343  001BBA  6EE1               	movwf	fsr1l,c
  5344  001BBC  6AE2               	clrf	fsr1h,c
  5345  001BBE  0E01               	movlw	high _currentPos
  5346  001BC0  22E2               	addwfc	fsr1h,f,c
  5347  001BC2  50DE               	movf	postinc2,w,c
  5348  001BC4  18E6               	xorwf	postinc1,w,c
  5349  001BC6  A4D8               	btfss	status,2,c
  5350  001BC8  D01C               	goto	l20837
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;servo.c: 425: sendProducedEvent(((8U + 4U*(io))+0U), (unsigned char)( !(NV->io[io].flag
      +                          s & 0x40U)));
  5354  001BCA  51C0               	movf	pollServos@io& (0+255),w,b
  5355  001BCC  0D07               	mullw	7
  5356  001BCE  C0EC  F0B5         	movff	_NV,??_pollServos
  5357  001BD2  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5358  001BD6  50F3               	movf	243,w,c
  5359  001BD8  27B5               	addwf	??_pollServos& (0+255),f,b
  5360  001BDA  50F4               	movf	244,w,c
  5361  001BDC  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5362  001BDE  0E11               	movlw	17
  5363  001BE0  25B5               	addwf	??_pollServos& (0+255),w,b
  5364  001BE2  6ED9               	movwf	fsr2l,c
  5365  001BE4  0E00               	movlw	0
  5366  001BE6  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5367  001BE8  6EDA               	movwf	fsr2h,c
  5368  001BEA  BCDF               	btfsc	indf2,6,c
  5369  001BEC  D002               	goto	u26220
  5370  001BEE  0E01               	movlw	1
  5371  001BF0  D001               	goto	u26230
  5372  001BF2                     u26220:
  5373  001BF2  0E00               	movlw	0
  5374  001BF4                     u26230:
  5375  001BF4  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  5376  001BF6  51C0               	movf	pollServos@io& (0+255),w,b
  5377  001BF8  0D04               	mullw	4
  5378  001BFA  50F3               	movf	243,w,c
  5379  001BFC  0F08               	addlw	8
  5380  001BFE  EC54  F03C         	call	_sendProducedEvent
  5381  001C02                     l20837:
  5382                           
  5383                           ;servo.c: 426: };servo.c: 427: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos
      +                          2) {
  5384  001C02  0100               	movlb	0	; () banked
  5385  001C04  51C0               	movf	pollServos@io& (0+255),w,b
  5386  001C06  0D07               	mullw	7
  5387  001C08  C0EC  F0B5         	movff	_NV,??_pollServos
  5388  001C0C  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5389  001C10  50F3               	movf	243,w,c
  5390  001C12  27B5               	addwf	??_pollServos& (0+255),f,b
  5391  001C14  50F4               	movf	244,w,c
  5392  001C16  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5393  001C18  0E14               	movlw	20
  5394  001C1A  25B5               	addwf	??_pollServos& (0+255),w,b
  5395  001C1C  6ED9               	movwf	fsr2l,c
  5396  001C1E  0E00               	movlw	0
  5397  001C20  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5398  001C22  6EDA               	movwf	fsr2h,c
  5399  001C24  0E80               	movlw	low _currentPos
  5400  001C26  25C0               	addwf	pollServos@io& (0+255),w,b
  5401  001C28  6EE1               	movwf	fsr1l,c
  5402  001C2A  6AE2               	clrf	fsr1h,c
  5403  001C2C  0E01               	movlw	high _currentPos
  5404  001C2E  22E2               	addwfc	fsr1h,f,c
  5405  001C30  50DE               	movf	postinc2,w,c
  5406  001C32  18E6               	xorwf	postinc1,w,c
  5407  001C34  A4D8               	btfss	status,2,c
  5408  001C36  D01C               	goto	l20841
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;servo.c: 428: sendProducedEvent(((8U + 4U*(io))+1U), (unsigned char)( !(NV->io[io].flag
      +                          s & 0x40U)));
  5412  001C38  51C0               	movf	pollServos@io& (0+255),w,b
  5413  001C3A  0D07               	mullw	7
  5414  001C3C  C0EC  F0B5         	movff	_NV,??_pollServos
  5415  001C40  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5416  001C44  50F3               	movf	243,w,c
  5417  001C46  27B5               	addwf	??_pollServos& (0+255),f,b
  5418  001C48  50F4               	movf	244,w,c
  5419  001C4A  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5420  001C4C  0E11               	movlw	17
  5421  001C4E  25B5               	addwf	??_pollServos& (0+255),w,b
  5422  001C50  6ED9               	movwf	fsr2l,c
  5423  001C52  0E00               	movlw	0
  5424  001C54  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5425  001C56  6EDA               	movwf	fsr2h,c
  5426  001C58  BCDF               	btfsc	indf2,6,c
  5427  001C5A  D002               	goto	u26250
  5428  001C5C  0E01               	movlw	1
  5429  001C5E  D001               	goto	u26260
  5430  001C60                     u26250:
  5431  001C60  0E00               	movlw	0
  5432  001C62                     u26260:
  5433  001C62  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  5434  001C64  51C0               	movf	pollServos@io& (0+255),w,b
  5435  001C66  0D04               	mullw	4
  5436  001C68  50F3               	movf	243,w,c
  5437  001C6A  0F09               	addlw	9
  5438  001C6C  EC54  F03C         	call	_sendProducedEvent
  5439  001C70                     l20841:
  5440                           
  5441                           ;servo.c: 429: };servo.c: 430: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos
      +                          3) {
  5442  001C70  0100               	movlb	0	; () banked
  5443  001C72  51C0               	movf	pollServos@io& (0+255),w,b
  5444  001C74  0D07               	mullw	7
  5445  001C76  C0EC  F0B5         	movff	_NV,??_pollServos
  5446  001C7A  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5447  001C7E  50F3               	movf	243,w,c
  5448  001C80  27B5               	addwf	??_pollServos& (0+255),f,b
  5449  001C82  50F4               	movf	244,w,c
  5450  001C84  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5451  001C86  0E15               	movlw	21
  5452  001C88  25B5               	addwf	??_pollServos& (0+255),w,b
  5453  001C8A  6ED9               	movwf	fsr2l,c
  5454  001C8C  0E00               	movlw	0
  5455  001C8E  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5456  001C90  6EDA               	movwf	fsr2h,c
  5457  001C92  0E80               	movlw	low _currentPos
  5458  001C94  25C0               	addwf	pollServos@io& (0+255),w,b
  5459  001C96  6EE1               	movwf	fsr1l,c
  5460  001C98  6AE2               	clrf	fsr1h,c
  5461  001C9A  0E01               	movlw	high _currentPos
  5462  001C9C  22E2               	addwfc	fsr1h,f,c
  5463  001C9E  50DE               	movf	postinc2,w,c
  5464  001CA0  18E6               	xorwf	postinc1,w,c
  5465  001CA2  A4D8               	btfss	status,2,c
  5466  001CA4  D01C               	goto	l20845
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;servo.c: 431: sendProducedEvent(((8U + 4U*(io))+2U), (unsigned char)( !(NV->io[io].flag
      +                          s & 0x40U)));
  5470  001CA6  51C0               	movf	pollServos@io& (0+255),w,b
  5471  001CA8  0D07               	mullw	7
  5472  001CAA  C0EC  F0B5         	movff	_NV,??_pollServos
  5473  001CAE  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5474  001CB2  50F3               	movf	243,w,c
  5475  001CB4  27B5               	addwf	??_pollServos& (0+255),f,b
  5476  001CB6  50F4               	movf	244,w,c
  5477  001CB8  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5478  001CBA  0E11               	movlw	17
  5479  001CBC  25B5               	addwf	??_pollServos& (0+255),w,b
  5480  001CBE  6ED9               	movwf	fsr2l,c
  5481  001CC0  0E00               	movlw	0
  5482  001CC2  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5483  001CC4  6EDA               	movwf	fsr2h,c
  5484  001CC6  BCDF               	btfsc	indf2,6,c
  5485  001CC8  D002               	goto	u26280
  5486  001CCA  0E01               	movlw	1
  5487  001CCC  D001               	goto	u26290
  5488  001CCE                     u26280:
  5489  001CCE  0E00               	movlw	0
  5490  001CD0                     u26290:
  5491  001CD0  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  5492  001CD2  51C0               	movf	pollServos@io& (0+255),w,b
  5493  001CD4  0D04               	mullw	4
  5494  001CD6  50F3               	movf	243,w,c
  5495  001CD8  0F0A               	addlw	10
  5496  001CDA  EC54  F03C         	call	_sendProducedEvent
  5497  001CDE                     l20845:
  5498                           
  5499                           ;servo.c: 432: };servo.c: 433: if (currentPos[io] == NV->io[io].nv_io.nv_multi.multi_pos
      +                          4) {
  5500  001CDE  0100               	movlb	0	; () banked
  5501  001CE0  51C0               	movf	pollServos@io& (0+255),w,b
  5502  001CE2  0D07               	mullw	7
  5503  001CE4  C0EC  F0B5         	movff	_NV,??_pollServos
  5504  001CE8  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5505  001CEC  50F3               	movf	243,w,c
  5506  001CEE  27B5               	addwf	??_pollServos& (0+255),f,b
  5507  001CF0  50F4               	movf	244,w,c
  5508  001CF2  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5509  001CF4  0E16               	movlw	22
  5510  001CF6  25B5               	addwf	??_pollServos& (0+255),w,b
  5511  001CF8  6ED9               	movwf	fsr2l,c
  5512  001CFA  0E00               	movlw	0
  5513  001CFC  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5514  001CFE  6EDA               	movwf	fsr2h,c
  5515  001D00  0E80               	movlw	low _currentPos
  5516  001D02  25C0               	addwf	pollServos@io& (0+255),w,b
  5517  001D04  6EE1               	movwf	fsr1l,c
  5518  001D06  6AE2               	clrf	fsr1h,c
  5519  001D08  0E01               	movlw	high _currentPos
  5520  001D0A  22E2               	addwfc	fsr1h,f,c
  5521  001D0C  50DE               	movf	postinc2,w,c
  5522  001D0E  18E6               	xorwf	postinc1,w,c
  5523  001D10  A4D8               	btfss	status,2,c
  5524  001D12  EF52  F00A         	goto	l20713
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;servo.c: 434: sendProducedEvent(((8U + 4U*(io))+3U), (unsigned char)( !(NV->io[io].flag
      +                          s & 0x40U)));
  5528  001D16  51C0               	movf	pollServos@io& (0+255),w,b
  5529  001D18  0D07               	mullw	7
  5530  001D1A  C0EC  F0B5         	movff	_NV,??_pollServos
  5531  001D1E  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5532  001D22  50F3               	movf	243,w,c
  5533  001D24  27B5               	addwf	??_pollServos& (0+255),f,b
  5534  001D26  50F4               	movf	244,w,c
  5535  001D28  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5536  001D2A  0E11               	movlw	17
  5537  001D2C  25B5               	addwf	??_pollServos& (0+255),w,b
  5538  001D2E  6ED9               	movwf	fsr2l,c
  5539  001D30  0E00               	movlw	0
  5540  001D32  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5541  001D34  6EDA               	movwf	fsr2h,c
  5542  001D36  BCDF               	btfsc	indf2,6,c
  5543  001D38  D002               	goto	u26310
  5544  001D3A  0E01               	movlw	1
  5545  001D3C  D001               	goto	u26320
  5546  001D3E                     u26310:
  5547  001D3E  0E00               	movlw	0
  5548  001D40                     u26320:
  5549  001D40  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  5550  001D42  51C0               	movf	pollServos@io& (0+255),w,b
  5551  001D44  0D04               	mullw	4
  5552  001D46  50F3               	movf	243,w,c
  5553  001D48  0F0B               	addlw	11
  5554  001D4A  EC54  F03C         	call	_sendProducedEvent
  5555  001D4E  EF52  F00A         	goto	l20713
  5556  001D52                     l20853:
  5557                           
  5558                           ; BSR set to: 0
  5559  001D52  0E40               	movlw	low _servoState
  5560  001D54  25C0               	addwf	pollServos@io& (0+255),w,b
  5561  001D56  6ED9               	movwf	fsr2l,c
  5562  001D58  6ADA               	clrf	fsr2h,c
  5563  001D5A  0E01               	movlw	high _servoState
  5564  001D5C  22DA               	addwfc	fsr2h,f,c
  5565  001D5E  50DF               	movf	indf2,w,c
  5566                           
  5567                           ; Switch size 1, requested type "simple"
  5568                           ; Number of cases is 2, Range of values is 2 to 3
  5569                           ; switch strategies available:
  5570                           ; Name         Instructions Cycles
  5571                           ; simple_byte            7     4 (average)
  5572                           ;	Chosen strategy is simple_byte
  5573  001D60  0A02               	xorlw	2	; case 2
  5574  001D62  B4D8               	btfsc	status,2,c
  5575  001D64  D5BF               	goto	l20789
  5576  001D66  0A01               	xorlw	1	; case 3
  5577  001D68  B4D8               	btfsc	status,2,c
  5578  001D6A  D4E4               	goto	l20771
  5579  001D6C  D05E               	goto	l20867
  5580  001D6E                     l20857:
  5581                           
  5582                           ; BSR set to: 0
  5583  001D6E  51C0               	movf	pollServos@io& (0+255),w,b
  5584  001D70  0D07               	mullw	7
  5585  001D72  C0EC  F0B5         	movff	_NV,??_pollServos
  5586  001D76  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5587  001D7A  50F3               	movf	243,w,c
  5588  001D7C  27B5               	addwf	??_pollServos& (0+255),f,b
  5589  001D7E  50F4               	movf	244,w,c
  5590  001D80  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5591  001D82  0E10               	movlw	16
  5592  001D84  25B5               	addwf	??_pollServos& (0+255),w,b
  5593  001D86  6ED9               	movwf	fsr2l,c
  5594  001D88  0E00               	movlw	0
  5595  001D8A  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5596  001D8C  6EDA               	movwf	fsr2h,c
  5597  001D8E  50DF               	movf	indf2,w,c
  5598                           
  5599                           ; Switch size 1, requested type "simple"
  5600                           ; Number of cases is 3, Range of values is 2 to 4
  5601                           ; switch strategies available:
  5602                           ; Name         Instructions Cycles
  5603                           ; simple_byte           10     6 (average)
  5604                           ;	Chosen strategy is simple_byte
  5605  001D90  0A02               	xorlw	2	; case 2
  5606  001D92  B4D8               	btfsc	status,2,c
  5607  001D94  EFAC  F007         	goto	l20629
  5608  001D98  0A01               	xorlw	1	; case 3
  5609  001D9A  B4D8               	btfsc	status,2,c
  5610  001D9C  D4BD               	goto	l20769
  5611  001D9E  0A07               	xorlw	7	; case 4
  5612  001DA0  B4D8               	btfsc	status,2,c
  5613  001DA2  D7D7               	goto	l20853
  5614  001DA4  D04F               	goto	l20869
  5615  001DA6                     l20859:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;servo.c: 448: if (NV->io[io].flags & 0x02U) {
  5619  001DA6  51C0               	movf	pollServos@io& (0+255),w,b
  5620  001DA8  0D07               	mullw	7
  5621  001DAA  C0EC  F0B5         	movff	_NV,??_pollServos
  5622  001DAE  C0ED  F0B6         	movff	_NV+1,??_pollServos+1
  5623  001DB2  50F3               	movf	243,w,c
  5624  001DB4  27B5               	addwf	??_pollServos& (0+255),f,b
  5625  001DB6  50F4               	movf	244,w,c
  5626  001DB8  23B6               	addwfc	(??_pollServos+1)& (0+255),f,b
  5627  001DBA  0E11               	movlw	17
  5628  001DBC  25B5               	addwf	??_pollServos& (0+255),w,b
  5629  001DBE  6ED9               	movwf	fsr2l,c
  5630  001DC0  0E00               	movlw	0
  5631  001DC2  21B6               	addwfc	(??_pollServos+1)& (0+255),w,b
  5632  001DC4  6EDA               	movwf	fsr2h,c
  5633  001DC6  A2DF               	btfss	indf2,1,c
  5634  001DC8  D03D               	goto	l20869
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;servo.c: 449: if ((tickGet() - ticksWhenStopped[io].Val) > 62500) {
  5638  001DCA  51C0               	movf	pollServos@io& (0+255),w,b
  5639  001DCC  0D04               	mullw	4
  5640  001DCE  0E00               	movlw	low _ticksWhenStopped
  5641  001DD0  24F3               	addwf	243,w,c
  5642  001DD2  6ED9               	movwf	fsr2l,c
  5643  001DD4  0E02               	movlw	high _ticksWhenStopped
  5644  001DD6  20F4               	addwfc	prodh,w,c
  5645  001DD8  6EDA               	movwf	fsr2h,c
  5646  001DDA  CFDE F0B5          	movff	postinc2,??_pollServos
  5647  001DDE  CFDE F0B6          	movff	postinc2,??_pollServos+1
  5648  001DE2  CFDE F0B7          	movff	postinc2,??_pollServos+2
  5649  001DE6  CFDE F0B8          	movff	postinc2,??_pollServos+3
  5650  001DEA  EC9D  F04B         	call	_tickGet	;wreg free
  5651  001DEE  51B5               	movf	??_pollServos& (0+255),w,b
  5652  001DF0  5D71               	subwf	?_tickGet& (0+255),w,b
  5653  001DF2  6FB9               	movwf	(??_pollServos+4)& (0+255),b
  5654  001DF4  51B6               	movf	(??_pollServos+1)& (0+255),w,b
  5655  001DF6  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  5656  001DF8  6FBA               	movwf	(??_pollServos+5)& (0+255),b
  5657  001DFA  51B7               	movf	(??_pollServos+2)& (0+255),w,b
  5658  001DFC  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  5659  001DFE  6FBB               	movwf	(??_pollServos+6)& (0+255),b
  5660  001E00  51B8               	movf	(??_pollServos+3)& (0+255),w,b
  5661  001E02  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  5662  001E04  6FBC               	movwf	(??_pollServos+7)& (0+255),b
  5663  001E06  51BC               	movf	(??_pollServos+7)& (0+255),w,b
  5664  001E08  11BB               	iorwf	(??_pollServos+6)& (0+255),w,b
  5665  001E0A  E106               	bnz	u26340
  5666  001E0C  0E25               	movlw	37
  5667  001E0E  5DB9               	subwf	(??_pollServos+4)& (0+255),w,b
  5668  001E10  0EF4               	movlw	244
  5669  001E12  59BA               	subwfb	(??_pollServos+5)& (0+255),w,b
  5670  001E14  A0D8               	btfss	status,0,c
  5671  001E16  D016               	goto	l20869
  5672  001E18                     u26340:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;servo.c: 450: servoState[io] = OFF;
  5676  001E18  0E40               	movlw	low _servoState
  5677  001E1A  25C0               	addwf	pollServos@io& (0+255),w,b
  5678  001E1C  6ED9               	movwf	fsr2l,c
  5679  001E1E  6ADA               	clrf	fsr2h,c
  5680  001E20  0E01               	movlw	high _servoState
  5681  001E22  22DA               	addwfc	fsr2h,f,c
  5682  001E24  0E00               	movlw	0
  5683  001E26  6EDF               	movwf	indf2,c
  5684  001E28  D00D               	goto	l20869
  5685  001E2A                     l20867:
  5686                           
  5687                           ; BSR set to: 0
  5688  001E2A  0E40               	movlw	low _servoState
  5689  001E2C  25C0               	addwf	pollServos@io& (0+255),w,b
  5690  001E2E  6ED9               	movwf	fsr2l,c
  5691  001E30  6ADA               	clrf	fsr2h,c
  5692  001E32  0E01               	movlw	high _servoState
  5693  001E34  22DA               	addwfc	fsr2h,f,c
  5694  001E36  50DF               	movf	indf2,w,c
  5695                           
  5696                           ; Switch size 1, requested type "simple"
  5697                           ; Number of cases is 2, Range of values is 0 to 1
  5698                           ; switch strategies available:
  5699                           ; Name         Instructions Cycles
  5700                           ; simple_byte            7     4 (average)
  5701                           ;	Chosen strategy is simple_byte
  5702  001E38  0A00               	xorlw	0	; case 0
  5703  001E3A  B4D8               	btfsc	status,2,c
  5704  001E3C  D003               	goto	l20869
  5705  001E3E  0A01               	xorlw	1	; case 1
  5706  001E40  B4D8               	btfsc	status,2,c
  5707  001E42  D7B1               	goto	l20859
  5708  001E44                     l20869:
  5709                           
  5710                           ; BSR set to: 0
  5711  001E44  2BC0               	incf	pollServos@io& (0+255),f,b
  5712                           
  5713                           ; BSR set to: 0
  5714  001E46  0E0F               	movlw	15
  5715  001E48  65C0               	cpfsgt	pollServos@io& (0+255),b
  5716  001E4A  D791               	goto	l20857
  5717  001E4C  0012               	return	
  5718  001E4E                     __end_of_pollServos:
  5719                           	callstack 0
  5720                           
  5721 ;; *************** function _initBounce *****************
  5722 ;; Defined at:
  5723 ;;		line 91 in file "../../github/CANMIOfirmware/bounce.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  io              1    wreg     unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  io              1   17[BANK0 ] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5732 ;; Tracked objects:
  5733 ;;		On entry : 3F/0
  5734 ;;		On exit  : 3F/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;Total ram usage:        1 bytes
  5742 ;; Hardware stack levels used: 1
  5743 ;; Hardware stack levels required when called: 8
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_pollServos
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text5
  5752  00A250                     __ptext5:
  5753                           	callstack 0
  5754  00A250                     _initBounce:
  5755                           	callstack 20
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;incstack = 0
  5759                           ;initBounce@io stored from wreg
  5760  00A250  6F71               	movwf	initBounce@io& (0+255),b
  5761                           
  5762                           ;bounce.c: 92: bounceState[io] = STATE_FIRST_PULL;
  5763  00A252  0EB4               	movlw	low _bounceState
  5764  00A254  0100               	movlb	0	; () banked
  5765  00A256  2571               	addwf	initBounce@io& (0+255),w,b
  5766  00A258  6ED9               	movwf	fsr2l,c
  5767  00A25A  6ADA               	clrf	fsr2h,c
  5768  00A25C  0E02               	movlw	high _bounceState
  5769  00A25E  22DA               	addwfc	fsr2h,f,c
  5770  00A260  0E00               	movlw	0
  5771  00A262  6EDF               	movwf	indf2,c
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;bounce.c: 93: speed[io] = 0;
  5775  00A264  5171               	movf	initBounce@io& (0+255),w,b
  5776  00A266  0D02               	mullw	2
  5777  00A268  0E00               	movlw	low _speed
  5778  00A26A  24F3               	addwf	243,w,c
  5779  00A26C  6ED9               	movwf	fsr2l,c
  5780  00A26E  0E01               	movlw	high _speed
  5781  00A270  20F4               	addwfc	prodh,w,c
  5782  00A272  6EDA               	movwf	fsr2h,c
  5783  00A274  0E00               	movlw	0
  5784  00A276  6EDE               	movwf	postinc2,c
  5785  00A278  0E00               	movlw	0
  5786  00A27A  6EDD               	movwf	postdec2,c
  5787                           
  5788                           ; BSR set to: 0
  5789  00A27C  0012               	return		;funcret
  5790  00A27E                     __end_of_initBounce:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function _bounceUp *****************
  5794 ;; Defined at:
  5795 ;;		line 163 in file "../../github/CANMIOfirmware/bounce.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  io              1    wreg     unsigned char 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  io              1   26[BANK0 ] unsigned char 
  5800 ;;  midway          1   25[BANK0 ] unsigned char 
  5801 ;;  reversed        1   24[BANK0 ] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      unsigned char 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5806 ;; Tracked objects:
  5807 ;;		On entry : 3F/0
  5808 ;;		On exit  : 3F/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;Total ram usage:       10 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 8
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_pollServos
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text6
  5826  004AC0                     __ptext6:
  5827                           	callstack 0
  5828  004AC0                     _bounceUp:
  5829                           	callstack 20
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;incstack = 0
  5833                           ;bounceUp@io stored from wreg
  5834  004AC0  6F7A               	movwf	bounceUp@io& (0+255),b
  5835                           
  5836                           ;bounce.c: 164: BOOL reversed = (BOOL)(NV->io[io].nv_io.nv_bounce.bounce_lower_pos > NV-
      +                          >io[io].nv_io.nv_bounce.bounce_upper_pos);
  5837  004AC2  0100               	movlb	0	; () banked
  5838  004AC4  517A               	movf	bounceUp@io& (0+255),w,b
  5839  004AC6  0D07               	mullw	7
  5840  004AC8  C0EC  F071         	movff	_NV,??_bounceUp
  5841  004ACC  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  5842  004AD0  50F3               	movf	243,w,c
  5843  004AD2  2771               	addwf	??_bounceUp& (0+255),f,b
  5844  004AD4  50F4               	movf	244,w,c
  5845  004AD6  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  5846  004AD8  0E13               	movlw	19
  5847  004ADA  2571               	addwf	??_bounceUp& (0+255),w,b
  5848  004ADC  6ED9               	movwf	fsr2l,c
  5849  004ADE  0E00               	movlw	0
  5850  004AE0  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  5851  004AE2  6EDA               	movwf	fsr2h,c
  5852  004AE4  517A               	movf	bounceUp@io& (0+255),w,b
  5853  004AE6  0D07               	mullw	7
  5854  004AE8  C0EC  F074         	movff	_NV,??_bounceUp+3
  5855  004AEC  C0ED  F075         	movff	_NV+1,??_bounceUp+4
  5856  004AF0  50F3               	movf	243,w,c
  5857  004AF2  2774               	addwf	(??_bounceUp+3)& (0+255),f,b
  5858  004AF4  50F4               	movf	244,w,c
  5859  004AF6  2375               	addwfc	(??_bounceUp+4)& (0+255),f,b
  5860  004AF8  0E12               	movlw	18
  5861  004AFA  2574               	addwf	(??_bounceUp+3)& (0+255),w,b
  5862  004AFC  6EE1               	movwf	fsr1l,c
  5863  004AFE  0E00               	movlw	0
  5864  004B00  2175               	addwfc	(??_bounceUp+4)& (0+255),w,b
  5865  004B02  6EE2               	movwf	fsr1h,c
  5866  004B04  50DE               	movf	postinc2,w,c
  5867  004B06  5CE6               	subwf	postinc1,w,c
  5868  004B08  B0D8               	btfsc	status,0,c
  5869  004B0A  D002               	goto	u10830
  5870  004B0C  0E01               	movlw	1
  5871  004B0E  D001               	goto	u10840
  5872  004B10                     u10830:
  5873  004B10  0E00               	movlw	0
  5874  004B12                     u10840:
  5875  004B12  6F78               	movwf	bounceUp@reversed& (0+255),b
  5876                           
  5877                           ;bounce.c: 165: BYTE midway;;bounce.c: 166: switch(bounceState[io]) {
  5878  004B14  D146               	goto	l10903
  5879  004B16                     l10853:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;bounce.c: 169: midway = (NV->io[io].nv_io.nv_servo.servo_end_pos)/2U +;bounce.c: 170: (
      +                          NV->io[io].nv_io.nv_servo.servo_start_pos)/2U;
  5883  004B16  517A               	movf	bounceUp@io& (0+255),w,b
  5884  004B18  0D07               	mullw	7
  5885  004B1A  C0EC  F071         	movff	_NV,??_bounceUp
  5886  004B1E  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  5887  004B22  50F3               	movf	243,w,c
  5888  004B24  2771               	addwf	??_bounceUp& (0+255),f,b
  5889  004B26  50F4               	movf	244,w,c
  5890  004B28  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  5891  004B2A  0E12               	movlw	18
  5892  004B2C  2571               	addwf	??_bounceUp& (0+255),w,b
  5893  004B2E  6ED9               	movwf	fsr2l,c
  5894  004B30  0E00               	movlw	0
  5895  004B32  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  5896  004B34  6EDA               	movwf	fsr2h,c
  5897  004B36  50DF               	movf	indf2,w,c
  5898  004B38  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  5899  004B3A  90D8               	bcf	status,0,c
  5900  004B3C  3373               	rrcf	(??_bounceUp+2)& (0+255),f,b
  5901  004B3E  517A               	movf	bounceUp@io& (0+255),w,b
  5902  004B40  0D07               	mullw	7
  5903  004B42  C0EC  F074         	movff	_NV,??_bounceUp+3
  5904  004B46  C0ED  F075         	movff	_NV+1,??_bounceUp+4
  5905  004B4A  50F3               	movf	243,w,c
  5906  004B4C  2774               	addwf	(??_bounceUp+3)& (0+255),f,b
  5907  004B4E  50F4               	movf	244,w,c
  5908  004B50  2375               	addwfc	(??_bounceUp+4)& (0+255),f,b
  5909  004B52  0E13               	movlw	19
  5910  004B54  2574               	addwf	(??_bounceUp+3)& (0+255),w,b
  5911  004B56  6ED9               	movwf	fsr2l,c
  5912  004B58  0E00               	movlw	0
  5913  004B5A  2175               	addwfc	(??_bounceUp+4)& (0+255),w,b
  5914  004B5C  6EDA               	movwf	fsr2h,c
  5915  004B5E  50DF               	movf	indf2,w,c
  5916  004B60  6F76               	movwf	(??_bounceUp+5)& (0+255),b
  5917  004B62  90D8               	bcf	status,0,c
  5918  004B64  3176               	rrcf	(??_bounceUp+5)& (0+255),w,b
  5919  004B66  2573               	addwf	(??_bounceUp+2)& (0+255),w,b
  5920  004B68  6F79               	movwf	bounceUp@midway& (0+255),b
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;bounce.c: 171: if (reversed) {
  5924  004B6A  5178               	movf	bounceUp@reversed& (0+255),w,b
  5925  004B6C  B4D8               	btfsc	status,2,c
  5926  004B6E  D023               	goto	l10865
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;bounce.c: 172: currentPos[io] -= NV->io[io].nv_io.nv_bounce.bounce_pull_speed;
  5930  004B70  517A               	movf	bounceUp@io& (0+255),w,b
  5931  004B72  0D07               	mullw	7
  5932  004B74  C0EC  F071         	movff	_NV,??_bounceUp
  5933  004B78  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  5934  004B7C  50F3               	movf	243,w,c
  5935  004B7E  2771               	addwf	??_bounceUp& (0+255),f,b
  5936  004B80  50F4               	movf	244,w,c
  5937  004B82  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  5938  004B84  0E15               	movlw	21
  5939  004B86  2571               	addwf	??_bounceUp& (0+255),w,b
  5940  004B88  6ED9               	movwf	fsr2l,c
  5941  004B8A  0E00               	movlw	0
  5942  004B8C  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  5943  004B8E  6EDA               	movwf	fsr2h,c
  5944  004B90  50DF               	movf	indf2,w,c
  5945  004B92  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  5946  004B94  0E80               	movlw	low _currentPos
  5947  004B96  257A               	addwf	bounceUp@io& (0+255),w,b
  5948  004B98  6ED9               	movwf	fsr2l,c
  5949  004B9A  6ADA               	clrf	fsr2h,c
  5950  004B9C  0E01               	movlw	high _currentPos
  5951  004B9E  22DA               	addwfc	fsr2h,f,c
  5952  004BA0  5173               	movf	(??_bounceUp+2)& (0+255),w,b
  5953  004BA2  5EDF               	subwf	indf2,f,c
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;bounce.c: 173: if (currentPos[io] <= midway) {
  5957  004BA4  0E80               	movlw	low _currentPos
  5958  004BA6  257A               	addwf	bounceUp@io& (0+255),w,b
  5959  004BA8  6ED9               	movwf	fsr2l,c
  5960  004BAA  6ADA               	clrf	fsr2h,c
  5961  004BAC  0E01               	movlw	high _currentPos
  5962  004BAE  22DA               	addwfc	fsr2h,f,c
  5963  004BB0  50DE               	movf	postinc2,w,c
  5964  004BB2  5D79               	subwf	bounceUp@midway& (0+255),w,b
  5965  004BB4  D022               	goto	L38
  5966  004BB6                     l10865:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;bounce.c: 178: currentPos[io] += NV->io[io].nv_io.nv_bounce.bounce_pull_speed;
  5970  004BB6  517A               	movf	bounceUp@io& (0+255),w,b
  5971  004BB8  0D07               	mullw	7
  5972  004BBA  C0EC  F071         	movff	_NV,??_bounceUp
  5973  004BBE  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  5974  004BC2  50F3               	movf	243,w,c
  5975  004BC4  2771               	addwf	??_bounceUp& (0+255),f,b
  5976  004BC6  50F4               	movf	244,w,c
  5977  004BC8  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  5978  004BCA  0E15               	movlw	21
  5979  004BCC  2571               	addwf	??_bounceUp& (0+255),w,b
  5980  004BCE  6ED9               	movwf	fsr2l,c
  5981  004BD0  0E00               	movlw	0
  5982  004BD2  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  5983  004BD4  6EDA               	movwf	fsr2h,c
  5984  004BD6  50DF               	movf	indf2,w,c
  5985  004BD8  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  5986  004BDA  0E80               	movlw	low _currentPos
  5987  004BDC  257A               	addwf	bounceUp@io& (0+255),w,b
  5988  004BDE  6ED9               	movwf	fsr2l,c
  5989  004BE0  6ADA               	clrf	fsr2h,c
  5990  004BE2  0E01               	movlw	high _currentPos
  5991  004BE4  22DA               	addwfc	fsr2h,f,c
  5992  004BE6  5173               	movf	(??_bounceUp+2)& (0+255),w,b
  5993  004BE8  26DF               	addwf	indf2,f,c
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;bounce.c: 179: if (currentPos[io] >= midway) {
  5997  004BEA  0E80               	movlw	low _currentPos
  5998  004BEC  257A               	addwf	bounceUp@io& (0+255),w,b
  5999  004BEE  6ED9               	movwf	fsr2l,c
  6000  004BF0  6ADA               	clrf	fsr2h,c
  6001  004BF2  0E01               	movlw	high _currentPos
  6002  004BF4  22DA               	addwfc	fsr2h,f,c
  6003  004BF6  5179               	movf	bounceUp@midway& (0+255),w,b
  6004  004BF8  5CDE               	subwf	postinc2,w,c
  6005  004BFA                     L38:
  6006  004BFA  A0D8               	btfss	status,0,c
  6007  004BFC  D0E2               	goto	l10905
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;bounce.c: 180: bounceState[io] = STATE_PAUSE;
  6011  004BFE  0EB4               	movlw	low _bounceState
  6012  004C00  257A               	addwf	bounceUp@io& (0+255),w,b
  6013  004C02  6ED9               	movwf	fsr2l,c
  6014  004C04  6ADA               	clrf	fsr2h,c
  6015  004C06  0E02               	movlw	high _bounceState
  6016  004C08  22DA               	addwfc	fsr2h,f,c
  6017  004C0A  0E01               	movlw	1
  6018  004C0C  6EDF               	movwf	indf2,c
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;bounce.c: 181: speed[io] = NV->io[io].nv_io.nv_bounce.bounce_pull_pause;
  6022  004C0E  517A               	movf	bounceUp@io& (0+255),w,b
  6023  004C10  0D07               	mullw	7
  6024  004C12  C0EC  F071         	movff	_NV,??_bounceUp
  6025  004C16  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  6026  004C1A  50F3               	movf	243,w,c
  6027  004C1C  2771               	addwf	??_bounceUp& (0+255),f,b
  6028  004C1E  50F4               	movf	244,w,c
  6029  004C20  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  6030  004C22  0E16               	movlw	22
  6031  004C24  2571               	addwf	??_bounceUp& (0+255),w,b
  6032  004C26  6ED9               	movwf	fsr2l,c
  6033  004C28  0E00               	movlw	0
  6034  004C2A  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  6035  004C2C  6EDA               	movwf	fsr2h,c
  6036  004C2E  50DF               	movf	indf2,w,c
  6037  004C30  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  6038  004C32  6B74               	clrf	(??_bounceUp+3)& (0+255),b
  6039  004C34  517A               	movf	bounceUp@io& (0+255),w,b
  6040  004C36  0D02               	mullw	2
  6041  004C38  0E00               	movlw	low _speed
  6042  004C3A  24F3               	addwf	243,w,c
  6043  004C3C  6ED9               	movwf	fsr2l,c
  6044  004C3E  0E01               	movlw	high _speed
  6045  004C40  20F4               	addwfc	prodh,w,c
  6046  004C42  6EDA               	movwf	fsr2h,c
  6047  004C44  C073  FFDE         	movff	??_bounceUp+2,postinc2
  6048  004C48  C074  FFDD         	movff	??_bounceUp+3,postdec2
  6049  004C4C  D0BA               	goto	l10905
  6050  004C4E                     l10873:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;bounce.c: 187: if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
  6054  004C4E  517A               	movf	bounceUp@io& (0+255),w,b
  6055  004C50  0D02               	mullw	2
  6056  004C52  0E00               	movlw	low _speed
  6057  004C54  24F3               	addwf	243,w,c
  6058  004C56  6ED9               	movwf	fsr2l,c
  6059  004C58  0E01               	movlw	high _speed
  6060  004C5A  20F4               	addwfc	prodh,w,c
  6061  004C5C  6EDA               	movwf	fsr2h,c
  6062  004C5E  50DE               	movf	postinc2,w,c
  6063  004C60  10DE               	iorwf	postinc2,w,c
  6064  004C62  A4D8               	btfss	status,2,c
  6065  004C64  D008               	goto	l10877
  6066                           
  6067                           ; BSR set to: 0
  6068  004C66  0EB4               	movlw	low _bounceState
  6069  004C68  257A               	addwf	bounceUp@io& (0+255),w,b
  6070  004C6A  6ED9               	movwf	fsr2l,c
  6071  004C6C  6ADA               	clrf	fsr2h,c
  6072  004C6E  0E02               	movlw	high _bounceState
  6073  004C70  22DA               	addwfc	fsr2h,f,c
  6074  004C72  0E02               	movlw	2
  6075  004C74  6EDF               	movwf	indf2,c
  6076  004C76                     l10877:
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;bounce.c: 188: speed[io]--;
  6080  004C76  517A               	movf	bounceUp@io& (0+255),w,b
  6081  004C78  0D02               	mullw	2
  6082  004C7A  0E00               	movlw	low _speed
  6083  004C7C  24F3               	addwf	243,w,c
  6084  004C7E  6ED9               	movwf	fsr2l,c
  6085  004C80  0E01               	movlw	high _speed
  6086  004C82  20F4               	addwfc	prodh,w,c
  6087  004C84  6EDA               	movwf	fsr2h,c
  6088  004C86  06DE               	decf	postinc2,f,c
  6089  004C88  0E00               	movlw	0
  6090  004C8A  5ADD               	subwfb	postdec2,f,c
  6091                           
  6092                           ;bounce.c: 189: break;
  6093  004C8C  D09A               	goto	l10905
  6094  004C8E                     l10879:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;bounce.c: 192: if (reversed) {
  6098  004C8E  5178               	movf	bounceUp@reversed& (0+255),w,b
  6099  004C90  B4D8               	btfsc	status,2,c
  6100  004C92  D048               	goto	l10891
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;bounce.c: 193: currentPos[io] -= NV->io[io].nv_io.nv_bounce.bounce_pull_speed;
  6104  004C94  517A               	movf	bounceUp@io& (0+255),w,b
  6105  004C96  0D07               	mullw	7
  6106  004C98  C0EC  F071         	movff	_NV,??_bounceUp
  6107  004C9C  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  6108  004CA0  50F3               	movf	243,w,c
  6109  004CA2  2771               	addwf	??_bounceUp& (0+255),f,b
  6110  004CA4  50F4               	movf	244,w,c
  6111  004CA6  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  6112  004CA8  0E15               	movlw	21
  6113  004CAA  2571               	addwf	??_bounceUp& (0+255),w,b
  6114  004CAC  6ED9               	movwf	fsr2l,c
  6115  004CAE  0E00               	movlw	0
  6116  004CB0  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  6117  004CB2  6EDA               	movwf	fsr2h,c
  6118  004CB4  50DF               	movf	indf2,w,c
  6119  004CB6  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  6120  004CB8  0E80               	movlw	low _currentPos
  6121  004CBA  257A               	addwf	bounceUp@io& (0+255),w,b
  6122  004CBC  6ED9               	movwf	fsr2l,c
  6123  004CBE  6ADA               	clrf	fsr2h,c
  6124  004CC0  0E01               	movlw	high _currentPos
  6125  004CC2  22DA               	addwfc	fsr2h,f,c
  6126  004CC4  5173               	movf	(??_bounceUp+2)& (0+255),w,b
  6127  004CC6  5EDF               	subwf	indf2,f,c
  6128                           
  6129                           ; BSR set to: 0
  6130                           ;bounce.c: 194: if (currentPos[io]<=targetPos[io]-3) {
  6131  004CC8  0E80               	movlw	low _currentPos
  6132  004CCA  257A               	addwf	bounceUp@io& (0+255),w,b
  6133  004CCC  6ED9               	movwf	fsr2l,c
  6134  004CCE  6ADA               	clrf	fsr2h,c
  6135  004CD0  0E01               	movlw	high _currentPos
  6136  004CD2  22DA               	addwfc	fsr2h,f,c
  6137  004CD4  50DF               	movf	indf2,w,c
  6138  004CD6  6F71               	movwf	??_bounceUp& (0+255),b
  6139  004CD8  6B72               	clrf	(??_bounceUp+1)& (0+255),b
  6140  004CDA  0EFD               	movlw	253
  6141  004CDC  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  6142  004CDE  0EFF               	movlw	255
  6143  004CE0  6F74               	movwf	(??_bounceUp+3)& (0+255),b
  6144  004CE2  0E70               	movlw	low _targetPos
  6145  004CE4  257A               	addwf	bounceUp@io& (0+255),w,b
  6146  004CE6  6ED9               	movwf	fsr2l,c
  6147  004CE8  6ADA               	clrf	fsr2h,c
  6148  004CEA  0E01               	movlw	high _targetPos
  6149  004CEC  22DA               	addwfc	fsr2h,f,c
  6150  004CEE  50DF               	movf	indf2,w,c
  6151  004CF0  6F75               	movwf	(??_bounceUp+4)& (0+255),b
  6152  004CF2  6B76               	clrf	(??_bounceUp+5)& (0+255),b
  6153  004CF4  5173               	movf	(??_bounceUp+2)& (0+255),w,b
  6154  004CF6  2775               	addwf	(??_bounceUp+4)& (0+255),f,b
  6155  004CF8  5174               	movf	(??_bounceUp+3)& (0+255),w,b
  6156  004CFA  2376               	addwfc	(??_bounceUp+5)& (0+255),f,b
  6157  004CFC  5171               	movf	??_bounceUp& (0+255),w,b
  6158  004CFE  5D75               	subwf	(??_bounceUp+4)& (0+255),w,b
  6159  004D00  5176               	movf	(??_bounceUp+5)& (0+255),w,b
  6160  004D02  0A80               	xorlw	128
  6161  004D04  6F77               	movwf	(??_bounceUp+6)& (0+255),b
  6162  004D06  5172               	movf	(??_bounceUp+1)& (0+255),w,b
  6163  004D08  0A80               	xorlw	128
  6164  004D0A  5977               	subwfb	(??_bounceUp+6)& (0+255),w,b
  6165  004D0C  A0D8               	btfss	status,0,c
  6166  004D0E  D059               	goto	l10905
  6167  004D10                     u10900:
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;bounce.c: 195: bounceState[io] = STATE_DONE;
  6171  004D10  0EB4               	movlw	low _bounceState
  6172  004D12  257A               	addwf	bounceUp@io& (0+255),w,b
  6173  004D14  6ED9               	movwf	fsr2l,c
  6174  004D16  6ADA               	clrf	fsr2h,c
  6175  004D18  0E02               	movlw	high _bounceState
  6176  004D1A  22DA               	addwfc	fsr2h,f,c
  6177  004D1C  0E03               	movlw	3
  6178  004D1E  6EDF               	movwf	indf2,c
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;bounce.c: 196: return 1;
  6182  004D20  0E01               	movlw	1
  6183  004D22  0012               	return	
  6184  004D24                     l10891:
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;bounce.c: 199: currentPos[io] += NV->io[io].nv_io.nv_bounce.bounce_pull_speed;
  6188  004D24  517A               	movf	bounceUp@io& (0+255),w,b
  6189  004D26  0D07               	mullw	7
  6190  004D28  C0EC  F071         	movff	_NV,??_bounceUp
  6191  004D2C  C0ED  F072         	movff	_NV+1,??_bounceUp+1
  6192  004D30  50F3               	movf	243,w,c
  6193  004D32  2771               	addwf	??_bounceUp& (0+255),f,b
  6194  004D34  50F4               	movf	244,w,c
  6195  004D36  2372               	addwfc	(??_bounceUp+1)& (0+255),f,b
  6196  004D38  0E15               	movlw	21
  6197  004D3A  2571               	addwf	??_bounceUp& (0+255),w,b
  6198  004D3C  6ED9               	movwf	fsr2l,c
  6199  004D3E  0E00               	movlw	0
  6200  004D40  2172               	addwfc	(??_bounceUp+1)& (0+255),w,b
  6201  004D42  6EDA               	movwf	fsr2h,c
  6202  004D44  50DF               	movf	indf2,w,c
  6203  004D46  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  6204  004D48  0E80               	movlw	low _currentPos
  6205  004D4A  257A               	addwf	bounceUp@io& (0+255),w,b
  6206  004D4C  6ED9               	movwf	fsr2l,c
  6207  004D4E  6ADA               	clrf	fsr2h,c
  6208  004D50  0E01               	movlw	high _currentPos
  6209  004D52  22DA               	addwfc	fsr2h,f,c
  6210  004D54  5173               	movf	(??_bounceUp+2)& (0+255),w,b
  6211  004D56  26DF               	addwf	indf2,f,c
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;bounce.c: 200: if (currentPos[io]>=targetPos[io]-3) {
  6215  004D58  0EFD               	movlw	253
  6216  004D5A  6F71               	movwf	??_bounceUp& (0+255),b
  6217  004D5C  0EFF               	movlw	255
  6218  004D5E  6F72               	movwf	(??_bounceUp+1)& (0+255),b
  6219  004D60  0E70               	movlw	low _targetPos
  6220  004D62  257A               	addwf	bounceUp@io& (0+255),w,b
  6221  004D64  6ED9               	movwf	fsr2l,c
  6222  004D66  6ADA               	clrf	fsr2h,c
  6223  004D68  0E01               	movlw	high _targetPos
  6224  004D6A  22DA               	addwfc	fsr2h,f,c
  6225  004D6C  50DF               	movf	indf2,w,c
  6226  004D6E  6F73               	movwf	(??_bounceUp+2)& (0+255),b
  6227  004D70  6B74               	clrf	(??_bounceUp+3)& (0+255),b
  6228  004D72  5171               	movf	??_bounceUp& (0+255),w,b
  6229  004D74  2773               	addwf	(??_bounceUp+2)& (0+255),f,b
  6230  004D76  5172               	movf	(??_bounceUp+1)& (0+255),w,b
  6231  004D78  2374               	addwfc	(??_bounceUp+3)& (0+255),f,b
  6232  004D7A  0E80               	movlw	low _currentPos
  6233  004D7C  257A               	addwf	bounceUp@io& (0+255),w,b
  6234  004D7E  6ED9               	movwf	fsr2l,c
  6235  004D80  6ADA               	clrf	fsr2h,c
  6236  004D82  0E01               	movlw	high _currentPos
  6237  004D84  22DA               	addwfc	fsr2h,f,c
  6238  004D86  50DF               	movf	indf2,w,c
  6239  004D88  6F75               	movwf	(??_bounceUp+4)& (0+255),b
  6240  004D8A  6B76               	clrf	(??_bounceUp+5)& (0+255),b
  6241  004D8C  5173               	movf	(??_bounceUp+2)& (0+255),w,b
  6242  004D8E  5D75               	subwf	(??_bounceUp+4)& (0+255),w,b
  6243  004D90  5176               	movf	(??_bounceUp+5)& (0+255),w,b
  6244  004D92  0A80               	xorlw	128
  6245  004D94  6F77               	movwf	(??_bounceUp+6)& (0+255),b
  6246  004D96  5174               	movf	(??_bounceUp+3)& (0+255),w,b
  6247  004D98  0A80               	xorlw	128
  6248  004D9A  5977               	subwfb	(??_bounceUp+6)& (0+255),w,b
  6249  004D9C  B0D8               	btfsc	status,0,c
  6250  004D9E  D7B8               	goto	u10900
  6251  004DA0  D010               	goto	l10905
  6252  004DA2                     l10903:
  6253                           
  6254                           ; BSR set to: 0
  6255  004DA2  0EB4               	movlw	low _bounceState
  6256  004DA4  257A               	addwf	bounceUp@io& (0+255),w,b
  6257  004DA6  6ED9               	movwf	fsr2l,c
  6258  004DA8  6ADA               	clrf	fsr2h,c
  6259  004DAA  0E02               	movlw	high _bounceState
  6260  004DAC  22DA               	addwfc	fsr2h,f,c
  6261  004DAE  50DF               	movf	indf2,w,c
  6262                           
  6263                           ; Switch size 1, requested type "simple"
  6264                           ; Number of cases is 3, Range of values is 0 to 2
  6265                           ; switch strategies available:
  6266                           ; Name         Instructions Cycles
  6267                           ; simple_byte           10     6 (average)
  6268                           ;	Chosen strategy is simple_byte
  6269  004DB0  0A00               	xorlw	0	; case 0
  6270  004DB2  B4D8               	btfsc	status,2,c
  6271  004DB4  D6B0               	goto	l10853
  6272  004DB6  0A01               	xorlw	1	; case 1
  6273  004DB8  B4D8               	btfsc	status,2,c
  6274  004DBA  D749               	goto	l10873
  6275  004DBC  0A03               	xorlw	3	; case 2
  6276  004DBE  B4D8               	btfsc	status,2,c
  6277  004DC0  D766               	goto	l10879
  6278  004DC2                     l10905:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;bounce.c: 207: return 0;
  6282  004DC2  0E00               	movlw	0
  6283                           
  6284                           ; BSR set to: 0
  6285  004DC4  0012               	return		;funcret
  6286  004DC6                     __end_of_bounceUp:
  6287                           	callstack 0
  6288                           
  6289 ;; *************** function _bounceDown *****************
  6290 ;; Defined at:
  6291 ;;		line 105 in file "../../github/CANMIOfirmware/bounce.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  io              1    wreg     unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  io              1   41[BANK0 ] unsigned char 
  6296 ;;  tmp             2   39[BANK0 ] int 
  6297 ;;  reversed        1   38[BANK0 ] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      unsigned char 
  6300 ;; Registers used:
  6301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 3F/0
  6304 ;;		On exit  : 3F/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6309 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6310 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6311 ;;Total ram usage:       11 bytes
  6312 ;; Hardware stack levels used: 1
  6313 ;; Hardware stack levels required when called: 9
  6314 ;; This function calls:
  6315 ;;		___awdiv
  6316 ;;		___wmul
  6317 ;; This function is called by:
  6318 ;;		_pollServos
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text7
  6323  003522                     __ptext7:
  6324                           	callstack 0
  6325  003522                     _bounceDown:
  6326                           	callstack 19
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;incstack = 0
  6330                           ;bounceDown@io stored from wreg
  6331  003522  6F89               	movwf	bounceDown@io& (0+255),b
  6332                           
  6333                           ;bounce.c: 107: if ( (currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos[io]-3
      +                          ) || (speed[io]>3) || (speed[io]<-3)) {
  6334  003524  0E80               	movlw	low _currentPos
  6335  003526  0100               	movlb	0	; () banked
  6336  003528  2589               	addwf	bounceDown@io& (0+255),w,b
  6337  00352A  6ED9               	movwf	fsr2l,c
  6338  00352C  6ADA               	clrf	fsr2h,c
  6339  00352E  0E01               	movlw	high _currentPos
  6340  003530  22DA               	addwfc	fsr2h,f,c
  6341  003532  50DF               	movf	indf2,w,c
  6342  003534  6F7F               	movwf	??_bounceDown& (0+255),b
  6343  003536  6B80               	clrf	(??_bounceDown+1)& (0+255),b
  6344  003538  0E70               	movlw	low _targetPos
  6345  00353A  2589               	addwf	bounceDown@io& (0+255),w,b
  6346  00353C  6ED9               	movwf	fsr2l,c
  6347  00353E  6ADA               	clrf	fsr2h,c
  6348  003540  0E01               	movlw	high _targetPos
  6349  003542  22DA               	addwfc	fsr2h,f,c
  6350  003544  50DF               	movf	indf2,w,c
  6351  003546  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6352  003548  6B82               	clrf	(??_bounceDown+3)& (0+255),b
  6353  00354A  0E03               	movlw	3
  6354  00354C  2781               	addwf	(??_bounceDown+2)& (0+255),f,b
  6355  00354E  0E00               	movlw	0
  6356  003550  2382               	addwfc	(??_bounceDown+3)& (0+255),f,b
  6357  003552  517F               	movf	??_bounceDown& (0+255),w,b
  6358  003554  5D81               	subwf	(??_bounceDown+2)& (0+255),w,b
  6359  003556  5182               	movf	(??_bounceDown+3)& (0+255),w,b
  6360  003558  0A80               	xorlw	128
  6361  00355A  6F83               	movwf	(??_bounceDown+4)& (0+255),b
  6362  00355C  5180               	movf	(??_bounceDown+1)& (0+255),w,b
  6363  00355E  0A80               	xorlw	128
  6364  003560  5983               	subwfb	(??_bounceDown+4)& (0+255),w,b
  6365  003562  A0D8               	btfss	status,0,c
  6366  003564  D047               	goto	u24690
  6367                           
  6368                           ; BSR set to: 0
  6369  003566  0EFD               	movlw	253
  6370  003568  6F7F               	movwf	??_bounceDown& (0+255),b
  6371  00356A  0EFF               	movlw	255
  6372  00356C  6F80               	movwf	(??_bounceDown+1)& (0+255),b
  6373  00356E  0E70               	movlw	low _targetPos
  6374  003570  2589               	addwf	bounceDown@io& (0+255),w,b
  6375  003572  6ED9               	movwf	fsr2l,c
  6376  003574  6ADA               	clrf	fsr2h,c
  6377  003576  0E01               	movlw	high _targetPos
  6378  003578  22DA               	addwfc	fsr2h,f,c
  6379  00357A  50DF               	movf	indf2,w,c
  6380  00357C  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6381  00357E  6B82               	clrf	(??_bounceDown+3)& (0+255),b
  6382  003580  517F               	movf	??_bounceDown& (0+255),w,b
  6383  003582  2781               	addwf	(??_bounceDown+2)& (0+255),f,b
  6384  003584  5180               	movf	(??_bounceDown+1)& (0+255),w,b
  6385  003586  2382               	addwfc	(??_bounceDown+3)& (0+255),f,b
  6386  003588  0E80               	movlw	low _currentPos
  6387  00358A  2589               	addwf	bounceDown@io& (0+255),w,b
  6388  00358C  6ED9               	movwf	fsr2l,c
  6389  00358E  6ADA               	clrf	fsr2h,c
  6390  003590  0E01               	movlw	high _currentPos
  6391  003592  22DA               	addwfc	fsr2h,f,c
  6392  003594  50DF               	movf	indf2,w,c
  6393  003596  6F83               	movwf	(??_bounceDown+4)& (0+255),b
  6394  003598  6B84               	clrf	(??_bounceDown+5)& (0+255),b
  6395  00359A  5181               	movf	(??_bounceDown+2)& (0+255),w,b
  6396  00359C  5D83               	subwf	(??_bounceDown+4)& (0+255),w,b
  6397  00359E  5184               	movf	(??_bounceDown+5)& (0+255),w,b
  6398  0035A0  0A80               	xorlw	128
  6399  0035A2  6F85               	movwf	(??_bounceDown+6)& (0+255),b
  6400  0035A4  5182               	movf	(??_bounceDown+3)& (0+255),w,b
  6401  0035A6  0A80               	xorlw	128
  6402  0035A8  5985               	subwfb	(??_bounceDown+6)& (0+255),w,b
  6403  0035AA  A0D8               	btfss	status,0,c
  6404  0035AC  D023               	goto	u24690
  6405                           
  6406                           ; BSR set to: 0
  6407  0035AE  5189               	movf	bounceDown@io& (0+255),w,b
  6408  0035B0  0D02               	mullw	2
  6409  0035B2  0E00               	movlw	low _speed
  6410  0035B4  24F3               	addwf	243,w,c
  6411  0035B6  6ED9               	movwf	fsr2l,c
  6412  0035B8  0E01               	movlw	high _speed
  6413  0035BA  20F4               	addwfc	prodh,w,c
  6414  0035BC  6EDA               	movwf	fsr2h,c
  6415  0035BE  0E01               	movlw	1
  6416  0035C0  BEDB               	btfsc	plusw2,7,c
  6417  0035C2  D007               	goto	u24680
  6418  0035C4  0E01               	movlw	1
  6419  0035C6  50DB               	movf	plusw2,w,c
  6420  0035C8  E115               	bnz	l19933
  6421  0035CA  0E04               	movlw	4
  6422  0035CC  5CDE               	subwf	postinc2,w,c
  6423  0035CE  B0D8               	btfsc	status,0,c
  6424  0035D0  D011               	goto	u24690
  6425  0035D2                     u24680:
  6426                           
  6427                           ; BSR set to: 0
  6428  0035D2  5189               	movf	bounceDown@io& (0+255),w,b
  6429  0035D4  0D02               	mullw	2
  6430  0035D6  0E00               	movlw	low _speed
  6431  0035D8  24F3               	addwf	243,w,c
  6432  0035DA  6ED9               	movwf	fsr2l,c
  6433  0035DC  0E01               	movlw	high _speed
  6434  0035DE  20F4               	addwfc	prodh,w,c
  6435  0035E0  6EDA               	movwf	fsr2h,c
  6436  0035E2  0E01               	movlw	1
  6437  0035E4  AEDB               	btfss	plusw2,7,c
  6438  0035E6  D203               	goto	l19961
  6439  0035E8  0EFD               	movlw	253
  6440  0035EA  5CDE               	subwf	postinc2,w,c
  6441  0035EC  0EFF               	movlw	255
  6442  0035EE  58DE               	subwfb	postinc2,w,c
  6443  0035F0  B0D8               	btfsc	status,0,c
  6444  0035F2  D1FD               	goto	l19961
  6445  0035F4                     u24690:
  6446  0035F4                     l19933:
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;bounce.c: 108: BOOL reversed = (BOOL)(NV->io[io].nv_io.nv_bounce.bounce_lower_pos > NV-
      +                          >io[io].nv_io.nv_bounce.bounce_upper_pos);
  6450  0035F4  5189               	movf	bounceDown@io& (0+255),w,b
  6451  0035F6  0D07               	mullw	7
  6452  0035F8  C0EC  F07F         	movff	_NV,??_bounceDown
  6453  0035FC  C0ED  F080         	movff	_NV+1,??_bounceDown+1
  6454  003600  50F3               	movf	243,w,c
  6455  003602  277F               	addwf	??_bounceDown& (0+255),f,b
  6456  003604  50F4               	movf	244,w,c
  6457  003606  2380               	addwfc	(??_bounceDown+1)& (0+255),f,b
  6458  003608  0E13               	movlw	19
  6459  00360A  257F               	addwf	??_bounceDown& (0+255),w,b
  6460  00360C  6ED9               	movwf	fsr2l,c
  6461  00360E  0E00               	movlw	0
  6462  003610  2180               	addwfc	(??_bounceDown+1)& (0+255),w,b
  6463  003612  6EDA               	movwf	fsr2h,c
  6464  003614  5189               	movf	bounceDown@io& (0+255),w,b
  6465  003616  0D07               	mullw	7
  6466  003618  C0EC  F082         	movff	_NV,??_bounceDown+3
  6467  00361C  C0ED  F083         	movff	_NV+1,??_bounceDown+4
  6468  003620  50F3               	movf	243,w,c
  6469  003622  2782               	addwf	(??_bounceDown+3)& (0+255),f,b
  6470  003624  50F4               	movf	244,w,c
  6471  003626  2383               	addwfc	(??_bounceDown+4)& (0+255),f,b
  6472  003628  0E12               	movlw	18
  6473  00362A  2582               	addwf	(??_bounceDown+3)& (0+255),w,b
  6474  00362C  6EE1               	movwf	fsr1l,c
  6475  00362E  0E00               	movlw	0
  6476  003630  2183               	addwfc	(??_bounceDown+4)& (0+255),w,b
  6477  003632  6EE2               	movwf	fsr1h,c
  6478  003634  50DE               	movf	postinc2,w,c
  6479  003636  5CE6               	subwf	postinc1,w,c
  6480  003638  B0D8               	btfsc	status,0,c
  6481  00363A  D002               	goto	u24700
  6482  00363C  0E01               	movlw	1
  6483  00363E  D001               	goto	u24710
  6484  003640                     u24700:
  6485  003640  0E00               	movlw	0
  6486  003642                     u24710:
  6487  003642  6F86               	movwf	bounceDown@reversed& (0+255),b
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;bounce.c: 109: int tmp;;bounce.c: 111: if (! reversed) {
  6491  003644  5186               	movf	bounceDown@reversed& (0+255),w,b
  6492  003646  A4D8               	btfss	status,2,c
  6493  003648  D0EB               	goto	l19947
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;bounce.c: 113: if (currentPos[io] < (NV->io[io].nv_io.nv_bounce.bounce_lower_pos + spee
      +                          d[io]/30)) {
  6497  00364A  5189               	movf	bounceDown@io& (0+255),w,b
  6498  00364C  0D02               	mullw	2
  6499  00364E  0E00               	movlw	low _speed
  6500  003650  24F3               	addwf	243,w,c
  6501  003652  6ED9               	movwf	fsr2l,c
  6502  003654  0E01               	movlw	high _speed
  6503  003656  20F4               	addwfc	prodh,w,c
  6504  003658  6EDA               	movwf	fsr2h,c
  6505  00365A  CFDE F077          	movff	postinc2,___awdiv@dividend
  6506  00365E  CFDD F078          	movff	postdec2,___awdiv@dividend+1
  6507  003662  0E00               	movlw	0
  6508  003664  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6509  003666  0E1E               	movlw	30
  6510  003668  6F79               	movwf	___awdiv@divisor& (0+255),b
  6511  00366A  EC30  F046         	call	___awdiv	;wreg free
  6512  00366E  5189               	movf	bounceDown@io& (0+255),w,b
  6513  003670  0D07               	mullw	7
  6514  003672  C0EC  F07F         	movff	_NV,??_bounceDown
  6515  003676  C0ED  F080         	movff	_NV+1,??_bounceDown+1
  6516  00367A  50F3               	movf	243,w,c
  6517  00367C  277F               	addwf	??_bounceDown& (0+255),f,b
  6518  00367E  50F4               	movf	244,w,c
  6519  003680  2380               	addwfc	(??_bounceDown+1)& (0+255),f,b
  6520  003682  0E13               	movlw	19
  6521  003684  257F               	addwf	??_bounceDown& (0+255),w,b
  6522  003686  6ED9               	movwf	fsr2l,c
  6523  003688  0E00               	movlw	0
  6524  00368A  2180               	addwfc	(??_bounceDown+1)& (0+255),w,b
  6525  00368C  6EDA               	movwf	fsr2h,c
  6526  00368E  50DF               	movf	indf2,w,c
  6527  003690  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6528  003692  6B82               	clrf	(??_bounceDown+3)& (0+255),b
  6529  003694  5177               	movf	?___awdiv& (0+255),w,b
  6530  003696  2781               	addwf	(??_bounceDown+2)& (0+255),f,b
  6531  003698  5178               	movf	(?___awdiv+1)& (0+255),w,b
  6532  00369A  2382               	addwfc	(??_bounceDown+3)& (0+255),f,b
  6533  00369C  0E80               	movlw	low _currentPos
  6534  00369E  2589               	addwf	bounceDown@io& (0+255),w,b
  6535  0036A0  6ED9               	movwf	fsr2l,c
  6536  0036A2  6ADA               	clrf	fsr2h,c
  6537  0036A4  0E01               	movlw	high _currentPos
  6538  0036A6  22DA               	addwfc	fsr2h,f,c
  6539  0036A8  50DF               	movf	indf2,w,c
  6540  0036AA  6F83               	movwf	(??_bounceDown+4)& (0+255),b
  6541  0036AC  6B84               	clrf	(??_bounceDown+5)& (0+255),b
  6542  0036AE  5181               	movf	(??_bounceDown+2)& (0+255),w,b
  6543  0036B0  5D83               	subwf	(??_bounceDown+4)& (0+255),w,b
  6544  0036B2  5184               	movf	(??_bounceDown+5)& (0+255),w,b
  6545  0036B4  0A80               	xorlw	128
  6546  0036B6  6F85               	movwf	(??_bounceDown+6)& (0+255),b
  6547  0036B8  5182               	movf	(??_bounceDown+3)& (0+255),w,b
  6548  0036BA  0A80               	xorlw	128
  6549  0036BC  5985               	subwfb	(??_bounceDown+6)& (0+255),w,b
  6550  0036BE  B0D8               	btfsc	status,0,c
  6551  0036C0  D086               	goto	l19943
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;bounce.c: 116: speed[io] = (-speed[io]*NV->io[io].nv_io.nv_bounce.bounce_coeff)/100;
  6555  0036C2  5189               	movf	bounceDown@io& (0+255),w,b
  6556  0036C4  0D07               	mullw	7
  6557  0036C6  C0EC  F07F         	movff	_NV,??_bounceDown
  6558  0036CA  C0ED  F080         	movff	_NV+1,??_bounceDown+1
  6559  0036CE  50F3               	movf	243,w,c
  6560  0036D0  277F               	addwf	??_bounceDown& (0+255),f,b
  6561  0036D2  50F4               	movf	244,w,c
  6562  0036D4  2380               	addwfc	(??_bounceDown+1)& (0+255),f,b
  6563  0036D6  0E14               	movlw	20
  6564  0036D8  257F               	addwf	??_bounceDown& (0+255),w,b
  6565  0036DA  6ED9               	movwf	fsr2l,c
  6566  0036DC  0E00               	movlw	0
  6567  0036DE  2180               	addwfc	(??_bounceDown+1)& (0+255),w,b
  6568  0036E0  6EDA               	movwf	fsr2h,c
  6569  0036E2  50DF               	movf	indf2,w,c
  6570  0036E4  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6571  0036E6  5181               	movf	(??_bounceDown+2)& (0+255),w,b
  6572  0036E8  6F71               	movwf	___wmul@multiplier& (0+255),b
  6573  0036EA  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
  6574  0036EC  5189               	movf	bounceDown@io& (0+255),w,b
  6575  0036EE  0D02               	mullw	2
  6576  0036F0  0E00               	movlw	low _speed
  6577  0036F2  24F3               	addwf	243,w,c
  6578  0036F4  6ED9               	movwf	fsr2l,c
  6579  0036F6  0E01               	movlw	high _speed
  6580  0036F8  20F4               	addwfc	prodh,w,c
  6581  0036FA  6EDA               	movwf	fsr2h,c
  6582  0036FC  CFDE F082          	movff	postinc2,??_bounceDown+3
  6583  003700  CFDD F083          	movff	postdec2,??_bounceDown+4
  6584  003704  1F82               	comf	(??_bounceDown+3)& (0+255),f,b
  6585  003706  1F83               	comf	(??_bounceDown+4)& (0+255),f,b
  6586  003708  4B82               	infsnz	(??_bounceDown+3)& (0+255),f,b
  6587  00370A  2B83               	incf	(??_bounceDown+4)& (0+255),f,b
  6588  00370C  C082  F073         	movff	??_bounceDown+3,___wmul@multiplicand
  6589  003710  C083  F074         	movff	??_bounceDown+4,___wmul@multiplicand+1
  6590  003714  ECEA  F051         	call	___wmul	;wreg free
  6591  003718  C071  F077         	movff	?___wmul,___awdiv@dividend
  6592  00371C  C072  F078         	movff	?___wmul+1,___awdiv@dividend+1
  6593  003720  0E00               	movlw	0
  6594  003722  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6595  003724  0E64               	movlw	100
  6596  003726  6F79               	movwf	___awdiv@divisor& (0+255),b
  6597  003728  EC30  F046         	call	___awdiv	;wreg free
  6598  00372C  5189               	movf	bounceDown@io& (0+255),w,b
  6599  00372E  0D02               	mullw	2
  6600  003730  0E00               	movlw	low _speed
  6601  003732  24F3               	addwf	243,w,c
  6602  003734  6ED9               	movwf	fsr2l,c
  6603  003736  0E01               	movlw	high _speed
  6604  003738  20F4               	addwfc	prodh,w,c
  6605  00373A  6EDA               	movwf	fsr2h,c
  6606  00373C  C077  FFDE         	movff	?___awdiv,postinc2
  6607  003740  C078  FFDD         	movff	?___awdiv+1,postdec2
  6608                           
  6609                           ;bounce.c: 118: tmp = NV->io[io].nv_io.nv_bounce.bounce_lower_pos -;bounce.c: 119: (curr
      +                          entPos[io] - NV->io[io].nv_io.nv_bounce.bounce_lower_pos) -;bounce.c: 120: (speed[io]/30
      +                          );
  6610  003744  5189               	movf	bounceDown@io& (0+255),w,b
  6611  003746  0D02               	mullw	2
  6612  003748  0E00               	movlw	low _speed
  6613  00374A  24F3               	addwf	243,w,c
  6614  00374C  6ED9               	movwf	fsr2l,c
  6615  00374E  0E01               	movlw	high _speed
  6616  003750  20F4               	addwfc	prodh,w,c
  6617  003752  6EDA               	movwf	fsr2h,c
  6618  003754  CFDE F077          	movff	postinc2,___awdiv@dividend
  6619  003758  CFDD F078          	movff	postdec2,___awdiv@dividend+1
  6620  00375C  0E00               	movlw	0
  6621  00375E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6622  003760  0E1E               	movlw	30
  6623  003762  6F79               	movwf	___awdiv@divisor& (0+255),b
  6624  003764  EC30  F046         	call	___awdiv	;wreg free
  6625  003768  5189               	movf	bounceDown@io& (0+255),w,b
  6626  00376A  0D07               	mullw	7
  6627  00376C  C0EC  F07F         	movff	_NV,??_bounceDown
  6628  003770  C0ED  F080         	movff	_NV+1,??_bounceDown+1
  6629  003774  50F3               	movf	243,w,c
  6630  003776  277F               	addwf	??_bounceDown& (0+255),f,b
  6631  003778  50F4               	movf	244,w,c
  6632  00377A  2380               	addwfc	(??_bounceDown+1)& (0+255),f,b
  6633  00377C  0E13               	movlw	19
  6634  00377E  257F               	addwf	??_bounceDown& (0+255),w,b
  6635  003780  6ED9               	movwf	fsr2l,c
  6636  003782  0E00               	movlw	0
  6637  003784  2180               	addwfc	(??_bounceDown+1)& (0+255),w,b
  6638  003786  6EDA               	movwf	fsr2h,c
  6639  003788  50DF               	movf	indf2,w,c
  6640  00378A  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6641  00378C  5181               	movf	(??_bounceDown+2)& (0+255),w,b
  6642  00378E  0D02               	mullw	2
  6643  003790  CFF3 F082          	movff	prodl,??_bounceDown+3
  6644  003794  CFF4 F083          	movff	prodh,??_bounceDown+4
  6645  003798  0E80               	movlw	low _currentPos
  6646  00379A  2589               	addwf	bounceDown@io& (0+255),w,b
  6647  00379C  6ED9               	movwf	fsr2l,c
  6648  00379E  6ADA               	clrf	fsr2h,c
  6649  0037A0  0E01               	movlw	high _currentPos
  6650  0037A2  22DA               	addwfc	fsr2h,f,c
  6651  0037A4  50DF               	movf	indf2,w,c
  6652  0037A6  6F84               	movwf	(??_bounceDown+5)& (0+255),b
  6653  0037A8  5184               	movf	(??_bounceDown+5)& (0+255),w,b
  6654  0037AA  5F82               	subwf	(??_bounceDown+3)& (0+255),f,b
  6655  0037AC  0E00               	movlw	0
  6656  0037AE  5B83               	subwfb	(??_bounceDown+4)& (0+255),f,b
  6657  0037B0  5177               	movf	?___awdiv& (0+255),w,b
  6658  0037B2  5D82               	subwf	(??_bounceDown+3)& (0+255),w,b
  6659  0037B4  6F87               	movwf	bounceDown@tmp& (0+255),b
  6660  0037B6  5178               	movf	(?___awdiv+1)& (0+255),w,b
  6661  0037B8  5983               	subwfb	(??_bounceDown+4)& (0+255),w,b
  6662  0037BA  6F88               	movwf	(bounceDown@tmp+1)& (0+255),b
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;bounce.c: 121: currentPos[io] = (unsigned char)tmp;
  6666  0037BC  0E80               	movlw	low _currentPos
  6667  0037BE  2589               	addwf	bounceDown@io& (0+255),w,b
  6668  0037C0  6ED9               	movwf	fsr2l,c
  6669  0037C2  6ADA               	clrf	fsr2h,c
  6670  0037C4  0E01               	movlw	high _currentPos
  6671  0037C6  22DA               	addwfc	fsr2h,f,c
  6672  0037C8  C087  FFDF         	movff	bounceDown@tmp,indf2
  6673                           
  6674                           ;bounce.c: 122: } else {
  6675  0037CC  D10E               	goto	l19957
  6676  0037CE                     l19943:
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;bounce.c: 125: speed[io] += 3U;
  6680  0037CE  5189               	movf	bounceDown@io& (0+255),w,b
  6681  0037D0  0D02               	mullw	2
  6682  0037D2  0E00               	movlw	low _speed
  6683  0037D4  24F3               	addwf	243,w,c
  6684  0037D6  6ED9               	movwf	fsr2l,c
  6685  0037D8  0E01               	movlw	high _speed
  6686  0037DA  20F4               	addwfc	prodh,w,c
  6687  0037DC  6EDA               	movwf	fsr2h,c
  6688  0037DE  0E03               	movlw	3
  6689  0037E0  26DE               	addwf	postinc2,f,c
  6690  0037E2  0E00               	movlw	0
  6691  0037E4  22DD               	addwfc	postdec2,f,c
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;bounce.c: 126: currentPos[io] -= (unsigned char)((speed[io]/30)+1);
  6695  0037E6  5189               	movf	bounceDown@io& (0+255),w,b
  6696  0037E8  0D02               	mullw	2
  6697  0037EA  0E00               	movlw	low _speed
  6698  0037EC  24F3               	addwf	243,w,c
  6699  0037EE  6ED9               	movwf	fsr2l,c
  6700  0037F0  0E01               	movlw	high _speed
  6701  0037F2  20F4               	addwfc	prodh,w,c
  6702  0037F4  6EDA               	movwf	fsr2h,c
  6703  0037F6  CFDE F077          	movff	postinc2,___awdiv@dividend
  6704  0037FA  CFDD F078          	movff	postdec2,___awdiv@dividend+1
  6705  0037FE  0E00               	movlw	0
  6706  003800  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6707  003802  0E1E               	movlw	30
  6708  003804  6F79               	movwf	___awdiv@divisor& (0+255),b
  6709  003806  EC30  F046         	call	___awdiv	;wreg free
  6710  00380A  0E01               	movlw	1
  6711  00380C  2777               	addwf	?___awdiv& (0+255),f,b
  6712  00380E  0E80               	movlw	low _currentPos
  6713  003810  2589               	addwf	bounceDown@io& (0+255),w,b
  6714  003812  6ED9               	movwf	fsr2l,c
  6715  003814  6ADA               	clrf	fsr2h,c
  6716  003816  0E01               	movlw	high _currentPos
  6717  003818  22DA               	addwfc	fsr2h,f,c
  6718  00381A  5177               	movf	?___awdiv& (0+255),w,b
  6719  00381C  5EDF               	subwf	indf2,f,c
  6720  00381E  D0E5               	goto	l19957
  6721  003820                     l19947:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;bounce.c: 131: if (currentPos[io] > NV->io[io].nv_io.nv_bounce.bounce_lower_pos - speed
      +                          [io]/30) {
  6725  003820  0E80               	movlw	low _currentPos
  6726  003822  2589               	addwf	bounceDown@io& (0+255),w,b
  6727  003824  6ED9               	movwf	fsr2l,c
  6728  003826  6ADA               	clrf	fsr2h,c
  6729  003828  0E01               	movlw	high _currentPos
  6730  00382A  22DA               	addwfc	fsr2h,f,c
  6731  00382C  50DF               	movf	indf2,w,c
  6732  00382E  6F7F               	movwf	??_bounceDown& (0+255),b
  6733  003830  6B80               	clrf	(??_bounceDown+1)& (0+255),b
  6734  003832  5189               	movf	bounceDown@io& (0+255),w,b
  6735  003834  0D02               	mullw	2
  6736  003836  0E00               	movlw	low _speed
  6737  003838  24F3               	addwf	243,w,c
  6738  00383A  6ED9               	movwf	fsr2l,c
  6739  00383C  0E01               	movlw	high _speed
  6740  00383E  20F4               	addwfc	prodh,w,c
  6741  003840  6EDA               	movwf	fsr2h,c
  6742  003842  CFDE F077          	movff	postinc2,___awdiv@dividend
  6743  003846  CFDD F078          	movff	postdec2,___awdiv@dividend+1
  6744  00384A  0E00               	movlw	0
  6745  00384C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6746  00384E  0E1E               	movlw	30
  6747  003850  6F79               	movwf	___awdiv@divisor& (0+255),b
  6748  003852  EC30  F046         	call	___awdiv	;wreg free
  6749  003856  5189               	movf	bounceDown@io& (0+255),w,b
  6750  003858  0D07               	mullw	7
  6751  00385A  C0EC  F081         	movff	_NV,??_bounceDown+2
  6752  00385E  C0ED  F082         	movff	_NV+1,??_bounceDown+3
  6753  003862  50F3               	movf	243,w,c
  6754  003864  2781               	addwf	(??_bounceDown+2)& (0+255),f,b
  6755  003866  50F4               	movf	244,w,c
  6756  003868  2382               	addwfc	(??_bounceDown+3)& (0+255),f,b
  6757  00386A  0E13               	movlw	19
  6758  00386C  2581               	addwf	(??_bounceDown+2)& (0+255),w,b
  6759  00386E  6ED9               	movwf	fsr2l,c
  6760  003870  0E00               	movlw	0
  6761  003872  2182               	addwfc	(??_bounceDown+3)& (0+255),w,b
  6762  003874  6EDA               	movwf	fsr2h,c
  6763  003876  50DF               	movf	indf2,w,c
  6764  003878  6F83               	movwf	(??_bounceDown+4)& (0+255),b
  6765  00387A  6B84               	clrf	(??_bounceDown+5)& (0+255),b
  6766  00387C  5177               	movf	?___awdiv& (0+255),w,b
  6767  00387E  5F83               	subwf	(??_bounceDown+4)& (0+255),f,b
  6768  003880  5178               	movf	(?___awdiv+1)& (0+255),w,b
  6769  003882  5B84               	subwfb	(??_bounceDown+5)& (0+255),f,b
  6770  003884  517F               	movf	??_bounceDown& (0+255),w,b
  6771  003886  5D83               	subwf	(??_bounceDown+4)& (0+255),w,b
  6772  003888  5184               	movf	(??_bounceDown+5)& (0+255),w,b
  6773  00388A  0A80               	xorlw	128
  6774  00388C  6F85               	movwf	(??_bounceDown+6)& (0+255),b
  6775  00388E  5180               	movf	(??_bounceDown+1)& (0+255),w,b
  6776  003890  0A80               	xorlw	128
  6777  003892  5985               	subwfb	(??_bounceDown+6)& (0+255),w,b
  6778  003894  B0D8               	btfsc	status,0,c
  6779  003896  D081               	goto	l19953
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;bounce.c: 134: speed[io] = (unsigned char)((-speed[io]*NV->io[io].nv_io.nv_bounce.bounc
      +                          e_coeff)/100);
  6783  003898  5189               	movf	bounceDown@io& (0+255),w,b
  6784  00389A  0D07               	mullw	7
  6785  00389C  C0EC  F07F         	movff	_NV,??_bounceDown
  6786  0038A0  C0ED  F080         	movff	_NV+1,??_bounceDown+1
  6787  0038A4  50F3               	movf	243,w,c
  6788  0038A6  277F               	addwf	??_bounceDown& (0+255),f,b
  6789  0038A8  50F4               	movf	244,w,c
  6790  0038AA  2380               	addwfc	(??_bounceDown+1)& (0+255),f,b
  6791  0038AC  0E14               	movlw	20
  6792  0038AE  257F               	addwf	??_bounceDown& (0+255),w,b
  6793  0038B0  6ED9               	movwf	fsr2l,c
  6794  0038B2  0E00               	movlw	0
  6795  0038B4  2180               	addwfc	(??_bounceDown+1)& (0+255),w,b
  6796  0038B6  6EDA               	movwf	fsr2h,c
  6797  0038B8  50DF               	movf	indf2,w,c
  6798  0038BA  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6799  0038BC  5181               	movf	(??_bounceDown+2)& (0+255),w,b
  6800  0038BE  6F71               	movwf	___wmul@multiplier& (0+255),b
  6801  0038C0  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
  6802  0038C2  5189               	movf	bounceDown@io& (0+255),w,b
  6803  0038C4  0D02               	mullw	2
  6804  0038C6  0E00               	movlw	low _speed
  6805  0038C8  24F3               	addwf	243,w,c
  6806  0038CA  6ED9               	movwf	fsr2l,c
  6807  0038CC  0E01               	movlw	high _speed
  6808  0038CE  20F4               	addwfc	prodh,w,c
  6809  0038D0  6EDA               	movwf	fsr2h,c
  6810  0038D2  CFDE F082          	movff	postinc2,??_bounceDown+3
  6811  0038D6  CFDD F083          	movff	postdec2,??_bounceDown+4
  6812  0038DA  1F82               	comf	(??_bounceDown+3)& (0+255),f,b
  6813  0038DC  1F83               	comf	(??_bounceDown+4)& (0+255),f,b
  6814  0038DE  4B82               	infsnz	(??_bounceDown+3)& (0+255),f,b
  6815  0038E0  2B83               	incf	(??_bounceDown+4)& (0+255),f,b
  6816  0038E2  C082  F073         	movff	??_bounceDown+3,___wmul@multiplicand
  6817  0038E6  C083  F074         	movff	??_bounceDown+4,___wmul@multiplicand+1
  6818  0038EA  ECEA  F051         	call	___wmul	;wreg free
  6819  0038EE  C071  F077         	movff	?___wmul,___awdiv@dividend
  6820  0038F2  C072  F078         	movff	?___wmul+1,___awdiv@dividend+1
  6821  0038F6  0E00               	movlw	0
  6822  0038F8  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6823  0038FA  0E64               	movlw	100
  6824  0038FC  6F79               	movwf	___awdiv@divisor& (0+255),b
  6825  0038FE  EC30  F046         	call	___awdiv	;wreg free
  6826  003902  5177               	movf	?___awdiv& (0+255),w,b
  6827  003904  6F84               	movwf	(??_bounceDown+5)& (0+255),b
  6828  003906  6B85               	clrf	(??_bounceDown+6)& (0+255),b
  6829  003908  5189               	movf	bounceDown@io& (0+255),w,b
  6830  00390A  0D02               	mullw	2
  6831  00390C  0E00               	movlw	low _speed
  6832  00390E  24F3               	addwf	243,w,c
  6833  003910  6ED9               	movwf	fsr2l,c
  6834  003912  0E01               	movlw	high _speed
  6835  003914  20F4               	addwfc	prodh,w,c
  6836  003916  6EDA               	movwf	fsr2h,c
  6837  003918  C084  FFDE         	movff	??_bounceDown+5,postinc2
  6838  00391C  C085  FFDD         	movff	??_bounceDown+6,postdec2
  6839                           
  6840                           ;bounce.c: 136: tmp = NV->io[io].nv_io.nv_bounce.bounce_lower_pos +;bounce.c: 137: (NV->
      +                          io[io].nv_io.nv_bounce.bounce_lower_pos - currentPos[io]) +;bounce.c: 138: (speed[io]/30
      +                          );
  6841  003920  5189               	movf	bounceDown@io& (0+255),w,b
  6842  003922  0D02               	mullw	2
  6843  003924  0E00               	movlw	low _speed
  6844  003926  24F3               	addwf	243,w,c
  6845  003928  6ED9               	movwf	fsr2l,c
  6846  00392A  0E01               	movlw	high _speed
  6847  00392C  20F4               	addwfc	prodh,w,c
  6848  00392E  6EDA               	movwf	fsr2h,c
  6849  003930  CFDE F077          	movff	postinc2,___awdiv@dividend
  6850  003934  CFDD F078          	movff	postdec2,___awdiv@dividend+1
  6851  003938  0E00               	movlw	0
  6852  00393A  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6853  00393C  0E1E               	movlw	30
  6854  00393E  6F79               	movwf	___awdiv@divisor& (0+255),b
  6855  003940  EC30  F046         	call	___awdiv	;wreg free
  6856  003944  5189               	movf	bounceDown@io& (0+255),w,b
  6857  003946  0D07               	mullw	7
  6858  003948  C0EC  F07F         	movff	_NV,??_bounceDown
  6859  00394C  C0ED  F080         	movff	_NV+1,??_bounceDown+1
  6860  003950  50F3               	movf	243,w,c
  6861  003952  277F               	addwf	??_bounceDown& (0+255),f,b
  6862  003954  50F4               	movf	244,w,c
  6863  003956  2380               	addwfc	(??_bounceDown+1)& (0+255),f,b
  6864  003958  0E13               	movlw	19
  6865  00395A  257F               	addwf	??_bounceDown& (0+255),w,b
  6866  00395C  6ED9               	movwf	fsr2l,c
  6867  00395E  0E00               	movlw	0
  6868  003960  2180               	addwfc	(??_bounceDown+1)& (0+255),w,b
  6869  003962  6EDA               	movwf	fsr2h,c
  6870  003964  50DF               	movf	indf2,w,c
  6871  003966  6F81               	movwf	(??_bounceDown+2)& (0+255),b
  6872  003968  5181               	movf	(??_bounceDown+2)& (0+255),w,b
  6873  00396A  0D02               	mullw	2
  6874  00396C  CFF3 F082          	movff	prodl,??_bounceDown+3
  6875  003970  CFF4 F083          	movff	prodh,??_bounceDown+4
  6876  003974  5177               	movf	?___awdiv& (0+255),w,b
  6877  003976  2782               	addwf	(??_bounceDown+3)& (0+255),f,b
  6878  003978  5178               	movf	(?___awdiv+1)& (0+255),w,b
  6879  00397A  2383               	addwfc	(??_bounceDown+4)& (0+255),f,b
  6880  00397C  0E80               	movlw	low _currentPos
  6881  00397E  2589               	addwf	bounceDown@io& (0+255),w,b
  6882  003980  6ED9               	movwf	fsr2l,c
  6883  003982  6ADA               	clrf	fsr2h,c
  6884  003984  0E01               	movlw	high _currentPos
  6885  003986  22DA               	addwfc	fsr2h,f,c
  6886  003988  50DF               	movf	indf2,w,c
  6887  00398A  6F84               	movwf	(??_bounceDown+5)& (0+255),b
  6888  00398C  5184               	movf	(??_bounceDown+5)& (0+255),w,b
  6889  00398E  5D82               	subwf	(??_bounceDown+3)& (0+255),w,b
  6890  003990  6F87               	movwf	bounceDown@tmp& (0+255),b
  6891  003992  5183               	movf	(??_bounceDown+4)& (0+255),w,b
  6892  003994  A0D8               	btfss	status,0,c
  6893  003996  0583               	decf	(??_bounceDown+4)& (0+255),w,b
  6894  003998  D710               	goto	L1
  6895  00399A                     l19953:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;bounce.c: 143: speed[io] += 3U;
  6899  00399A  5189               	movf	bounceDown@io& (0+255),w,b
  6900  00399C  0D02               	mullw	2
  6901  00399E  0E00               	movlw	low _speed
  6902  0039A0  24F3               	addwf	243,w,c
  6903  0039A2  6ED9               	movwf	fsr2l,c
  6904  0039A4  0E01               	movlw	high _speed
  6905  0039A6  20F4               	addwfc	prodh,w,c
  6906  0039A8  6EDA               	movwf	fsr2h,c
  6907  0039AA  0E03               	movlw	3
  6908  0039AC  26DE               	addwf	postinc2,f,c
  6909  0039AE  0E00               	movlw	0
  6910  0039B0  22DD               	addwfc	postdec2,f,c
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;bounce.c: 144: currentPos[io] += (unsigned char)((speed[io]/30)+1);
  6914  0039B2  5189               	movf	bounceDown@io& (0+255),w,b
  6915  0039B4  0D02               	mullw	2
  6916  0039B6  0E00               	movlw	low _speed
  6917  0039B8  24F3               	addwf	243,w,c
  6918  0039BA  6ED9               	movwf	fsr2l,c
  6919  0039BC  0E01               	movlw	high _speed
  6920  0039BE  20F4               	addwfc	prodh,w,c
  6921  0039C0  6EDA               	movwf	fsr2h,c
  6922  0039C2  CFDE F077          	movff	postinc2,___awdiv@dividend
  6923  0039C6  CFDD F078          	movff	postdec2,___awdiv@dividend+1
  6924  0039CA  0E00               	movlw	0
  6925  0039CC  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  6926  0039CE  0E1E               	movlw	30
  6927  0039D0  6F79               	movwf	___awdiv@divisor& (0+255),b
  6928  0039D2  EC30  F046         	call	___awdiv	;wreg free
  6929  0039D6  0E01               	movlw	1
  6930  0039D8  2777               	addwf	?___awdiv& (0+255),f,b
  6931  0039DA  0E80               	movlw	low _currentPos
  6932  0039DC  2589               	addwf	bounceDown@io& (0+255),w,b
  6933  0039DE  6ED9               	movwf	fsr2l,c
  6934  0039E0  6ADA               	clrf	fsr2h,c
  6935  0039E2  0E01               	movlw	high _currentPos
  6936  0039E4  22DA               	addwfc	fsr2h,f,c
  6937  0039E6  5177               	movf	?___awdiv& (0+255),w,b
  6938  0039E8  26DF               	addwf	indf2,f,c
  6939  0039EA                     l19957:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;bounce.c: 145: };bounce.c: 146: };bounce.c: 148: return 0;
  6943  0039EA  0E00               	movlw	0
  6944  0039EC  0012               	return	
  6945  0039EE                     l19961:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;bounce.c: 149: };bounce.c: 150: return 1;
  6949  0039EE  0E01               	movlw	1
  6950                           
  6951                           ; BSR set to: 0
  6952  0039F0  0012               	return		;funcret
  6953  0039F2                     __end_of_bounceDown:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function ___awdiv *****************
  6957 ;; Defined at:
  6958 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  dividend        2   23[BANK0 ] int 
  6961 ;;  divisor         2   25[BANK0 ] int 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  quotient        2   29[BANK0 ] int 
  6964 ;;  sign            1   28[BANK0 ] unsigned char 
  6965 ;;  counter         1   27[BANK0 ] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  2   23[BANK0 ] int 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 3F/0
  6972 ;;		On exit  : 3F/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;Total ram usage:        8 bytes
  6980 ;; Hardware stack levels used: 1
  6981 ;; Hardware stack levels required when called: 8
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_bounceDown
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text8
  6990  008C60                     __ptext8:
  6991                           	callstack 0
  6992  008C60                     ___awdiv:
  6993                           	callstack 19
  6994                           
  6995                           ; BSR set to: 0
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;incstack = 0
  6999  008C60  0E00               	movlw	0
  7000  008C62  6F7C               	movwf	___awdiv@sign& (0+255),b
  7001                           
  7002                           ; BSR set to: 0
  7003  008C64  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7004  008C66  D006               	goto	l10687
  7005                           
  7006                           ; BSR set to: 0
  7007  008C68  6D79               	negf	___awdiv@divisor& (0+255),b
  7008  008C6A  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7009  008C6C  B0D8               	btfsc	status,0,c
  7010  008C6E  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7011                           
  7012                           ; BSR set to: 0
  7013  008C70  0E01               	movlw	1
  7014  008C72  6F7C               	movwf	___awdiv@sign& (0+255),b
  7015  008C74                     l10687:
  7016                           
  7017                           ; BSR set to: 0
  7018  008C74  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7019  008C76  D006               	goto	l10693
  7020                           
  7021                           ; BSR set to: 0
  7022  008C78  6D77               	negf	___awdiv@dividend& (0+255),b
  7023  008C7A  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7024  008C7C  B0D8               	btfsc	status,0,c
  7025  008C7E  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7026                           
  7027                           ; BSR set to: 0
  7028  008C80  0E01               	movlw	1
  7029  008C82  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
  7030  008C84                     l10693:
  7031                           
  7032                           ; BSR set to: 0
  7033  008C84  0E00               	movlw	0
  7034  008C86  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
  7035  008C88  0E00               	movlw	0
  7036  008C8A  6F7D               	movwf	___awdiv@quotient& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039  008C8C  5179               	movf	___awdiv@divisor& (0+255),w,b
  7040  008C8E  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7041  008C90  B4D8               	btfsc	status,2,c
  7042  008C92  D01C               	goto	l10715
  7043                           
  7044                           ; BSR set to: 0
  7045  008C94  0E01               	movlw	1
  7046  008C96  6F7B               	movwf	___awdiv@counter& (0+255),b
  7047  008C98  D004               	goto	l10701
  7048  008C9A                     l10699:
  7049                           
  7050                           ; BSR set to: 0
  7051  008C9A  90D8               	bcf	status,0,c
  7052  008C9C  3779               	rlcf	___awdiv@divisor& (0+255),f,b
  7053  008C9E  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7054  008CA0  2B7B               	incf	___awdiv@counter& (0+255),f,b
  7055  008CA2                     l10701:
  7056                           
  7057                           ; BSR set to: 0
  7058  008CA2  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7059  008CA4  D7FA               	goto	l10699
  7060  008CA6                     u10620:
  7061                           
  7062                           ; BSR set to: 0
  7063  008CA6  90D8               	bcf	status,0,c
  7064  008CA8  377D               	rlcf	___awdiv@quotient& (0+255),f,b
  7065  008CAA  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7066                           
  7067                           ; BSR set to: 0
  7068  008CAC  5179               	movf	___awdiv@divisor& (0+255),w,b
  7069  008CAE  5D77               	subwf	___awdiv@dividend& (0+255),w,b
  7070  008CB0  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7071  008CB2  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7072  008CB4  A0D8               	btfss	status,0,c
  7073  008CB6  D005               	goto	l10711
  7074                           
  7075                           ; BSR set to: 0
  7076  008CB8  5179               	movf	___awdiv@divisor& (0+255),w,b
  7077  008CBA  5F77               	subwf	___awdiv@dividend& (0+255),f,b
  7078  008CBC  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7079  008CBE  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7080                           
  7081                           ; BSR set to: 0
  7082  008CC0  817D               	bsf	___awdiv@quotient& (0+255),0,b
  7083  008CC2                     l10711:
  7084                           
  7085                           ; BSR set to: 0
  7086  008CC2  90D8               	bcf	status,0,c
  7087  008CC4  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7088  008CC6  3379               	rrcf	___awdiv@divisor& (0+255),f,b
  7089                           
  7090                           ; BSR set to: 0
  7091  008CC8  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
  7092  008CCA  D7ED               	goto	u10620
  7093  008CCC                     l10715:
  7094                           
  7095                           ; BSR set to: 0
  7096  008CCC  517C               	movf	___awdiv@sign& (0+255),w,b
  7097  008CCE  B4D8               	btfsc	status,2,c
  7098  008CD0  D004               	goto	l10719
  7099                           
  7100                           ; BSR set to: 0
  7101  008CD2  6D7D               	negf	___awdiv@quotient& (0+255),b
  7102  008CD4  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7103  008CD6  B0D8               	btfsc	status,0,c
  7104  008CD8  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7105  008CDA                     l10719:
  7106                           
  7107                           ; BSR set to: 0
  7108  008CDA  C07D  F077         	movff	___awdiv@quotient,?___awdiv
  7109  008CDE  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
  7110                           
  7111                           ; BSR set to: 0
  7112  008CE2  0012               	return		;funcret
  7113  008CE4                     __end_of___awdiv:
  7114                           	callstack 0
  7115                           
  7116 ;; *************** function _processOutputs *****************
  7117 ;; Defined at:
  7118 ;;		line 178 in file "../../github/CANMIOfirmware/digitalOut.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  io              1   88[BANK0 ] unsigned char 
  7123 ;;  state           1    0        unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 3E/0
  7130 ;;		On exit  : 3F/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7136 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;Total ram usage:        4 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 16
  7140 ;; This function calls:
  7141 ;;		_doneAction
  7142 ;;		_sendProducedEvent
  7143 ;;		_setOutputPin
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text9
  7150  0055EE                     __ptext9:
  7151                           	callstack 0
  7152  0055EE                     _processOutputs:
  7153                           	callstack 14
  7154                           
  7155                           ;digitalOut.c: 179: BOOL state;;digitalOut.c: 180: unsigned char io;;digitalOut.c: 181: 
      +                          for (io=0; io<16U; io++) {
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;incstack = 0
  7159  0055EE  0E00               	movlw	0
  7160  0055F0  0100               	movlb	0	; () banked
  7161  0055F2  6FB8               	movwf	processOutputs@io& (0+255),b
  7162  0055F4                     l21111:
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;digitalOut.c: 182: if (NV->io[io].type == 1U) {
  7166  0055F4  51B8               	movf	processOutputs@io& (0+255),w,b
  7167  0055F6  0D07               	mullw	7
  7168  0055F8  C0EC  F0B5         	movff	_NV,??_processOutputs
  7169  0055FC  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7170  005600  50F3               	movf	243,w,c
  7171  005602  27B5               	addwf	??_processOutputs& (0+255),f,b
  7172  005604  50F4               	movf	244,w,c
  7173  005606  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7174  005608  0E10               	movlw	16
  7175  00560A  25B5               	addwf	??_processOutputs& (0+255),w,b
  7176  00560C  6ED9               	movwf	fsr2l,c
  7177  00560E  0E00               	movlw	0
  7178  005610  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7179  005612  6EDA               	movwf	fsr2h,c
  7180  005614  04DE               	decf	postinc2,w,c
  7181  005616  A4D8               	btfss	status,2,c
  7182  005618  D10B               	goto	l21151
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;digitalOut.c: 184: if (flashDelays[io] == 1) {
  7186  00561A  0E60               	movlw	low _flashDelays
  7187  00561C  25B8               	addwf	processOutputs@io& (0+255),w,b
  7188  00561E  6ED9               	movwf	fsr2l,c
  7189  005620  6ADA               	clrf	fsr2h,c
  7190  005622  0E01               	movlw	high _flashDelays
  7191  005624  22DA               	addwfc	fsr2h,f,c
  7192  005626  04DE               	decf	postinc2,w,c
  7193  005628  A4D8               	btfss	status,2,c
  7194  00562A  D03D               	goto	l21121
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;digitalOut.c: 185: setOutputPin(io, NV->io[io].flags & 0x20U);
  7198  00562C  51B8               	movf	processOutputs@io& (0+255),w,b
  7199  00562E  0D07               	mullw	7
  7200  005630  C0EC  F0B5         	movff	_NV,??_processOutputs
  7201  005634  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7202  005638  50F3               	movf	243,w,c
  7203  00563A  27B5               	addwf	??_processOutputs& (0+255),f,b
  7204  00563C  50F4               	movf	244,w,c
  7205  00563E  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7206  005640  0E11               	movlw	17
  7207  005642  25B5               	addwf	??_processOutputs& (0+255),w,b
  7208  005644  6ED9               	movwf	fsr2l,c
  7209  005646  0E00               	movlw	0
  7210  005648  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7211  00564A  6EDA               	movwf	fsr2h,c
  7212  00564C  50DF               	movf	indf2,w,c
  7213  00564E  0B20               	andlw	32
  7214  005650  6F71               	movwf	setOutputPin@state& (0+255),b
  7215  005652  51B8               	movf	processOutputs@io& (0+255),w,b
  7216  005654  EC90  F031         	call	_setOutputPin
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;digitalOut.c: 186: flashDelays[io] = NV->io[io].nv_io.nv_output.output_flash_period;
  7220  005658  51B8               	movf	processOutputs@io& (0+255),w,b
  7221  00565A  0D07               	mullw	7
  7222  00565C  C0EC  F0B5         	movff	_NV,??_processOutputs
  7223  005660  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7224  005664  50F3               	movf	243,w,c
  7225  005666  27B5               	addwf	??_processOutputs& (0+255),f,b
  7226  005668  50F4               	movf	244,w,c
  7227  00566A  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7228  00566C  0E13               	movlw	19
  7229  00566E  25B5               	addwf	??_processOutputs& (0+255),w,b
  7230  005670  6ED9               	movwf	fsr2l,c
  7231  005672  0E00               	movlw	0
  7232  005674  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7233  005676  6EDA               	movwf	fsr2h,c
  7234  005678  0E60               	movlw	low _flashDelays
  7235  00567A  25B8               	addwf	processOutputs@io& (0+255),w,b
  7236  00567C  6EE1               	movwf	fsr1l,c
  7237  00567E  6AE2               	clrf	fsr1h,c
  7238  005680  0E01               	movlw	high _flashDelays
  7239  005682  22E2               	addwfc	fsr1h,f,c
  7240  005684  CFDF FFE7          	movff	indf2,indf1
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;digitalOut.c: 187: flashDelays[io] = (char)(- flashDelays[io]);
  7244  005688  0E60               	movlw	low _flashDelays
  7245  00568A  25B8               	addwf	processOutputs@io& (0+255),w,b
  7246  00568C  6ED9               	movwf	fsr2l,c
  7247  00568E  6ADA               	clrf	fsr2h,c
  7248  005690  0E01               	movlw	high _flashDelays
  7249  005692  22DA               	addwfc	fsr2h,f,c
  7250  005694  0E60               	movlw	low _flashDelays
  7251  005696  25B8               	addwf	processOutputs@io& (0+255),w,b
  7252  005698  6EE1               	movwf	fsr1l,c
  7253  00569A  6AE2               	clrf	fsr1h,c
  7254  00569C  0E01               	movlw	high _flashDelays
  7255  00569E  22E2               	addwfc	fsr1h,f,c
  7256  0056A0  50E7               	movf	indf1,w,c
  7257  0056A2  0800               	sublw	0
  7258  0056A4  6EDF               	movwf	indf2,c
  7259  0056A6                     l21121:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;digitalOut.c: 188: };digitalOut.c: 189: if (flashDelays[io] == -1) {
  7263  0056A6  0E60               	movlw	low _flashDelays
  7264  0056A8  25B8               	addwf	processOutputs@io& (0+255),w,b
  7265  0056AA  6ED9               	movwf	fsr2l,c
  7266  0056AC  6ADA               	clrf	fsr2h,c
  7267  0056AE  0E01               	movlw	high _flashDelays
  7268  0056B0  22DA               	addwfc	fsr2h,f,c
  7269  0056B2  28DE               	incf	postinc2,w,c
  7270  0056B4  A4D8               	btfss	status,2,c
  7271  0056B6  D031               	goto	l21127
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;digitalOut.c: 190: setOutputPin(io, (unsigned char)(! (NV->io[io].flags & 0x20U)));
  7275  0056B8  51B8               	movf	processOutputs@io& (0+255),w,b
  7276  0056BA  0D07               	mullw	7
  7277  0056BC  C0EC  F0B5         	movff	_NV,??_processOutputs
  7278  0056C0  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7279  0056C4  50F3               	movf	243,w,c
  7280  0056C6  27B5               	addwf	??_processOutputs& (0+255),f,b
  7281  0056C8  50F4               	movf	244,w,c
  7282  0056CA  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7283  0056CC  0E11               	movlw	17
  7284  0056CE  25B5               	addwf	??_processOutputs& (0+255),w,b
  7285  0056D0  6ED9               	movwf	fsr2l,c
  7286  0056D2  0E00               	movlw	0
  7287  0056D4  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7288  0056D6  6EDA               	movwf	fsr2h,c
  7289  0056D8  BADF               	btfsc	indf2,5,c
  7290  0056DA  D002               	goto	u26860
  7291  0056DC  0E01               	movlw	1
  7292  0056DE  D001               	goto	u26870
  7293  0056E0                     u26860:
  7294  0056E0  0E00               	movlw	0
  7295  0056E2                     u26870:
  7296  0056E2  6F71               	movwf	setOutputPin@state& (0+255),b
  7297  0056E4  51B8               	movf	processOutputs@io& (0+255),w,b
  7298  0056E6  EC90  F031         	call	_setOutputPin
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;digitalOut.c: 191: flashDelays[io] = NV->io[io].nv_io.nv_output.output_flash_period;
  7302  0056EA  51B8               	movf	processOutputs@io& (0+255),w,b
  7303  0056EC  0D07               	mullw	7
  7304  0056EE  C0EC  F0B5         	movff	_NV,??_processOutputs
  7305  0056F2  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7306  0056F6  50F3               	movf	243,w,c
  7307  0056F8  27B5               	addwf	??_processOutputs& (0+255),f,b
  7308  0056FA  50F4               	movf	244,w,c
  7309  0056FC  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7310  0056FE  0E13               	movlw	19
  7311  005700  25B5               	addwf	??_processOutputs& (0+255),w,b
  7312  005702  6ED9               	movwf	fsr2l,c
  7313  005704  0E00               	movlw	0
  7314  005706  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7315  005708  6EDA               	movwf	fsr2h,c
  7316  00570A  0E60               	movlw	low _flashDelays
  7317  00570C  25B8               	addwf	processOutputs@io& (0+255),w,b
  7318  00570E  6EE1               	movwf	fsr1l,c
  7319  005710  6AE2               	clrf	fsr1h,c
  7320  005712  0E01               	movlw	high _flashDelays
  7321  005714  22E2               	addwfc	fsr1h,f,c
  7322  005716  CFDF FFE7          	movff	indf2,indf1
  7323  00571A                     l21127:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;digitalOut.c: 192: };digitalOut.c: 193: if (flashDelays[io] > 1) {
  7327  00571A  0E60               	movlw	low _flashDelays
  7328  00571C  25B8               	addwf	processOutputs@io& (0+255),w,b
  7329  00571E  6ED9               	movwf	fsr2l,c
  7330  005720  6ADA               	clrf	fsr2h,c
  7331  005722  0E01               	movlw	high _flashDelays
  7332  005724  22DA               	addwfc	fsr2h,f,c
  7333  005726  50DF               	movf	indf2,w,c
  7334  005728  0A80               	xorlw	128
  7335  00572A  0F7E               	addlw	-130
  7336  00572C  A0D8               	btfss	status,0,c
  7337  00572E  D008               	goto	l21131
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;digitalOut.c: 194: flashDelays[io]--;
  7341  005730  0E60               	movlw	low _flashDelays
  7342  005732  25B8               	addwf	processOutputs@io& (0+255),w,b
  7343  005734  6ED9               	movwf	fsr2l,c
  7344  005736  6ADA               	clrf	fsr2h,c
  7345  005738  0E01               	movlw	high _flashDelays
  7346  00573A  22DA               	addwfc	fsr2h,f,c
  7347  00573C  06DF               	decf	indf2,f,c
  7348                           
  7349                           ;digitalOut.c: 195: } else if (flashDelays[io] < -1) {
  7350  00573E  D012               	goto	l236
  7351  005740                     l21131:
  7352                           
  7353                           ; BSR set to: 0
  7354  005740  0E60               	movlw	low _flashDelays
  7355  005742  25B8               	addwf	processOutputs@io& (0+255),w,b
  7356  005744  6ED9               	movwf	fsr2l,c
  7357  005746  6ADA               	clrf	fsr2h,c
  7358  005748  0E01               	movlw	high _flashDelays
  7359  00574A  22DA               	addwfc	fsr2h,f,c
  7360  00574C  50DF               	movf	indf2,w,c
  7361  00574E  0A80               	xorlw	128
  7362  005750  0F81               	addlw	129
  7363  005752  B0D8               	btfsc	status,0,c
  7364  005754  D007               	goto	l236
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;digitalOut.c: 196: flashDelays[io]++;
  7368  005756  0E60               	movlw	low _flashDelays
  7369  005758  25B8               	addwf	processOutputs@io& (0+255),w,b
  7370  00575A  6ED9               	movwf	fsr2l,c
  7371  00575C  6ADA               	clrf	fsr2h,c
  7372  00575E  0E01               	movlw	high _flashDelays
  7373  005760  22DA               	addwfc	fsr2h,f,c
  7374  005762  2ADF               	incf	indf2,f,c
  7375  005764                     l236:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;digitalOut.c: 197: };digitalOut.c: 199: if (pulseDelays[io] == 1) {
  7379  005764  0EA4               	movlw	low _pulseDelays
  7380  005766  25B8               	addwf	processOutputs@io& (0+255),w,b
  7381  005768  6ED9               	movwf	fsr2l,c
  7382  00576A  6ADA               	clrf	fsr2h,c
  7383  00576C  0E02               	movlw	high _pulseDelays
  7384  00576E  22DA               	addwfc	fsr2h,f,c
  7385  005770  04DE               	decf	postinc2,w,c
  7386  005772  A4D8               	btfss	status,2,c
  7387  005774  D04D               	goto	l21147
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;digitalOut.c: 201: if (NV->io[io].flags & 0x20U) {
  7391  005776  51B8               	movf	processOutputs@io& (0+255),w,b
  7392  005778  0D07               	mullw	7
  7393  00577A  C0EC  F0B5         	movff	_NV,??_processOutputs
  7394  00577E  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7395  005782  50F3               	movf	243,w,c
  7396  005784  27B5               	addwf	??_processOutputs& (0+255),f,b
  7397  005786  50F4               	movf	244,w,c
  7398  005788  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7399  00578A  0E11               	movlw	17
  7400  00578C  25B5               	addwf	??_processOutputs& (0+255),w,b
  7401  00578E  6ED9               	movwf	fsr2l,c
  7402  005790  0E00               	movlw	0
  7403  005792  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7404  005794  6EDA               	movwf	fsr2h,c
  7405  005796  AADF               	btfss	indf2,5,c
  7406  005798  D006               	goto	l21139
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;digitalOut.c: 202: setOutputPin(io, 1);
  7410  00579A  0E01               	movlw	1
  7411  00579C  6F71               	movwf	setOutputPin@state& (0+255),b
  7412  00579E  51B8               	movf	processOutputs@io& (0+255),w,b
  7413  0057A0  EC90  F031         	call	_setOutputPin
  7414                           
  7415                           ;digitalOut.c: 203: } else {
  7416  0057A4  D005               	goto	l21141
  7417  0057A6                     l21139:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;digitalOut.c: 204: setOutputPin(io, 0);
  7421  0057A6  0E00               	movlw	0
  7422  0057A8  6F71               	movwf	setOutputPin@state& (0+255),b
  7423  0057AA  51B8               	movf	processOutputs@io& (0+255),w,b
  7424  0057AC  EC90  F031         	call	_setOutputPin
  7425  0057B0                     l21141:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;digitalOut.c: 205: };digitalOut.c: 207: if ( ! (NV->io[io].flags & 0x08U)) {
  7429  0057B0  51B8               	movf	processOutputs@io& (0+255),w,b
  7430  0057B2  0D07               	mullw	7
  7431  0057B4  C0EC  F0B5         	movff	_NV,??_processOutputs
  7432  0057B8  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7433  0057BC  50F3               	movf	243,w,c
  7434  0057BE  27B5               	addwf	??_processOutputs& (0+255),f,b
  7435  0057C0  50F4               	movf	244,w,c
  7436  0057C2  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7437  0057C4  0E11               	movlw	17
  7438  0057C6  25B5               	addwf	??_processOutputs& (0+255),w,b
  7439  0057C8  6ED9               	movwf	fsr2l,c
  7440  0057CA  0E00               	movlw	0
  7441  0057CC  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7442  0057CE  6EDA               	movwf	fsr2h,c
  7443  0057D0  B6DF               	btfsc	indf2,3,c
  7444  0057D2  D01C               	goto	l21145
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;digitalOut.c: 209: sendProducedEvent(((8U + 4U*(io))+0U), (BOOL)(!(NV->io[io].flags & 0
      +                          x40U)));
  7448  0057D4  51B8               	movf	processOutputs@io& (0+255),w,b
  7449  0057D6  0D07               	mullw	7
  7450  0057D8  C0EC  F0B5         	movff	_NV,??_processOutputs
  7451  0057DC  C0ED  F0B6         	movff	_NV+1,??_processOutputs+1
  7452  0057E0  50F3               	movf	243,w,c
  7453  0057E2  27B5               	addwf	??_processOutputs& (0+255),f,b
  7454  0057E4  50F4               	movf	244,w,c
  7455  0057E6  23B6               	addwfc	(??_processOutputs+1)& (0+255),f,b
  7456  0057E8  0E11               	movlw	17
  7457  0057EA  25B5               	addwf	??_processOutputs& (0+255),w,b
  7458  0057EC  6ED9               	movwf	fsr2l,c
  7459  0057EE  0E00               	movlw	0
  7460  0057F0  21B6               	addwfc	(??_processOutputs+1)& (0+255),w,b
  7461  0057F2  6EDA               	movwf	fsr2h,c
  7462  0057F4  BCDF               	btfsc	indf2,6,c
  7463  0057F6  D002               	goto	u26930
  7464  0057F8  0E01               	movlw	1
  7465  0057FA  D001               	goto	u26940
  7466  0057FC                     u26930:
  7467  0057FC  0E00               	movlw	0
  7468  0057FE                     u26940:
  7469  0057FE  6FAE               	movwf	sendProducedEvent@on& (0+255),b
  7470  005800  51B8               	movf	processOutputs@io& (0+255),w,b
  7471  005802  0D04               	mullw	4
  7472  005804  50F3               	movf	243,w,c
  7473  005806  0F08               	addlw	8
  7474  005808  EC54  F03C         	call	_sendProducedEvent
  7475  00580C                     l21145:
  7476                           
  7477                           ;digitalOut.c: 210: };digitalOut.c: 211: doneAction();
  7478  00580C  EC74  F053         	call	_doneAction	;wreg free
  7479  005810                     l21147:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;digitalOut.c: 212: };digitalOut.c: 213: if (pulseDelays[io] != 0) {
  7483  005810  0EA4               	movlw	low _pulseDelays
  7484  005812  25B8               	addwf	processOutputs@io& (0+255),w,b
  7485  005814  6ED9               	movwf	fsr2l,c
  7486  005816  6ADA               	clrf	fsr2h,c
  7487  005818  0E02               	movlw	high _pulseDelays
  7488  00581A  22DA               	addwfc	fsr2h,f,c
  7489  00581C  50DF               	movf	indf2,w,c
  7490  00581E  B4D8               	btfsc	status,2,c
  7491  005820  D007               	goto	l21151
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;digitalOut.c: 214: pulseDelays[io]--;
  7495  005822  0EA4               	movlw	low _pulseDelays
  7496  005824  25B8               	addwf	processOutputs@io& (0+255),w,b
  7497  005826  6ED9               	movwf	fsr2l,c
  7498  005828  6ADA               	clrf	fsr2h,c
  7499  00582A  0E02               	movlw	high _pulseDelays
  7500  00582C  22DA               	addwfc	fsr2h,f,c
  7501  00582E  06DF               	decf	indf2,f,c
  7502  005830                     l21151:
  7503                           
  7504                           ; BSR set to: 0
  7505  005830  2BB8               	incf	processOutputs@io& (0+255),f,b
  7506                           
  7507                           ; BSR set to: 0
  7508  005832  0E0F               	movlw	15
  7509  005834  65B8               	cpfsgt	processOutputs@io& (0+255),b
  7510  005836  D6DE               	goto	l21111
  7511  005838  0012               	return	
  7512  00583A                     __end_of_processOutputs:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function _processActions *****************
  7516 ;; Defined at:
  7517 ;;		line 361 in file "../../github/CANMIOfirmware/mioEvents.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;		None
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;  nextAction      1  114[BANK0 ] unsigned char 
  7522 ;;  nextIo          1  111[BANK0 ] unsigned char 
  7523 ;;  nextType        1  109[BANK0 ] unsigned char 
  7524 ;;  ioAction        1  113[BANK0 ] unsigned char 
  7525 ;;  action          1  112[BANK0 ] unsigned char 
  7526 ;;  io              1  110[BANK0 ] unsigned char 
  7527 ;;  type            1  108[BANK0 ] unsigned char 
  7528 ;;  peekItem        1  107[BANK0 ] unsigned char 
  7529 ;;  simultaneous    1  106[BANK0 ] unsigned char 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 3F/2
  7536 ;;		On exit  : 3E/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;Total ram usage:       11 bytes
  7544 ;; Hardware stack levels used: 1
  7545 ;; Hardware stack levels required when called: 19
  7546 ;; This function calls:
  7547 ;;		___lwdiv
  7548 ;;		___lwmod
  7549 ;;		_completed
  7550 ;;		_deleteActionQueue
  7551 ;;		_doSOD
  7552 ;;		_doWait
  7553 ;;		_doneAction
  7554 ;;		_getAction
  7555 ;;		_needsStarting
  7556 ;;		_peekActionQueue
  7557 ;;		_setOutputState
  7558 ;;		_startOutput
  7559 ;; This function is called by:
  7560 ;;		_main
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text10
  7565  00583A                     __ptext10:
  7566                           	callstack 0
  7567  00583A                     _processActions:
  7568                           	callstack 11
  7569                           
  7570                           ; BSR set to: 2
  7571                           ;mioEvents.c: 362: unsigned char io;;mioEvents.c: 363: unsigned char type;;mioEvents.c: 
      +                          364: unsigned char action = getAction();
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;incstack = 0
  7575  00583A  EC68  F053         	call	_getAction	;wreg free
  7576  00583E  6FD0               	movwf	processActions@action& (0+255),b
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;mioEvents.c: 365: unsigned char ioAction;;mioEvents.c: 366: unsigned char simultaneous;
      +                          ;mioEvents.c: 367: unsigned char peekItem;;mioEvents.c: 370: if (action == 0) {
  7580  005840  51D0               	movf	processActions@action& (0+255),w,b
  7581  005842  A4D8               	btfss	status,2,c
  7582  005844  D003               	goto	l21517
  7583  005846                     u27620:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;mioEvents.c: 371: doneAction();
  7587  005846  EC74  F053         	call	_doneAction	;wreg free
  7588  00584A  0012               	return	
  7589  00584C                     l21517:
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;mioEvents.c: 373: };mioEvents.c: 375: if (action == 1U) {
  7593  00584C  05D0               	decf	processActions@action& (0+255),w,b
  7594  00584E  A4D8               	btfss	status,2,c
  7595  005850  D003               	goto	l21525
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;mioEvents.c: 377: doSOD();
  7599  005852  EC54  F053         	call	_doSOD	;wreg free
  7600  005856  D7F7               	goto	u27620
  7601  005858                     l21525:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;mioEvents.c: 380: };mioEvents.c: 381: if (action == 2U) {
  7605  005858  0E02               	movlw	2
  7606  00585A  19D0               	xorwf	processActions@action& (0+255),w,b
  7607  00585C  A4D8               	btfss	status,2,c
  7608  00585E  D007               	goto	l21531
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;mioEvents.c: 382: doWait(5);
  7612  005860  0E00               	movlw	0
  7613  005862  6F7E               	movwf	(doWait@duration+1)& (0+255),b
  7614  005864  0E05               	movlw	5
  7615  005866  6F7D               	movwf	doWait@duration& (0+255),b
  7616  005868  EC5A  F043         	call	_doWait	;wreg free
  7617  00586C  0012               	return	
  7618  00586E                     l21531:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;mioEvents.c: 384: };mioEvents.c: 385: if (action == 3U) {
  7622  00586E  0E03               	movlw	3
  7623  005870  19D0               	xorwf	processActions@action& (0+255),w,b
  7624  005872  A4D8               	btfss	status,2,c
  7625  005874  D007               	goto	l21537
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;mioEvents.c: 386: doWait(10);
  7629  005876  0E00               	movlw	0
  7630  005878  6F7E               	movwf	(doWait@duration+1)& (0+255),b
  7631  00587A  0E0A               	movlw	10
  7632  00587C  6F7D               	movwf	doWait@duration& (0+255),b
  7633  00587E  EC5A  F043         	call	_doWait	;wreg free
  7634  005882  0012               	return	
  7635  005884                     l21537:
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;mioEvents.c: 388: };mioEvents.c: 389: if (action == 4U) {
  7639  005884  0E04               	movlw	4
  7640  005886  19D0               	xorwf	processActions@action& (0+255),w,b
  7641  005888  A4D8               	btfss	status,2,c
  7642  00588A  D007               	goto	l21543
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;mioEvents.c: 390: doWait(20);
  7646  00588C  0E00               	movlw	0
  7647  00588E  6F7E               	movwf	(doWait@duration+1)& (0+255),b
  7648  005890  0E14               	movlw	20
  7649  005892  6F7D               	movwf	doWait@duration& (0+255),b
  7650  005894  EC5A  F043         	call	_doWait	;wreg free
  7651  005898  0012               	return	
  7652  00589A                     l21543:
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;mioEvents.c: 392: };mioEvents.c: 393: if (action == 5U) {
  7656  00589A  0E05               	movlw	5
  7657  00589C  19D0               	xorwf	processActions@action& (0+255),w,b
  7658  00589E  A4D8               	btfss	status,2,c
  7659  0058A0  D007               	goto	l21549
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;mioEvents.c: 394: doWait(50);
  7663  0058A2  0E00               	movlw	0
  7664  0058A4  6F7E               	movwf	(doWait@duration+1)& (0+255),b
  7665  0058A6  0E32               	movlw	50
  7666  0058A8  6F7D               	movwf	doWait@duration& (0+255),b
  7667  0058AA  EC5A  F043         	call	_doWait	;wreg free
  7668  0058AE  0012               	return	
  7669  0058B0                     l21549:
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;mioEvents.c: 396: };mioEvents.c: 397: simultaneous = action & 0x80U;
  7673  0058B0  51D0               	movf	processActions@action& (0+255),w,b
  7674  0058B2  0B80               	andlw	128
  7675  0058B4  6FCA               	movwf	processActions@simultaneous& (0+255),b
  7676                           
  7677                           ;mioEvents.c: 398: ioAction = action&0x7FU;
  7678  0058B6  51D0               	movf	processActions@action& (0+255),w,b
  7679  0058B8  0B7F               	andlw	127
  7680  0058BA  6FD1               	movwf	processActions@ioAction& (0+255),b
  7681                           
  7682                           ;mioEvents.c: 399: if ((ioAction >= 8U) && (ioAction < (8U + 16U * 5U))) {
  7683  0058BC  0E07               	movlw	7
  7684  0058BE  65D1               	cpfsgt	processActions@ioAction& (0+255),b
  7685  0058C0  D7C2               	goto	u27620
  7686                           
  7687                           ; BSR set to: 0
  7688  0058C2  0E58               	movlw	88
  7689  0058C4  61D1               	cpfslt	processActions@ioAction& (0+255),b
  7690  0058C6  D7BF               	goto	u27620
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;mioEvents.c: 402: io = (((ioAction)-8U)/5U);
  7694  0058C8  0EF8               	movlw	248
  7695  0058CA  25D1               	addwf	processActions@ioAction& (0+255),w,b
  7696  0058CC  6F71               	movwf	___lwdiv@dividend& (0+255),b
  7697  0058CE  6B72               	clrf	(___lwdiv@dividend+1)& (0+255),b
  7698  0058D0  0EFF               	movlw	255
  7699  0058D2  2372               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
  7700  0058D4  0E00               	movlw	0
  7701  0058D6  6F74               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7702  0058D8  0E05               	movlw	5
  7703  0058DA  6F73               	movwf	___lwdiv@divisor& (0+255),b
  7704  0058DC  ECC7  F04C         	call	___lwdiv	;wreg free
  7705  0058E0  5171               	movf	?___lwdiv& (0+255),w,b
  7706  0058E2  6FCE               	movwf	processActions@io& (0+255),b
  7707                           
  7708                           ;mioEvents.c: 403: ioAction = (((ioAction)-8U)%5U);
  7709  0058E4  0EF8               	movlw	248
  7710  0058E6  25D1               	addwf	processActions@ioAction& (0+255),w,b
  7711  0058E8  6F71               	movwf	___lwmod@dividend& (0+255),b
  7712  0058EA  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
  7713  0058EC  0EFF               	movlw	255
  7714  0058EE  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
  7715  0058F0  0E00               	movlw	0
  7716  0058F2  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
  7717  0058F4  0E05               	movlw	5
  7718  0058F6  6F73               	movwf	___lwmod@divisor& (0+255),b
  7719  0058F8  ECCA  F04E         	call	___lwmod	;wreg free
  7720  0058FC  5171               	movf	?___lwmod& (0+255),w,b
  7721  0058FE  6FD1               	movwf	processActions@ioAction& (0+255),b
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;mioEvents.c: 404: type = NV->io[io].type;
  7725  005900  51CE               	movf	processActions@io& (0+255),w,b
  7726  005902  0D07               	mullw	7
  7727  005904  C0EC  F0C8         	movff	_NV,??_processActions
  7728  005908  C0ED  F0C9         	movff	_NV+1,??_processActions+1
  7729  00590C  50F3               	movf	243,w,c
  7730  00590E  27C8               	addwf	??_processActions& (0+255),f,b
  7731  005910  50F4               	movf	244,w,c
  7732  005912  23C9               	addwfc	(??_processActions+1)& (0+255),f,b
  7733  005914  0E10               	movlw	16
  7734  005916  25C8               	addwf	??_processActions& (0+255),w,b
  7735  005918  6ED9               	movwf	fsr2l,c
  7736  00591A  0E00               	movlw	0
  7737  00591C  21C9               	addwfc	(??_processActions+1)& (0+255),w,b
  7738  00591E  6EDA               	movwf	fsr2h,c
  7739  005920  50DF               	movf	indf2,w,c
  7740  005922  6FCC               	movwf	processActions@type& (0+255),b
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;mioEvents.c: 407: setOutputState(io, ioAction, type);
  7744  005924  C0D1  F076         	movff	processActions@ioAction,setOutputState@action
  7745  005928  C0CC  F077         	movff	processActions@type,setOutputState@type
  7746  00592C  51CE               	movf	processActions@io& (0+255),w,b
  7747  00592E  EC4B  F04C         	call	_setOutputState
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;mioEvents.c: 408: if (needsStarting(io, ioAction, type)) {
  7751  005932  C0D1  F071         	movff	processActions@ioAction,needsStarting@action
  7752  005936  C0CC  F072         	movff	processActions@type,needsStarting@type
  7753  00593A  51CE               	movf	processActions@io& (0+255),w,b
  7754  00593C  EC72  F046         	call	_needsStarting
  7755  005940  0900               	iorlw	0
  7756  005942  B4D8               	btfsc	status,2,c
  7757  005944  D007               	goto	l21563
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;mioEvents.c: 409: startOutput(io, ioAction, type);
  7761  005946  C0D1  F0C5         	movff	processActions@ioAction,startOutput@action
  7762  00594A  C0CC  F0C6         	movff	processActions@type,startOutput@type
  7763  00594E  51CE               	movf	processActions@io& (0+255),w,b
  7764  005950  EC71  F04B         	call	_startOutput
  7765  005954                     l21563:
  7766                           
  7767                           ;mioEvents.c: 410: };mioEvents.c: 412: peekItem = 1;
  7768  005954  0E01               	movlw	1
  7769  005956  0100               	movlb	0	; () banked
  7770  005958  6FCB               	movwf	processActions@peekItem& (0+255),b
  7771                           
  7772                           ;mioEvents.c: 413: while (simultaneous) {
  7773  00595A  D064               	goto	l21597
  7774  00595C                     l21565:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;mioEvents.c: 414: unsigned char nextAction;;mioEvents.c: 415: unsigned char nextIo;;mio
      +                          Events.c: 416: unsigned char nextType;;mioEvents.c: 418: nextAction = peekActionQueue(pe
      +                          ekItem);
  7778  00595C  51CB               	movf	processActions@peekItem& (0+255),w,b
  7779  00595E  ECE7  F04A         	call	_peekActionQueue
  7780  005962  6FD2               	movwf	processActions@nextAction& (0+255),b
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;mioEvents.c: 419: if (nextAction == 0) break;
  7784  005964  51D2               	movf	processActions@nextAction& (0+255),w,b
  7785  005966  B4D8               	btfsc	status,2,c
  7786  005968  D060               	goto	u27750
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;mioEvents.c: 420: simultaneous = nextAction & 0x80U;
  7790  00596A  51D2               	movf	processActions@nextAction& (0+255),w,b
  7791  00596C  0B80               	andlw	128
  7792  00596E  6FCA               	movwf	processActions@simultaneous& (0+255),b
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;mioEvents.c: 421: nextAction &= 0x7FU;
  7796  005970  9FD2               	bcf	processActions@nextAction& (0+255),7,b
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;mioEvents.c: 422: nextIo = (((nextAction)-8U)/5U);
  7800  005972  0EF8               	movlw	248
  7801  005974  25D2               	addwf	processActions@nextAction& (0+255),w,b
  7802  005976  6F71               	movwf	___lwdiv@dividend& (0+255),b
  7803  005978  6B72               	clrf	(___lwdiv@dividend+1)& (0+255),b
  7804  00597A  0EFF               	movlw	255
  7805  00597C  2372               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
  7806  00597E  0E00               	movlw	0
  7807  005980  6F74               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7808  005982  0E05               	movlw	5
  7809  005984  6F73               	movwf	___lwdiv@divisor& (0+255),b
  7810  005986  ECC7  F04C         	call	___lwdiv	;wreg free
  7811  00598A  5171               	movf	?___lwdiv& (0+255),w,b
  7812  00598C  6FCF               	movwf	processActions@nextIo& (0+255),b
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;mioEvents.c: 423: if (nextIo == io) {
  7816  00598E  51CE               	movf	processActions@io& (0+255),w,b
  7817  005990  19CF               	xorwf	processActions@nextIo& (0+255),w,b
  7818  005992  B4D8               	btfsc	status,2,c
  7819  005994  D04A               	goto	u27750
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;mioEvents.c: 428: };mioEvents.c: 429: nextAction = (((nextAction)-8U)%5U);
  7823  005996  0EF8               	movlw	248
  7824  005998  25D2               	addwf	processActions@nextAction& (0+255),w,b
  7825  00599A  6F71               	movwf	___lwmod@dividend& (0+255),b
  7826  00599C  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
  7827  00599E  0EFF               	movlw	255
  7828  0059A0  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
  7829  0059A2  0E00               	movlw	0
  7830  0059A4  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
  7831  0059A6  0E05               	movlw	5
  7832  0059A8  6F73               	movwf	___lwmod@divisor& (0+255),b
  7833  0059AA  ECCA  F04E         	call	___lwmod	;wreg free
  7834  0059AE  5171               	movf	?___lwmod& (0+255),w,b
  7835  0059B0  6FD2               	movwf	processActions@nextAction& (0+255),b
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;mioEvents.c: 430: nextType = NV->io[nextIo].type;
  7839  0059B2  51CF               	movf	processActions@nextIo& (0+255),w,b
  7840  0059B4  0D07               	mullw	7
  7841  0059B6  C0EC  F0C8         	movff	_NV,??_processActions
  7842  0059BA  C0ED  F0C9         	movff	_NV+1,??_processActions+1
  7843  0059BE  50F3               	movf	243,w,c
  7844  0059C0  27C8               	addwf	??_processActions& (0+255),f,b
  7845  0059C2  50F4               	movf	244,w,c
  7846  0059C4  23C9               	addwfc	(??_processActions+1)& (0+255),f,b
  7847  0059C6  0E10               	movlw	16
  7848  0059C8  25C8               	addwf	??_processActions& (0+255),w,b
  7849  0059CA  6ED9               	movwf	fsr2l,c
  7850  0059CC  0E00               	movlw	0
  7851  0059CE  21C9               	addwfc	(??_processActions+1)& (0+255),w,b
  7852  0059D0  6EDA               	movwf	fsr2h,c
  7853  0059D2  50DF               	movf	indf2,w,c
  7854  0059D4  6FCD               	movwf	processActions@nextType& (0+255),b
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;mioEvents.c: 431: setOutputState(nextIo, nextAction, nextType);
  7858  0059D6  C0D2  F076         	movff	processActions@nextAction,setOutputState@action
  7859  0059DA  C0CD  F077         	movff	processActions@nextType,setOutputState@type
  7860  0059DE  51CF               	movf	processActions@nextIo& (0+255),w,b
  7861  0059E0  EC4B  F04C         	call	_setOutputState
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;mioEvents.c: 432: if (needsStarting(nextIo, nextAction, nextType)) {
  7865  0059E4  C0D2  F071         	movff	processActions@nextAction,needsStarting@action
  7866  0059E8  C0CD  F072         	movff	processActions@nextType,needsStarting@type
  7867  0059EC  51CF               	movf	processActions@nextIo& (0+255),w,b
  7868  0059EE  EC72  F046         	call	_needsStarting
  7869  0059F2  0900               	iorlw	0
  7870  0059F4  B4D8               	btfsc	status,2,c
  7871  0059F6  D007               	goto	l21591
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;mioEvents.c: 433: startOutput(nextIo, nextAction, nextType);
  7875  0059F8  C0D2  F0C5         	movff	processActions@nextAction,startOutput@action
  7876  0059FC  C0CD  F0C6         	movff	processActions@nextType,startOutput@type
  7877  005A00  51CF               	movf	processActions@nextIo& (0+255),w,b
  7878  005A02  EC71  F04B         	call	_startOutput
  7879  005A06                     l21591:
  7880                           
  7881                           ;mioEvents.c: 434: };mioEvents.c: 435: if (completed(nextIo, nextAction, nextType)) {
  7882  005A06  C0D2  F071         	movff	processActions@nextAction,completed@action
  7883  005A0A  C0CD  F072         	movff	processActions@nextType,completed@type
  7884  005A0E  0100               	movlb	0	; () banked
  7885  005A10  51CF               	movf	processActions@nextIo& (0+255),w,b
  7886  005A12  EC41  F044         	call	_completed
  7887  005A16  0900               	iorlw	0
  7888  005A18  B4D8               	btfsc	status,2,c
  7889  005A1A  D003               	goto	l21595
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;mioEvents.c: 436: deleteActionQueue(peekItem);
  7893  005A1C  51CB               	movf	processActions@peekItem& (0+255),w,b
  7894  005A1E  EC65  F04D         	call	_deleteActionQueue
  7895  005A22                     l21595:
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;mioEvents.c: 437: };mioEvents.c: 438: peekItem++;
  7899  005A22  2BCB               	incf	processActions@peekItem& (0+255),f,b
  7900  005A24                     l21597:
  7901                           
  7902                           ; BSR set to: 0
  7903  005A24  51CA               	movf	processActions@simultaneous& (0+255),w,b
  7904  005A26  A4D8               	btfss	status,2,c
  7905  005A28  D799               	goto	l21565
  7906  005A2A                     u27750:
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;mioEvents.c: 439: };mioEvents.c: 441: if (completed(io, ioAction, type)) {
  7910  005A2A  C0D1  F071         	movff	processActions@ioAction,completed@action
  7911  005A2E  C0CC  F072         	movff	processActions@type,completed@type
  7912  005A32  51CE               	movf	processActions@io& (0+255),w,b
  7913  005A34  EC41  F044         	call	_completed
  7914  005A38  0900               	iorlw	0
  7915  005A3A  B4D8               	btfsc	status,2,c
  7916  005A3C  0012               	return	
  7917  005A3E  D703               	goto	u27620
  7918  005A40                     __end_of_processActions:
  7919                           	callstack 0
  7920                           
  7921 ;; *************** function _startOutput *****************
  7922 ;; Defined at:
  7923 ;;		line 69 in file "../../github/CANMIOfirmware/outputs.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  io              1    wreg     unsigned char 
  7926 ;;  action          1  101[BANK0 ] unsigned char 
  7927 ;;  type            1  102[BANK0 ] unsigned char 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  io              1  103[BANK0 ] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1    wreg      void 
  7932 ;; Registers used:
  7933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7934 ;; Tracked objects:
  7935 ;;		On entry : 3F/0
  7936 ;;		On exit  : 3E/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7942 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7943 ;;Total ram usage:        3 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; Hardware stack levels required when called: 18
  7946 ;; This function calls:
  7947 ;;		_startBounceOutput
  7948 ;;		_startDigitalOutput
  7949 ;;		_startMultiOutput
  7950 ;;		_startServoOutput
  7951 ;; This function is called by:
  7952 ;;		_processActions
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text11
  7957  0096E2                     __ptext11:
  7958                           	callstack 0
  7959  0096E2                     _startOutput:
  7960                           	callstack 11
  7961                           
  7962                           ;incstack = 0
  7963                           ;startOutput@io stored from wreg
  7964  0096E2  6FC7               	movwf	startOutput@io& (0+255),b
  7965                           
  7966                           ;outputs.c: 70: switch(type) {
  7967  0096E4  D018               	goto	l20497
  7968  0096E6                     l20479:
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;outputs.c: 75: startDigitalOutput(io, action);
  7972  0096E6  C0C5  F0BD         	movff	startOutput@action,startDigitalOutput@state
  7973  0096EA  51C7               	movf	startOutput@io& (0+255),w,b
  7974  0096EC  ECE3  F026         	call	_startDigitalOutput
  7975  0096F0  0012               	return	
  7976  0096F2                     l20483:
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;outputs.c: 79: startBounceOutput(io, action);
  7980  0096F2  C0C5  F071         	movff	startOutput@action,startBounceOutput@action
  7981  0096F6  51C7               	movf	startOutput@io& (0+255),w,b
  7982  0096F8  ECC3  F049         	call	_startBounceOutput
  7983  0096FC  0012               	return	
  7984  0096FE                     l20487:
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;outputs.c: 84: startServoOutput(io, action);
  7988  0096FE  C0C5  F071         	movff	startOutput@action,startServoOutput@action
  7989  009702  51C7               	movf	startOutput@io& (0+255),w,b
  7990  009704  EC0A  F03B         	call	_startServoOutput
  7991  009708  0012               	return	
  7992  00970A                     l20491:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;outputs.c: 89: startMultiOutput(io, action);
  7996  00970A  C0C5  F071         	movff	startOutput@action,startMultiOutput@action
  7997  00970E  51C7               	movf	startOutput@io& (0+255),w,b
  7998  009710  ECB9  F042         	call	_startMultiOutput
  7999  009714  0012               	return	
  8000  009716                     l20497:
  8001  009716  0100               	movlb	0	; () banked
  8002  009718  51C6               	movf	startOutput@type& (0+255),w,b
  8003                           
  8004                           ; Switch size 1, requested type "simple"
  8005                           ; Number of cases is 5, Range of values is 0 to 4
  8006                           ; switch strategies available:
  8007                           ; Name         Instructions Cycles
  8008                           ; simple_byte           16     9 (average)
  8009                           ;	Chosen strategy is simple_byte
  8010  00971A  0A00               	xorlw	0	; case 0
  8011  00971C  B4D8               	btfsc	status,2,c
  8012  00971E  0012               	return	
  8013  009720  0A01               	xorlw	1	; case 1
  8014  009722  B4D8               	btfsc	status,2,c
  8015  009724  D7E0               	goto	l20479
  8016  009726  0A03               	xorlw	3	; case 2
  8017  009728  B4D8               	btfsc	status,2,c
  8018  00972A  D7E9               	goto	l20487
  8019  00972C  0A01               	xorlw	1	; case 3
  8020  00972E  B4D8               	btfsc	status,2,c
  8021  009730  D7E0               	goto	l20483
  8022  009732  0A07               	xorlw	7	; case 4
  8023  009734  A4D8               	btfss	status,2,c
  8024  009736  0012               	return	
  8025  009738  D7E8               	goto	l20491
  8026  00973A                     __end_of_startOutput:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _startDigitalOutput *****************
  8030 ;; Defined at:
  8031 ;;		line 108 in file "../../github/CANMIOfirmware/digitalOut.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  io              1    wreg     unsigned char 
  8034 ;;  state           1   93[BANK0 ] unsigned char 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  io              1  100[BANK0 ] unsigned char 
  8037 ;;  actionState     1   99[BANK0 ] unsigned char 
  8038 ;;  pinState        1   98[BANK0 ] unsigned char 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 3F/0
  8045 ;;		On exit  : 3E/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8048 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;Total ram usage:        8 bytes
  8053 ;; Hardware stack levels used: 1
  8054 ;; Hardware stack levels required when called: 17
  8055 ;; This function calls:
  8056 ;;		_ee_write
  8057 ;;		_sendInvertedProducedEvent
  8058 ;;		_setOutputPin
  8059 ;; This function is called by:
  8060 ;;		_startOutput
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text12
  8065  004DC6                     __ptext12:
  8066                           	callstack 0
  8067  004DC6                     _startDigitalOutput:
  8068                           	callstack 11
  8069                           
  8070                           ;incstack = 0
  8071                           ;startDigitalOutput@io stored from wreg
  8072  004DC6  6FC4               	movwf	startDigitalOutput@io& (0+255),b
  8073                           
  8074                           ;digitalOut.c: 109: BOOL pinState;;digitalOut.c: 110: BOOL actionState;;digitalOut.c: 11
      +                          8: if (state == 3U) {
  8075  004DC8  0E03               	movlw	3
  8076  004DCA  0100               	movlb	0	; () banked
  8077  004DCC  19BD               	xorwf	startDigitalOutput@state& (0+255),w,b
  8078  004DCE  A4D8               	btfss	status,2,c
  8079  004DD0  D063               	goto	l19979
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;digitalOut.c: 119: flashDelays[io] = NV->io[io].nv_io.nv_output.output_flash_period;
  8083  004DD2  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8084  004DD4  0D07               	mullw	7
  8085  004DD6  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8086  004DDA  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8087  004DDE  50F3               	movf	243,w,c
  8088  004DE0  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8089  004DE2  50F4               	movf	244,w,c
  8090  004DE4  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8091  004DE6  0E13               	movlw	19
  8092  004DE8  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8093  004DEA  6ED9               	movwf	fsr2l,c
  8094  004DEC  0E00               	movlw	0
  8095  004DEE  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8096  004DF0  6EDA               	movwf	fsr2h,c
  8097  004DF2  0E60               	movlw	low _flashDelays
  8098  004DF4  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8099  004DF6  6EE1               	movwf	fsr1l,c
  8100  004DF8  6AE2               	clrf	fsr1h,c
  8101  004DFA  0E01               	movlw	high _flashDelays
  8102  004DFC  22E2               	addwfc	fsr1h,f,c
  8103  004DFE  CFDF FFE7          	movff	indf2,indf1
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;digitalOut.c: 120: pulseDelays[io] = 0;
  8107  004E02  0EA4               	movlw	low _pulseDelays
  8108  004E04  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8109  004E06  6ED9               	movwf	fsr2l,c
  8110  004E08  6ADA               	clrf	fsr2h,c
  8111  004E0A  0E02               	movlw	high _pulseDelays
  8112  004E0C  22DA               	addwfc	fsr2h,f,c
  8113  004E0E  0E00               	movlw	0
  8114  004E10  6EDF               	movwf	indf2,c
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;digitalOut.c: 121: setOutputPin(io, (unsigned char)(! ((NV->io[io].flags) & 0x20U)));
  8118  004E12  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8119  004E14  0D07               	mullw	7
  8120  004E16  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8121  004E1A  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8122  004E1E  50F3               	movf	243,w,c
  8123  004E20  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8124  004E22  50F4               	movf	244,w,c
  8125  004E24  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8126  004E26  0E11               	movlw	17
  8127  004E28  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8128  004E2A  6ED9               	movwf	fsr2l,c
  8129  004E2C  0E00               	movlw	0
  8130  004E2E  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8131  004E30  6EDA               	movwf	fsr2h,c
  8132  004E32  BADF               	btfsc	indf2,5,c
  8133  004E34  D002               	goto	u24760
  8134  004E36  0E01               	movlw	1
  8135  004E38  D001               	goto	u24770
  8136  004E3A                     u24760:
  8137  004E3A  0E00               	movlw	0
  8138  004E3C                     u24770:
  8139  004E3C  6F71               	movwf	setOutputPin@state& (0+255),b
  8140  004E3E  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8141  004E40  EC90  F031         	call	_setOutputPin
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;digitalOut.c: 122: ee_write(((WORD)(((BYTE*)(0x3FF-40)))-17)+io, state);
  8145  004E44  0EC6               	movlw	198
  8146  004E46  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8147  004E48  6F73               	movwf	ee_write@addr& (0+255),b
  8148  004E4A  6B74               	clrf	(ee_write@addr+1)& (0+255),b
  8149  004E4C  0E03               	movlw	3
  8150  004E4E  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
  8151  004E50  C0BD  F075         	movff	startDigitalOutput@state,ee_write@data
  8152  004E54  EC17  F04D         	call	_ee_write	;wreg free
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;digitalOut.c: 123: sendInvertedProducedEvent(((8U + 4U*(io))+0U), 1,;digitalOut.c: 124:
      +                           NV->io[io].flags & 0x40U, 1, 1);
  8156  004E58  0E01               	movlw	1
  8157  004E5A  6FB5               	movwf	sendInvertedProducedEvent@state& (0+255),b
  8158  004E5C  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8159  004E5E  0D07               	mullw	7
  8160  004E60  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8161  004E64  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8162  004E68  50F3               	movf	243,w,c
  8163  004E6A  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8164  004E6C  50F4               	movf	244,w,c
  8165  004E6E  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8166  004E70  0E11               	movlw	17
  8167  004E72  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8168  004E74  6ED9               	movwf	fsr2l,c
  8169  004E76  0E00               	movlw	0
  8170  004E78  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8171  004E7A  6EDA               	movwf	fsr2h,c
  8172  004E7C  50DF               	movf	indf2,w,c
  8173  004E7E  0B40               	andlw	64
  8174  004E80  6FB6               	movwf	sendInvertedProducedEvent@invert& (0+255),b
  8175  004E82  0E01               	movlw	1
  8176  004E84  6FB7               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
  8177  004E86  0E01               	movlw	1
  8178  004E88  6FB8               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
  8179  004E8A  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8180  004E8C  0D04               	mullw	4
  8181  004E8E  50F3               	movf	243,w,c
  8182  004E90  0F08               	addlw	8
  8183  004E92  EC8B  F04D         	call	_sendInvertedProducedEvent
  8184  004E96  0012               	return	
  8185  004E98                     l19979:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;digitalOut.c: 126: };digitalOut.c: 127: flashDelays[io] = 0;
  8189  004E98  0E60               	movlw	low _flashDelays
  8190  004E9A  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8191  004E9C  6ED9               	movwf	fsr2l,c
  8192  004E9E  6ADA               	clrf	fsr2h,c
  8193  004EA0  0E01               	movlw	high _flashDelays
  8194  004EA2  22DA               	addwfc	fsr2h,f,c
  8195  004EA4  0E00               	movlw	0
  8196  004EA6  6EDF               	movwf	indf2,c
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;digitalOut.c: 129: actionState = (unsigned char)(state == 1U);
  8200  004EA8  05BD               	decf	startDigitalOutput@state& (0+255),w,b
  8201  004EAA  A4D8               	btfss	status,2,c
  8202  004EAC  D002               	goto	u24780
  8203  004EAE  0E01               	movlw	1
  8204  004EB0  D001               	goto	u24790
  8205  004EB2                     u24780:
  8206  004EB2  0E00               	movlw	0
  8207  004EB4                     u24790:
  8208  004EB4  6FC3               	movwf	startDigitalOutput@actionState& (0+255),b
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;digitalOut.c: 132: if (NV->io[io].flags & 0x01U) {
  8212  004EB6  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8213  004EB8  0D07               	mullw	7
  8214  004EBA  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8215  004EBE  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8216  004EC2  50F3               	movf	243,w,c
  8217  004EC4  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8218  004EC6  50F4               	movf	244,w,c
  8219  004EC8  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8220  004ECA  0E11               	movlw	17
  8221  004ECC  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8222  004ECE  6ED9               	movwf	fsr2l,c
  8223  004ED0  0E00               	movlw	0
  8224  004ED2  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8225  004ED4  6EDA               	movwf	fsr2h,c
  8226  004ED6  A0DF               	btfss	indf2,0,c
  8227  004ED8  D007               	goto	l216
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;digitalOut.c: 133: actionState = (unsigned char)(!actionState);
  8231  004EDA  51C3               	movf	startDigitalOutput@actionState& (0+255),w,b
  8232  004EDC  A4D8               	btfss	status,2,c
  8233  004EDE  D002               	goto	u24810
  8234  004EE0  0E01               	movlw	1
  8235  004EE2  D001               	goto	u24820
  8236  004EE4                     u24810:
  8237  004EE4  0E00               	movlw	0
  8238  004EE6                     u24820:
  8239  004EE6  6FC3               	movwf	startDigitalOutput@actionState& (0+255),b
  8240  004EE8                     l216:
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;digitalOut.c: 134: };digitalOut.c: 137: if (( ! actionState) && (NV->io[io].nv_io.nv_ou
      +                          tput.output_pulse_duration)) {
  8244  004EE8  51C3               	movf	startDigitalOutput@actionState& (0+255),w,b
  8245  004EEA  A4D8               	btfss	status,2,c
  8246  004EEC  D013               	goto	l19991
  8247                           
  8248                           ; BSR set to: 0
  8249  004EEE  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8250  004EF0  0D07               	mullw	7
  8251  004EF2  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8252  004EF6  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8253  004EFA  50F3               	movf	243,w,c
  8254  004EFC  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8255  004EFE  50F4               	movf	244,w,c
  8256  004F00  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8257  004F02  0E12               	movlw	18
  8258  004F04  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8259  004F06  6ED9               	movwf	fsr2l,c
  8260  004F08  0E00               	movlw	0
  8261  004F0A  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8262  004F0C  6EDA               	movwf	fsr2h,c
  8263  004F0E  50DF               	movf	indf2,w,c
  8264  004F10  A4D8               	btfss	status,2,c
  8265  004F12  0012               	return	
  8266  004F14                     l19991:
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;digitalOut.c: 139: };digitalOut.c: 143: if ((actionState) && NV->io[io].nv_io.nv_output
      +                          .output_pulse_duration && (pulseDelays[io] == 0)) {
  8270  004F14  51C3               	movf	startDigitalOutput@actionState& (0+255),w,b
  8271  004F16  B4D8               	btfsc	status,2,c
  8272  004F18  D03F               	goto	l20001
  8273                           
  8274                           ; BSR set to: 0
  8275  004F1A  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8276  004F1C  0D07               	mullw	7
  8277  004F1E  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8278  004F22  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8279  004F26  50F3               	movf	243,w,c
  8280  004F28  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8281  004F2A  50F4               	movf	244,w,c
  8282  004F2C  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8283  004F2E  0E12               	movlw	18
  8284  004F30  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8285  004F32  6ED9               	movwf	fsr2l,c
  8286  004F34  0E00               	movlw	0
  8287  004F36  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8288  004F38  6EDA               	movwf	fsr2h,c
  8289  004F3A  50DF               	movf	indf2,w,c
  8290  004F3C  B4D8               	btfsc	status,2,c
  8291  004F3E  D02C               	goto	l20001
  8292                           
  8293                           ; BSR set to: 0
  8294  004F40  0EA4               	movlw	low _pulseDelays
  8295  004F42  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8296  004F44  6ED9               	movwf	fsr2l,c
  8297  004F46  6ADA               	clrf	fsr2h,c
  8298  004F48  0E02               	movlw	high _pulseDelays
  8299  004F4A  22DA               	addwfc	fsr2h,f,c
  8300  004F4C  50DF               	movf	indf2,w,c
  8301  004F4E  A4D8               	btfss	status,2,c
  8302  004F50  D023               	goto	l20001
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;digitalOut.c: 144: pulseDelays[io] = NV->io[io].nv_io.nv_output.output_pulse_duration;
  8306  004F52  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8307  004F54  0D07               	mullw	7
  8308  004F56  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8309  004F5A  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8310  004F5E  50F3               	movf	243,w,c
  8311  004F60  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8312  004F62  50F4               	movf	244,w,c
  8313  004F64  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8314  004F66  0E12               	movlw	18
  8315  004F68  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8316  004F6A  6ED9               	movwf	fsr2l,c
  8317  004F6C  0E00               	movlw	0
  8318  004F6E  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8319  004F70  6EDA               	movwf	fsr2h,c
  8320  004F72  0EA4               	movlw	low _pulseDelays
  8321  004F74  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8322  004F76  6EE1               	movwf	fsr1l,c
  8323  004F78  6AE2               	clrf	fsr1h,c
  8324  004F7A  0E02               	movlw	high _pulseDelays
  8325  004F7C  22E2               	addwfc	fsr1h,f,c
  8326  004F7E  CFDF FFE7          	movff	indf2,indf1
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;digitalOut.c: 147: ee_write(((WORD)(((BYTE*)(0x3FF-40)))-17)+io, 2U);
  8330  004F82  0EC6               	movlw	198
  8331  004F84  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8332  004F86  6F73               	movwf	ee_write@addr& (0+255),b
  8333  004F88  6B74               	clrf	(ee_write@addr+1)& (0+255),b
  8334  004F8A  0E03               	movlw	3
  8335  004F8C  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
  8336  004F8E  0E02               	movlw	2
  8337  004F90  6F75               	movwf	ee_write@data& (0+255),b
  8338  004F92  EC17  F04D         	call	_ee_write	;wreg free
  8339                           
  8340                           ;digitalOut.c: 148: } else {
  8341  004F96  D015               	goto	l20009
  8342  004F98                     l20001:
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;digitalOut.c: 149: ee_write(((WORD)(((BYTE*)(0x3FF-40)))-17)+io, actionState?1U:2U);
  8346  004F98  51C3               	movf	startDigitalOutput@actionState& (0+255),w,b
  8347  004F9A  A4D8               	btfss	status,2,c
  8348  004F9C  D004               	goto	l20005
  8349                           
  8350                           ; BSR set to: 0
  8351  004F9E  0E00               	movlw	0
  8352  004FA0  6FC1               	movwf	(_startDigitalOutput$680+1)& (0+255),b
  8353  004FA2  0E02               	movlw	2
  8354  004FA4  D003               	goto	L2
  8355  004FA6                     l20005:
  8356                           
  8357                           ; BSR set to: 0
  8358  004FA6  0E00               	movlw	0
  8359  004FA8  6FC1               	movwf	(_startDigitalOutput$680+1)& (0+255),b
  8360  004FAA  0E01               	movlw	1
  8361  004FAC                     L2:
  8362  004FAC  6FC0               	movwf	_startDigitalOutput$680& (0+255),b
  8363                           
  8364                           ; BSR set to: 0
  8365  004FAE  0EC6               	movlw	198
  8366  004FB0  25C4               	addwf	startDigitalOutput@io& (0+255),w,b
  8367  004FB2  6F73               	movwf	ee_write@addr& (0+255),b
  8368  004FB4  6B74               	clrf	(ee_write@addr+1)& (0+255),b
  8369  004FB6  0E03               	movlw	3
  8370  004FB8  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
  8371  004FBA  C0C0  F075         	movff	_startDigitalOutput$680,ee_write@data
  8372  004FBE  EC17  F04D         	call	_ee_write	;wreg free
  8373  004FC2                     l20009:
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;digitalOut.c: 150: };digitalOut.c: 152: pinState = actionState;
  8377  004FC2  C0C3  F0C2         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;digitalOut.c: 153: if (NV->io[io].flags & 0x20U) {
  8381  004FC6  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8382  004FC8  0D07               	mullw	7
  8383  004FCA  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8384  004FCE  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8385  004FD2  50F3               	movf	243,w,c
  8386  004FD4  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8387  004FD6  50F4               	movf	244,w,c
  8388  004FD8  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8389  004FDA  0E11               	movlw	17
  8390  004FDC  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8391  004FDE  6ED9               	movwf	fsr2l,c
  8392  004FE0  0E00               	movlw	0
  8393  004FE2  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8394  004FE4  6EDA               	movwf	fsr2h,c
  8395  004FE6  AADF               	btfss	indf2,5,c
  8396  004FE8  D007               	goto	l20015
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;digitalOut.c: 154: pinState = (BOOL)(!pinState);
  8400  004FEA  51C2               	movf	startDigitalOutput@pinState& (0+255),w,b
  8401  004FEC  A4D8               	btfss	status,2,c
  8402  004FEE  D002               	goto	u24900
  8403  004FF0  0E01               	movlw	1
  8404  004FF2  D001               	goto	u24910
  8405  004FF4                     u24900:
  8406  004FF4  0E00               	movlw	0
  8407  004FF6                     u24910:
  8408  004FF6  6FC2               	movwf	startDigitalOutput@pinState& (0+255),b
  8409  004FF8                     l20015:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;digitalOut.c: 155: };digitalOut.c: 156: setOutputPin(io, pinState);
  8413  004FF8  C0C2  F071         	movff	startDigitalOutput@pinState,setOutputPin@state
  8414  004FFC  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8415  004FFE  EC90  F031         	call	_setOutputPin
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;digitalOut.c: 161: if (NV->io[io].flags & 0x08U) {
  8419  005002  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8420  005004  0D07               	mullw	7
  8421  005006  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8422  00500A  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8423  00500E  50F3               	movf	243,w,c
  8424  005010  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8425  005012  50F4               	movf	244,w,c
  8426  005014  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8427  005016  0E11               	movlw	17
  8428  005018  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8429  00501A  6ED9               	movwf	fsr2l,c
  8430  00501C  0E00               	movlw	0
  8431  00501E  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8432  005020  6EDA               	movwf	fsr2h,c
  8433  005022  A6DF               	btfss	indf2,3,c
  8434  005024  D023               	goto	l20023
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;digitalOut.c: 162: if (actionState) {
  8438  005026  51C3               	movf	startDigitalOutput@actionState& (0+255),w,b
  8439  005028  B4D8               	btfsc	status,2,c
  8440  00502A  0012               	return	
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;digitalOut.c: 165: sendInvertedProducedEvent(((8U + 4U*(io))+0U), actionState,;digitalO
      +                          ut.c: 166: NV->io[io].flags & 0x40U, 1, 1);
  8444  00502C  C0C3  F0B5         	movff	startDigitalOutput@actionState,sendInvertedProducedEvent@state
  8445  005030  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8446  005032  0D07               	mullw	7
  8447  005034  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8448  005038  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8449  00503C  50F3               	movf	243,w,c
  8450  00503E  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8451  005040  50F4               	movf	244,w,c
  8452  005042  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8453  005044  0E11               	movlw	17
  8454  005046  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8455  005048  6ED9               	movwf	fsr2l,c
  8456  00504A  0E00               	movlw	0
  8457  00504C  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8458  00504E  6EDA               	movwf	fsr2h,c
  8459  005050  50DF               	movf	indf2,w,c
  8460  005052  0B40               	andlw	64
  8461  005054  6FB6               	movwf	sendInvertedProducedEvent@invert& (0+255),b
  8462  005056  0E01               	movlw	1
  8463  005058  6FB7               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
  8464  00505A  0E01               	movlw	1
  8465  00505C  6FB8               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
  8466  00505E  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8467  005060  0D04               	mullw	4
  8468  005062  50F3               	movf	243,w,c
  8469  005064  0F08               	addlw	8
  8470  005066  EC8B  F04D         	call	_sendInvertedProducedEvent
  8471  00506A  0012               	return	
  8472  00506C                     l20023:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;digitalOut.c: 170: sendInvertedProducedEvent(((8U + 4U*(io))+0U), actionState,;digitalO
      +                          ut.c: 171: NV->io[io].flags & 0x40U, 1, 1);
  8476  00506C  C0C3  F0B5         	movff	startDigitalOutput@actionState,sendInvertedProducedEvent@state
  8477  005070  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8478  005072  0D07               	mullw	7
  8479  005074  C0EC  F0BE         	movff	_NV,??_startDigitalOutput
  8480  005078  C0ED  F0BF         	movff	_NV+1,??_startDigitalOutput+1
  8481  00507C  50F3               	movf	243,w,c
  8482  00507E  27BE               	addwf	??_startDigitalOutput& (0+255),f,b
  8483  005080  50F4               	movf	244,w,c
  8484  005082  23BF               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
  8485  005084  0E11               	movlw	17
  8486  005086  25BE               	addwf	??_startDigitalOutput& (0+255),w,b
  8487  005088  6ED9               	movwf	fsr2l,c
  8488  00508A  0E00               	movlw	0
  8489  00508C  21BF               	addwfc	(??_startDigitalOutput+1)& (0+255),w,b
  8490  00508E  6EDA               	movwf	fsr2h,c
  8491  005090  50DF               	movf	indf2,w,c
  8492  005092  0B40               	andlw	64
  8493  005094  6FB6               	movwf	sendInvertedProducedEvent@invert& (0+255),b
  8494  005096  0E01               	movlw	1
  8495  005098  6FB7               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
  8496  00509A  0E01               	movlw	1
  8497  00509C  6FB8               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
  8498  00509E  51C4               	movf	startDigitalOutput@io& (0+255),w,b
  8499  0050A0  0D04               	mullw	4
  8500  0050A2  50F3               	movf	243,w,c
  8501  0050A4  0F08               	addlw	8
  8502  0050A6  EC8B  F04D         	call	_sendInvertedProducedEvent
  8503  0050AA  0012               	return		;funcret
  8504  0050AC                     __end_of_startDigitalOutput:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _setOutputState *****************
  8508 ;; Defined at:
  8509 ;;		line 102 in file "../../github/CANMIOfirmware/outputs.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  io              1    wreg     unsigned char 
  8512 ;;  action          1   22[BANK0 ] unsigned char 
  8513 ;;  type            1   23[BANK0 ] unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  io              1   24[BANK0 ] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8520 ;; Tracked objects:
  8521 ;;		On entry : 3F/0
  8522 ;;		On exit  : 3F/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;Total ram usage:        3 bytes
  8530 ;; Hardware stack levels used: 1
  8531 ;; Hardware stack levels required when called: 9
  8532 ;; This function calls:
  8533 ;;		_setBounceState
  8534 ;;		_setMultiState
  8535 ;;		_setServoState
  8536 ;; This function is called by:
  8537 ;;		_processActions
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text13
  8542  009896                     __ptext13:
  8543                           	callstack 0
  8544  009896                     _setOutputState:
  8545                           	callstack 20
  8546                           
  8547                           ;incstack = 0
  8548                           ;setOutputState@io stored from wreg
  8549  009896  6F78               	movwf	setOutputState@io& (0+255),b
  8550                           
  8551                           ;outputs.c: 103: switch(type) {
  8552  009898  D012               	goto	l20475
  8553  00989A                     l20461:
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;outputs.c: 114: setBounceState(io, action);
  8557  00989A  C076  F071         	movff	setOutputState@action,setBounceState@action
  8558  00989E  5178               	movf	setOutputState@io& (0+255),w,b
  8559  0098A0  EC7F  F036         	call	_setBounceState
  8560  0098A4  0012               	return	
  8561  0098A6                     l20465:
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;outputs.c: 119: setServoState(io, action);
  8565  0098A6  C076  F071         	movff	setOutputState@action,setServoState@action
  8566  0098AA  5178               	movf	setOutputState@io& (0+255),w,b
  8567  0098AC  ECEC  F035         	call	_setServoState
  8568  0098B0  0012               	return	
  8569  0098B2                     l20469:
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;outputs.c: 124: setMultiState(io, action);
  8573  0098B2  C076  F071         	movff	setOutputState@action,setMultiState@action
  8574  0098B6  5178               	movf	setOutputState@io& (0+255),w,b
  8575  0098B8  EC51  F035         	call	_setMultiState
  8576  0098BC  0012               	return	
  8577  0098BE                     l20475:
  8578  0098BE  0100               	movlb	0	; () banked
  8579  0098C0  5177               	movf	setOutputState@type& (0+255),w,b
  8580                           
  8581                           ; Switch size 1, requested type "simple"
  8582                           ; Number of cases is 7, Range of values is 0 to 6
  8583                           ; switch strategies available:
  8584                           ; Name         Instructions Cycles
  8585                           ; simple_byte           22    12 (average)
  8586                           ;	Chosen strategy is simple_byte
  8587  0098C2  0A00               	xorlw	0	; case 0
  8588  0098C4  B4D8               	btfsc	status,2,c
  8589  0098C6  0012               	return	
  8590  0098C8  0A01               	xorlw	1	; case 1
  8591  0098CA  B4D8               	btfsc	status,2,c
  8592  0098CC  0012               	return	
  8593  0098CE  0A03               	xorlw	3	; case 2
  8594  0098D0  B4D8               	btfsc	status,2,c
  8595  0098D2  D7E9               	goto	l20465
  8596  0098D4  0A01               	xorlw	1	; case 3
  8597  0098D6  B4D8               	btfsc	status,2,c
  8598  0098D8  D7E0               	goto	l20461
  8599  0098DA  0A07               	xorlw	7	; case 4
  8600  0098DC  B4D8               	btfsc	status,2,c
  8601  0098DE  D7E9               	goto	l20469
  8602  0098E0  0A01               	xorlw	1	; case 5
  8603  0098E2  B4D8               	btfsc	status,2,c
  8604  0098E4  0012               	return	
  8605  0098E6  0A03               	xorlw	3	; case 6
  8606  0098E8  0012               	return	
  8607  0098EA                     __end_of_setOutputState:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _needsStarting *****************
  8611 ;; Defined at:
  8612 ;;		line 167 in file "../../github/CANMIOfirmware/outputs.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  io              1    wreg     unsigned char 
  8615 ;;  action          1   17[BANK0 ] unsigned char 
  8616 ;;  type            1   18[BANK0 ] unsigned char 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;  io              1   21[BANK0 ] unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      unsigned char 
  8621 ;; Registers used:
  8622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8623 ;; Tracked objects:
  8624 ;;		On entry : 3F/0
  8625 ;;		On exit  : 3F/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8631 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;Total ram usage:        5 bytes
  8633 ;; Hardware stack levels used: 1
  8634 ;; Hardware stack levels required when called: 8
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_processActions
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text14
  8643  008CE4                     __ptext14:
  8644                           	callstack 0
  8645  008CE4                     _needsStarting:
  8646                           	callstack 21
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;incstack = 0
  8650                           ;needsStarting@io stored from wreg
  8651  008CE4  6F75               	movwf	needsStarting@io& (0+255),b
  8652                           
  8653                           ;outputs.c: 168: switch(type) {
  8654  008CE6  D02D               	goto	l16173
  8655  008CE8                     l16153:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;outputs.c: 171: return 0;
  8659  008CE8  0E00               	movlw	0
  8660  008CEA  0012               	return	
  8661  008CEC                     l16157:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;outputs.c: 177: return (BOOL)(pulseDelays[io] == 0U);
  8665  008CEC  0EA4               	movlw	low _pulseDelays
  8666  008CEE  2575               	addwf	needsStarting@io& (0+255),w,b
  8667  008CF0  6ED9               	movwf	fsr2l,c
  8668  008CF2  6ADA               	clrf	fsr2h,c
  8669  008CF4  0E02               	movlw	high _pulseDelays
  8670  008CF6  22DA               	addwfc	fsr2h,f,c
  8671  008CF8  50DF               	movf	indf2,w,c
  8672  008CFA  A4D8               	btfss	status,2,c
  8673  008CFC  D002               	goto	u18730
  8674  008CFE  0E01               	movlw	1
  8675  008D00  0012               	return	
  8676  008D02                     u18730:
  8677  008D02  0E00               	movlw	0
  8678  008D04  0012               	return	
  8679  008D06                     l16161:
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;outputs.c: 182: case 3U:;outputs.c: 185: case 4U:;outputs.c: 187: if (targetPos[io] == 
      +                          currentPos[io]) {
  8683  008D06  0E80               	movlw	low _currentPos
  8684  008D08  2575               	addwf	needsStarting@io& (0+255),w,b
  8685  008D0A  6ED9               	movwf	fsr2l,c
  8686  008D0C  6ADA               	clrf	fsr2h,c
  8687  008D0E  0E01               	movlw	high _currentPos
  8688  008D10  22DA               	addwfc	fsr2h,f,c
  8689  008D12  0E70               	movlw	low _targetPos
  8690  008D14  2575               	addwf	needsStarting@io& (0+255),w,b
  8691  008D16  6EE1               	movwf	fsr1l,c
  8692  008D18  6AE2               	clrf	fsr1h,c
  8693  008D1A  0E01               	movlw	high _targetPos
  8694  008D1C  22E2               	addwfc	fsr1h,f,c
  8695  008D1E  50DE               	movf	postinc2,w,c
  8696  008D20  18E6               	xorwf	postinc1,w,c
  8697  008D22  B4D8               	btfsc	status,2,c
  8698  008D24  D7E1               	goto	l16153
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;outputs.c: 190: };outputs.c: 191: return (BOOL)(servoState[io] != MOVING);
  8702  008D26  0E40               	movlw	low _servoState
  8703  008D28  2575               	addwf	needsStarting@io& (0+255),w,b
  8704  008D2A  6ED9               	movwf	fsr2l,c
  8705  008D2C  6ADA               	clrf	fsr2h,c
  8706  008D2E  0E01               	movlw	high _servoState
  8707  008D30  22DA               	addwfc	fsr2h,f,c
  8708  008D32  0E02               	movlw	2
  8709  008D34  18DE               	xorwf	postinc2,w,c
  8710  008D36  B4D8               	btfsc	status,2,c
  8711  008D38  D002               	goto	u18760
  8712  008D3A  0E01               	movlw	1
  8713  008D3C  0012               	return	
  8714  008D3E                     u18760:
  8715  008D3E  0E00               	movlw	0
  8716  008D40  0012               	return	
  8717  008D42                     l16173:
  8718  008D42  0100               	movlb	0	; () banked
  8719  008D44  5172               	movf	needsStarting@type& (0+255),w,b
  8720                           
  8721                           ; Switch size 1, requested type "simple"
  8722                           ; Number of cases is 5, Range of values is 0 to 4
  8723                           ; switch strategies available:
  8724                           ; Name         Instructions Cycles
  8725                           ; simple_byte           16     9 (average)
  8726                           ;	Chosen strategy is simple_byte
  8727  008D46  0A00               	xorlw	0	; case 0
  8728  008D48  B4D8               	btfsc	status,2,c
  8729  008D4A  D7CE               	goto	l16153
  8730  008D4C  0A01               	xorlw	1	; case 1
  8731  008D4E  B4D8               	btfsc	status,2,c
  8732  008D50  D7CD               	goto	l16157
  8733  008D52  0A03               	xorlw	3	; case 2
  8734  008D54  B4D8               	btfsc	status,2,c
  8735  008D56  D7D7               	goto	l16161
  8736  008D58  0A01               	xorlw	1	; case 3
  8737  008D5A  B4D8               	btfsc	status,2,c
  8738  008D5C  D7D4               	goto	l16161
  8739  008D5E  0A07               	xorlw	7	; case 4
  8740  008D60  B4D8               	btfsc	status,2,c
  8741  008D62  D7D1               	goto	l16161
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;outputs.c: 194: return 1;
  8745  008D64  0E01               	movlw	1
  8746                           
  8747                           ; BSR set to: 0
  8748  008D66  0012               	return		;funcret
  8749  008D68                     __end_of_needsStarting:
  8750                           	callstack 0
  8751                           
  8752 ;; *************** function _getAction *****************
  8753 ;; Defined at:
  8754 ;;		line 91 in file "../../github/CANMIOfirmware/actionQueue.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;		None
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;		None
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      unsigned char 
  8761 ;; Registers used:
  8762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 3F/2
  8765 ;;		On exit  : 3F/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8772 ;;Total ram usage:        0 bytes
  8773 ;; Hardware stack levels used: 1
  8774 ;; Hardware stack levels required when called: 10
  8775 ;; This function calls:
  8776 ;;		_peekActionQueue
  8777 ;; This function is called by:
  8778 ;;		_processActions
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text15
  8783  00A6D0                     __ptext15:
  8784                           	callstack 0
  8785  00A6D0                     _getAction:
  8786                           	callstack 19
  8787                           
  8788                           ; BSR set to: 2
  8789                           ;actionQueue.c: 92: return peekActionQueue(0);
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;incstack = 0
  8793  00A6D0  0E00               	movlw	0
  8794  00A6D2  ECE7  F04A         	call	_peekActionQueue
  8795                           
  8796                           ; BSR set to: 0
  8797  00A6D6  0012               	return		;funcret
  8798  00A6D8                     __end_of_getAction:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _peekActionQueue *****************
  8802 ;; Defined at:
  8803 ;;		line 123 in file "../../github/CANMIOfirmware/actionQueue.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  index           1    wreg     unsigned char 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;  index           1   23[BANK0 ] unsigned char 
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      unsigned char 
  8810 ;; Registers used:
  8811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8812 ;; Tracked objects:
  8813 ;;		On entry : 3D/0
  8814 ;;		On exit  : 3F/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8820 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8821 ;;Total ram usage:        1 bytes
  8822 ;; Hardware stack levels used: 1
  8823 ;; Hardware stack levels required when called: 9
  8824 ;; This function calls:
  8825 ;;		_peek
  8826 ;;		_quantity
  8827 ;; This function is called by:
  8828 ;;		_getAction
  8829 ;;		_processActions
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text16
  8834  0095CE                     __ptext16:
  8835                           	callstack 0
  8836  0095CE                     _peekActionQueue:
  8837                           	callstack 20
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;incstack = 0
  8841                           ;peekActionQueue@index stored from wreg
  8842  0095CE  0100               	movlb	0	; () banked
  8843  0095D0  6F77               	movwf	peekActionQueue@index& (0+255),b
  8844                           
  8845                           ;actionQueue.c: 124: if (index < quantity(&expeditedQueue)) {
  8846  0095D2  0EE3               	movlw	low _expeditedQueue
  8847  0095D4  0100               	movlb	0	; () banked
  8848  0095D6  6F71               	movwf	quantity@q& (0+255),b
  8849  0095D8  0E01               	movlw	high _expeditedQueue
  8850  0095DA  6F72               	movwf	(quantity@q+1)& (0+255),b
  8851  0095DC  ECC5  F04F         	call	_quantity	;wreg free
  8852  0095E0  6177               	cpfslt	peekActionQueue@index& (0+255),b
  8853  0095E2  D009               	goto	l15499
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;actionQueue.c: 125: return peek(&expeditedQueue, index);
  8857  0095E4  0EE3               	movlw	low _expeditedQueue
  8858  0095E6  6F71               	movwf	peek@q& (0+255),b
  8859  0095E8  0E01               	movlw	high _expeditedQueue
  8860  0095EA  6F72               	movwf	(peek@q+1)& (0+255),b
  8861  0095EC  C077  F073         	movff	peekActionQueue@index,peek@index
  8862  0095F0  ECEC  F045         	call	_peek	;wreg free
  8863  0095F4  0012               	return	
  8864  0095F6                     l15499:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;actionQueue.c: 126: };actionQueue.c: 127: index -= quantity(&expeditedQueue);
  8868  0095F6  0EE3               	movlw	low _expeditedQueue
  8869  0095F8  6F71               	movwf	quantity@q& (0+255),b
  8870  0095FA  0E01               	movlw	high _expeditedQueue
  8871  0095FC  6F72               	movwf	(quantity@q+1)& (0+255),b
  8872  0095FE  ECC5  F04F         	call	_quantity	;wreg free
  8873  009602  5F77               	subwf	peekActionQueue@index& (0+255),f,b
  8874                           
  8875                           ;actionQueue.c: 128: if (index < quantity(&normalQueue)) {
  8876  009604  0EE8               	movlw	low _normalQueue
  8877  009606  6F71               	movwf	quantity@q& (0+255),b
  8878  009608  0E01               	movlw	high _normalQueue
  8879  00960A  6F72               	movwf	(quantity@q+1)& (0+255),b
  8880  00960C  ECC5  F04F         	call	_quantity	;wreg free
  8881  009610  6177               	cpfslt	peekActionQueue@index& (0+255),b
  8882  009612  D009               	goto	l15505
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;actionQueue.c: 129: return peek(&normalQueue, index);
  8886  009614  0EE8               	movlw	low _normalQueue
  8887  009616  6F71               	movwf	peek@q& (0+255),b
  8888  009618  0E01               	movlw	high _normalQueue
  8889  00961A  6F72               	movwf	(peek@q+1)& (0+255),b
  8890  00961C  C077  F073         	movff	peekActionQueue@index,peek@index
  8891  009620  ECEC  F045         	call	_peek	;wreg free
  8892  009624  0012               	return	
  8893  009626                     l15505:
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;actionQueue.c: 130: };actionQueue.c: 131: return 0;
  8897  009626  0E00               	movlw	0
  8898                           
  8899                           ; BSR set to: 0
  8900  009628  0012               	return		;funcret
  8901  00962A                     __end_of_peekActionQueue:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _peek *****************
  8905 ;; Defined at:
  8906 ;;		line 74 in file "../../github/CANMIOfirmware/queue.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  q               2   17[BANK0 ] PTR struct Queue
  8909 ;;		 -> expeditedQueue(5), normalQueue(5), 
  8910 ;;  index           1   19[BANK0 ] unsigned char 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;		None
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      unsigned char 
  8915 ;; Registers used:
  8916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8917 ;; Tracked objects:
  8918 ;;		On entry : 3F/0
  8919 ;;		On exit  : 3F/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8922 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;Total ram usage:        5 bytes
  8927 ;; Hardware stack levels used: 1
  8928 ;; Hardware stack levels required when called: 8
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_peekActionQueue
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text17
  8937  008BD8                     __ptext17:
  8938                           	callstack 0
  8939  008BD8                     _peek:
  8940                           	callstack 20
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;queue.c: 75: if (q->readIdx == q->writeIdx) return 0;
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;incstack = 0
  8947  008BD8  EE20 F002          	lfsr	2,2
  8948  008BDC  5171               	movf	peek@q& (0+255),w,b
  8949  008BDE  26D9               	addwf	fsr2l,f,c
  8950  008BE0  5172               	movf	(peek@q+1)& (0+255),w,b
  8951  008BE2  22DA               	addwfc	fsr2h,f,c
  8952  008BE4  EE10 F001          	lfsr	1,1
  8953  008BE8  5171               	movf	peek@q& (0+255),w,b
  8954  008BEA  26E1               	addwf	fsr1l,f,c
  8955  008BEC  5172               	movf	(peek@q+1)& (0+255),w,b
  8956  008BEE  22E2               	addwfc	fsr1h,f,c
  8957  008BF0  50DE               	movf	postinc2,w,c
  8958  008BF2  18E6               	xorwf	postinc1,w,c
  8959  008BF4  A4D8               	btfss	status,2,c
  8960  008BF6  D002               	goto	l14803
  8961  008BF8                     u16870:
  8962                           
  8963                           ; BSR set to: 0
  8964  008BF8  0E00               	movlw	0
  8965  008BFA  0012               	return	
  8966  008BFC                     l14803:
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;queue.c: 76: index += q->readIdx;
  8970  008BFC  EE20 F001          	lfsr	2,1
  8971  008C00  5171               	movf	peek@q& (0+255),w,b
  8972  008C02  26D9               	addwf	fsr2l,f,c
  8973  008C04  5172               	movf	(peek@q+1)& (0+255),w,b
  8974  008C06  22DA               	addwfc	fsr2h,f,c
  8975  008C08  50DF               	movf	indf2,w,c
  8976  008C0A  2773               	addwf	peek@index& (0+255),f,b
  8977                           
  8978                           ;queue.c: 78: if (index >= q->size) {
  8979  008C0C  C071  FFD9         	movff	peek@q,fsr2l
  8980  008C10  C072  FFDA         	movff	peek@q+1,fsr2h
  8981  008C14  50DE               	movf	postinc2,w,c
  8982  008C16  5D73               	subwf	peek@index& (0+255),w,b
  8983  008C18  A0D8               	btfss	status,0,c
  8984  008C1A  D006               	goto	l1118
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;queue.c: 79: index -= q->size;
  8988  008C1C  C071  FFD9         	movff	peek@q,fsr2l
  8989  008C20  C072  FFDA         	movff	peek@q+1,fsr2h
  8990  008C24  50DF               	movf	indf2,w,c
  8991  008C26  5F73               	subwf	peek@index& (0+255),f,b
  8992  008C28                     l1118:
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;queue.c: 80: };queue.c: 81: if (index == q->writeIdx) return 0;
  8996  008C28  EE20 F002          	lfsr	2,2
  8997  008C2C  5171               	movf	peek@q& (0+255),w,b
  8998  008C2E  26D9               	addwf	fsr2l,f,c
  8999  008C30  5172               	movf	(peek@q+1)& (0+255),w,b
  9000  008C32  22DA               	addwfc	fsr2h,f,c
  9001  008C34  5173               	movf	peek@index& (0+255),w,b
  9002  008C36  18DE               	xorwf	postinc2,w,c
  9003  008C38  B4D8               	btfsc	status,2,c
  9004  008C3A  D7DE               	goto	u16870
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;queue.c: 82: return q->queue[index];
  9008  008C3C  EE20 F003          	lfsr	2,3
  9009  008C40  5171               	movf	peek@q& (0+255),w,b
  9010  008C42  26D9               	addwf	fsr2l,f,c
  9011  008C44  5172               	movf	(peek@q+1)& (0+255),w,b
  9012  008C46  22DA               	addwfc	fsr2h,f,c
  9013  008C48  CFDE F074          	movff	postinc2,??_peek
  9014  008C4C  CFDD F075          	movff	postdec2,??_peek+1
  9015  008C50  5173               	movf	peek@index& (0+255),w,b
  9016  008C52  2574               	addwf	??_peek& (0+255),w,b
  9017  008C54  6ED9               	movwf	fsr2l,c
  9018  008C56  0E00               	movlw	0
  9019  008C58  2175               	addwfc	(??_peek+1)& (0+255),w,b
  9020  008C5A  6EDA               	movwf	fsr2h,c
  9021  008C5C  50DF               	movf	indf2,w,c
  9022                           
  9023                           ; BSR set to: 0
  9024  008C5E  0012               	return		;funcret
  9025  008C60                     __end_of_peek:
  9026                           	callstack 0
  9027                           
  9028 ;; *************** function _doWait *****************
  9029 ;; Defined at:
  9030 ;;		line 456 in file "../../github/CANMIOfirmware/mioEvents.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  duration        2   29[BANK0 ] unsigned int 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9039 ;; Tracked objects:
  9040 ;;		On entry : 3F/0
  9041 ;;		On exit  : 3E/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9044 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;Total ram usage:        6 bytes
  9049 ;; Hardware stack levels used: 1
  9050 ;; Hardware stack levels required when called: 11
  9051 ;; This function calls:
  9052 ;;		___lmul
  9053 ;;		_doneAction
  9054 ;;		_tickGet
  9055 ;; This function is called by:
  9056 ;;		_processActions
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text18
  9061  0086B4                     __ptext18:
  9062                           	callstack 0
  9063  0086B4                     _doWait:
  9064                           	callstack 18
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;mioEvents.c: 458: if (startWait.Val == 0) {
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;incstack = 0
  9071  0086B4  0101               	movlb	1	; () banked
  9072  0086B6  51B8               	movf	_startWait& (0+255),w,b
  9073  0086B8  11B9               	iorwf	(_startWait+1)& (0+255),w,b
  9074  0086BA  11BA               	iorwf	(_startWait+2)& (0+255),w,b
  9075  0086BC  11BB               	iorwf	(_startWait+3)& (0+255),w,b
  9076  0086BE  A4D8               	btfss	status,2,c
  9077  0086C0  D00B               	goto	l20451
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;mioEvents.c: 459: startWait.Val = tickGet();
  9081  0086C2  EC9D  F04B         	call	_tickGet	;wreg free
  9082  0086C6  C071  F1B8         	movff	?_tickGet,_startWait
  9083  0086CA  C072  F1B9         	movff	?_tickGet+1,_startWait+1
  9084  0086CE  C073  F1BA         	movff	?_tickGet+2,_startWait+2
  9085  0086D2  C074  F1BB         	movff	?_tickGet+3,_startWait+3
  9086  0086D6  0012               	return	
  9087  0086D8                     l20451:
  9088                           
  9089                           ; BSR set to: 1
  9090                           ;mioEvents.c: 463: if (((tickGet() - startWait.Val) > ((unsigned long)duration * (unsign
      +                          ed long)(62500/10)))) {
  9091  0086D8  EC9D  F04B         	call	_tickGet	;wreg free
  9092  0086DC  0101               	movlb	1	; () banked
  9093  0086DE  51B8               	movf	_startWait& (0+255),w,b
  9094  0086E0  0100               	movlb	0	; () banked
  9095  0086E2  5D71               	subwf	?_tickGet& (0+255),w,b
  9096  0086E4  6F7F               	movwf	??_doWait& (0+255),b
  9097  0086E6  0101               	movlb	1	; () banked
  9098  0086E8  51B9               	movf	(_startWait+1)& (0+255),w,b
  9099  0086EA  0100               	movlb	0	; () banked
  9100  0086EC  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
  9101  0086EE  6F80               	movwf	(??_doWait+1)& (0+255),b
  9102  0086F0  0101               	movlb	1	; () banked
  9103  0086F2  51BA               	movf	(_startWait+2)& (0+255),w,b
  9104  0086F4  0100               	movlb	0	; () banked
  9105  0086F6  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
  9106  0086F8  6F81               	movwf	(??_doWait+2)& (0+255),b
  9107  0086FA  0101               	movlb	1	; () banked
  9108  0086FC  51BB               	movf	(_startWait+3)& (0+255),w,b
  9109  0086FE  0100               	movlb	0	; () banked
  9110  008700  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
  9111  008702  6F82               	movwf	(??_doWait+3)& (0+255),b
  9112  008704  C07D  F071         	movff	doWait@duration,___lmul@multiplier
  9113  008708  C07E  F072         	movff	doWait@duration+1,___lmul@multiplier+1
  9114  00870C  6B73               	clrf	(___lmul@multiplier+2)& (0+255),b
  9115  00870E  6B74               	clrf	(___lmul@multiplier+3)& (0+255),b
  9116  008710  0E6A               	movlw	106
  9117  008712  6F75               	movwf	___lmul@multiplicand& (0+255),b
  9118  008714  0E18               	movlw	24
  9119  008716  6F76               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9120  008718  0E00               	movlw	0
  9121  00871A  6F77               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9122  00871C  0E00               	movlw	0
  9123  00871E  6F78               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9124  008720  ECF5  F04B         	call	___lmul	;wreg free
  9125  008724  517F               	movf	??_doWait& (0+255),w,b
  9126  008726  5D71               	subwf	?___lmul& (0+255),w,b
  9127  008728  5180               	movf	(??_doWait+1)& (0+255),w,b
  9128  00872A  5972               	subwfb	(?___lmul+1)& (0+255),w,b
  9129  00872C  5181               	movf	(??_doWait+2)& (0+255),w,b
  9130  00872E  5973               	subwfb	(?___lmul+2)& (0+255),w,b
  9131  008730  5182               	movf	(??_doWait+3)& (0+255),w,b
  9132  008732  5974               	subwfb	(?___lmul+3)& (0+255),w,b
  9133  008734  B0D8               	btfsc	status,0,c
  9134  008736  0012               	return	
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;mioEvents.c: 464: doneAction();
  9138  008738  EC74  F053         	call	_doneAction	;wreg free
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;mioEvents.c: 465: startWait.Val = 0;
  9142  00873C  0E00               	movlw	0
  9143  00873E  0101               	movlb	1	; () banked
  9144  008740  6FB8               	movwf	_startWait& (0+255),b
  9145  008742  0E00               	movlw	0
  9146  008744  6FB9               	movwf	(_startWait+1)& (0+255),b
  9147  008746  0E00               	movlw	0
  9148  008748  6FBA               	movwf	(_startWait+2)& (0+255),b
  9149  00874A  0E00               	movlw	0
  9150  00874C  6FBB               	movwf	(_startWait+3)& (0+255),b
  9151  00874E  0012               	return		;funcret
  9152  008750                     __end_of_doWait:
  9153                           	callstack 0
  9154                           
  9155 ;; *************** function _doneAction *****************
  9156 ;; Defined at:
  9157 ;;		line 113 in file "../../github/CANMIOfirmware/actionQueue.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 3C/0
  9168 ;;		On exit  : 3F/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 10
  9178 ;; This function calls:
  9179 ;;		_popAction
  9180 ;; This function is called by:
  9181 ;;		_processOutputs
  9182 ;;		_processActions
  9183 ;;		_doWait
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           	psect	text19
  9188  00A6E8                     __ptext19:
  9189                           	callstack 0
  9190  00A6E8                     _doneAction:
  9191                           	callstack 19
  9192                           
  9193                           ;actionQueue.c: 114: popAction();
  9194                           
  9195                           ;incstack = 0
  9196  00A6E8  EC10  F052         	call	_popAction	;wreg free
  9197                           
  9198                           ; BSR set to: 0
  9199  00A6EC  0012               	return		;funcret
  9200  00A6EE                     __end_of_doneAction:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _popAction *****************
  9204 ;; Defined at:
  9205 ;;		line 100 in file "../../github/CANMIOfirmware/actionQueue.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;		None
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;  ret             1   23[BANK0 ] unsigned char 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      unsigned char 
  9212 ;; Registers used:
  9213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9214 ;; Tracked objects:
  9215 ;;		On entry : 3C/0
  9216 ;;		On exit  : 3F/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9222 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;Total ram usage:        1 bytes
  9224 ;; Hardware stack levels used: 1
  9225 ;; Hardware stack levels required when called: 9
  9226 ;; This function calls:
  9227 ;;		_pop
  9228 ;; This function is called by:
  9229 ;;		_doneAction
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text20
  9234  00A420                     __ptext20:
  9235                           	callstack 0
  9236  00A420                     _popAction:
  9237                           	callstack 19
  9238                           
  9239                           ;actionQueue.c: 101: unsigned char ret;;actionQueue.c: 102: ret = pop(&expeditedQueue);
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;incstack = 0
  9243  00A420  0EE3               	movlw	low _expeditedQueue
  9244  00A422  0100               	movlb	0	; () banked
  9245  00A424  6F71               	movwf	pop@q& (0+255),b
  9246  00A426  0E01               	movlw	high _expeditedQueue
  9247  00A428  6F72               	movwf	(pop@q+1)& (0+255),b
  9248  00A42A  ECF6  F043         	call	_pop	;wreg free
  9249  00A42E  6F77               	movwf	popAction@ret& (0+255),b
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;actionQueue.c: 103: if (ret != 0) return ret;
  9253  00A430  5177               	movf	popAction@ret& (0+255),w,b
  9254  00A432  A4D8               	btfss	status,2,c
  9255  00A434  0012               	return	
  9256                           
  9257                           ; BSR set to: 0
  9258  00A436  0EE8               	movlw	low _normalQueue
  9259  00A438  6F71               	movwf	pop@q& (0+255),b
  9260  00A43A  0E01               	movlw	high _normalQueue
  9261  00A43C  6F72               	movwf	(pop@q+1)& (0+255),b
  9262  00A43E  ECF6  F043         	call	_pop	;wreg free
  9263                           
  9264                           ; BSR set to: 0
  9265  00A442  0012               	return		;funcret
  9266  00A444                     __end_of_popAction:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _pop *****************
  9270 ;; Defined at:
  9271 ;;		line 59 in file "../../github/CANMIOfirmware/queue.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  q               2   17[BANK0 ] PTR struct Queue
  9274 ;;		 -> expeditedQueue(5), normalQueue(5), 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  ret             1   22[BANK0 ] unsigned char 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      unsigned char 
  9279 ;; Registers used:
  9280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 3F/0
  9283 ;;		On exit  : 3F/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9288 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9290 ;;Total ram usage:        6 bytes
  9291 ;; Hardware stack levels used: 1
  9292 ;; Hardware stack levels required when called: 8
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_popAction
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text21
  9301  0087EC                     __ptext21:
  9302                           	callstack 0
  9303  0087EC                     _pop:
  9304                           	callstack 19
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;queue.c: 60: unsigned char ret;;queue.c: 61: if (q->writeIdx == q->readIdx) {
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;incstack = 0
  9311  0087EC  EE20 F001          	lfsr	2,1
  9312  0087F0  5171               	movf	pop@q& (0+255),w,b
  9313  0087F2  26D9               	addwf	fsr2l,f,c
  9314  0087F4  5172               	movf	(pop@q+1)& (0+255),w,b
  9315  0087F6  22DA               	addwfc	fsr2h,f,c
  9316  0087F8  EE10 F002          	lfsr	1,2
  9317  0087FC  5171               	movf	pop@q& (0+255),w,b
  9318  0087FE  26E1               	addwf	fsr1l,f,c
  9319  008800  5172               	movf	(pop@q+1)& (0+255),w,b
  9320  008802  22E2               	addwfc	fsr1h,f,c
  9321  008804  50DE               	movf	postinc2,w,c
  9322  008806  18E6               	xorwf	postinc1,w,c
  9323  008808  A4D8               	btfss	status,2,c
  9324  00880A  D002               	goto	l14343
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;queue.c: 62: return 0;
  9328  00880C  0E00               	movlw	0
  9329  00880E  0012               	return	
  9330  008810                     l14343:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;queue.c: 63: };queue.c: 64: ret = q->queue[q->readIdx++];
  9334  008810  EE20 F001          	lfsr	2,1
  9335  008814  5171               	movf	pop@q& (0+255),w,b
  9336  008816  26D9               	addwf	fsr2l,f,c
  9337  008818  5172               	movf	(pop@q+1)& (0+255),w,b
  9338  00881A  22DA               	addwfc	fsr2h,f,c
  9339  00881C  50DF               	movf	indf2,w,c
  9340  00881E  6F73               	movwf	??_pop& (0+255),b
  9341  008820  EE20 F003          	lfsr	2,3
  9342  008824  5171               	movf	pop@q& (0+255),w,b
  9343  008826  26D9               	addwf	fsr2l,f,c
  9344  008828  5172               	movf	(pop@q+1)& (0+255),w,b
  9345  00882A  22DA               	addwfc	fsr2h,f,c
  9346  00882C  CFDE F074          	movff	postinc2,??_pop+1
  9347  008830  CFDD F075          	movff	postdec2,??_pop+2
  9348  008834  5173               	movf	??_pop& (0+255),w,b
  9349  008836  2574               	addwf	(??_pop+1)& (0+255),w,b
  9350  008838  6ED9               	movwf	fsr2l,c
  9351  00883A  0E00               	movlw	0
  9352  00883C  2175               	addwfc	(??_pop+2)& (0+255),w,b
  9353  00883E  6EDA               	movwf	fsr2h,c
  9354  008840  50DF               	movf	indf2,w,c
  9355  008842  6F76               	movwf	pop@ret& (0+255),b
  9356  008844  EE20 F001          	lfsr	2,1
  9357  008848  5171               	movf	pop@q& (0+255),w,b
  9358  00884A  26D9               	addwf	fsr2l,f,c
  9359  00884C  5172               	movf	(pop@q+1)& (0+255),w,b
  9360  00884E  22DA               	addwfc	fsr2h,f,c
  9361  008850  2ADF               	incf	indf2,f,c
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;queue.c: 65: if (q->readIdx >= q->size) q->readIdx = 0;
  9365  008852  C071  FFD9         	movff	pop@q,fsr2l
  9366  008856  C072  FFDA         	movff	pop@q+1,fsr2h
  9367  00885A  EE10 F001          	lfsr	1,1
  9368  00885E  5171               	movf	pop@q& (0+255),w,b
  9369  008860  26E1               	addwf	fsr1l,f,c
  9370  008862  5172               	movf	(pop@q+1)& (0+255),w,b
  9371  008864  22E2               	addwfc	fsr1h,f,c
  9372  008866  50DE               	movf	postinc2,w,c
  9373  008868  5CE6               	subwf	postinc1,w,c
  9374  00886A  A0D8               	btfss	status,0,c
  9375  00886C  D008               	goto	l14349
  9376                           
  9377                           ; BSR set to: 0
  9378  00886E  EE20 F001          	lfsr	2,1
  9379  008872  5171               	movf	pop@q& (0+255),w,b
  9380  008874  26D9               	addwf	fsr2l,f,c
  9381  008876  5172               	movf	(pop@q+1)& (0+255),w,b
  9382  008878  22DA               	addwfc	fsr2h,f,c
  9383  00887A  0E00               	movlw	0
  9384  00887C  6EDF               	movwf	indf2,c
  9385  00887E                     l14349:
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;queue.c: 66: return ret;
  9389  00887E  5176               	movf	pop@ret& (0+255),w,b
  9390                           
  9391                           ; BSR set to: 0
  9392  008880  0012               	return		;funcret
  9393  008882                     __end_of_pop:
  9394                           	callstack 0
  9395                           
  9396 ;; *************** function ___lmul *****************
  9397 ;; Defined at:
  9398 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  multiplier      4   17[BANK0 ] unsigned long 
  9401 ;;  multiplicand    4   21[BANK0 ] unsigned long 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  product         4   25[BANK0 ] unsigned long 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  4   17[BANK0 ] unsigned long 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : 3F/0
  9410 ;;		On exit  : 3F/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9413 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9416 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9417 ;;Total ram usage:       12 bytes
  9418 ;; Hardware stack levels used: 1
  9419 ;; Hardware stack levels required when called: 8
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_main
  9424 ;;		_doWait
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text22
  9429  0097EA                     __ptext22:
  9430                           	callstack 0
  9431  0097EA                     ___lmul:
  9432                           	callstack 20
  9433                           
  9434                           ; BSR set to: 0
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;incstack = 0
  9438  0097EA  0E00               	movlw	0
  9439  0097EC  6F79               	movwf	___lmul@product& (0+255),b
  9440  0097EE  0E00               	movlw	0
  9441  0097F0  6F7A               	movwf	(___lmul@product+1)& (0+255),b
  9442  0097F2  0E00               	movlw	0
  9443  0097F4  6F7B               	movwf	(___lmul@product+2)& (0+255),b
  9444  0097F6  0E00               	movlw	0
  9445  0097F8  6F7C               	movwf	(___lmul@product+3)& (0+255),b
  9446  0097FA                     l11279:
  9447                           
  9448                           ; BSR set to: 0
  9449  0097FA  A171               	btfss	___lmul@multiplier& (0+255),0,b
  9450  0097FC  D008               	goto	l11283
  9451                           
  9452                           ; BSR set to: 0
  9453  0097FE  5175               	movf	___lmul@multiplicand& (0+255),w,b
  9454  009800  2779               	addwf	___lmul@product& (0+255),f,b
  9455  009802  5176               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9456  009804  237A               	addwfc	(___lmul@product+1)& (0+255),f,b
  9457  009806  5177               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9458  009808  237B               	addwfc	(___lmul@product+2)& (0+255),f,b
  9459  00980A  5178               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9460  00980C  237C               	addwfc	(___lmul@product+3)& (0+255),f,b
  9461  00980E                     l11283:
  9462                           
  9463                           ; BSR set to: 0
  9464  00980E  90D8               	bcf	status,0,c
  9465  009810  3775               	rlcf	___lmul@multiplicand& (0+255),f,b
  9466  009812  3776               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9467  009814  3777               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9468  009816  3778               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9469                           
  9470                           ; BSR set to: 0
  9471  009818  90D8               	bcf	status,0,c
  9472  00981A  3374               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9473  00981C  3373               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9474  00981E  3372               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9475  009820  3371               	rrcf	___lmul@multiplier& (0+255),f,b
  9476  009822  5171               	movf	___lmul@multiplier& (0+255),w,b
  9477  009824  1172               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9478  009826  1173               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9479  009828  1174               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9480  00982A  A4D8               	btfss	status,2,c
  9481  00982C  D7E6               	goto	l11279
  9482                           
  9483                           ; BSR set to: 0
  9484  00982E  C079  F071         	movff	___lmul@product,?___lmul
  9485  009832  C07A  F072         	movff	___lmul@product+1,?___lmul+1
  9486  009836  C07B  F073         	movff	___lmul@product+2,?___lmul+2
  9487  00983A  C07C  F074         	movff	___lmul@product+3,?___lmul+3
  9488                           
  9489                           ; BSR set to: 0
  9490  00983E  0012               	return		;funcret
  9491  009840                     __end_of___lmul:
  9492                           	callstack 0
  9493                           
  9494 ;; *************** function _doSOD *****************
  9495 ;; Defined at:
  9496 ;;		line 477 in file "../../github/CANMIOfirmware/mioEvents.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2
  9505 ;; Tracked objects:
  9506 ;;		On entry : 3F/0
  9507 ;;		On exit  : 3F/0
  9508 ;;		Unchanged: 3F/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; Hardware stack levels required when called: 8
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_processActions
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text23
  9525  00A6A8                     __ptext23:
  9526                           	callstack 0
  9527  00A6A8                     _doSOD:
  9528                           	callstack 21
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;mioEvents.c: 478: timedResponse = 1;
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;incstack = 0
  9535  00A6A8  0E01               	movlw	1
  9536  00A6AA  6E14               	movwf	_timedResponse^0,c
  9537                           
  9538                           ;mioEvents.c: 479: timedResponseStep = 0;
  9539  00A6AC  0E00               	movlw	0
  9540  00A6AE  6E13               	movwf	_timedResponseStep^0,c
  9541                           
  9542                           ; BSR set to: 0
  9543  00A6B0  0012               	return		;funcret
  9544  00A6B2                     __end_of_doSOD:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function _deleteActionQueue *****************
  9548 ;; Defined at:
  9549 ;;		line 139 in file "../../github/CANMIOfirmware/actionQueue.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  index           1    wreg     unsigned char 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  index           1   24[BANK0 ] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 3F/0
  9560 ;;		On exit  : 3F/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;Total ram usage:        2 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 9
  9570 ;; This function calls:
  9571 ;;		_delete
  9572 ;;		_quantity
  9573 ;; This function is called by:
  9574 ;;		_processActions
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text24
  9579  009ACA                     __ptext24:
  9580                           	callstack 0
  9581  009ACA                     _deleteActionQueue:
  9582                           	callstack 20
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;incstack = 0
  9586                           ;deleteActionQueue@index stored from wreg
  9587  009ACA  6F78               	movwf	deleteActionQueue@index& (0+255),b
  9588                           
  9589                           ;actionQueue.c: 140: if (index <= quantity(&expeditedQueue)) {
  9590  009ACC  0EE3               	movlw	low _expeditedQueue
  9591  009ACE  0100               	movlb	0	; () banked
  9592  009AD0  6F71               	movwf	quantity@q& (0+255),b
  9593  009AD2  0E01               	movlw	high _expeditedQueue
  9594  009AD4  6F72               	movwf	(quantity@q+1)& (0+255),b
  9595  009AD6  ECC5  F04F         	call	_quantity	;wreg free
  9596  009ADA  6F77               	movwf	??_deleteActionQueue& (0+255),b
  9597  009ADC  5178               	movf	deleteActionQueue@index& (0+255),w,b
  9598  009ADE  5D77               	subwf	??_deleteActionQueue& (0+255),w,b
  9599  009AE0  A0D8               	btfss	status,0,c
  9600  009AE2  D009               	goto	l15987
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;actionQueue.c: 141: delete(&expeditedQueue, index);
  9604  009AE4  0EE3               	movlw	low _expeditedQueue
  9605  009AE6  6F71               	movwf	delete@q& (0+255),b
  9606  009AE8  0E01               	movlw	high _expeditedQueue
  9607  009AEA  6F72               	movwf	(delete@q+1)& (0+255),b
  9608  009AEC  C078  F073         	movff	deleteActionQueue@index,delete@index
  9609  009AF0  ECF5  F049         	call	_delete	;wreg free
  9610                           
  9611                           ;actionQueue.c: 142: } else {
  9612  009AF4  0012               	return	
  9613  009AF6                     l15987:
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;actionQueue.c: 143: index -= quantity(&expeditedQueue);
  9617  009AF6  0EE3               	movlw	low _expeditedQueue
  9618  009AF8  6F71               	movwf	quantity@q& (0+255),b
  9619  009AFA  0E01               	movlw	high _expeditedQueue
  9620  009AFC  6F72               	movwf	(quantity@q+1)& (0+255),b
  9621  009AFE  ECC5  F04F         	call	_quantity	;wreg free
  9622  009B02  5F78               	subwf	deleteActionQueue@index& (0+255),f,b
  9623                           
  9624                           ;actionQueue.c: 144: delete(&normalQueue, index);
  9625  009B04  0EE8               	movlw	low _normalQueue
  9626  009B06  6F71               	movwf	delete@q& (0+255),b
  9627  009B08  0E01               	movlw	high _normalQueue
  9628  009B0A  6F72               	movwf	(delete@q+1)& (0+255),b
  9629  009B0C  C078  F073         	movff	deleteActionQueue@index,delete@index
  9630  009B10  ECF5  F049         	call	_delete	;wreg free
  9631                           
  9632                           ; BSR set to: 0
  9633  009B14  0012               	return		;funcret
  9634  009B16                     __end_of_deleteActionQueue:
  9635                           	callstack 0
  9636                           
  9637 ;; *************** function _quantity *****************
  9638 ;; Defined at:
  9639 ;;		line 89 in file "../../github/CANMIOfirmware/queue.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  q               2   17[BANK0 ] PTR struct Queue
  9642 ;;		 -> expeditedQueue(5), normalQueue(5), 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      unsigned char 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 3F/0
  9651 ;;		On exit  : 3F/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9657 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9658 ;;Total ram usage:        6 bytes
  9659 ;; Hardware stack levels used: 1
  9660 ;; Hardware stack levels required when called: 8
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_peekActionQueue
  9665 ;;		_deleteActionQueue
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text25
  9670  009F8A                     __ptext25:
  9671                           	callstack 0
  9672  009F8A                     _quantity:
  9673                           	callstack 20
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;queue.c: 90: return (unsigned char)((unsigned char)(q->writeIdx - q->readIdx) & (q->siz
      +                          e -1U));
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;incstack = 0
  9680  009F8A  EE20 F001          	lfsr	2,1
  9681  009F8E  5171               	movf	quantity@q& (0+255),w,b
  9682  009F90  26D9               	addwf	fsr2l,f,c
  9683  009F92  5172               	movf	(quantity@q+1)& (0+255),w,b
  9684  009F94  22DA               	addwfc	fsr2h,f,c
  9685  009F96  50DF               	movf	indf2,w,c
  9686  009F98  6F73               	movwf	??_quantity& (0+255),b
  9687  009F9A  EE20 F002          	lfsr	2,2
  9688  009F9E  5171               	movf	quantity@q& (0+255),w,b
  9689  009FA0  26D9               	addwf	fsr2l,f,c
  9690  009FA2  5172               	movf	(quantity@q+1)& (0+255),w,b
  9691  009FA4  22DA               	addwfc	fsr2h,f,c
  9692  009FA6  50DF               	movf	indf2,w,c
  9693  009FA8  6F74               	movwf	(??_quantity+1)& (0+255),b
  9694  009FAA  5173               	movf	??_quantity& (0+255),w,b
  9695  009FAC  5D74               	subwf	(??_quantity+1)& (0+255),w,b
  9696  009FAE  6F75               	movwf	(??_quantity+2)& (0+255),b
  9697  009FB0  C071  FFD9         	movff	quantity@q,fsr2l
  9698  009FB4  C072  FFDA         	movff	quantity@q+1,fsr2h
  9699  009FB8  50DF               	movf	indf2,w,c
  9700  009FBA  6F76               	movwf	(??_quantity+3)& (0+255),b
  9701  009FBC  0576               	decf	(??_quantity+3)& (0+255),w,b
  9702  009FBE  1575               	andwf	(??_quantity+2)& (0+255),w,b
  9703                           
  9704                           ; BSR set to: 0
  9705  009FC0  0012               	return		;funcret
  9706  009FC2                     __end_of_quantity:
  9707                           	callstack 0
  9708                           
  9709 ;; *************** function _delete *****************
  9710 ;; Defined at:
  9711 ;;		line 97 in file "../../github/CANMIOfirmware/queue.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  q               2   17[BANK0 ] PTR struct Queue
  9714 ;;		 -> expeditedQueue(5), normalQueue(5), 
  9715 ;;  index           1   19[BANK0 ] unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;		None
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9722 ;; Tracked objects:
  9723 ;;		On entry : 3F/0
  9724 ;;		On exit  : 3F/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9727 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9730 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9731 ;;Total ram usage:        5 bytes
  9732 ;; Hardware stack levels used: 1
  9733 ;; Hardware stack levels required when called: 8
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_deleteActionQueue
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text26
  9742  0093EA                     __ptext26:
  9743                           	callstack 0
  9744  0093EA                     _delete:
  9745                           	callstack 20
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;queue.c: 98: if (index >= q->size) return;
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;incstack = 0
  9752  0093EA  C071  FFD9         	movff	delete@q,fsr2l
  9753  0093EE  C072  FFDA         	movff	delete@q+1,fsr2h
  9754  0093F2  50DE               	movf	postinc2,w,c
  9755  0093F4  5D73               	subwf	delete@index& (0+255),w,b
  9756  0093F6  B0D8               	btfsc	status,0,c
  9757  0093F8  0012               	return	
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;queue.c: 100: index += q->readIdx;
  9761  0093FA  EE20 F001          	lfsr	2,1
  9762  0093FE  5171               	movf	delete@q& (0+255),w,b
  9763  009400  26D9               	addwf	fsr2l,f,c
  9764  009402  5172               	movf	(delete@q+1)& (0+255),w,b
  9765  009404  22DA               	addwfc	fsr2h,f,c
  9766  009406  50DF               	movf	indf2,w,c
  9767  009408  2773               	addwf	delete@index& (0+255),f,b
  9768                           
  9769                           ;queue.c: 102: if (index >= q->size) {
  9770  00940A  C071  FFD9         	movff	delete@q,fsr2l
  9771  00940E  C072  FFDA         	movff	delete@q+1,fsr2h
  9772  009412  50DE               	movf	postinc2,w,c
  9773  009414  5D73               	subwf	delete@index& (0+255),w,b
  9774  009416  A0D8               	btfss	status,0,c
  9775  009418  D006               	goto	l1127
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;queue.c: 103: index -= q->size;
  9779  00941A  C071  FFD9         	movff	delete@q,fsr2l
  9780  00941E  C072  FFDA         	movff	delete@q+1,fsr2h
  9781  009422  50DF               	movf	indf2,w,c
  9782  009424  5F73               	subwf	delete@index& (0+255),f,b
  9783  009426                     l1127:
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;queue.c: 104: };queue.c: 105: q->queue[index] = 0;
  9787  009426  EE20 F003          	lfsr	2,3
  9788  00942A  5171               	movf	delete@q& (0+255),w,b
  9789  00942C  26D9               	addwf	fsr2l,f,c
  9790  00942E  5172               	movf	(delete@q+1)& (0+255),w,b
  9791  009430  22DA               	addwfc	fsr2h,f,c
  9792  009432  CFDE F074          	movff	postinc2,??_delete
  9793  009436  CFDD F075          	movff	postdec2,??_delete+1
  9794  00943A  5173               	movf	delete@index& (0+255),w,b
  9795  00943C  2574               	addwf	??_delete& (0+255),w,b
  9796  00943E  6ED9               	movwf	fsr2l,c
  9797  009440  0E00               	movlw	0
  9798  009442  2175               	addwfc	(??_delete+1)& (0+255),w,b
  9799  009444  6EDA               	movwf	fsr2h,c
  9800  009446  0E00               	movlw	0
  9801  009448  6EDF               	movwf	indf2,c
  9802                           
  9803                           ; BSR set to: 0
  9804  00944A  0012               	return		;funcret
  9805  00944C                     __end_of_delete:
  9806                           	callstack 0
  9807                           
  9808 ;; *************** function _completed *****************
  9809 ;; Defined at:
  9810 ;;		line 201 in file "../../github/CANMIOfirmware/outputs.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  io              1    wreg     unsigned char 
  9813 ;;  action          1   17[BANK0 ] unsigned char 
  9814 ;;  type            1   18[BANK0 ] unsigned char 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  io              1   22[BANK0 ] unsigned char 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      unsigned char 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9821 ;; Tracked objects:
  9822 ;;		On entry : 3F/0
  9823 ;;		On exit  : 3F/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9830 ;;Total ram usage:        6 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 8
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_processActions
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text27
  9841  008882                     __ptext27:
  9842                           	callstack 0
  9843  008882                     _completed:
  9844                           	callstack 21
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;incstack = 0
  9848                           ;completed@io stored from wreg
  9849  008882  6F76               	movwf	completed@io& (0+255),b
  9850                           
  9851                           ;outputs.c: 202: switch(type) {
  9852  008884  D037               	goto	l16225
  9853  008886                     l16203:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;outputs.c: 205: return 1;
  9857  008886  0E01               	movlw	1
  9858  008888  0012               	return	
  9859  00888A                     l16207:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;outputs.c: 208: return (BOOL)(pulseDelays[io] == 0U);
  9863  00888A  0EA4               	movlw	low _pulseDelays
  9864  00888C  2576               	addwf	completed@io& (0+255),w,b
  9865  00888E  6ED9               	movwf	fsr2l,c
  9866  008890  6ADA               	clrf	fsr2h,c
  9867  008892  0E02               	movlw	high _pulseDelays
  9868  008894  22DA               	addwfc	fsr2h,f,c
  9869  008896  50DF               	movf	indf2,w,c
  9870  008898  A4D8               	btfss	status,2,c
  9871  00889A  D002               	goto	u18780
  9872  00889C  0E01               	movlw	1
  9873  00889E  0012               	return	
  9874  0088A0                     u18780:
  9875  0088A0  0E00               	movlw	0
  9876  0088A2  0012               	return	
  9877  0088A4                     l16211:
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;outputs.c: 212: case 3U:;outputs.c: 215: case 4U:;outputs.c: 217: return (BOOL)((target
      +                          Pos[io] == currentPos[io]) && ((servoState[io] == STOPPED) || (servoState[io] == OFF)));
  9881  0088A4  0E00               	movlw	0
  9882  0088A6  6F75               	movwf	_completed$2368& (0+255),b
  9883                           
  9884                           ; BSR set to: 0
  9885  0088A8  0E80               	movlw	low _currentPos
  9886  0088AA  2576               	addwf	completed@io& (0+255),w,b
  9887  0088AC  6ED9               	movwf	fsr2l,c
  9888  0088AE  6ADA               	clrf	fsr2h,c
  9889  0088B0  0E01               	movlw	high _currentPos
  9890  0088B2  22DA               	addwfc	fsr2h,f,c
  9891  0088B4  0E70               	movlw	low _targetPos
  9892  0088B6  2576               	addwf	completed@io& (0+255),w,b
  9893  0088B8  6EE1               	movwf	fsr1l,c
  9894  0088BA  6AE2               	clrf	fsr1h,c
  9895  0088BC  0E01               	movlw	high _targetPos
  9896  0088BE  22E2               	addwfc	fsr1h,f,c
  9897  0088C0  50DE               	movf	postinc2,w,c
  9898  0088C2  18E6               	xorwf	postinc1,w,c
  9899  0088C4  A4D8               	btfss	status,2,c
  9900  0088C6  D014               	goto	l1100
  9901                           
  9902                           ; BSR set to: 0
  9903  0088C8  0E40               	movlw	low _servoState
  9904  0088CA  2576               	addwf	completed@io& (0+255),w,b
  9905  0088CC  6ED9               	movwf	fsr2l,c
  9906  0088CE  6ADA               	clrf	fsr2h,c
  9907  0088D0  0E01               	movlw	high _servoState
  9908  0088D2  22DA               	addwfc	fsr2h,f,c
  9909  0088D4  04DE               	decf	postinc2,w,c
  9910  0088D6  B4D8               	btfsc	status,2,c
  9911  0088D8  D009               	goto	u18820
  9912                           
  9913                           ; BSR set to: 0
  9914  0088DA  0E40               	movlw	low _servoState
  9915  0088DC  2576               	addwf	completed@io& (0+255),w,b
  9916  0088DE  6ED9               	movwf	fsr2l,c
  9917  0088E0  6ADA               	clrf	fsr2h,c
  9918  0088E2  0E01               	movlw	high _servoState
  9919  0088E4  22DA               	addwfc	fsr2h,f,c
  9920  0088E6  50DF               	movf	indf2,w,c
  9921  0088E8  A4D8               	btfss	status,2,c
  9922  0088EA  D002               	goto	l1100
  9923  0088EC                     u18820:
  9924                           
  9925                           ; BSR set to: 0
  9926  0088EC  0E01               	movlw	1
  9927  0088EE  6F75               	movwf	_completed$2368& (0+255),b
  9928  0088F0                     l1100:
  9929                           
  9930                           ; BSR set to: 0
  9931  0088F0  5175               	movf	_completed$2368& (0+255),w,b
  9932  0088F2  0012               	return	
  9933  0088F4                     l16225:
  9934  0088F4  0100               	movlb	0	; () banked
  9935  0088F6  5172               	movf	completed@type& (0+255),w,b
  9936                           
  9937                           ; Switch size 1, requested type "simple"
  9938                           ; Number of cases is 5, Range of values is 0 to 4
  9939                           ; switch strategies available:
  9940                           ; Name         Instructions Cycles
  9941                           ; simple_byte           16     9 (average)
  9942                           ;	Chosen strategy is simple_byte
  9943  0088F8  0A00               	xorlw	0	; case 0
  9944  0088FA  B4D8               	btfsc	status,2,c
  9945  0088FC  D7C4               	goto	l16203
  9946  0088FE  0A01               	xorlw	1	; case 1
  9947  008900  B4D8               	btfsc	status,2,c
  9948  008902  D7C3               	goto	l16207
  9949  008904  0A03               	xorlw	3	; case 2
  9950  008906  B4D8               	btfsc	status,2,c
  9951  008908  D7CD               	goto	l16211
  9952  00890A  0A01               	xorlw	1	; case 3
  9953  00890C  B4D8               	btfsc	status,2,c
  9954  00890E  D7CA               	goto	l16211
  9955  008910  0A07               	xorlw	7	; case 4
  9956  008912  B4D8               	btfsc	status,2,c
  9957  008914  D7C7               	goto	l16211
  9958  008916  D7B7               	goto	l16203
  9959  008918                     __end_of_completed:
  9960                           	callstack 0
  9961                           
  9962 ;; *************** function _pollAnalogue *****************
  9963 ;; Defined at:
  9964 ;;		line 73 in file "../../github/CANMIOfirmware/analogue.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;		None
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;  adc             2   96[BANK0 ] unsigned int 
  9969 ;;  lthreshold      2   94[BANK0 ] short 
  9970 ;;  hthreshold      2   92[BANK0 ] short 
  9971 ;;  lhysteresis     2   90[BANK0 ] short 
  9972 ;;  hhysteresis     2   88[BANK0 ] short 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 3F/0
  9979 ;;		On exit  : 3F/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9983 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9984 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9985 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;Total ram usage:       13 bytes
  9987 ;; Hardware stack levels used: 1
  9988 ;; Hardware stack levels required when called: 16
  9989 ;; This function calls:
  9990 ;;		___wmul
  9991 ;;		_cbusSendOpcNN
  9992 ;;		_sendProducedEvent
  9993 ;;		_writeFlashByte
  9994 ;; This function is called by:
  9995 ;;		_main
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text28
 10000  002470                     __ptext28:
 10001                           	callstack 0
 10002  002470                     _pollAnalogue:
 10003                           	callstack 14
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;analogue.c: 74: WORD adc;;analogue.c: 76: short lthreshold;;analogue.c: 77: short hthre
      +                          shold;;analogue.c: 78: short lhysteresis;;analogue.c: 79: short hhysteresis;;analogue.c:
      +                           81: if (ADCON0bits.GO) {
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;incstack = 0
 10010  002470  B2C2               	btfsc	194,1,c	;volatile
 10011  002472  0012               	return	
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;analogue.c: 84: };analogue.c: 87: if ((NV->io[portInProgress].type == 5U) || (NV->io[po
      +                          rtInProgress].type == 6U)) {
 10015  002474  51E8               	movf	_portInProgress& (0+255),w,b
 10016  002476  0D07               	mullw	7
 10017  002478  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10018  00247C  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10019  002480  50F3               	movf	243,w,c
 10020  002482  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10021  002484  50F4               	movf	244,w,c
 10022  002486  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10023  002488  0E10               	movlw	16
 10024  00248A  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10025  00248C  6ED9               	movwf	fsr2l,c
 10026  00248E  0E00               	movlw	0
 10027  002490  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10028  002492  6EDA               	movwf	fsr2h,c
 10029  002494  0E05               	movlw	5
 10030  002496  18DE               	xorwf	postinc2,w,c
 10031  002498  B4D8               	btfsc	status,2,c
 10032  00249A  D014               	goto	u26550
 10033                           
 10034                           ; BSR set to: 0
 10035  00249C  51E8               	movf	_portInProgress& (0+255),w,b
 10036  00249E  0D07               	mullw	7
 10037  0024A0  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10038  0024A4  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10039  0024A8  50F3               	movf	243,w,c
 10040  0024AA  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10041  0024AC  50F4               	movf	244,w,c
 10042  0024AE  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10043  0024B0  0E10               	movlw	16
 10044  0024B2  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10045  0024B4  6ED9               	movwf	fsr2l,c
 10046  0024B6  0E00               	movlw	0
 10047  0024B8  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10048  0024BA  6EDA               	movwf	fsr2h,c
 10049  0024BC  0E06               	movlw	6
 10050  0024BE  18DE               	xorwf	postinc2,w,c
 10051  0024C0  A4D8               	btfss	status,2,c
 10052  0024C2  D284               	goto	l21089
 10053  0024C4                     u26550:
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;analogue.c: 89: if (haveRequestedAdc) {
 10057  0024C4  5018               	movf	_haveRequestedAdc^0,w,c
 10058  0024C6  B4D8               	btfsc	status,2,c
 10059  0024C8  D281               	goto	l21089
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;analogue.c: 91: adc = ADRESH;
 10063  0024CA  CFC4 F0C0          	movff	4036,pollAnalogue@adc	;volatile
 10064  0024CE  6BC1               	clrf	(pollAnalogue@adc+1)& (0+255),b
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;analogue.c: 92: adc = adc << 8;
 10068  0024D0  51C0               	movf	pollAnalogue@adc& (0+255),w,b
 10069  0024D2  6FC1               	movwf	(pollAnalogue@adc+1)& (0+255),b
 10070  0024D4  6BC0               	clrf	pollAnalogue@adc& (0+255),b
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;analogue.c: 93: adc |= ADRESL;
 10074  0024D6  50C3               	movf	195,w,c	;volatile
 10075  0024D8  13C0               	iorwf	pollAnalogue@adc& (0+255),f,b
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;analogue.c: 97: if ((setupState == 0U) || (portInProgress != setupIo)) {
 10079  0024DA  5019               	movf	_setupState^0,w,c
 10080  0024DC  B4D8               	btfsc	status,2,c
 10081  0024DE  D004               	goto	u26580
 10082                           
 10083                           ; BSR set to: 0
 10084  0024E0  501A               	movf	_setupIo^0,w,c
 10085  0024E2  19E8               	xorwf	_portInProgress& (0+255),w,b
 10086  0024E4  B4D8               	btfsc	status,2,c
 10087  0024E6  D214               	goto	l21069
 10088  0024E8                     u26580:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;analogue.c: 98: if (NV->io[portInProgress].type == 6U) {
 10092  0024E8  51E8               	movf	_portInProgress& (0+255),w,b
 10093  0024EA  0D07               	mullw	7
 10094  0024EC  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10095  0024F0  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10096  0024F4  50F3               	movf	243,w,c
 10097  0024F6  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10098  0024F8  50F4               	movf	244,w,c
 10099  0024FA  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10100  0024FC  0E10               	movlw	16
 10101  0024FE  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10102  002500  6ED9               	movwf	fsr2l,c
 10103  002502  0E00               	movlw	0
 10104  002504  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10105  002506  6EDA               	movwf	fsr2h,c
 10106  002508  0E06               	movlw	6
 10107  00250A  18DE               	xorwf	postinc2,w,c
 10108  00250C  A4D8               	btfss	status,2,c
 10109  00250E  D128               	goto	l21041
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;analogue.c: 101: lthreshold = NV->io[portInProgress].nv_io.nv_magnet.magnet_offset_h;
 10113  002510  51E8               	movf	_portInProgress& (0+255),w,b
 10114  002512  0D07               	mullw	7
 10115  002514  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10116  002518  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10117  00251C  50F3               	movf	243,w,c
 10118  00251E  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10119  002520  50F4               	movf	244,w,c
 10120  002522  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10121  002524  0E15               	movlw	21
 10122  002526  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10123  002528  6ED9               	movwf	fsr2l,c
 10124  00252A  0E00               	movlw	0
 10125  00252C  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10126  00252E  6EDA               	movwf	fsr2h,c
 10127  002530  50DF               	movf	indf2,w,c
 10128  002532  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10129  002534  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10130  002536  6FBE               	movwf	pollAnalogue@lthreshold& (0+255),b
 10131  002538  6BBF               	clrf	(pollAnalogue@lthreshold+1)& (0+255),b
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;analogue.c: 102: lthreshold = lthreshold << 8;
 10135  00253A  51BE               	movf	pollAnalogue@lthreshold& (0+255),w,b
 10136  00253C  6FBF               	movwf	(pollAnalogue@lthreshold+1)& (0+255),b
 10137  00253E  6BBE               	clrf	pollAnalogue@lthreshold& (0+255),b
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;analogue.c: 103: lthreshold |= NV->io[portInProgress].nv_io.nv_magnet.magnet_offset_l;
 10141  002540  51E8               	movf	_portInProgress& (0+255),w,b
 10142  002542  0D07               	mullw	7
 10143  002544  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10144  002548  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10145  00254C  50F3               	movf	243,w,c
 10146  00254E  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10147  002550  50F4               	movf	244,w,c
 10148  002552  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10149  002554  0E16               	movlw	22
 10150  002556  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10151  002558  6ED9               	movwf	fsr2l,c
 10152  00255A  0E00               	movlw	0
 10153  00255C  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10154  00255E  6EDA               	movwf	fsr2h,c
 10155  002560  50DF               	movf	indf2,w,c
 10156  002562  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10157  002564  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10158  002566  13BE               	iorwf	pollAnalogue@lthreshold& (0+255),f,b
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;analogue.c: 104: hthreshold = lthreshold;
 10162  002568  C0BE  F0BC         	movff	pollAnalogue@lthreshold,pollAnalogue@hthreshold
 10163  00256C  C0BF  F0BD         	movff	pollAnalogue@lthreshold+1,pollAnalogue@hthreshold+1
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;analogue.c: 105: lthreshold -= NV->io[portInProgress].nv_io.nv_magnet.magnet_threshold;
 10167  002570  51E8               	movf	_portInProgress& (0+255),w,b
 10168  002572  0D07               	mullw	7
 10169  002574  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10170  002578  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10171  00257C  50F3               	movf	243,w,c
 10172  00257E  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10173  002580  50F4               	movf	244,w,c
 10174  002582  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10175  002584  0E13               	movlw	19
 10176  002586  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10177  002588  6ED9               	movwf	fsr2l,c
 10178  00258A  0E00               	movlw	0
 10179  00258C  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10180  00258E  6EDA               	movwf	fsr2h,c
 10181  002590  50DF               	movf	indf2,w,c
 10182  002592  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10183  002594  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10184  002596  5FBE               	subwf	pollAnalogue@lthreshold& (0+255),f,b
 10185  002598  0E00               	movlw	0
 10186  00259A  5BBF               	subwfb	(pollAnalogue@lthreshold+1)& (0+255),f,b
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;analogue.c: 106: hthreshold += NV->io[portInProgress].nv_io.nv_magnet.magnet_threshold;
 10190  00259C  51E8               	movf	_portInProgress& (0+255),w,b
 10191  00259E  0D07               	mullw	7
 10192  0025A0  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10193  0025A4  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10194  0025A8  50F3               	movf	243,w,c
 10195  0025AA  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10196  0025AC  50F4               	movf	244,w,c
 10197  0025AE  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10198  0025B0  0E13               	movlw	19
 10199  0025B2  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10200  0025B4  6ED9               	movwf	fsr2l,c
 10201  0025B6  0E00               	movlw	0
 10202  0025B8  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10203  0025BA  6EDA               	movwf	fsr2h,c
 10204  0025BC  50DF               	movf	indf2,w,c
 10205  0025BE  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10206  0025C0  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10207  0025C2  27BC               	addwf	pollAnalogue@hthreshold& (0+255),f,b
 10208  0025C4  0E00               	movlw	0
 10209  0025C6  23BD               	addwfc	(pollAnalogue@hthreshold+1)& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;analogue.c: 107: lhysteresis = lthreshold + NV->io[portInProgress].nv_io.nv_magnet.magn
      +                          et_hysteresis;
 10213  0025C8  51E8               	movf	_portInProgress& (0+255),w,b
 10214  0025CA  0D07               	mullw	7
 10215  0025CC  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10216  0025D0  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10217  0025D4  50F3               	movf	243,w,c
 10218  0025D6  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10219  0025D8  50F4               	movf	244,w,c
 10220  0025DA  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10221  0025DC  0E14               	movlw	20
 10222  0025DE  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10223  0025E0  6ED9               	movwf	fsr2l,c
 10224  0025E2  0E00               	movlw	0
 10225  0025E4  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10226  0025E6  6EDA               	movwf	fsr2h,c
 10227  0025E8  50DF               	movf	indf2,w,c
 10228  0025EA  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10229  0025EC  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10230  0025EE  25BE               	addwf	pollAnalogue@lthreshold& (0+255),w,b
 10231  0025F0  6FBA               	movwf	pollAnalogue@lhysteresis& (0+255),b
 10232  0025F2  0E00               	movlw	0
 10233  0025F4  21BF               	addwfc	(pollAnalogue@lthreshold+1)& (0+255),w,b
 10234  0025F6  6FBB               	movwf	(pollAnalogue@lhysteresis+1)& (0+255),b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;analogue.c: 108: hhysteresis = hthreshold - NV->io[portInProgress].nv_io.nv_magnet.magn
      +                          et_hysteresis;
 10238  0025F8  51E8               	movf	_portInProgress& (0+255),w,b
 10239  0025FA  0D07               	mullw	7
 10240  0025FC  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10241  002600  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10242  002604  50F3               	movf	243,w,c
 10243  002606  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10244  002608  50F4               	movf	244,w,c
 10245  00260A  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10246  00260C  0E14               	movlw	20
 10247  00260E  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10248  002610  6ED9               	movwf	fsr2l,c
 10249  002612  0E00               	movlw	0
 10250  002614  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10251  002616  6EDA               	movwf	fsr2h,c
 10252  002618  50DF               	movf	indf2,w,c
 10253  00261A  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10254  00261C  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10255  00261E  5DBC               	subwf	pollAnalogue@hthreshold& (0+255),w,b
 10256  002620  6FB8               	movwf	pollAnalogue@hhysteresis& (0+255),b
 10257  002622  51BD               	movf	(pollAnalogue@hthreshold+1)& (0+255),w,b
 10258  002624  A0D8               	btfss	status,0,c
 10259  002626  05BD               	decf	(pollAnalogue@hthreshold+1)& (0+255),w,b
 10260  002628  6FB9               	movwf	(pollAnalogue@hhysteresis+1)& (0+255),b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;analogue.c: 110: if ((analogueState[portInProgress].eventState != 2U) && ((short)adc >=
      +                           hthreshold)) {
 10264  00262A  0E90               	movlw	low _analogueState
 10265  00262C  25E8               	addwf	_portInProgress& (0+255),w,b
 10266  00262E  6ED9               	movwf	fsr2l,c
 10267  002630  6ADA               	clrf	fsr2h,c
 10268  002632  0E01               	movlw	high _analogueState
 10269  002634  22DA               	addwfc	fsr2h,f,c
 10270  002636  50DF               	movf	223,w,c
 10271  002638  0B03               	andlw	3
 10272  00263A  0A02               	xorlw	2
 10273  00263C  B4D8               	btfsc	status,2,c
 10274  00263E  D03C               	goto	l21029
 10275                           
 10276                           ; BSR set to: 0
 10277  002640  51BC               	movf	pollAnalogue@hthreshold& (0+255),w,b
 10278  002642  5DC0               	subwf	pollAnalogue@adc& (0+255),w,b
 10279  002644  51C1               	movf	(pollAnalogue@adc+1)& (0+255),w,b
 10280  002646  0A80               	xorlw	128
 10281  002648  6FB5               	movwf	??_pollAnalogue& (0+255),b
 10282  00264A  51BD               	movf	(pollAnalogue@hthreshold+1)& (0+255),w,b
 10283  00264C  0A80               	xorlw	128
 10284  00264E  59B5               	subwfb	??_pollAnalogue& (0+255),w,b
 10285  002650  A0D8               	btfss	status,0,c
 10286  002652  D032               	goto	l21029
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;analogue.c: 112: if (analogueState[portInProgress].portState == 1U) {
 10290  002654  0E90               	movlw	low _analogueState
 10291  002656  25E8               	addwf	_portInProgress& (0+255),w,b
 10292  002658  6ED9               	movwf	fsr2l,c
 10293  00265A  6ADA               	clrf	fsr2h,c
 10294  00265C  0E01               	movlw	high _analogueState
 10295  00265E  22DA               	addwfc	fsr2h,f,c
 10296  002660  0101               	movlb	1	; () banked
 10297  002662  A4DF               	btfss	indf2,2,c
 10298  002664  D01D               	goto	l21027
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;analogue.c: 113: sendProducedEvent(((8U + 4U*(portInProgress))+1U), (BOOL)(!(NV->io[por
      +                          tInProgress].flags & 0x40U)));
 10302  002666  0100               	movlb	0	; () banked
 10303  002668  51E8               	movf	_portInProgress& (0+255),w,b
 10304  00266A  0D07               	mullw	7
 10305  00266C  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10306  002670  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10307  002674  50F3               	movf	243,w,c
 10308  002676  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10309  002678  50F4               	movf	244,w,c
 10310  00267A  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10311  00267C  0E11               	movlw	17
 10312  00267E  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10313  002680  6ED9               	movwf	fsr2l,c
 10314  002682  0E00               	movlw	0
 10315  002684  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10316  002686  6EDA               	movwf	fsr2h,c
 10317  002688  BCDF               	btfsc	indf2,6,c
 10318  00268A  D002               	goto	u26630
 10319  00268C  0E01               	movlw	1
 10320  00268E  D001               	goto	u26640
 10321  002690                     u26630:
 10322  002690  0E00               	movlw	0
 10323  002692                     u26640:
 10324  002692  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 10325  002694  51E8               	movf	_portInProgress& (0+255),w,b
 10326  002696  0D04               	mullw	4
 10327  002698  50F3               	movf	243,w,c
 10328  00269A  0F09               	addlw	9
 10329  00269C  EC54  F03C         	call	_sendProducedEvent
 10330  0026A0                     l21027:
 10331                           
 10332                           ;analogue.c: 114: };analogue.c: 115: analogueState[portInProgress].eventState = 2U;
 10333  0026A0  0E90               	movlw	low _analogueState
 10334  0026A2  0100               	movlb	0	; () banked
 10335  0026A4  25E8               	addwf	_portInProgress& (0+255),w,b
 10336  0026A6  6ED9               	movwf	fsr2l,c
 10337  0026A8  6ADA               	clrf	fsr2h,c
 10338  0026AA  0E01               	movlw	high _analogueState
 10339  0026AC  22DA               	addwfc	fsr2h,f,c
 10340  0026AE  50DF               	movf	223,w,c
 10341  0026B0  0BFC               	andlw	-4
 10342  0026B2  0902               	iorlw	2
 10343  0026B4  6EDF               	movwf	223,c
 10344                           
 10345                           ;analogue.c: 116: } else if ((analogueState[portInProgress].eventState == 2U) && ((short
      +                          )adc <= hhysteresis)) {
 10346  0026B6  D091               	goto	l21047
 10347  0026B8                     l21029:
 10348                           
 10349                           ; BSR set to: 0
 10350  0026B8  0E90               	movlw	low _analogueState
 10351  0026BA  25E8               	addwf	_portInProgress& (0+255),w,b
 10352  0026BC  6ED9               	movwf	fsr2l,c
 10353  0026BE  6ADA               	clrf	fsr2h,c
 10354  0026C0  0E01               	movlw	high _analogueState
 10355  0026C2  22DA               	addwfc	fsr2h,f,c
 10356  0026C4  50DF               	movf	223,w,c
 10357  0026C6  0B03               	andlw	3
 10358  0026C8  0A02               	xorlw	2
 10359  0026CA  A4D8               	btfss	status,2,c
 10360  0026CC  D086               	goto	l21047
 10361                           
 10362                           ; BSR set to: 0
 10363  0026CE  51C0               	movf	pollAnalogue@adc& (0+255),w,b
 10364  0026D0  5DB8               	subwf	pollAnalogue@hhysteresis& (0+255),w,b
 10365  0026D2  51B9               	movf	(pollAnalogue@hhysteresis+1)& (0+255),w,b
 10366  0026D4  0A80               	xorlw	128
 10367  0026D6  6FB5               	movwf	??_pollAnalogue& (0+255),b
 10368  0026D8  51C1               	movf	(pollAnalogue@adc+1)& (0+255),w,b
 10369  0026DA  0A80               	xorlw	128
 10370  0026DC  59B5               	subwfb	??_pollAnalogue& (0+255),w,b
 10371  0026DE  A0D8               	btfss	status,0,c
 10372  0026E0  D07C               	goto	l21047
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;analogue.c: 118: if (analogueState[portInProgress].portState == 1U) {
 10376  0026E2  0E90               	movlw	low _analogueState
 10377  0026E4  25E8               	addwf	_portInProgress& (0+255),w,b
 10378  0026E6  6ED9               	movwf	fsr2l,c
 10379  0026E8  6ADA               	clrf	fsr2h,c
 10380  0026EA  0E01               	movlw	high _analogueState
 10381  0026EC  22DA               	addwfc	fsr2h,f,c
 10382  0026EE  0101               	movlb	1	; () banked
 10383  0026F0  A4DF               	btfss	indf2,2,c
 10384  0026F2  D02C               	goto	l21039
 10385                           
 10386                           ; BSR set to: 1
 10387                           ;analogue.c: 119: if (!(NV->io[portInProgress].flags & 0x08U)) {
 10388  0026F4  0100               	movlb	0	; () banked
 10389  0026F6  51E8               	movf	_portInProgress& (0+255),w,b
 10390  0026F8  0D07               	mullw	7
 10391  0026FA  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10392  0026FE  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10393  002702  50F3               	movf	243,w,c
 10394  002704  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10395  002706  50F4               	movf	244,w,c
 10396  002708  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10397  00270A  0E11               	movlw	17
 10398  00270C  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10399  00270E  6ED9               	movwf	fsr2l,c
 10400  002710  0E00               	movlw	0
 10401  002712  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10402  002714  6EDA               	movwf	fsr2h,c
 10403  002716  B6DF               	btfsc	indf2,3,c
 10404  002718  D019               	goto	l21039
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;analogue.c: 120: sendProducedEvent(((8U + 4U*(portInProgress))+1U), NV->io[portInProgre
      +                          ss].flags & 0x40U);
 10408  00271A  51E8               	movf	_portInProgress& (0+255),w,b
 10409  00271C  0D07               	mullw	7
 10410  00271E  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10411  002722  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10412  002726  50F3               	movf	243,w,c
 10413  002728  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10414  00272A  50F4               	movf	244,w,c
 10415  00272C  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10416  00272E  0E11               	movlw	17
 10417  002730  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10418  002732  6ED9               	movwf	fsr2l,c
 10419  002734  0E00               	movlw	0
 10420  002736  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10421  002738  6EDA               	movwf	fsr2h,c
 10422  00273A  50DF               	movf	indf2,w,c
 10423  00273C  0B40               	andlw	64
 10424  00273E  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 10425  002740  51E8               	movf	_portInProgress& (0+255),w,b
 10426  002742  0D04               	mullw	4
 10427  002744  50F3               	movf	243,w,c
 10428  002746  0F09               	addlw	9
 10429  002748  EC54  F03C         	call	_sendProducedEvent
 10430  00274C                     l21039:
 10431                           
 10432                           ;analogue.c: 121: };analogue.c: 122: };analogue.c: 123: analogueState[portInProgress].ev
      +                          entState = 0U;
 10433  00274C  0E90               	movlw	low _analogueState
 10434  00274E  0100               	movlb	0	; () banked
 10435  002750  25E8               	addwf	_portInProgress& (0+255),w,b
 10436  002752  6ED9               	movwf	fsr2l,c
 10437  002754  6ADA               	clrf	fsr2h,c
 10438  002756  0E01               	movlw	high _analogueState
 10439  002758  22DA               	addwfc	fsr2h,f,c
 10440  00275A  0EFC               	movlw	-4
 10441  00275C  16DF               	andwf	223,f,c
 10442  00275E  D03D               	goto	l21047
 10443  002760                     l21041:
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;analogue.c: 128: adc = adc >> 4;
 10447  002760  C0C0  F0B5         	movff	pollAnalogue@adc,??_pollAnalogue
 10448  002764  C0C1  F0B6         	movff	pollAnalogue@adc+1,??_pollAnalogue+1
 10449  002768  0E04               	movlw	4
 10450  00276A  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10451  00276C                     u26695:
 10452  00276C  90D8               	bcf	status,0,c
 10453  00276E  33B6               	rrcf	(??_pollAnalogue+1)& (0+255),f,b
 10454  002770  33B5               	rrcf	??_pollAnalogue& (0+255),f,b
 10455  002772  2FB7               	decfsz	(??_pollAnalogue+2)& (0+255),f,b
 10456  002774  D7FB               	goto	u26695
 10457  002776  C0B5  F0C0         	movff	??_pollAnalogue,pollAnalogue@adc
 10458  00277A  C0B6  F0C1         	movff	??_pollAnalogue+1,pollAnalogue@adc+1
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;analogue.c: 129: lthreshold = NV->io[portInProgress].nv_io.nv_analogue_in.analogue_thre
      +                          shold;
 10462  00277E  51E8               	movf	_portInProgress& (0+255),w,b
 10463  002780  0D07               	mullw	7
 10464  002782  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10465  002786  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10466  00278A  50F3               	movf	243,w,c
 10467  00278C  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10468  00278E  50F4               	movf	244,w,c
 10469  002790  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10470  002792  0E13               	movlw	19
 10471  002794  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10472  002796  6ED9               	movwf	fsr2l,c
 10473  002798  0E00               	movlw	0
 10474  00279A  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10475  00279C  6EDA               	movwf	fsr2h,c
 10476  00279E  50DF               	movf	indf2,w,c
 10477  0027A0  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10478  0027A2  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10479  0027A4  6FBE               	movwf	pollAnalogue@lthreshold& (0+255),b
 10480  0027A6  6BBF               	clrf	(pollAnalogue@lthreshold+1)& (0+255),b
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;analogue.c: 130: lhysteresis = lthreshold - NV->io[portInProgress].nv_io.nv_analogue_in
      +                          .analogue_hysteresis;
 10484  0027A8  51E8               	movf	_portInProgress& (0+255),w,b
 10485  0027AA  0D07               	mullw	7
 10486  0027AC  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10487  0027B0  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10488  0027B4  50F3               	movf	243,w,c
 10489  0027B6  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10490  0027B8  50F4               	movf	244,w,c
 10491  0027BA  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10492  0027BC  0E14               	movlw	20
 10493  0027BE  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10494  0027C0  6ED9               	movwf	fsr2l,c
 10495  0027C2  0E00               	movlw	0
 10496  0027C4  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10497  0027C6  6EDA               	movwf	fsr2h,c
 10498  0027C8  50DF               	movf	indf2,w,c
 10499  0027CA  6FB7               	movwf	(??_pollAnalogue+2)& (0+255),b
 10500  0027CC  51B7               	movf	(??_pollAnalogue+2)& (0+255),w,b
 10501  0027CE  5DBE               	subwf	pollAnalogue@lthreshold& (0+255),w,b
 10502  0027D0  6FBA               	movwf	pollAnalogue@lhysteresis& (0+255),b
 10503  0027D2  51BF               	movf	(pollAnalogue@lthreshold+1)& (0+255),w,b
 10504  0027D4  A0D8               	btfss	status,0,c
 10505  0027D6  05BF               	decf	(pollAnalogue@lthreshold+1)& (0+255),w,b
 10506  0027D8  6FBB               	movwf	(pollAnalogue@lhysteresis+1)& (0+255),b
 10507  0027DA                     l21047:
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;analogue.c: 131: };analogue.c: 133: if ((analogueState[portInProgress].eventState != 1U
      +                          ) && ((short)adc <= lthreshold)) {
 10511  0027DA  0E90               	movlw	low _analogueState
 10512  0027DC  25E8               	addwf	_portInProgress& (0+255),w,b
 10513  0027DE  6ED9               	movwf	fsr2l,c
 10514  0027E0  6ADA               	clrf	fsr2h,c
 10515  0027E2  0E01               	movlw	high _analogueState
 10516  0027E4  22DA               	addwfc	fsr2h,f,c
 10517  0027E6  50DF               	movf	223,w,c
 10518  0027E8  0B03               	andlw	3
 10519  0027EA  06E8               	decf	wreg,f,c
 10520  0027EC  B4D8               	btfsc	status,2,c
 10521  0027EE  D03C               	goto	l21057
 10522                           
 10523                           ; BSR set to: 0
 10524  0027F0  51C0               	movf	pollAnalogue@adc& (0+255),w,b
 10525  0027F2  5DBE               	subwf	pollAnalogue@lthreshold& (0+255),w,b
 10526  0027F4  51BF               	movf	(pollAnalogue@lthreshold+1)& (0+255),w,b
 10527  0027F6  0A80               	xorlw	128
 10528  0027F8  6FB5               	movwf	??_pollAnalogue& (0+255),b
 10529  0027FA  51C1               	movf	(pollAnalogue@adc+1)& (0+255),w,b
 10530  0027FC  0A80               	xorlw	128
 10531  0027FE  59B5               	subwfb	??_pollAnalogue& (0+255),w,b
 10532  002800  A0D8               	btfss	status,0,c
 10533  002802  D032               	goto	l21057
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;analogue.c: 135: if (analogueState[portInProgress].portState == 1U) {
 10537  002804  0E90               	movlw	low _analogueState
 10538  002806  25E8               	addwf	_portInProgress& (0+255),w,b
 10539  002808  6ED9               	movwf	fsr2l,c
 10540  00280A  6ADA               	clrf	fsr2h,c
 10541  00280C  0E01               	movlw	high _analogueState
 10542  00280E  22DA               	addwfc	fsr2h,f,c
 10543  002810  0101               	movlb	1	; () banked
 10544  002812  A4DF               	btfss	indf2,2,c
 10545  002814  D01D               	goto	l21055
 10546                           
 10547                           ; BSR set to: 1
 10548                           ;analogue.c: 136: sendProducedEvent(((8U + 4U*(portInProgress))+0U), (unsigned char)(!(N
      +                          V->io[portInProgress].flags & 0x40U)));
 10549  002816  0100               	movlb	0	; () banked
 10550  002818  51E8               	movf	_portInProgress& (0+255),w,b
 10551  00281A  0D07               	mullw	7
 10552  00281C  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10553  002820  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10554  002824  50F3               	movf	243,w,c
 10555  002826  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10556  002828  50F4               	movf	244,w,c
 10557  00282A  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10558  00282C  0E11               	movlw	17
 10559  00282E  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10560  002830  6ED9               	movwf	fsr2l,c
 10561  002832  0E00               	movlw	0
 10562  002834  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10563  002836  6EDA               	movwf	fsr2h,c
 10564  002838  BCDF               	btfsc	indf2,6,c
 10565  00283A  D002               	goto	u26730
 10566  00283C  0E01               	movlw	1
 10567  00283E  D001               	goto	u26740
 10568  002840                     u26730:
 10569  002840  0E00               	movlw	0
 10570  002842                     u26740:
 10571  002842  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 10572  002844  51E8               	movf	_portInProgress& (0+255),w,b
 10573  002846  0D04               	mullw	4
 10574  002848  50F3               	movf	243,w,c
 10575  00284A  0F08               	addlw	8
 10576  00284C  EC54  F03C         	call	_sendProducedEvent
 10577  002850                     l21055:
 10578                           
 10579                           ;analogue.c: 137: };analogue.c: 138: analogueState[portInProgress].eventState = 1U;
 10580  002850  0E90               	movlw	low _analogueState
 10581  002852  0100               	movlb	0	; () banked
 10582  002854  25E8               	addwf	_portInProgress& (0+255),w,b
 10583  002856  6ED9               	movwf	fsr2l,c
 10584  002858  6ADA               	clrf	fsr2h,c
 10585  00285A  0E01               	movlw	high _analogueState
 10586  00285C  22DA               	addwfc	fsr2h,f,c
 10587  00285E  50DF               	movf	223,w,c
 10588  002860  0BFC               	andlw	-4
 10589  002862  0901               	iorlw	1
 10590  002864  6EDF               	movwf	223,c
 10591                           
 10592                           ;analogue.c: 139: } else if ((analogueState[portInProgress].eventState == 1U) && ((short
      +                          )adc >= lhysteresis)) {
 10593  002866  D0AA               	goto	l21087
 10594  002868                     l21057:
 10595                           
 10596                           ; BSR set to: 0
 10597  002868  0E90               	movlw	low _analogueState
 10598  00286A  25E8               	addwf	_portInProgress& (0+255),w,b
 10599  00286C  6ED9               	movwf	fsr2l,c
 10600  00286E  6ADA               	clrf	fsr2h,c
 10601  002870  0E01               	movlw	high _analogueState
 10602  002872  22DA               	addwfc	fsr2h,f,c
 10603  002874  50DF               	movf	223,w,c
 10604  002876  0B03               	andlw	3
 10605  002878  06E8               	decf	wreg,f,c
 10606  00287A  A4D8               	btfss	status,2,c
 10607  00287C  D09F               	goto	l21087
 10608                           
 10609                           ; BSR set to: 0
 10610  00287E  51BA               	movf	pollAnalogue@lhysteresis& (0+255),w,b
 10611  002880  5DC0               	subwf	pollAnalogue@adc& (0+255),w,b
 10612  002882  51C1               	movf	(pollAnalogue@adc+1)& (0+255),w,b
 10613  002884  0A80               	xorlw	128
 10614  002886  6FB5               	movwf	??_pollAnalogue& (0+255),b
 10615  002888  51BB               	movf	(pollAnalogue@lhysteresis+1)& (0+255),w,b
 10616  00288A  0A80               	xorlw	128
 10617  00288C  59B5               	subwfb	??_pollAnalogue& (0+255),w,b
 10618  00288E  A0D8               	btfss	status,0,c
 10619  002890  D095               	goto	l21087
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;analogue.c: 141: if (analogueState[portInProgress].portState == 1U) {
 10623  002892  0E90               	movlw	low _analogueState
 10624  002894  25E8               	addwf	_portInProgress& (0+255),w,b
 10625  002896  6ED9               	movwf	fsr2l,c
 10626  002898  6ADA               	clrf	fsr2h,c
 10627  00289A  0E01               	movlw	high _analogueState
 10628  00289C  22DA               	addwfc	fsr2h,f,c
 10629  00289E  0101               	movlb	1	; () banked
 10630  0028A0  A4DF               	btfss	indf2,2,c
 10631  0028A2  D02C               	goto	l21067
 10632                           
 10633                           ; BSR set to: 1
 10634                           ;analogue.c: 142: if (!(NV->io[portInProgress].flags & 0x08U)) {
 10635  0028A4  0100               	movlb	0	; () banked
 10636  0028A6  51E8               	movf	_portInProgress& (0+255),w,b
 10637  0028A8  0D07               	mullw	7
 10638  0028AA  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10639  0028AE  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10640  0028B2  50F3               	movf	243,w,c
 10641  0028B4  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10642  0028B6  50F4               	movf	244,w,c
 10643  0028B8  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10644  0028BA  0E11               	movlw	17
 10645  0028BC  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10646  0028BE  6ED9               	movwf	fsr2l,c
 10647  0028C0  0E00               	movlw	0
 10648  0028C2  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10649  0028C4  6EDA               	movwf	fsr2h,c
 10650  0028C6  B6DF               	btfsc	indf2,3,c
 10651  0028C8  D019               	goto	l21067
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;analogue.c: 143: sendProducedEvent(((8U + 4U*(portInProgress))+0U), NV->io[portInProgre
      +                          ss].flags & 0x40U);
 10655  0028CA  51E8               	movf	_portInProgress& (0+255),w,b
 10656  0028CC  0D07               	mullw	7
 10657  0028CE  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10658  0028D2  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10659  0028D6  50F3               	movf	243,w,c
 10660  0028D8  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10661  0028DA  50F4               	movf	244,w,c
 10662  0028DC  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10663  0028DE  0E11               	movlw	17
 10664  0028E0  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10665  0028E2  6ED9               	movwf	fsr2l,c
 10666  0028E4  0E00               	movlw	0
 10667  0028E6  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10668  0028E8  6EDA               	movwf	fsr2h,c
 10669  0028EA  50DF               	movf	indf2,w,c
 10670  0028EC  0B40               	andlw	64
 10671  0028EE  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 10672  0028F0  51E8               	movf	_portInProgress& (0+255),w,b
 10673  0028F2  0D04               	mullw	4
 10674  0028F4  50F3               	movf	243,w,c
 10675  0028F6  0F08               	addlw	8
 10676  0028F8  EC54  F03C         	call	_sendProducedEvent
 10677  0028FC                     l21067:
 10678                           
 10679                           ;analogue.c: 144: };analogue.c: 145: };analogue.c: 146: analogueState[portInProgress].ev
      +                          entState = 0U;
 10680  0028FC  0E90               	movlw	low _analogueState
 10681  0028FE  0100               	movlb	0	; () banked
 10682  002900  25E8               	addwf	_portInProgress& (0+255),w,b
 10683  002902  6ED9               	movwf	fsr2l,c
 10684  002904  6ADA               	clrf	fsr2h,c
 10685  002906  0E01               	movlw	high _analogueState
 10686  002908  22DA               	addwfc	fsr2h,f,c
 10687  00290A  0EFC               	movlw	-4
 10688  00290C  16DF               	andwf	223,f,c
 10689  00290E  D056               	goto	l21087
 10690  002910                     l21069:
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;analogue.c: 151: cbusMsg[d3] = 0U;
 10694  002910  0E00               	movlw	0
 10695  002912  6E25               	movwf	(_cbusMsg+9)^0,c
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;analogue.c: 152: cbusMsg[d4] = portInProgress + 1U;
 10699  002914  29E8               	incf	_portInProgress& (0+255),w,b
 10700  002916  6E26               	movwf	(_cbusMsg+10)^0,c
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;analogue.c: 153: cbusMsg[d5] = portInProgress + 1U;
 10704  002918  29E8               	incf	_portInProgress& (0+255),w,b
 10705  00291A  6E27               	movwf	(_cbusMsg+11)^0,c
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;analogue.c: 154: cbusMsg[d7] = adc & 0xFFU;
 10709  00291C  C0C0  F029         	movff	pollAnalogue@adc,_cbusMsg+13
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;analogue.c: 155: cbusMsg[d6] = adc >> 8U;
 10713  002920  C0C1  F028         	movff	pollAnalogue@adc+1,_cbusMsg+12
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;analogue.c: 156: cbusSendOpcNN(0xFF, 0xFD, -1U, cbusMsg);
 10717  002924  0EFD               	movlw	253
 10718  002926  6F93               	movwf	cbusSendOpcNN@opc& (0+255),b
 10719  002928  0EFF               	movlw	255
 10720  00292A  6F95               	movwf	(cbusSendOpcNN@nodeID+1)& (0+255),b
 10721  00292C  6994               	setf	cbusSendOpcNN@nodeID& (0+255),b
 10722  00292E  0E1C               	movlw	low _cbusMsg
 10723  002930  6F96               	movwf	cbusSendOpcNN@msg& (0+255),b
 10724  002932  0EFF               	movlw	255
 10725  002934  ECFD  F051         	call	_cbusSendOpcNN
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;analogue.c: 157: if (setupState == 2U) {
 10729  002938  0E02               	movlw	2
 10730  00293A  1819               	xorwf	_setupState^0,w,c
 10731  00293C  A4D8               	btfss	status,2,c
 10732  00293E  D03C               	goto	l21085
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;analogue.c: 159: writeFlashByte((BYTE*) (0xFF80U + (16U + 7U*(portInProgress) + 5U)), c
      +                          busMsg[d6]);
 10736  002940  C0E8  F071         	movff	_portInProgress,___wmul@multiplier
 10737  002944  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 10738  002946  0E00               	movlw	0
 10739  002948  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10740  00294A  0E07               	movlw	7
 10741  00294C  6F73               	movwf	___wmul@multiplicand& (0+255),b
 10742  00294E  ECEA  F051         	call	___wmul	;wreg free
 10743  002952  0E95               	movlw	149
 10744  002954  6FB5               	movwf	??_pollAnalogue& (0+255),b
 10745  002956  0EFF               	movlw	255
 10746  002958  6FB6               	movwf	(??_pollAnalogue+1)& (0+255),b
 10747  00295A  5171               	movf	?___wmul& (0+255),w,b
 10748  00295C  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10749  00295E  5172               	movf	(?___wmul+1)& (0+255),w,b
 10750  002960  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10751  002962  C0B5  F087         	movff	??_pollAnalogue,writeFlashByte@flashAddr
 10752  002966  C0B6  F088         	movff	??_pollAnalogue+1,writeFlashByte@flashAddr+1
 10753  00296A  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 10754  00296C  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 10755  00296E  A4D8               	btfss	status,2,c
 10756  002970  0E20               	movlw	32
 10757  002972  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 10758  002974  C028  F08A         	movff	_cbusMsg+12,writeFlashByte@flashData
 10759  002978  ECBA  F052         	call	_writeFlashByte	;wreg free
 10760                           
 10761                           ;analogue.c: 160: writeFlashByte((BYTE*) (0xFF80U + (16U + 7U*(portInProgress) + 6U)), c
      +                          busMsg[d7]);
 10762  00297C  C0E8  F071         	movff	_portInProgress,___wmul@multiplier
 10763  002980  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 10764  002982  0E00               	movlw	0
 10765  002984  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10766  002986  0E07               	movlw	7
 10767  002988  6F73               	movwf	___wmul@multiplicand& (0+255),b
 10768  00298A  ECEA  F051         	call	___wmul	;wreg free
 10769  00298E  0E96               	movlw	150
 10770  002990  6FB5               	movwf	??_pollAnalogue& (0+255),b
 10771  002992  0EFF               	movlw	255
 10772  002994  6FB6               	movwf	(??_pollAnalogue+1)& (0+255),b
 10773  002996  5171               	movf	?___wmul& (0+255),w,b
 10774  002998  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10775  00299A  5172               	movf	(?___wmul+1)& (0+255),w,b
 10776  00299C  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10777  00299E  C0B5  F087         	movff	??_pollAnalogue,writeFlashByte@flashAddr
 10778  0029A2  C0B6  F088         	movff	??_pollAnalogue+1,writeFlashByte@flashAddr+1
 10779  0029A6  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 10780  0029A8  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 10781  0029AA  A4D8               	btfss	status,2,c
 10782  0029AC  0E20               	movlw	32
 10783  0029AE  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 10784  0029B0  C029  F08A         	movff	_cbusMsg+13,writeFlashByte@flashData
 10785  0029B4  ECBA  F052         	call	_writeFlashByte	;wreg free
 10786  0029B8                     l21085:
 10787                           
 10788                           ; BSR set to: 0
 10789                           ;analogue.c: 161: };analogue.c: 162: setupState = 0U;
 10790  0029B8  0E00               	movlw	0
 10791  0029BA  6E19               	movwf	_setupState^0,c
 10792  0029BC                     l21087:
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;analogue.c: 163: };analogue.c: 164: analogueState[portInProgress].portState = 1U;
 10796  0029BC  0E90               	movlw	low _analogueState
 10797  0029BE  25E8               	addwf	_portInProgress& (0+255),w,b
 10798  0029C0  6ED9               	movwf	fsr2l,c
 10799  0029C2  6ADA               	clrf	fsr2h,c
 10800  0029C4  0E01               	movlw	high _analogueState
 10801  0029C6  22DA               	addwfc	fsr2h,f,c
 10802  0029C8  0101               	movlb	1	; () banked
 10803  0029CA  84DF               	bsf	indf2,2,c
 10804  0029CC                     l21089:
 10805                           
 10806                           ;analogue.c: 165: };analogue.c: 166: };analogue.c: 168: portInProgress++;
 10807  0029CC  0100               	movlb	0	; () banked
 10808  0029CE  2BE8               	incf	_portInProgress& (0+255),f,b
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;analogue.c: 169: if (portInProgress >= 16U) {
 10812  0029D0  0E0F               	movlw	15
 10813  0029D2  65E8               	cpfsgt	_portInProgress& (0+255),b
 10814  0029D4  D002               	goto	l21095
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;analogue.c: 170: portInProgress = 0U;
 10818  0029D6  0E00               	movlw	0
 10819  0029D8  6FE8               	movwf	_portInProgress& (0+255),b
 10820  0029DA                     l21095:
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;analogue.c: 171: };analogue.c: 173: if ((NV->io[portInProgress].type == 5U) || (NV->io[
      +                          portInProgress].type == 6U)) {
 10824  0029DA  51E8               	movf	_portInProgress& (0+255),w,b
 10825  0029DC  0D07               	mullw	7
 10826  0029DE  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10827  0029E2  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10828  0029E6  50F3               	movf	243,w,c
 10829  0029E8  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10830  0029EA  50F4               	movf	244,w,c
 10831  0029EC  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10832  0029EE  0E10               	movlw	16
 10833  0029F0  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10834  0029F2  6ED9               	movwf	fsr2l,c
 10835  0029F4  0E00               	movlw	0
 10836  0029F6  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10837  0029F8  6EDA               	movwf	fsr2h,c
 10838  0029FA  0E05               	movlw	5
 10839  0029FC  18DE               	xorwf	postinc2,w,c
 10840  0029FE  B4D8               	btfsc	status,2,c
 10841  002A00  D014               	goto	u26820
 10842                           
 10843                           ; BSR set to: 0
 10844  002A02  51E8               	movf	_portInProgress& (0+255),w,b
 10845  002A04  0D07               	mullw	7
 10846  002A06  C0EC  F0B5         	movff	_NV,??_pollAnalogue
 10847  002A0A  C0ED  F0B6         	movff	_NV+1,??_pollAnalogue+1
 10848  002A0E  50F3               	movf	243,w,c
 10849  002A10  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10850  002A12  50F4               	movf	244,w,c
 10851  002A14  23B6               	addwfc	(??_pollAnalogue+1)& (0+255),f,b
 10852  002A16  0E10               	movlw	16
 10853  002A18  25B5               	addwf	??_pollAnalogue& (0+255),w,b
 10854  002A1A  6ED9               	movwf	fsr2l,c
 10855  002A1C  0E00               	movlw	0
 10856  002A1E  21B6               	addwfc	(??_pollAnalogue+1)& (0+255),w,b
 10857  002A20  6EDA               	movwf	fsr2h,c
 10858  002A22  0E06               	movlw	6
 10859  002A24  18DE               	xorwf	postinc2,w,c
 10860  002A26  A4D8               	btfss	status,2,c
 10861  002A28  0012               	return	
 10862  002A2A                     u26820:
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;analogue.c: 175: ADCON0bits.CHS = configs[portInProgress].an;
 10866  002A2A  51E8               	movf	_portInProgress& (0+255),w,b
 10867  002A2C  0D04               	mullw	4
 10868  002A2E  CFF3 F0B5          	movff	prodl,??_pollAnalogue
 10869  002A32  0E03               	movlw	3
 10870  002A34  27B5               	addwf	??_pollAnalogue& (0+255),f,b
 10871  002A36  51B5               	movf	??_pollAnalogue& (0+255),w,b
 10872  002A38  0F01               	addlw	low _configs
 10873  002A3A  6FB6               	movwf	(??_pollAnalogue+1)& (0+255),b
 10874  002A3C  C0B6  FFF6         	movff	??_pollAnalogue+1,tblptrl
 10875  002A40                     	if	1	;There is more than 1 active tblptr byte
 10876  002A40  0E0F               	movlw	high __smallconst
 10877  002A42  6EF7               	movwf	tblptrh,c
 10878  002A44                     	endif
 10879  002A44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10880  002A44  6AF8               	clrf	tblptru,c
 10881  002A46                     	endif
 10882  002A46                     	if	0	;tblptru may be non-zero
 10883  002A46                     	endif
 10884  002A46  0008               	tblrd		*
 10885  002A48  CFF5 F0B7          	movff	tablat,??_pollAnalogue+2
 10886  002A4C  47B7               	rlncf	(??_pollAnalogue+2)& (0+255),f,b
 10887  002A4E  47B7               	rlncf	(??_pollAnalogue+2)& (0+255),f,b
 10888  002A50  50C2               	movf	194,w,c	;volatile
 10889  002A52  19B7               	xorwf	(??_pollAnalogue+2)& (0+255),w,b
 10890  002A54  0B83               	andlw	-125
 10891  002A56  19B7               	xorwf	(??_pollAnalogue+2)& (0+255),w,b
 10892  002A58  6EC2               	movwf	194,c	;volatile
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;analogue.c: 176: ADCON0bits.GO = 1U;
 10896  002A5A  82C2               	bsf	194,1,c	;volatile
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;analogue.c: 177: haveRequestedAdc = 1U;
 10900  002A5C  0E01               	movlw	1
 10901  002A5E  6E18               	movwf	_haveRequestedAdc^0,c
 10902                           
 10903                           ; BSR set to: 0
 10904  002A60  0012               	return		;funcret
 10905  002A62                     __end_of_pollAnalogue:
 10906                           	callstack 0
 10907                           
 10908 ;; *************** function _inputScan *****************
 10909 ;; Defined at:
 10910 ;;		line 100 in file "../../github/CANMIOfirmware/inputs.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;		None
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  change          1   89[BANK0 ] unsigned char 
 10915 ;;  input           1   90[BANK0 ] unsigned char 
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10920 ;; Tracked objects:
 10921 ;;		On entry : 3F/2
 10922 ;;		On exit  : 3F/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;Total ram usage:        6 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; Hardware stack levels required when called: 16
 10932 ;; This function calls:
 10933 ;;		_ee_write
 10934 ;;		_readInput
 10935 ;;		_sendProducedEvent
 10936 ;; This function is called by:
 10937 ;;		_main
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941                           	psect	text29
 10942  00449A                     __ptext29:
 10943                           	callstack 0
 10944  00449A                     _inputScan:
 10945                           	callstack 14
 10946                           
 10947                           ; BSR set to: 2
 10948                           ;inputs.c: 101: for (io=0; io< 16U; io++) {
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;incstack = 0
 10952  00449A  0E00               	movlw	0
 10953  00449C  0100               	movlb	0	; () banked
 10954  00449E  6FE7               	movwf	_io& (0+255),b
 10955  0044A0                     l21157:
 10956                           
 10957                           ; BSR set to: 0
 10958  0044A0  0E0F               	movlw	15
 10959  0044A2  65E7               	cpfsgt	_io& (0+255),b
 10960  0044A4  D001               	goto	l21161
 10961  0044A6  0012               	return	
 10962  0044A8                     l21161:
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;inputs.c: 102: if (NV->io[io].type == 0U) {
 10966  0044A8  51E7               	movf	_io& (0+255),w,b
 10967  0044AA  0D07               	mullw	7
 10968  0044AC  C0EC  F0B5         	movff	_NV,??_inputScan
 10969  0044B0  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 10970  0044B4  50F3               	movf	243,w,c
 10971  0044B6  27B5               	addwf	??_inputScan& (0+255),f,b
 10972  0044B8  50F4               	movf	244,w,c
 10973  0044BA  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 10974  0044BC  0E10               	movlw	16
 10975  0044BE  25B5               	addwf	??_inputScan& (0+255),w,b
 10976  0044C0  6ED9               	movwf	fsr2l,c
 10977  0044C2  0E00               	movlw	0
 10978  0044C4  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 10979  0044C6  6EDA               	movwf	fsr2h,c
 10980  0044C8  50DF               	movf	indf2,w,c
 10981  0044CA  A4D8               	btfss	status,2,c
 10982  0044CC  D16F               	goto	l21223
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;inputs.c: 103: BYTE input = readInput(io);
 10986  0044CE  51E7               	movf	_io& (0+255),w,b
 10987  0044D0  EC12  F037         	call	_readInput
 10988  0044D4  6FBA               	movwf	inputScan@input& (0+255),b
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;inputs.c: 104: if (input != inputState[io]) {
 10992  0044D6  0E94               	movlw	low _inputState
 10993  0044D8  25E7               	addwf	_io& (0+255),w,b
 10994  0044DA  6ED9               	movwf	fsr2l,c
 10995  0044DC  6ADA               	clrf	fsr2h,c
 10996  0044DE  0E02               	movlw	high _inputState
 10997  0044E0  22DA               	addwfc	fsr2h,f,c
 10998  0044E2  51BA               	movf	inputScan@input& (0+255),w,b
 10999  0044E4  18DE               	xorwf	postinc2,w,c
 11000  0044E6  B4D8               	btfsc	status,2,c
 11001  0044E8  D159               	goto	l21221
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;inputs.c: 105: BOOL change = 0;
 11005  0044EA  0E00               	movlw	0
 11006  0044EC  6FB9               	movwf	inputScan@change& (0+255),b
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;inputs.c: 107: if (inputState[io] && (delayCount[io] == NV->io[io].nv_io.nv_input.input
      +                          _on_delay)) {
 11010  0044EE  0E94               	movlw	low _inputState
 11011  0044F0  25E7               	addwf	_io& (0+255),w,b
 11012  0044F2  6ED9               	movwf	fsr2l,c
 11013  0044F4  6ADA               	clrf	fsr2h,c
 11014  0044F6  0E02               	movlw	high _inputState
 11015  0044F8  22DA               	addwfc	fsr2h,f,c
 11016  0044FA  50DF               	movf	indf2,w,c
 11017  0044FC  B4D8               	btfsc	status,2,c
 11018  0044FE  D01C               	goto	l21175
 11019                           
 11020                           ; BSR set to: 0
 11021  004500  51E7               	movf	_io& (0+255),w,b
 11022  004502  0D07               	mullw	7
 11023  004504  C0EC  F0B5         	movff	_NV,??_inputScan
 11024  004508  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11025  00450C  50F3               	movf	243,w,c
 11026  00450E  27B5               	addwf	??_inputScan& (0+255),f,b
 11027  004510  50F4               	movf	244,w,c
 11028  004512  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11029  004514  0E12               	movlw	18
 11030  004516  25B5               	addwf	??_inputScan& (0+255),w,b
 11031  004518  6ED9               	movwf	fsr2l,c
 11032  00451A  0E00               	movlw	0
 11033  00451C  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11034  00451E  6EDA               	movwf	fsr2h,c
 11035  004520  0E84               	movlw	low _delayCount
 11036  004522  25E7               	addwf	_io& (0+255),w,b
 11037  004524  6EE1               	movwf	fsr1l,c
 11038  004526  6AE2               	clrf	fsr1h,c
 11039  004528  0E02               	movlw	high _delayCount
 11040  00452A  22E2               	addwfc	fsr1h,f,c
 11041  00452C  50DE               	movf	postinc2,w,c
 11042  00452E  18E6               	xorwf	postinc1,w,c
 11043  004530  A4D8               	btfss	status,2,c
 11044  004532  D002               	goto	l21175
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;inputs.c: 108: change = 1;
 11048  004534  0E01               	movlw	1
 11049  004536  6FB9               	movwf	inputScan@change& (0+255),b
 11050  004538                     l21175:
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;inputs.c: 109: };inputs.c: 110: if (!inputState[io] && (delayCount[io] == NV->io[io].nv
      +                          _io.nv_input.input_off_delay)) {
 11054  004538  0E94               	movlw	low _inputState
 11055  00453A  25E7               	addwf	_io& (0+255),w,b
 11056  00453C  6ED9               	movwf	fsr2l,c
 11057  00453E  6ADA               	clrf	fsr2h,c
 11058  004540  0E02               	movlw	high _inputState
 11059  004542  22DA               	addwfc	fsr2h,f,c
 11060  004544  50DF               	movf	indf2,w,c
 11061  004546  A4D8               	btfss	status,2,c
 11062  004548  D01C               	goto	l316
 11063                           
 11064                           ; BSR set to: 0
 11065  00454A  51E7               	movf	_io& (0+255),w,b
 11066  00454C  0D07               	mullw	7
 11067  00454E  C0EC  F0B5         	movff	_NV,??_inputScan
 11068  004552  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11069  004556  50F3               	movf	243,w,c
 11070  004558  27B5               	addwf	??_inputScan& (0+255),f,b
 11071  00455A  50F4               	movf	244,w,c
 11072  00455C  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11073  00455E  0E13               	movlw	19
 11074  004560  25B5               	addwf	??_inputScan& (0+255),w,b
 11075  004562  6ED9               	movwf	fsr2l,c
 11076  004564  0E00               	movlw	0
 11077  004566  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11078  004568  6EDA               	movwf	fsr2h,c
 11079  00456A  0E84               	movlw	low _delayCount
 11080  00456C  25E7               	addwf	_io& (0+255),w,b
 11081  00456E  6EE1               	movwf	fsr1l,c
 11082  004570  6AE2               	clrf	fsr1h,c
 11083  004572  0E02               	movlw	high _delayCount
 11084  004574  22E2               	addwfc	fsr1h,f,c
 11085  004576  50DE               	movf	postinc2,w,c
 11086  004578  18E6               	xorwf	postinc1,w,c
 11087  00457A  A4D8               	btfss	status,2,c
 11088  00457C  D002               	goto	l316
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;inputs.c: 111: change = 1;
 11092  00457E  0E01               	movlw	1
 11093  004580  6FB9               	movwf	inputScan@change& (0+255),b
 11094  004582                     l316:
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;inputs.c: 112: };inputs.c: 113: if (change) {
 11098  004582  51B9               	movf	inputScan@change& (0+255),w,b
 11099  004584  B4D8               	btfsc	status,2,c
 11100  004586  D102               	goto	l21219
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;inputs.c: 115: delayCount[io] = 0;
 11104  004588  0E84               	movlw	low _delayCount
 11105  00458A  25E7               	addwf	_io& (0+255),w,b
 11106  00458C  6ED9               	movwf	fsr2l,c
 11107  00458E  6ADA               	clrf	fsr2h,c
 11108  004590  0E02               	movlw	high _delayCount
 11109  004592  22DA               	addwfc	fsr2h,f,c
 11110  004594  0E00               	movlw	0
 11111  004596  6EDF               	movwf	indf2,c
 11112                           
 11113                           ;inputs.c: 116: inputState[io] = input;
 11114  004598  0E94               	movlw	low _inputState
 11115  00459A  25E7               	addwf	_io& (0+255),w,b
 11116  00459C  6ED9               	movwf	fsr2l,c
 11117  00459E  6ADA               	clrf	fsr2h,c
 11118  0045A0  0E02               	movlw	high _inputState
 11119  0045A2  22DA               	addwfc	fsr2h,f,c
 11120  0045A4  C0BA  FFDF         	movff	inputScan@input,indf2
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;inputs.c: 118: if (!(NV->io[io].flags & 0x01U)) {
 11124  0045A8  51E7               	movf	_io& (0+255),w,b
 11125  0045AA  0D07               	mullw	7
 11126  0045AC  C0EC  F0B5         	movff	_NV,??_inputScan
 11127  0045B0  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11128  0045B4  50F3               	movf	243,w,c
 11129  0045B6  27B5               	addwf	??_inputScan& (0+255),f,b
 11130  0045B8  50F4               	movf	244,w,c
 11131  0045BA  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11132  0045BC  0E11               	movlw	17
 11133  0045BE  25B5               	addwf	??_inputScan& (0+255),w,b
 11134  0045C0  6ED9               	movwf	fsr2l,c
 11135  0045C2  0E00               	movlw	0
 11136  0045C4  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11137  0045C6  6EDA               	movwf	fsr2h,c
 11138  0045C8  B0DF               	btfsc	indf2,0,c
 11139  0045CA  D007               	goto	l21187
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;inputs.c: 119: input = (BOOL)(!input);
 11143  0045CC  51BA               	movf	inputScan@input& (0+255),w,b
 11144  0045CE  A4D8               	btfss	status,2,c
 11145  0045D0  D002               	goto	u27060
 11146  0045D2  0E01               	movlw	1
 11147  0045D4  D001               	goto	u27070
 11148  0045D6                     u27060:
 11149  0045D6  0E00               	movlw	0
 11150  0045D8                     u27070:
 11151  0045D8  6FBA               	movwf	inputScan@input& (0+255),b
 11152  0045DA                     l21187:
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;inputs.c: 120: };inputs.c: 122: if (NV->io[io].flags & 0x10U) {
 11156  0045DA  51E7               	movf	_io& (0+255),w,b
 11157  0045DC  0D07               	mullw	7
 11158  0045DE  C0EC  F0B5         	movff	_NV,??_inputScan
 11159  0045E2  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11160  0045E6  50F3               	movf	243,w,c
 11161  0045E8  27B5               	addwf	??_inputScan& (0+255),f,b
 11162  0045EA  50F4               	movf	244,w,c
 11163  0045EC  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11164  0045EE  0E11               	movlw	17
 11165  0045F0  25B5               	addwf	??_inputScan& (0+255),w,b
 11166  0045F2  6ED9               	movwf	fsr2l,c
 11167  0045F4  0E00               	movlw	0
 11168  0045F6  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11169  0045F8  6EDA               	movwf	fsr2h,c
 11170  0045FA  A8DF               	btfss	indf2,4,c
 11171  0045FC  D027               	goto	l21195
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;inputs.c: 123: if (input) {
 11175  0045FE  51BA               	movf	inputScan@input& (0+255),w,b
 11176  004600  B4D8               	btfsc	status,2,c
 11177  004602  D0D4               	goto	l21223
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;inputs.c: 124: outputState[io] = (BOOL)(! outputState[io]);
 11181  004604  0E50               	movlw	low _outputState
 11182  004606  25E7               	addwf	_io& (0+255),w,b
 11183  004608  6ED9               	movwf	fsr2l,c
 11184  00460A  6ADA               	clrf	fsr2h,c
 11185  00460C  0E01               	movlw	high _outputState
 11186  00460E  22DA               	addwfc	fsr2h,f,c
 11187  004610  0E50               	movlw	low _outputState
 11188  004612  25E7               	addwf	_io& (0+255),w,b
 11189  004614  6EE1               	movwf	fsr1l,c
 11190  004616  6AE2               	clrf	fsr1h,c
 11191  004618  0E01               	movlw	high _outputState
 11192  00461A  22E2               	addwfc	fsr1h,f,c
 11193  00461C  50E7               	movf	indf1,w,c
 11194  00461E  A4D8               	btfss	status,2,c
 11195  004620  D002               	goto	u27100
 11196  004622  0E01               	movlw	1
 11197  004624  D001               	goto	u27110
 11198  004626                     u27100:
 11199  004626  0E00               	movlw	0
 11200  004628                     u27110:
 11201  004628  6EDF               	movwf	indf2,c
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;inputs.c: 127: };inputs.c: 128: ee_write(((WORD)(((BYTE*)(0x3FF-40)))-17)+io, outputSta
      +                          te[io]);
 11205                           
 11206                           ;inputs.c: 125: } else {
 11207  00462A  0EC6               	movlw	198
 11208  00462C  25E7               	addwf	_io& (0+255),w,b
 11209  00462E  6F73               	movwf	ee_write@addr& (0+255),b
 11210  004630  6B74               	clrf	(ee_write@addr+1)& (0+255),b
 11211  004632  0E03               	movlw	3
 11212  004634  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
 11213  004636  0E50               	movlw	low _outputState
 11214  004638  25E7               	addwf	_io& (0+255),w,b
 11215  00463A  6ED9               	movwf	fsr2l,c
 11216  00463C  6ADA               	clrf	fsr2h,c
 11217  00463E  0E01               	movlw	high _outputState
 11218  004640  22DA               	addwfc	fsr2h,f,c
 11219  004642  50DF               	movf	indf2,w,c
 11220  004644  6F75               	movwf	ee_write@data& (0+255),b
 11221  004646  EC17  F04D         	call	_ee_write	;wreg free
 11222                           
 11223                           ;inputs.c: 129: } else {
 11224  00464A  D008               	goto	l21197
 11225  00464C                     l21195:
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;inputs.c: 130: outputState[io] = input;
 11229  00464C  0E50               	movlw	low _outputState
 11230  00464E  25E7               	addwf	_io& (0+255),w,b
 11231  004650  6ED9               	movwf	fsr2l,c
 11232  004652  6ADA               	clrf	fsr2h,c
 11233  004654  0E01               	movlw	high _outputState
 11234  004656  22DA               	addwfc	fsr2h,f,c
 11235  004658  C0BA  FFDF         	movff	inputScan@input,indf2
 11236  00465C                     l21197:
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;inputs.c: 131: };inputs.c: 134: if (NV->io[io].flags & 0x08U) {
 11240  00465C  51E7               	movf	_io& (0+255),w,b
 11241  00465E  0D07               	mullw	7
 11242  004660  C0EC  F0B5         	movff	_NV,??_inputScan
 11243  004664  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11244  004668  50F3               	movf	243,w,c
 11245  00466A  27B5               	addwf	??_inputScan& (0+255),f,b
 11246  00466C  50F4               	movf	244,w,c
 11247  00466E  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11248  004670  0E11               	movlw	17
 11249  004672  25B5               	addwf	??_inputScan& (0+255),w,b
 11250  004674  6ED9               	movwf	fsr2l,c
 11251  004676  0E00               	movlw	0
 11252  004678  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11253  00467A  6EDA               	movwf	fsr2h,c
 11254  00467C  A6DF               	btfss	indf2,3,c
 11255  00467E  D051               	goto	l21213
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;inputs.c: 135: if (outputState[io]) {
 11259  004680  0E50               	movlw	low _outputState
 11260  004682  25E7               	addwf	_io& (0+255),w,b
 11261  004684  6ED9               	movwf	fsr2l,c
 11262  004686  6ADA               	clrf	fsr2h,c
 11263  004688  0E01               	movlw	high _outputState
 11264  00468A  22DA               	addwfc	fsr2h,f,c
 11265  00468C  50DF               	movf	indf2,w,c
 11266  00468E  B4D8               	btfsc	status,2,c
 11267  004690  D024               	goto	l21207
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;inputs.c: 138: if (NV->io[io].flags & 0x40U) {
 11271  004692  51E7               	movf	_io& (0+255),w,b
 11272  004694  0D07               	mullw	7
 11273  004696  C0EC  F0B5         	movff	_NV,??_inputScan
 11274  00469A  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11275  00469E  50F3               	movf	243,w,c
 11276  0046A0  27B5               	addwf	??_inputScan& (0+255),f,b
 11277  0046A2  50F4               	movf	244,w,c
 11278  0046A4  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11279  0046A6  0E11               	movlw	17
 11280  0046A8  25B5               	addwf	??_inputScan& (0+255),w,b
 11281  0046AA  6ED9               	movwf	fsr2l,c
 11282  0046AC  0E00               	movlw	0
 11283  0046AE  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11284  0046B0  6EDA               	movwf	fsr2h,c
 11285  0046B2  ACDF               	btfss	indf2,6,c
 11286  0046B4  D009               	goto	l21205
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;inputs.c: 139: sendProducedEvent(((8U + 4U*(io))+0U), 0);
 11290  0046B6  0E00               	movlw	0
 11291  0046B8  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 11292  0046BA  51E7               	movf	_io& (0+255),w,b
 11293  0046BC  0D04               	mullw	4
 11294  0046BE  50F3               	movf	243,w,c
 11295  0046C0  0F08               	addlw	8
 11296  0046C2  EC54  F03C         	call	_sendProducedEvent
 11297                           
 11298                           ;inputs.c: 140: } else {
 11299  0046C6  D072               	goto	l21223
 11300  0046C8                     l21205:
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;inputs.c: 141: sendProducedEvent(((8U + 4U*(io))+0U), 1);
 11304  0046C8  0E01               	movlw	1
 11305  0046CA  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 11306  0046CC  51E7               	movf	_io& (0+255),w,b
 11307  0046CE  0D04               	mullw	4
 11308  0046D0  50F3               	movf	243,w,c
 11309  0046D2  0F08               	addlw	8
 11310  0046D4  EC54  F03C         	call	_sendProducedEvent
 11311  0046D8  D069               	goto	l21223
 11312  0046DA                     l21207:
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;inputs.c: 144: if (NV->io[io].flags & 0x40U) {
 11316  0046DA  51E7               	movf	_io& (0+255),w,b
 11317  0046DC  0D07               	mullw	7
 11318  0046DE  C0EC  F0B5         	movff	_NV,??_inputScan
 11319  0046E2  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11320  0046E6  50F3               	movf	243,w,c
 11321  0046E8  27B5               	addwf	??_inputScan& (0+255),f,b
 11322  0046EA  50F4               	movf	244,w,c
 11323  0046EC  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11324  0046EE  0E11               	movlw	17
 11325  0046F0  25B5               	addwf	??_inputScan& (0+255),w,b
 11326  0046F2  6ED9               	movwf	fsr2l,c
 11327  0046F4  0E00               	movlw	0
 11328  0046F6  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11329  0046F8  6EDA               	movwf	fsr2h,c
 11330  0046FA  ACDF               	btfss	indf2,6,c
 11331  0046FC  D009               	goto	l21211
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;inputs.c: 145: sendProducedEvent(((8U + 4U*(io))+1U), 0);
 11335  0046FE  0E00               	movlw	0
 11336  004700  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 11337  004702  51E7               	movf	_io& (0+255),w,b
 11338  004704  0D04               	mullw	4
 11339  004706  50F3               	movf	243,w,c
 11340  004708  0F09               	addlw	9
 11341  00470A  EC54  F03C         	call	_sendProducedEvent
 11342                           
 11343                           ;inputs.c: 146: } else {
 11344  00470E  D04E               	goto	l21223
 11345  004710                     l21211:
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;inputs.c: 147: sendProducedEvent(((8U + 4U*(io))+1U), 1);
 11349  004710  0E01               	movlw	1
 11350  004712  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 11351  004714  51E7               	movf	_io& (0+255),w,b
 11352  004716  0D04               	mullw	4
 11353  004718  50F3               	movf	243,w,c
 11354  00471A  0F09               	addlw	9
 11355  00471C  EC54  F03C         	call	_sendProducedEvent
 11356  004720  D045               	goto	l21223
 11357  004722                     l21213:
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;inputs.c: 152: if (NV->io[io].flags & 0x40U) {
 11361  004722  51E7               	movf	_io& (0+255),w,b
 11362  004724  0D07               	mullw	7
 11363  004726  C0EC  F0B5         	movff	_NV,??_inputScan
 11364  00472A  C0ED  F0B6         	movff	_NV+1,??_inputScan+1
 11365  00472E  50F3               	movf	243,w,c
 11366  004730  27B5               	addwf	??_inputScan& (0+255),f,b
 11367  004732  50F4               	movf	244,w,c
 11368  004734  23B6               	addwfc	(??_inputScan+1)& (0+255),f,b
 11369  004736  0E11               	movlw	17
 11370  004738  25B5               	addwf	??_inputScan& (0+255),w,b
 11371  00473A  6ED9               	movwf	fsr2l,c
 11372  00473C  0E00               	movlw	0
 11373  00473E  21B6               	addwfc	(??_inputScan+1)& (0+255),w,b
 11374  004740  6EDA               	movwf	fsr2h,c
 11375  004742  ACDF               	btfss	indf2,6,c
 11376  004744  D014               	goto	l21217
 11377                           
 11378                           ; BSR set to: 0
 11379                           ;inputs.c: 153: sendProducedEvent(((8U + 4U*(io))+0U), (BOOL)(!outputState[io]));
 11380  004746  0E50               	movlw	low _outputState
 11381  004748  25E7               	addwf	_io& (0+255),w,b
 11382  00474A  6ED9               	movwf	fsr2l,c
 11383  00474C  6ADA               	clrf	fsr2h,c
 11384  00474E  0E01               	movlw	high _outputState
 11385  004750  22DA               	addwfc	fsr2h,f,c
 11386  004752  50DF               	movf	indf2,w,c
 11387  004754  A4D8               	btfss	status,2,c
 11388  004756  D002               	goto	u27170
 11389  004758  0E01               	movlw	1
 11390  00475A  D001               	goto	u27180
 11391  00475C                     u27170:
 11392  00475C  0E00               	movlw	0
 11393  00475E                     u27180:
 11394  00475E  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 11395  004760  51E7               	movf	_io& (0+255),w,b
 11396  004762  0D04               	mullw	4
 11397  004764  50F3               	movf	243,w,c
 11398  004766  0F08               	addlw	8
 11399  004768  EC54  F03C         	call	_sendProducedEvent
 11400                           
 11401                           ;inputs.c: 154: } else {
 11402  00476C  D01F               	goto	l21223
 11403  00476E                     l21217:
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;inputs.c: 155: sendProducedEvent(((8U + 4U*(io))+0U), outputState[io]);
 11407  00476E  0E50               	movlw	low _outputState
 11408  004770  25E7               	addwf	_io& (0+255),w,b
 11409  004772  6ED9               	movwf	fsr2l,c
 11410  004774  6ADA               	clrf	fsr2h,c
 11411  004776  0E01               	movlw	high _outputState
 11412  004778  22DA               	addwfc	fsr2h,f,c
 11413  00477A  50DF               	movf	indf2,w,c
 11414  00477C  6FAE               	movwf	sendProducedEvent@on& (0+255),b
 11415  00477E  51E7               	movf	_io& (0+255),w,b
 11416  004780  0D04               	mullw	4
 11417  004782  50F3               	movf	243,w,c
 11418  004784  0F08               	addlw	8
 11419  004786  EC54  F03C         	call	_sendProducedEvent
 11420  00478A  D010               	goto	l21223
 11421  00478C                     l21219:
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;inputs.c: 159: delayCount[io]++;
 11425  00478C  0E84               	movlw	low _delayCount
 11426  00478E  25E7               	addwf	_io& (0+255),w,b
 11427  004790  6ED9               	movwf	fsr2l,c
 11428  004792  6ADA               	clrf	fsr2h,c
 11429  004794  0E02               	movlw	high _delayCount
 11430  004796  22DA               	addwfc	fsr2h,f,c
 11431  004798  2ADF               	incf	indf2,f,c
 11432  00479A  D008               	goto	l21223
 11433  00479C                     l21221:
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;inputs.c: 162: delayCount[io] = 0;
 11437  00479C  0E84               	movlw	low _delayCount
 11438  00479E  25E7               	addwf	_io& (0+255),w,b
 11439  0047A0  6ED9               	movwf	fsr2l,c
 11440  0047A2  6ADA               	clrf	fsr2h,c
 11441  0047A4  0E02               	movlw	high _delayCount
 11442  0047A6  22DA               	addwfc	fsr2h,f,c
 11443  0047A8  0E00               	movlw	0
 11444  0047AA  6EDF               	movwf	indf2,c
 11445  0047AC                     l21223:
 11446  0047AC  0100               	movlb	0	; () banked
 11447  0047AE  2BE7               	incf	_io& (0+255),f,b
 11448  0047B0  D677               	goto	l21157
 11449  0047B2                     __end_of_inputScan:
 11450                           	callstack 0
 11451                           
 11452 ;; *************** function _initialise *****************
 11453 ;; Defined at:
 11454 ;;		line 385 in file "../../github/CANMIOfirmware/main.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;  simultaneous    1  119[BANK0 ] unsigned char 
 11459 ;;  action          1  118[BANK0 ] unsigned char 
 11460 ;;  ev              2  122[BANK0 ] int 
 11461 ;;  en              2  124[BANK0 ] unsigned int 
 11462 ;;  paction         1  126[BANK0 ] unsigned char 
 11463 ;;  evIndex         1  121[BANK0 ] unsigned char 
 11464 ;;  i               1  120[BANK0 ] unsigned char 
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  1    wreg      void 
 11467 ;; Registers used:
 11468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11469 ;; Tracked objects:
 11470 ;;		On entry : 3F/1
 11471 ;;		On exit  : 3F/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;Total ram usage:       13 bytes
 11479 ;; Hardware stack levels used: 1
 11480 ;; Hardware stack levels required when called: 24
 11481 ;; This function calls:
 11482 ;;		_actionQueueInit
 11483 ;;		_addEvent
 11484 ;;		_configIO
 11485 ;;		_ee_read
 11486 ;;		_ee_write
 11487 ;;		_factoryResetEE
 11488 ;;		_factoryResetFlash
 11489 ;;		_getEv
 11490 ;;		_getProducedEvent
 11491 ;;		_initAnalogue
 11492 ;;		_initInputScan
 11493 ;;		_initOutputs
 11494 ;;		_initServos
 11495 ;;		_initTicker
 11496 ;;		_initTimedResponse
 11497 ;;		_loadNvCache
 11498 ;;		_mioEventsInit
 11499 ;;		_mioFlimInit
 11500 ;;		_writeEv
 11501 ;;		_writeFlashByte
 11502 ;; This function is called by:
 11503 ;;		_main
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text30
 11508  0039F2                     __ptext30:
 11509                           	callstack 0
 11510  0039F2                     _initialise:
 11511                           	callstack 6
 11512                           
 11513                           ; BSR set to: 1
 11514                           ;main.c: 387: OSCTUNEbits.PLLEN = 1;
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;incstack = 0
 11518  0039F2  8C9B               	bsf	155,6,c	;volatile
 11519                           
 11520                           ;main.c: 393: RCONbits.IPEN = 1;
 11521  0039F4  8ED0               	bsf	208,7,c	;volatile
 11522                           
 11523                           ; BSR set to: 1
 11524                           ;main.c: 396: if (ee_read((WORD)((BYTE*)(0x3FF-5))) != 0x01) {
 11525  0039F6  0E03               	movlw	3
 11526  0039F8  0100               	movlb	0	; () banked
 11527  0039FA  6F72               	movwf	(ee_read@addr+1)& (0+255),b
 11528  0039FC  0EFA               	movlw	250
 11529  0039FE  6F71               	movwf	ee_read@addr& (0+255),b
 11530  003A00  EC91  F052         	call	_ee_read	;wreg free
 11531  003A04  06E8               	decf	wreg,f,c
 11532  003A06  B4D8               	btfsc	status,2,c
 11533  003A08  D01B               	goto	l21241
 11534                           
 11535                           ;main.c: 399: factoryResetEE();
 11536  003A0A  EC42  F04E         	call	_factoryResetEE	;wreg free
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;main.c: 401: factoryResetFlash();
 11540  003A0E  EC56  F051         	call	_factoryResetFlash	;wreg free
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;main.c: 403: ee_write((WORD)((BYTE*)(0x3FF-5)), 0x01);
 11544  003A12  0E03               	movlw	3
 11545  003A14  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 11546  003A16  0EFA               	movlw	250
 11547  003A18  6F73               	movwf	ee_write@addr& (0+255),b
 11548  003A1A  0E01               	movlw	1
 11549  003A1C  6F75               	movwf	ee_write@data& (0+255),b
 11550  003A1E  EC17  F04D         	call	_ee_write	;wreg free
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;main.c: 404: writeFlashByte((BYTE*)(0xFF80U + 0U), (BYTE)0x02U);
 11554  003A22  0E80               	movlw	128
 11555  003A24  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 11556  003A26  0EFF               	movlw	255
 11557  003A28  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 11558  003A2A  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 11559  003A2C  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 11560  003A2E  A4D8               	btfss	status,2,c
 11561  003A30  0E20               	movlw	32
 11562  003A32  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 11563  003A34  0E02               	movlw	2
 11564  003A36  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 11565  003A38  ECBA  F052         	call	_writeFlashByte	;wreg free
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;main.c: 406: loadNvCache();
 11569  003A3C  EC0C  F04F         	call	_loadNvCache	;wreg free
 11570  003A40                     l21241:
 11571                           
 11572                           ;main.c: 408: };main.c: 410: if (NV->nv_version != 0x02U) {
 11573  003A40  C0EC  FFD9         	movff	_NV,fsr2l
 11574  003A44  C0ED  FFDA         	movff	_NV+1,fsr2h
 11575  003A48  0E02               	movlw	2
 11576  003A4A  18DE               	xorwf	postinc2,w,c
 11577  003A4C  B4D8               	btfsc	status,2,c
 11578  003A4E  D183               	goto	l21351
 11579                           
 11580                           ;main.c: 412: if (NV->nv_version == 1) {
 11581  003A50  C0EC  FFD9         	movff	_NV,fsr2l
 11582  003A54  C0ED  FFDA         	movff	_NV+1,fsr2h
 11583  003A58  04DE               	decf	postinc2,w,c
 11584  003A5A  A4D8               	btfss	status,2,c
 11585  003A5C  D16B               	goto	l21345
 11586                           
 11587                           ;main.c: 414: unsigned char i, evIndex;;main.c: 420: for (i=0; i<255U; i++) {
 11588  003A5E  0E00               	movlw	0
 11589  003A60  0100               	movlb	0	; () banked
 11590  003A62  6FD8               	movwf	initialise@i& (0+255),b
 11591  003A64                     l21251:
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;main.c: 422: for (evIndex=1; evIndex<20U; evIndex++) {
 11595  003A64  0E01               	movlw	1
 11596  003A66  6FD9               	movwf	initialise@evIndex& (0+255),b
 11597  003A68                     l21257:
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;main.c: 423: int ev = getEv(i, evIndex);
 11601  003A68  C0D9  F081         	movff	initialise@evIndex,getEv@evNum
 11602  003A6C  51D8               	movf	initialise@i& (0+255),w,b
 11603  003A6E  EC22  F038         	call	_getEv
 11604  003A72  C081  F0DA         	movff	?_getEv,initialise@ev
 11605  003A76  C082  F0DB         	movff	?_getEv+1,initialise@ev+1
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;main.c: 424: if (ev > 0) {
 11609  003A7A  BFDB               	btfsc	(initialise@ev+1)& (0+255),7,b
 11610  003A7C  D044               	goto	l21269
 11611  003A7E  51DB               	movf	(initialise@ev+1)& (0+255),w,b
 11612  003A80  E103               	bnz	u27220
 11613  003A82  05DA               	decf	initialise@ev& (0+255),w,b
 11614  003A84  A0D8               	btfss	status,0,c
 11615  003A86  D03F               	goto	l21269
 11616  003A88                     u27220:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;main.c: 425: if (((unsigned char)ev & 0x7FU) >= 8U) {
 11620  003A88  C0DA  F0D2         	movff	initialise@ev,??_initialise
 11621  003A8C  0E7F               	movlw	127
 11622  003A8E  17D2               	andwf	??_initialise& (0+255),f,b
 11623  003A90  0E07               	movlw	7
 11624  003A92  65D2               	cpfsgt	??_initialise& (0+255),b
 11625  003A94  D038               	goto	l21269
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;main.c: 426: unsigned char action;;main.c: 427: unsigned char simultaneous = (unsigned 
      +                          char)ev & 0x80U;
 11629  003A96  51DA               	movf	initialise@ev& (0+255),w,b
 11630  003A98  0B80               	andlw	128
 11631  003A9A  6FD7               	movwf	initialise@simultaneous& (0+255),b
 11632                           
 11633                           ;main.c: 428: ev &= 0x7FU;
 11634  003A9C  0E7F               	movlw	127
 11635  003A9E  17DA               	andwf	initialise@ev& (0+255),f,b
 11636  003AA0  0E00               	movlw	0
 11637  003AA2  17DB               	andwf	(initialise@ev+1)& (0+255),f,b
 11638                           
 11639                           ;main.c: 429: io = ((((unsigned char)ev)-8U)/4U);
 11640  003AA4  0EF8               	movlw	248
 11641  003AA6  6FD2               	movwf	??_initialise& (0+255),b
 11642  003AA8  0EFF               	movlw	255
 11643  003AAA  6FD3               	movwf	(??_initialise+1)& (0+255),b
 11644  003AAC  51DA               	movf	initialise@ev& (0+255),w,b
 11645  003AAE  6FD4               	movwf	(??_initialise+2)& (0+255),b
 11646  003AB0  6BD5               	clrf	(??_initialise+3)& (0+255),b
 11647  003AB2  51D2               	movf	??_initialise& (0+255),w,b
 11648  003AB4  27D4               	addwf	(??_initialise+2)& (0+255),f,b
 11649  003AB6  51D3               	movf	(??_initialise+1)& (0+255),w,b
 11650  003AB8  23D5               	addwfc	(??_initialise+3)& (0+255),f,b
 11651  003ABA  90D8               	bcf	status,0,c
 11652  003ABC  33D5               	rrcf	(??_initialise+3)& (0+255),f,b
 11653  003ABE  33D4               	rrcf	(??_initialise+2)& (0+255),f,b
 11654  003AC0  90D8               	bcf	status,0,c
 11655  003AC2  33D5               	rrcf	(??_initialise+3)& (0+255),f,b
 11656  003AC4  33D4               	rrcf	(??_initialise+2)& (0+255),f,b
 11657  003AC6  51D4               	movf	(??_initialise+2)& (0+255),w,b
 11658  003AC8  6FE6               	movwf	_io@main$F1444& (0+255),b
 11659                           
 11660                           ;main.c: 430: action = ((((unsigned char)ev)-8U)%4U);
 11661  003ACA  51DA               	movf	initialise@ev& (0+255),w,b
 11662  003ACC  0FF8               	addlw	248
 11663  003ACE  0B03               	andlw	3
 11664  003AD0  6FD6               	movwf	initialise@action& (0+255),b
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;main.c: 431: ev = simultaneous | ((8U + 5U*(io)) + action);
 11668  003AD2  51E6               	movf	_io@main$F1444& (0+255),w,b
 11669  003AD4  0D05               	mullw	5
 11670  003AD6  CFF3 F0D2          	movff	prodl,??_initialise
 11671  003ADA  CFF4 F0D3          	movff	prodh,??_initialise+1
 11672  003ADE  51D6               	movf	initialise@action& (0+255),w,b
 11673  003AE0  27D2               	addwf	??_initialise& (0+255),f,b
 11674  003AE2  0E00               	movlw	0
 11675  003AE4  23D3               	addwfc	(??_initialise+1)& (0+255),f,b
 11676  003AE6  0E08               	movlw	8
 11677  003AE8  27D2               	addwf	??_initialise& (0+255),f,b
 11678  003AEA  0E00               	movlw	0
 11679  003AEC  23D3               	addwfc	(??_initialise+1)& (0+255),f,b
 11680  003AEE  51D7               	movf	initialise@simultaneous& (0+255),w,b
 11681  003AF0  11D2               	iorwf	??_initialise& (0+255),w,b
 11682  003AF2  6FDA               	movwf	initialise@ev& (0+255),b
 11683  003AF4  51D3               	movf	(??_initialise+1)& (0+255),w,b
 11684  003AF6  6FDB               	movwf	(initialise@ev+1)& (0+255),b
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;main.c: 432: writeEv(i, evIndex, (unsigned char)ev);
 11688  003AF8  C0D9  F0A1         	movff	initialise@evIndex,writeEv@evNum
 11689  003AFC  C0DA  F0A2         	movff	initialise@ev,writeEv@evVal
 11690  003B00  51D8               	movf	initialise@i& (0+255),w,b
 11691  003B02  ECB3  F020         	call	_writeEv
 11692  003B06                     l21269:
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;main.c: 433: };main.c: 434: };main.c: 435: if (ev == -5) {
 11696  003B06  0EFB               	movlw	251
 11697  003B08  19DA               	xorwf	initialise@ev& (0+255),w,b
 11698  003B0A  E103               	bnz	l21273
 11699  003B0C  29DB               	incf	(initialise@ev+1)& (0+255),w,b
 11700  003B0E  B4D8               	btfsc	status,2,c
 11701  003B10  D004               	goto	u27250
 11702  003B12                     l21273:
 11703                           
 11704                           ; BSR set to: 0
 11705  003B12  2BD9               	incf	initialise@evIndex& (0+255),f,b
 11706                           
 11707                           ; BSR set to: 0
 11708  003B14  0E13               	movlw	19
 11709  003B16  65D9               	cpfsgt	initialise@evIndex& (0+255),b
 11710  003B18  D7A7               	goto	l21257
 11711  003B1A                     u27250:
 11712                           
 11713                           ; BSR set to: 0
 11714  003B1A  2BD8               	incf	initialise@i& (0+255),f,b
 11715                           
 11716                           ; BSR set to: 0
 11717  003B1C  29D8               	incf	initialise@i& (0+255),w,b
 11718  003B1E  A4D8               	btfss	status,2,c
 11719  003B20  D7A1               	goto	l21251
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;main.c: 437: };main.c: 438: };main.c: 439: };main.c: 444: for (io=0; io<16U; io++) {
 11723  003B22  0E00               	movlw	0
 11724  003B24  6FE6               	movwf	_io@main$F1444& (0+255),b
 11725  003B26                     l21283:
 11726                           
 11727                           ; BSR set to: 0
 11728  003B26  0E0F               	movlw	15
 11729  003B28  65E6               	cpfsgt	_io@main$F1444& (0+255),b
 11730  003B2A  D001               	goto	l21287
 11731  003B2C  D105               	goto	l21347
 11732  003B2E                     l21287:
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;main.c: 445: unsigned char paction;;main.c: 446: WORD en = io+1U;
 11736  003B2E  0E01               	movlw	1
 11737  003B30  25E6               	addwf	_io@main$F1444& (0+255),w,b
 11738  003B32  6FDC               	movwf	initialise@en& (0+255),b
 11739  003B34  6BDD               	clrf	(initialise@en+1)& (0+255),b
 11740  003B36  0E00               	movlw	0
 11741  003B38  23DD               	addwfc	(initialise@en+1)& (0+255),f,b
 11742                           
 11743                           ;main.c: 447: switch (NV->io[io].type) {
 11744  003B3A  D0D4               	goto	l21339
 11745  003B3C                     l21289:
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;main.c: 449: paction = ((8U + 4U*(io))+0U);
 11749  003B3C  51E6               	movf	_io@main$F1444& (0+255),w,b
 11750  003B3E  0D04               	mullw	4
 11751  003B40  50F3               	movf	243,w,c
 11752  003B42  0F08               	addlw	8
 11753  003B44  6FDE               	movwf	initialise@paction& (0+255),b
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;main.c: 450: if ( ! getProducedEvent(paction)) {
 11757  003B46  51DE               	movf	initialise@paction& (0+255),w,b
 11758  003B48  ECB8  F04A         	call	_getProducedEvent
 11759  003B4C  0900               	iorlw	0
 11760  003B4E  A4D8               	btfss	status,2,c
 11761  003B50  D0EF               	goto	l21341
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;main.c: 451: addEvent(nodeID, en, 0, paction, 1);
 11765  003B52  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11766  003B56  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11767  003B5A  C0DC  F0B5         	movff	initialise@en,addEvent@eventNumber
 11768  003B5E  C0DD  F0B6         	movff	initialise@en+1,addEvent@eventNumber+1
 11769  003B62  0E00               	movlw	0
 11770  003B64  6FB7               	movwf	addEvent@evNum& (0+255),b
 11771  003B66  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11772  003B6A  0E01               	movlw	1
 11773  003B6C  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11774  003B6E  EC0F  F02E         	call	_addEvent	;wreg free
 11775  003B72  D0DE               	goto	l21341
 11776  003B74                     l21295:
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;main.c: 456: paction = ((8U + 4U*(io))+0U);
 11780  003B74  51E6               	movf	_io@main$F1444& (0+255),w,b
 11781  003B76  0D04               	mullw	4
 11782  003B78  50F3               	movf	243,w,c
 11783  003B7A  0F08               	addlw	8
 11784  003B7C  6FDE               	movwf	initialise@paction& (0+255),b
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;main.c: 457: if ( ! getProducedEvent(paction)) {
 11788  003B7E  51DE               	movf	initialise@paction& (0+255),w,b
 11789  003B80  ECB8  F04A         	call	_getProducedEvent
 11790  003B84  0900               	iorlw	0
 11791  003B86  A4D8               	btfss	status,2,c
 11792  003B88  D012               	goto	l21301
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;main.c: 458: addEvent(nodeID, 100+en, 0, paction, 1);
 11796  003B8A  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11797  003B8E  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11798  003B92  0E64               	movlw	100
 11799  003B94  25DC               	addwf	initialise@en& (0+255),w,b
 11800  003B96  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 11801  003B98  0E00               	movlw	0
 11802  003B9A  21DD               	addwfc	(initialise@en+1)& (0+255),w,b
 11803  003B9C  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 11804  003B9E  0E00               	movlw	0
 11805  003BA0  6FB7               	movwf	addEvent@evNum& (0+255),b
 11806  003BA2  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11807  003BA6  0E01               	movlw	1
 11808  003BA8  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11809  003BAA  EC0F  F02E         	call	_addEvent	;wreg free
 11810  003BAE                     l21301:
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;main.c: 459: };main.c: 460: paction = ((8U + 4U*(io))+1U);
 11814  003BAE  51E6               	movf	_io@main$F1444& (0+255),w,b
 11815  003BB0  0D04               	mullw	4
 11816  003BB2  50F3               	movf	243,w,c
 11817  003BB4  0F09               	addlw	9
 11818  003BB6  6FDE               	movwf	initialise@paction& (0+255),b
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;main.c: 461: if ( ! getProducedEvent(paction)) {
 11822  003BB8  51DE               	movf	initialise@paction& (0+255),w,b
 11823  003BBA  ECB8  F04A         	call	_getProducedEvent
 11824  003BBE  0900               	iorlw	0
 11825  003BC0  A4D8               	btfss	status,2,c
 11826  003BC2  D012               	goto	l21307
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;main.c: 462: addEvent(nodeID, 300+en, 0, paction, 1);
 11830  003BC4  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11831  003BC8  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11832  003BCC  0E2C               	movlw	44
 11833  003BCE  25DC               	addwf	initialise@en& (0+255),w,b
 11834  003BD0  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 11835  003BD2  0E01               	movlw	1
 11836  003BD4  21DD               	addwfc	(initialise@en+1)& (0+255),w,b
 11837  003BD6  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 11838  003BD8  0E00               	movlw	0
 11839  003BDA  6FB7               	movwf	addEvent@evNum& (0+255),b
 11840  003BDC  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11841  003BE0  0E01               	movlw	1
 11842  003BE2  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11843  003BE4  EC0F  F02E         	call	_addEvent	;wreg free
 11844  003BE8                     l21307:
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;main.c: 463: };main.c: 464: paction = ((8U + 4U*(io))+2U);
 11848  003BE8  51E6               	movf	_io@main$F1444& (0+255),w,b
 11849  003BEA  0D04               	mullw	4
 11850  003BEC  50F3               	movf	243,w,c
 11851  003BEE  0F0A               	addlw	10
 11852  003BF0  6FDE               	movwf	initialise@paction& (0+255),b
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;main.c: 465: if ( ! getProducedEvent(paction)) {
 11856  003BF2  51DE               	movf	initialise@paction& (0+255),w,b
 11857  003BF4  ECB8  F04A         	call	_getProducedEvent
 11858  003BF8  0900               	iorlw	0
 11859  003BFA  A4D8               	btfss	status,2,c
 11860  003BFC  D099               	goto	l21341
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;main.c: 466: addEvent(nodeID, 200+en, 0, paction, 1);
 11864  003BFE  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11865  003C02  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11866  003C06  0EC8               	movlw	200
 11867  003C08  25DC               	addwf	initialise@en& (0+255),w,b
 11868  003C0A  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 11869  003C0C  0E00               	movlw	0
 11870  003C0E  21DD               	addwfc	(initialise@en+1)& (0+255),w,b
 11871  003C10  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 11872  003C12  0E00               	movlw	0
 11873  003C14  6FB7               	movwf	addEvent@evNum& (0+255),b
 11874  003C16  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11875  003C1A  0E01               	movlw	1
 11876  003C1C  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11877  003C1E  EC0F  F02E         	call	_addEvent	;wreg free
 11878  003C22  D086               	goto	l21341
 11879  003C24                     l21313:
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;main.c: 472: case 3U:;main.c: 474: paction = ((8U + 4U*(io))+0U);
 11883  003C24  51E6               	movf	_io@main$F1444& (0+255),w,b
 11884  003C26  0D04               	mullw	4
 11885  003C28  50F3               	movf	243,w,c
 11886  003C2A  0F08               	addlw	8
 11887  003C2C  6FDE               	movwf	initialise@paction& (0+255),b
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;main.c: 475: if ( ! getProducedEvent(paction)) {
 11891  003C2E  51DE               	movf	initialise@paction& (0+255),w,b
 11892  003C30  ECB8  F04A         	call	_getProducedEvent
 11893  003C34  0900               	iorlw	0
 11894  003C36  A4D8               	btfss	status,2,c
 11895  003C38  D07B               	goto	l21341
 11896  003C3A                     u27320:
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;main.c: 476: addEvent(nodeID, 100+en, 0, paction, 1);
 11900  003C3A  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11901  003C3E  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11902  003C42  0E64               	movlw	100
 11903  003C44  25DC               	addwf	initialise@en& (0+255),w,b
 11904  003C46  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 11905  003C48  0E00               	movlw	0
 11906  003C4A  21DD               	addwfc	(initialise@en+1)& (0+255),w,b
 11907  003C4C  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 11908  003C4E  0E00               	movlw	0
 11909  003C50  6FB7               	movwf	addEvent@evNum& (0+255),b
 11910  003C52  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11911  003C56  0E01               	movlw	1
 11912  003C58  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11913  003C5A  EC0F  F02E         	call	_addEvent	;wreg free
 11914  003C5E  D068               	goto	l21341
 11915  003C60                     l21319:
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;main.c: 485: paction = ((8U + 4U*(io))+0U);
 11919  003C60  51E6               	movf	_io@main$F1444& (0+255),w,b
 11920  003C62  0D04               	mullw	4
 11921  003C64  50F3               	movf	243,w,c
 11922  003C66  0F08               	addlw	8
 11923  003C68  6FDE               	movwf	initialise@paction& (0+255),b
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;main.c: 486: if ( ! getProducedEvent(paction)) {
 11927  003C6A  51DE               	movf	initialise@paction& (0+255),w,b
 11928  003C6C  ECB8  F04A         	call	_getProducedEvent
 11929  003C70  0900               	iorlw	0
 11930  003C72  A4D8               	btfss	status,2,c
 11931  003C74  D010               	goto	l21325
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;main.c: 487: addEvent(nodeID, en, 0, paction, 1);
 11935  003C76  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11936  003C7A  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11937  003C7E  C0DC  F0B5         	movff	initialise@en,addEvent@eventNumber
 11938  003C82  C0DD  F0B6         	movff	initialise@en+1,addEvent@eventNumber+1
 11939  003C86  0E00               	movlw	0
 11940  003C88  6FB7               	movwf	addEvent@evNum& (0+255),b
 11941  003C8A  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11942  003C8E  0E01               	movlw	1
 11943  003C90  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11944  003C92  EC0F  F02E         	call	_addEvent	;wreg free
 11945  003C96                     l21325:
 11946                           
 11947                           ; BSR set to: 0
 11948                           ;main.c: 491: paction = ((8U + 4U*(io))+1U);
 11949  003C96  51E6               	movf	_io@main$F1444& (0+255),w,b
 11950  003C98  0D04               	mullw	4
 11951  003C9A  50F3               	movf	243,w,c
 11952  003C9C  0F09               	addlw	9
 11953  003C9E  6FDE               	movwf	initialise@paction& (0+255),b
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;main.c: 492: if ( ! getProducedEvent(paction)) {
 11957  003CA0  51DE               	movf	initialise@paction& (0+255),w,b
 11958  003CA2  ECB8  F04A         	call	_getProducedEvent
 11959  003CA6  0900               	iorlw	0
 11960  003CA8  A4D8               	btfss	status,2,c
 11961  003CAA  D010               	goto	l21331
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;main.c: 493: addEvent(nodeID, en, 0, paction, 1);
 11965  003CAC  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 11966  003CB0  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 11967  003CB4  C0DC  F0B5         	movff	initialise@en,addEvent@eventNumber
 11968  003CB8  C0DD  F0B6         	movff	initialise@en+1,addEvent@eventNumber+1
 11969  003CBC  0E00               	movlw	0
 11970  003CBE  6FB7               	movwf	addEvent@evNum& (0+255),b
 11971  003CC0  C0DE  F0B8         	movff	initialise@paction,addEvent@evVal
 11972  003CC4  0E01               	movlw	1
 11973  003CC6  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 11974  003CC8  EC0F  F02E         	call	_addEvent	;wreg free
 11975  003CCC                     l21331:
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;main.c: 494: };main.c: 495: paction = ((8U + 4U*(io))+0U);
 11979  003CCC  51E6               	movf	_io@main$F1444& (0+255),w,b
 11980  003CCE  0D04               	mullw	4
 11981  003CD0  50F3               	movf	243,w,c
 11982  003CD2  0F08               	addlw	8
 11983  003CD4  6FDE               	movwf	initialise@paction& (0+255),b
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;main.c: 496: if ( ! getProducedEvent(paction)) {
 11987  003CD6  51DE               	movf	initialise@paction& (0+255),w,b
 11988  003CD8  ECB8  F04A         	call	_getProducedEvent
 11989  003CDC  0900               	iorlw	0
 11990  003CDE  B4D8               	btfsc	status,2,c
 11991  003CE0  D7AC               	goto	u27320
 11992  003CE2  D026               	goto	l21341
 11993  003CE4                     l21339:
 11994                           
 11995                           ; BSR set to: 0
 11996  003CE4  51E6               	movf	_io@main$F1444& (0+255),w,b
 11997  003CE6  0D07               	mullw	7
 11998  003CE8  C0EC  F0D2         	movff	_NV,??_initialise
 11999  003CEC  C0ED  F0D3         	movff	_NV+1,??_initialise+1
 12000  003CF0  50F3               	movf	243,w,c
 12001  003CF2  27D2               	addwf	??_initialise& (0+255),f,b
 12002  003CF4  50F4               	movf	244,w,c
 12003  003CF6  23D3               	addwfc	(??_initialise+1)& (0+255),f,b
 12004  003CF8  0E10               	movlw	16
 12005  003CFA  25D2               	addwf	??_initialise& (0+255),w,b
 12006  003CFC  6ED9               	movwf	fsr2l,c
 12007  003CFE  0E00               	movlw	0
 12008  003D00  21D3               	addwfc	(??_initialise+1)& (0+255),w,b
 12009  003D02  6EDA               	movwf	fsr2h,c
 12010  003D04  50DF               	movf	indf2,w,c
 12011                           
 12012                           ; Switch size 1, requested type "simple"
 12013                           ; Number of cases is 7, Range of values is 0 to 6
 12014                           ; switch strategies available:
 12015                           ; Name         Instructions Cycles
 12016                           ; simple_byte           22    12 (average)
 12017                           ;	Chosen strategy is simple_byte
 12018  003D06  0A00               	xorlw	0	; case 0
 12019  003D08  B4D8               	btfsc	status,2,c
 12020  003D0A  D718               	goto	l21289
 12021  003D0C  0A01               	xorlw	1	; case 1
 12022  003D0E  B4D8               	btfsc	status,2,c
 12023  003D10  D789               	goto	l21313
 12024  003D12  0A03               	xorlw	3	; case 2
 12025  003D14  B4D8               	btfsc	status,2,c
 12026  003D16  D72E               	goto	l21295
 12027  003D18  0A01               	xorlw	1	; case 3
 12028  003D1A  B4D8               	btfsc	status,2,c
 12029  003D1C  D783               	goto	l21313
 12030  003D1E  0A07               	xorlw	7	; case 4
 12031  003D20  B4D8               	btfsc	status,2,c
 12032  003D22  D006               	goto	l21341
 12033  003D24  0A01               	xorlw	1	; case 5
 12034  003D26  B4D8               	btfsc	status,2,c
 12035  003D28  D79B               	goto	l21319
 12036  003D2A  0A03               	xorlw	3	; case 6
 12037  003D2C  B4D8               	btfsc	status,2,c
 12038  003D2E  D7B3               	goto	l21325
 12039  003D30                     l21341:
 12040                           
 12041                           ; BSR set to: 0
 12042  003D30  2BE6               	incf	_io@main$F1444& (0+255),f,b
 12043  003D32  D6F9               	goto	l21283
 12044  003D34                     l21345:
 12045                           
 12046                           ;main.c: 505: factoryResetFlash();
 12047  003D34  EC56  F051         	call	_factoryResetFlash	;wreg free
 12048  003D38                     l21347:
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;main.c: 506: };main.c: 508: writeFlashByte((BYTE*)(0xFF80U + 0U), (BYTE)0x02U);
 12052  003D38  0E80               	movlw	128
 12053  003D3A  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 12054  003D3C  0EFF               	movlw	255
 12055  003D3E  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 12056  003D40  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 12057  003D42  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 12058  003D44  A4D8               	btfss	status,2,c
 12059  003D46  0E20               	movlw	32
 12060  003D48  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 12061  003D4A  0E02               	movlw	2
 12062  003D4C  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 12063  003D4E  ECBA  F052         	call	_writeFlashByte	;wreg free
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;main.c: 510: loadNvCache();
 12067  003D52  EC0C  F04F         	call	_loadNvCache	;wreg free
 12068  003D56                     l21351:
 12069                           
 12070                           ;main.c: 512: };main.c: 514: initTicker(0);
 12071  003D56  0E00               	movlw	0
 12072  003D58  EC2D  F04F         	call	_initTicker
 12073                           
 12074                           ;main.c: 516: INTCON2bits.RBPU = 0;
 12075  003D5C  9EF1               	bcf	241,7,c	;volatile
 12076                           
 12077                           ;main.c: 518: WPUB = NV->pullups;
 12078  003D5E  0100               	movlb	0	; () banked
 12079  003D60  EE20 F004          	lfsr	2,4
 12080  003D64  51EC               	movf	_NV& (0+255),w,b
 12081  003D66  26D9               	addwf	fsr2l,f,c
 12082  003D68  51ED               	movf	(_NV+1)& (0+255),w,b
 12083  003D6A  22DA               	addwfc	fsr2h,f,c
 12084  003D6C  50DF               	movf	indf2,w,c
 12085  003D6E  010F               	movlb	15	; () banked
 12086  003D70  6F5B               	movwf	91,b	;volatile
 12087                           
 12088                           ; BSR set to: 15
 12089                           ;main.c: 519: actionQueueInit();
 12090  003D72  EC80  F050         	call	_actionQueueInit	;wreg free
 12091                           
 12092                           ; BSR set to: 1
 12093                           ;main.c: 520: mioEventsInit();
 12094  003D76  EC17  F053         	call	_mioEventsInit	;wreg free
 12095                           
 12096                           ; BSR set to: 1
 12097                           ;main.c: 521: mioFlimInit();
 12098  003D7A  EC59  F053         	call	_mioFlimInit	;wreg free
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;main.c: 523: initAnalogue();
 12102  003D7E  ECFD  F04F         	call	_initAnalogue	;wreg free
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;main.c: 526: ANCON0 = 0x00;
 12106  003D82  0E00               	movlw	0
 12107  003D84  010F               	movlb	15	; () banked
 12108  003D86  6F5D               	movwf	93,b	;volatile
 12109                           
 12110                           ; BSR set to: 15
 12111                           ;main.c: 527: ANCON1 = 0x00;
 12112  003D88  0E00               	movlw	0
 12113  003D8A  6F5C               	movwf	92,b	;volatile
 12114                           
 12115                           ; BSR set to: 15
 12116                           ;main.c: 530: initServos();
 12117  003D8C  EC20  F02D         	call	_initServos	;wreg free
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;main.c: 532: initOutputs();
 12121  003D90  EC3F  F051         	call	_initOutputs	;wreg free
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;main.c: 535: for (io=0; io< 16U; io++) {
 12125  003D94  0E00               	movlw	0
 12126  003D96  6FE6               	movwf	_io@main$F1444& (0+255),b
 12127  003D98                     l21375:
 12128                           
 12129                           ; BSR set to: 0
 12130  003D98  0E0F               	movlw	15
 12131  003D9A  65E6               	cpfsgt	_io@main$F1444& (0+255),b
 12132  003D9C  D001               	goto	l21379
 12133  003D9E  D006               	goto	l21385
 12134  003DA0                     l21379:
 12135                           
 12136                           ; BSR set to: 0
 12137                           ;main.c: 536: configIO(io);
 12138  003DA0  51E6               	movf	_io@main$F1444& (0+255),w,b
 12139  003DA2  EC31  F015         	call	_configIO
 12140  003DA6  0100               	movlb	0	; () banked
 12141  003DA8  2BE6               	incf	_io@main$F1444& (0+255),f,b
 12142  003DAA  D7F6               	goto	l21375
 12143  003DAC                     l21385:
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;main.c: 537: };main.c: 538: initInputScan();
 12147  003DAC  EC4C  F03E         	call	_initInputScan	;wreg free
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;main.c: 539: initTimedResponse();
 12151  003DB0  EC7A  F053         	call	_initTimedResponse	;wreg free
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;main.c: 542: (INTCONbits.GIE = 1);
 12155  003DB4  8EF2               	bsf	242,7,c	;volatile
 12156                           
 12157                           ; BSR set to: 0
 12158  003DB6  0012               	return		;funcret
 12159  003DB8                     __end_of_initialise:
 12160                           	callstack 0
 12161                           
 12162 ;; *************** function _mioFlimInit *****************
 12163 ;; Defined at:
 12164 ;;		line 139 in file "../../github/CANMIOfirmware/mioFLiM.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;		None
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;		None
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  1    wreg      void 
 12171 ;; Registers used:
 12172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12173 ;; Tracked objects:
 12174 ;;		On entry : 3F/1
 12175 ;;		On exit  : 3F/1
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12182 ;;Total ram usage:        0 bytes
 12183 ;; Hardware stack levels used: 1
 12184 ;; Hardware stack levels required when called: 18
 12185 ;; This function calls:
 12186 ;;		_flimInit
 12187 ;;		_mioNvInit
 12188 ;; This function is called by:
 12189 ;;		_initialise
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text31
 12194  00A6B2                     __ptext31:
 12195                           	callstack 0
 12196  00A6B2                     _mioFlimInit:
 12197                           	callstack 11
 12198                           
 12199                           ; BSR set to: 1
 12200                           ;mioFLiM.c: 140: flimInit();
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;incstack = 0
 12204  00A6B2  ECA9  F04E         	call	_flimInit	;wreg free
 12205                           
 12206                           ; BSR set to: 1
 12207                           ;mioFLiM.c: 141: mioNvInit();
 12208  00A6B6  EC8E  F053         	call	_mioNvInit	;wreg free
 12209                           
 12210                           ; BSR set to: 1
 12211  00A6BA  0012               	return		;funcret
 12212  00A6BC                     __end_of_mioFlimInit:
 12213                           	callstack 0
 12214                           
 12215 ;; *************** function _mioNvInit *****************
 12216 ;; Defined at:
 12217 ;;		line 76 in file "../../github/CANMIOfirmware/mioNv.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;		None
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		None
 12226 ;; Tracked objects:
 12227 ;;		On entry : 3F/1
 12228 ;;		On exit  : 3F/1
 12229 ;;		Unchanged: 3F/0
 12230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12235 ;;Total ram usage:        0 bytes
 12236 ;; Hardware stack levels used: 1
 12237 ;; Hardware stack levels required when called: 8
 12238 ;; This function calls:
 12239 ;;		Nothing
 12240 ;; This function is called by:
 12241 ;;		_mioFlimInit
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text32
 12246  00A71C                     __ptext32:
 12247                           	callstack 0
 12248  00A71C                     _mioNvInit:
 12249                           	callstack 20
 12250                           
 12251                           ; BSR set to: 1
 12252                           
 12253                           ; BSR set to: 1
 12254                           ;incstack = 0
 12255  00A71C  0012               	return		;funcret
 12256  00A71E                     __end_of_mioNvInit:
 12257                           	callstack 0
 12258                           
 12259 ;; *************** function _flimInit *****************
 12260 ;; Defined at:
 12261 ;;		line 109 in file "../../github/CBUSlib/FliM.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;		None
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;		None
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  1    wreg      void 
 12268 ;; Registers used:
 12269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12270 ;; Tracked objects:
 12271 ;;		On entry : 3F/1
 12272 ;;		On exit  : 3F/1
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12279 ;;Total ram usage:        0 bytes
 12280 ;; Hardware stack levels used: 1
 12281 ;; Hardware stack levels required when called: 17
 12282 ;; This function calls:
 12283 ;;		_cbusInit
 12284 ;;		_ee_read
 12285 ;;		_eventsInit
 12286 ;;		_setStatusLed
 12287 ;; This function is called by:
 12288 ;;		_mioFlimInit
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           	psect	text33
 12293  009D52                     __ptext33:
 12294                           	callstack 0
 12295  009D52                     _flimInit:
 12296                           	callstack 11
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;FliM.c: 111: flimState = ee_read((WORD)((BYTE*)(0x3FF-4)));
 12300                           
 12301                           ; BSR set to: 1
 12302                           ;incstack = 0
 12303  009D52  0E03               	movlw	3
 12304  009D54  0100               	movlb	0	; () banked
 12305  009D56  6F72               	movwf	(ee_read@addr+1)& (0+255),b
 12306  009D58  0EFB               	movlw	251
 12307  009D5A  6F71               	movwf	ee_read@addr& (0+255),b
 12308  009D5C  EC91  F052         	call	_ee_read	;wreg free
 12309  009D60  6E16               	movwf	_flimState^0,c
 12310                           
 12311                           ;FliM.c: 112: prevFlimState = flimState;
 12312  009D62  C016  F006         	movff	_flimState,_prevFlimState
 12313                           
 12314                           ;FliM.c: 113: cbusInit(0x00);
 12315  009D66  0E00               	movlw	0
 12316  009D68  0100               	movlb	0	; () banked
 12317  009D6A  6F7F               	movwf	(cbusInit@initNodeID+1)& (0+255),b
 12318  009D6C  0E00               	movlw	0
 12319  009D6E  6F7E               	movwf	cbusInit@initNodeID& (0+255),b
 12320  009D70  EC4E  F050         	call	_cbusInit	;wreg free
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;FliM.c: 114: eventsInit();
 12324  009D74  EC77  F053         	call	_eventsInit	;wreg free
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;FliM.c: 115: FlashStatus = 0;
 12328  009D78  0E00               	movlw	0
 12329  009D7A  0101               	movlb	1	; () banked
 12330  009D7C  6FD6               	movwf	_FlashStatus& (0+255),b
 12331                           
 12332                           ; BSR set to: 1
 12333                           ;FliM.c: 116: setStatusLed(flimState == fsFLiM);
 12334  009D7E  0416               	decf	_flimState^0,w,c
 12335  009D80  A4D8               	btfss	status,2,c
 12336  009D82  D002               	goto	u24950
 12337  009D84  0E01               	movlw	1
 12338  009D86  D001               	goto	u24960
 12339  009D88                     u24950:
 12340  009D88  0E00               	movlw	0
 12341  009D8A                     u24960:
 12342  009D8A  ECC7  F052         	call	_setStatusLed
 12343                           
 12344                           ; BSR set to: 1
 12345                           ;FliM.c: 123: NV_changed = 0;
 12346  009D8E  0E00               	movlw	0
 12347  009D90  6FD5               	movwf	_NV_changed& (0+255),b
 12348                           
 12349                           ; BSR set to: 1
 12350  009D92  0012               	return		;funcret
 12351  009D94                     __end_of_flimInit:
 12352                           	callstack 0
 12353                           
 12354 ;; *************** function _eventsInit *****************
 12355 ;; Defined at:
 12356 ;;		line 273 in file "../../github/CBUSlib/events.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 3F/0
 12367 ;;		On exit  : 3F/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;Total ram usage:        0 bytes
 12375 ;; Hardware stack levels used: 1
 12376 ;; Hardware stack levels required when called: 16
 12377 ;; This function calls:
 12378 ;;		_rebuildHashtable
 12379 ;; This function is called by:
 12380 ;;		_flimInit
 12381 ;; This function uses a non-reentrant model
 12382 ;;
 12383                           
 12384                           	psect	text34
 12385  00A6EE                     __ptext34:
 12386                           	callstack 0
 12387  00A6EE                     _eventsInit:
 12388                           	callstack 11
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;events.c: 277: rebuildHashtable();
 12392                           
 12393                           ; BSR set to: 1
 12394                           ;incstack = 0
 12395  00A6EE  ECB2  F034         	call	_rebuildHashtable	;wreg free
 12396                           
 12397                           ; BSR set to: 0
 12398  00A6F2  0012               	return		;funcret
 12399  00A6F4                     __end_of_eventsInit:
 12400                           	callstack 0
 12401                           
 12402 ;; *************** function _cbusInit *****************
 12403 ;; Defined at:
 12404 ;;		line 74 in file "../../github/CBUSlib/cbus.c"
 12405 ;; Parameters:    Size  Location     Type
 12406 ;;  initNodeID      2   30[BANK0 ] unsigned int 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      void 
 12411 ;; Registers used:
 12412 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12413 ;; Tracked objects:
 12414 ;;		On entry : 3F/0
 12415 ;;		On exit  : 3F/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12422 ;;Total ram usage:        2 bytes
 12423 ;; Hardware stack levels used: 1
 12424 ;; Hardware stack levels required when called: 11
 12425 ;; This function calls:
 12426 ;;		_canInit
 12427 ;;		_ee_read_short
 12428 ;; This function is called by:
 12429 ;;		_flimInit
 12430 ;; This function uses a non-reentrant model
 12431 ;;
 12432                           
 12433                           	psect	text35
 12434  00A09C                     __ptext35:
 12435                           	callstack 0
 12436  00A09C                     _cbusInit:
 12437                           	callstack 16
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;cbus.c: 77: nodeID = ee_read_short( (WORD)((WORD*)(0x3FF-3)) );
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;incstack = 0
 12444  00A09C  0E03               	movlw	3
 12445  00A09E  6F74               	movwf	(ee_read_short@addr+1)& (0+255),b
 12446  00A0A0  0EFC               	movlw	252
 12447  00A0A2  6F73               	movwf	ee_read_short@addr& (0+255),b
 12448  00A0A4  ECF0  F04C         	call	_ee_read_short	;wreg free
 12449  00A0A8  C073  F001         	movff	?_ee_read_short,_nodeID
 12450  00A0AC  C074  F002         	movff	?_ee_read_short+1,_nodeID+1
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;cbus.c: 79: if (nodeID == 0xFFFF)
 12454  00A0B0  2801               	incf	_nodeID^0,w,c
 12455  00A0B2  E107               	bnz	l19557
 12456  00A0B4  2802               	incf	(_nodeID+1)^0,w,c
 12457  00A0B6  A4D8               	btfss	status,2,c
 12458  00A0B8  D004               	goto	l19557
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;cbus.c: 80: nodeID = initNodeID;
 12462  00A0BA  C07E  F001         	movff	cbusInit@initNodeID,_nodeID
 12463  00A0BE  C07F  F002         	movff	cbusInit@initNodeID+1,_nodeID+1
 12464  00A0C2                     l19557:
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;cbus.c: 83: canInit(0,0);
 12468  00A0C2  0E00               	movlw	0
 12469  00A0C4  6F7B               	movwf	canInit@initCanID& (0+255),b
 12470  00A0C6  0E00               	movlw	0
 12471  00A0C8  ECF8  F02E         	call	_canInit
 12472                           
 12473                           ; BSR set to: 0
 12474  00A0CC  0012               	return		;funcret
 12475  00A0CE                     __end_of_cbusInit:
 12476                           	callstack 0
 12477                           
 12478 ;; *************** function _ee_read_short *****************
 12479 ;; Defined at:
 12480 ;;		line 447 in file "../../github/CBUSlib/romops.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;  addr            2   19[BANK0 ] unsigned int 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  ret             2   26[BANK0 ] unsigned int 
 12485 ;;  ee_addr         2   24[BANK0 ] unsigned int 
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  2   19[BANK0 ] unsigned int 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2, status,0, cstack
 12490 ;; Tracked objects:
 12491 ;;		On entry : 3F/0
 12492 ;;		On exit  : 3F/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12496 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12497 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12498 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12499 ;;Total ram usage:        9 bytes
 12500 ;; Hardware stack levels used: 1
 12501 ;; Hardware stack levels required when called: 9
 12502 ;; This function calls:
 12503 ;;		_ee_read
 12504 ;; This function is called by:
 12505 ;;		_cbusInit
 12506 ;; This function uses a non-reentrant model
 12507 ;;
 12508                           
 12509                           	psect	text36
 12510  0099E0                     __ptext36:
 12511                           	callstack 0
 12512  0099E0                     _ee_read_short:
 12513                           	callstack 17
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;romops.c: 450: WORD ee_addr = addr;
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;incstack = 0
 12520  0099E0  C073  F078         	movff	ee_read_short@addr,ee_read_short@ee_addr
 12521  0099E4  C074  F079         	movff	ee_read_short@addr+1,ee_read_short@ee_addr+1
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;romops.c: 451: WORD ret = ee_read(ee_addr++);
 12525  0099E8  C078  F071         	movff	ee_read_short@ee_addr,ee_read@addr
 12526  0099EC  C079  F072         	movff	ee_read_short@ee_addr+1,ee_read@addr+1
 12527  0099F0  EC91  F052         	call	_ee_read	;wreg free
 12528  0099F4  0100               	movlb	0	; () banked
 12529  0099F6  6F75               	movwf	??_ee_read_short& (0+255),b
 12530  0099F8  5175               	movf	??_ee_read_short& (0+255),w,b
 12531  0099FA  6F7A               	movwf	ee_read_short@ret& (0+255),b
 12532  0099FC  6B7B               	clrf	(ee_read_short@ret+1)& (0+255),b
 12533                           
 12534                           ; BSR set to: 0
 12535  0099FE  4B78               	infsnz	ee_read_short@ee_addr& (0+255),f,b
 12536  009A00  2B79               	incf	(ee_read_short@ee_addr+1)& (0+255),f,b
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;romops.c: 453: ret = ret | ((WORD)ee_read(ee_addr) << 8);
 12540  009A02  C078  F071         	movff	ee_read_short@ee_addr,ee_read@addr
 12541  009A06  C079  F072         	movff	ee_read_short@ee_addr+1,ee_read@addr+1
 12542  009A0A  EC91  F052         	call	_ee_read	;wreg free
 12543  009A0E  0100               	movlb	0	; () banked
 12544  009A10  6F75               	movwf	??_ee_read_short& (0+255),b
 12545  009A12  5175               	movf	??_ee_read_short& (0+255),w,b
 12546  009A14  6F77               	movwf	(??_ee_read_short+2)& (0+255),b
 12547  009A16  6B76               	clrf	(??_ee_read_short+1)& (0+255),b
 12548  009A18  517A               	movf	ee_read_short@ret& (0+255),w,b
 12549  009A1A  1176               	iorwf	(??_ee_read_short+1)& (0+255),w,b
 12550  009A1C  6F7A               	movwf	ee_read_short@ret& (0+255),b
 12551  009A1E  517B               	movf	(ee_read_short@ret+1)& (0+255),w,b
 12552  009A20  1177               	iorwf	(??_ee_read_short+2)& (0+255),w,b
 12553  009A22  6F7B               	movwf	(ee_read_short@ret+1)& (0+255),b
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;romops.c: 454: return ret;
 12557  009A24  C07A  F073         	movff	ee_read_short@ret,?_ee_read_short
 12558  009A28  C07B  F074         	movff	ee_read_short@ret+1,?_ee_read_short+1
 12559                           
 12560                           ; BSR set to: 0
 12561  009A2C  0012               	return		;funcret
 12562  009A2E                     __end_of_ee_read_short:
 12563                           	callstack 0
 12564                           
 12565 ;; *************** function _canInit *****************
 12566 ;; Defined at:
 12567 ;;		line 113 in file "../../github/CBUSlib/can18.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  busNum          1    wreg     unsigned char 
 12570 ;;  initCanID       1   27[BANK0 ] unsigned char 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;  busNum          1    0[COMRAM] unsigned char 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  1    wreg      void 
 12575 ;; Registers used:
 12576 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12577 ;; Tracked objects:
 12578 ;;		On entry : 3F/0
 12579 ;;		On exit  : 3F/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12582 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12585 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12586 ;;Total ram usage:        3 bytes
 12587 ;; Hardware stack levels used: 1
 12588 ;; Hardware stack levels required when called: 10
 12589 ;; This function calls:
 12590 ;;		_ee_read
 12591 ;;		_ee_write
 12592 ;;		_tickGet
 12593 ;; This function is called by:
 12594 ;;		_cbusInit
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text37
 12599  005DF0                     __ptext37:
 12600                           	callstack 0
 12601  005DF0                     _canInit:
 12602                           	callstack 16
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;can18.c: 115: larbCount = 0;
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;incstack = 0
 12609  005DF0  0E00               	movlw	0
 12610  005DF2  0101               	movlb	1	; () banked
 12611  005DF4  6FDE               	movwf	_larbCount& (0+255),b
 12612                           
 12613                           ;can18.c: 116: txErrCount = 0;
 12614  005DF6  0E00               	movlw	0
 12615  005DF8  6FDD               	movwf	_txErrCount& (0+255),b
 12616                           
 12617                           ;can18.c: 117: txTimeoutCount = 0;
 12618  005DFA  0E00               	movlw	0
 12619  005DFC  6FDC               	movwf	_txTimeoutCount& (0+255),b
 12620                           
 12621                           ;can18.c: 118: canTransmitFailed = 0;
 12622  005DFE  0E00               	movlw	0
 12623  005E00  6E0C               	movwf	_canTransmitFailed^0,c
 12624                           
 12625                           ;can18.c: 119: canTransmitTimeout.Val = 0;
 12626  005E02  0E00               	movlw	0
 12627  005E04  6FB4               	movwf	_canTransmitTimeout& (0+255),b
 12628  005E06  0E00               	movlw	0
 12629  005E08  6FB5               	movwf	(_canTransmitTimeout+1)& (0+255),b
 12630  005E0A  0E00               	movlw	0
 12631  005E0C  6FB6               	movwf	(_canTransmitTimeout+2)& (0+255),b
 12632  005E0E  0E00               	movlw	0
 12633  005E10  6FB7               	movwf	(_canTransmitTimeout+3)& (0+255),b
 12634                           
 12635                           ;can18.c: 120: maxCanTxFifo = 0;
 12636  005E12  0E00               	movlw	0
 12637  005E14  6E0B               	movwf	_maxCanTxFifo^0,c
 12638                           
 12639                           ;can18.c: 121: maxCanRxFifo = 0;
 12640  005E16  0E00               	movlw	0
 12641  005E18  6E0A               	movwf	_maxCanRxFifo^0,c
 12642                           
 12643                           ;can18.c: 122: rxOflowCount = 0;
 12644  005E1A  0E00               	movlw	0
 12645  005E1C  6FDA               	movwf	_rxOflowCount& (0+255),b
 12646                           
 12647                           ;can18.c: 123: txOflowCount = 0;
 12648  005E1E  0E00               	movlw	0
 12649  005E20  6FDB               	movwf	_txOflowCount& (0+255),b
 12650                           
 12651                           ;can18.c: 124: txIndexNextFree = 0;
 12652  005E22  0E00               	movlw	0
 12653  005E24  6E11               	movwf	_txIndexNextFree^0,c
 12654                           
 12655                           ;can18.c: 125: txIndexNextUsed = 0;
 12656  005E26  0E00               	movlw	0
 12657  005E28  6E10               	movwf	_txIndexNextUsed^0,c
 12658                           
 12659                           ;can18.c: 126: rxIndexNextFree = 0;
 12660  005E2A  0E00               	movlw	0
 12661  005E2C  6E0F               	movwf	_rxIndexNextFree^0,c
 12662                           
 12663                           ;can18.c: 127: rxIndexNextUsed = 0;
 12664  005E2E  0E00               	movlw	0
 12665  005E30  6E0E               	movwf	_rxIndexNextUsed^0,c
 12666                           
 12667                           ;can18.c: 128: txFifoUsage = 0;
 12668  005E32  0E00               	movlw	0
 12669  005E34  6FD9               	movwf	_txFifoUsage& (0+255),b
 12670                           
 12671                           ;can18.c: 129: rxFifoUsage = 0;
 12672  005E36  0E00               	movlw	0
 12673  005E38  6FD8               	movwf	_rxFifoUsage& (0+255),b
 12674                           
 12675                           ;can18.c: 131: IPR5 = 0;
 12676  005E3A  0E00               	movlw	0
 12677  005E3C  6E78               	movwf	120,c	;volatile
 12678                           
 12679                           ;can18.c: 134: CANCON = 0b10000000;
 12680  005E3E  0E80               	movlw	128
 12681  005E40  6E6F               	movwf	111,c	;volatile
 12682  005E42                     l1571:
 12683  005E42  AE6E               	btfss	110,7,c	;volatile
 12684  005E44  D7FE               	goto	l1571
 12685                           
 12686                           ;can18.c: 152: ECANCON = 0b10110000;
 12687  005E46  0EB0               	movlw	176
 12688  005E48  6E72               	movwf	114,c	;volatile
 12689                           
 12690                           ;can18.c: 153: BSEL0 = 0;
 12691  005E4A  0E00               	movlw	0
 12692  005E4C  010E               	movlb	14	; () banked
 12693  005E4E  6F7D               	movwf	125,b	;volatile
 12694                           
 12695                           ;can18.c: 158: BRGCON1 = 0b00001111;
 12696  005E50  0E0F               	movlw	15
 12697  005E52  6F43               	movwf	67,b	;volatile
 12698                           
 12699                           ; BSR set to: 14
 12700                           ;can18.c: 161: clkMHz = (( BRGCON1 & 0x3FU ) + 1U ) << 2U;
 12701  005E54  5143               	movf	67,w,b	;volatile
 12702  005E56  0B3F               	andlw	63
 12703  005E58  0D04               	mullw	4
 12704  005E5A  50F3               	movf	243,w,c
 12705  005E5C  0F04               	addlw	4
 12706  005E5E  6E17               	movwf	_clkMHz^0,c
 12707                           
 12708                           ; BSR set to: 14
 12709                           ;can18.c: 183: BRGCON2 = 0b10011110;
 12710  005E60  0E9E               	movlw	158
 12711  005E62  6F44               	movwf	68,b	;volatile
 12712                           
 12713                           ; BSR set to: 14
 12714                           ;can18.c: 184: BRGCON3 = 0b00000011;
 12715  005E64  0E03               	movlw	3
 12716  005E66  6F45               	movwf	69,b	;volatile
 12717                           
 12718                           ; BSR set to: 14
 12719                           ;can18.c: 188: CIOCON = 0b00100000;
 12720  005E68  0E20               	movlw	32
 12721  005E6A  6E70               	movwf	112,c	;volatile
 12722                           
 12723                           ; BSR set to: 14
 12724                           ;can18.c: 193: RXM0SIDH = 0;
 12725  005E6C  0E00               	movlw	0
 12726  005E6E  6FF8               	movwf	248,b	;volatile
 12727                           
 12728                           ; BSR set to: 14
 12729                           ;can18.c: 194: RXM0SIDL = 0x08;
 12730  005E70  0E08               	movlw	8
 12731  005E72  6FF9               	movwf	249,b	;volatile
 12732                           
 12733                           ; BSR set to: 14
 12734                           ;can18.c: 195: RXM0EIDH = 0;
 12735  005E74  0E00               	movlw	0
 12736  005E76  6FFA               	movwf	250,b	;volatile
 12737                           
 12738                           ; BSR set to: 14
 12739                           ;can18.c: 196: RXM0EIDL = 0;
 12740  005E78  0E00               	movlw	0
 12741  005E7A  6FFB               	movwf	251,b	;volatile
 12742                           
 12743                           ; BSR set to: 14
 12744                           ;can18.c: 197: RXM1SIDH = 0;
 12745  005E7C  0E00               	movlw	0
 12746  005E7E  6FFC               	movwf	252,b	;volatile
 12747                           
 12748                           ; BSR set to: 14
 12749                           ;can18.c: 198: RXM1SIDL = 0x08;
 12750  005E80  0E08               	movlw	8
 12751  005E82  6FFD               	movwf	253,b	;volatile
 12752                           
 12753                           ; BSR set to: 14
 12754                           ;can18.c: 199: RXM1EIDH = 0;
 12755  005E84  0E00               	movlw	0
 12756  005E86  6FFE               	movwf	254,b	;volatile
 12757                           
 12758                           ; BSR set to: 14
 12759                           ;can18.c: 200: RXM1EIDL = 0;
 12760  005E88  0E00               	movlw	0
 12761  005E8A  6FFF               	movwf	255,b	;volatile
 12762                           
 12763                           ; BSR set to: 14
 12764                           ;can18.c: 203: RXF0SIDL = 0x80;
 12765  005E8C  0E80               	movlw	128
 12766  005E8E  6FE1               	movwf	225,b	;volatile
 12767                           
 12768                           ; BSR set to: 14
 12769                           ;can18.c: 206: RXFBCON0 = 0;
 12770  005E90  0E00               	movlw	0
 12771  005E92  6F71               	movwf	113,b	;volatile
 12772                           
 12773                           ; BSR set to: 14
 12774                           ;can18.c: 207: RXFBCON1 = 0;
 12775  005E94  0E00               	movlw	0
 12776  005E96  6F72               	movwf	114,b	;volatile
 12777                           
 12778                           ; BSR set to: 14
 12779                           ;can18.c: 208: RXFBCON2 = 0;
 12780  005E98  0E00               	movlw	0
 12781  005E9A  6F73               	movwf	115,b	;volatile
 12782                           
 12783                           ; BSR set to: 14
 12784                           ;can18.c: 209: RXFBCON3 = 0;
 12785  005E9C  0E00               	movlw	0
 12786  005E9E  6F74               	movwf	116,b	;volatile
 12787                           
 12788                           ; BSR set to: 14
 12789                           ;can18.c: 210: RXFBCON4 = 0;
 12790  005EA0  0E00               	movlw	0
 12791  005EA2  6F75               	movwf	117,b	;volatile
 12792                           
 12793                           ; BSR set to: 14
 12794                           ;can18.c: 211: RXFBCON5 = 0;
 12795  005EA4  0E00               	movlw	0
 12796  005EA6  6F76               	movwf	118,b	;volatile
 12797                           
 12798                           ; BSR set to: 14
 12799                           ;can18.c: 212: RXFBCON6 = 0;
 12800  005EA8  0E00               	movlw	0
 12801  005EAA  6F77               	movwf	119,b	;volatile
 12802                           
 12803                           ; BSR set to: 14
 12804                           ;can18.c: 213: RXFBCON7 = 0;
 12805  005EAC  0E00               	movlw	0
 12806  005EAE  6F78               	movwf	120,b	;volatile
 12807                           
 12808                           ; BSR set to: 14
 12809                           ;can18.c: 216: MSEL0 = 0;
 12810  005EB0  0E00               	movlw	0
 12811  005EB2  6F79               	movwf	121,b	;volatile
 12812                           
 12813                           ; BSR set to: 14
 12814                           ;can18.c: 217: MSEL1 = 0;
 12815  005EB4  0E00               	movlw	0
 12816  005EB6  6F7A               	movwf	122,b	;volatile
 12817                           
 12818                           ; BSR set to: 14
 12819                           ;can18.c: 218: MSEL2 = 0;
 12820  005EB8  0E00               	movlw	0
 12821  005EBA  6F7B               	movwf	123,b	;volatile
 12822                           
 12823                           ; BSR set to: 14
 12824                           ;can18.c: 219: MSEL3 = 0;
 12825  005EBC  0E00               	movlw	0
 12826  005EBE  6F7C               	movwf	124,b	;volatile
 12827                           
 12828                           ; BSR set to: 14
 12829                           ;can18.c: 238: RXB0CON = 0x20;
 12830  005EC0  0E20               	movlw	32
 12831  005EC2  6E60               	movwf	96,c	;volatile
 12832                           
 12833                           ; BSR set to: 14
 12834                           ;can18.c: 239: RXB1CON = 0x20;
 12835  005EC4  0E20               	movlw	32
 12836  005EC6  010F               	movlb	15	; () banked
 12837  005EC8  6F30               	movwf	48,b	;volatile
 12838                           
 12839                           ; BSR set to: 15
 12840                           ;can18.c: 240: B0CON = 0;
 12841  005ECA  0E00               	movlw	0
 12842  005ECC  010E               	movlb	14	; () banked
 12843  005ECE  6F80               	movwf	128,b	;volatile
 12844                           
 12845                           ; BSR set to: 14
 12846                           ;can18.c: 241: B1CON = 0;
 12847  005ED0  0E00               	movlw	0
 12848  005ED2  6F90               	movwf	144,b	;volatile
 12849                           
 12850                           ; BSR set to: 14
 12851                           ;can18.c: 242: B2CON = 0;
 12852  005ED4  0E00               	movlw	0
 12853  005ED6  6FA0               	movwf	160,b	;volatile
 12854                           
 12855                           ; BSR set to: 14
 12856                           ;can18.c: 243: B3CON = 0;
 12857  005ED8  0E00               	movlw	0
 12858  005EDA  6FB0               	movwf	176,b	;volatile
 12859                           
 12860                           ; BSR set to: 14
 12861                           ;can18.c: 244: B4CON = 0;
 12862  005EDC  0E00               	movlw	0
 12863  005EDE  6FC0               	movwf	192,b	;volatile
 12864                           
 12865                           ; BSR set to: 14
 12866                           ;can18.c: 245: B5CON = 0;
 12867  005EE0  0E00               	movlw	0
 12868  005EE2  6FD0               	movwf	208,b	;volatile
 12869                           
 12870                           ; BSR set to: 14
 12871                           ;can18.c: 247: BIE0 = 0;
 12872  005EE4  0E00               	movlw	0
 12873  005EE6  6F7E               	movwf	126,b	;volatile
 12874                           
 12875                           ; BSR set to: 14
 12876                           ;can18.c: 248: TXBIEbits.TXB0IE = 1;
 12877  005EE8  857F               	bsf	127,2,b	;volatile
 12878                           
 12879                           ; BSR set to: 14
 12880                           ;can18.c: 249: TXBIEbits.TXB1IE = 0;
 12881  005EEA  977F               	bcf	127,3,b	;volatile
 12882                           
 12883                           ; BSR set to: 14
 12884                           ;can18.c: 250: TXBIEbits.TXB2IE = 0;
 12885  005EEC  997F               	bcf	127,4,b	;volatile
 12886                           
 12887                           ; BSR set to: 14
 12888                           ;can18.c: 251: CANCON = 0;
 12889  005EEE  0E00               	movlw	0
 12890  005EF0  6E6F               	movwf	111,c	;volatile
 12891                           
 12892                           ; BSR set to: 14
 12893                           ;can18.c: 253: if (initCanID == 0)
 12894  005EF2  0100               	movlb	0	; () banked
 12895  005EF4  517B               	movf	canInit@initCanID& (0+255),w,b
 12896  005EF6  A4D8               	btfss	status,2,c
 12897  005EF8  D00D               	goto	l1574
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;can18.c: 254: {;can18.c: 255: canID = ee_read( (WORD)((BYTE*)(0x3FF-1)) );
 12901  005EFA  0E03               	movlw	3
 12902  005EFC  6F72               	movwf	(ee_read@addr+1)& (0+255),b
 12903  005EFE  0EFE               	movlw	254
 12904  005F00  6F71               	movwf	ee_read@addr& (0+255),b
 12905  005F02  EC91  F052         	call	_ee_read	;wreg free
 12906  005F06  6E2C               	movwf	_canID^0,c
 12907                           
 12908                           ;can18.c: 257: if (canID == 0xFF)
 12909  005F08  282C               	incf	_canID^0,w,c
 12910  005F0A  A4D8               	btfss	status,2,c
 12911  005F0C  D00D               	goto	l19115
 12912                           
 12913                           ;can18.c: 258: canID = 0x01;
 12914  005F0E  0E01               	movlw	1
 12915  005F10  6E2C               	movwf	_canID^0,c
 12916  005F12  D00A               	goto	l19115
 12917  005F14                     l1574:
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;can18.c: 260: else;can18.c: 261: {;can18.c: 262: canID = initCanID;
 12921  005F14  C07B  F02C         	movff	canInit@initCanID,_canID
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;can18.c: 263: ee_write((WORD)((BYTE*)(0x3FF-1)), canID);
 12925  005F18  0E03               	movlw	3
 12926  005F1A  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 12927  005F1C  0EFE               	movlw	254
 12928  005F1E  6F73               	movwf	ee_write@addr& (0+255),b
 12929  005F20  C02C  F075         	movff	_canID,ee_write@data
 12930  005F24  EC17  F04D         	call	_ee_write	;wreg free
 12931  005F28                     l19115:
 12932                           
 12933                           ;can18.c: 264: };can18.c: 268: TXB0CON = 0;
 12934  005F28  0E00               	movlw	0
 12935  005F2A  010F               	movlb	15	; () banked
 12936  005F2C  6F20               	movwf	32,b	;volatile
 12937                           
 12938                           ; BSR set to: 15
 12939                           ;can18.c: 269: TXB0CONbits.TXPRI0 = 0;
 12940  005F2E  9120               	bcf	32,0,b	;volatile
 12941                           
 12942                           ; BSR set to: 15
 12943                           ;can18.c: 270: TXB0CONbits.TXPRI1 = 0;
 12944  005F30  9320               	bcf	32,1,b	;volatile
 12945                           
 12946                           ; BSR set to: 15
 12947                           ;can18.c: 271: TXB0DLC = 0;
 12948  005F32  0E00               	movlw	0
 12949  005F34  6F25               	movwf	37,b	;volatile
 12950                           
 12951                           ; BSR set to: 15
 12952                           ;can18.c: 272: TXB0SIDH = 0b10110000 | ((canID & 0x78U) >>3U);
 12953  005F36  382C               	swapf	_canID^0,w,c
 12954  005F38  46E8               	rlncf	wreg,f,c
 12955  005F3A  0B1F               	andlw	31
 12956  005F3C  0B0F               	andlw	15
 12957  005F3E  09B0               	iorlw	176
 12958  005F40  6F21               	movwf	33,b	;volatile
 12959                           
 12960                           ; BSR set to: 15
 12961                           ;can18.c: 273: TXB0SIDL = (canID & 0x07U) << 5U;
 12962  005F42  C02C  F07C         	movff	_canID,??_canInit
 12963  005F46  0E07               	movlw	7
 12964  005F48  0100               	movlb	0	; () banked
 12965  005F4A  177C               	andwf	??_canInit& (0+255),f,b
 12966  005F4C  0E05               	movlw	5
 12967  005F4E  6F7D               	movwf	(??_canInit+1)& (0+255),b
 12968  005F50                     u23625:
 12969  005F50  90D8               	bcf	status,0,c
 12970  005F52  377C               	rlcf	??_canInit& (0+255),f,b
 12971  005F54  2F7D               	decfsz	(??_canInit+1)& (0+255),f,b
 12972  005F56  D7FC               	goto	u23625
 12973  005F58  517C               	movf	??_canInit& (0+255),w,b
 12974  005F5A  010F               	movlb	15	; () banked
 12975  005F5C  6F22               	movwf	34,b	;volatile
 12976                           
 12977                           ; BSR set to: 15
 12978                           ;can18.c: 277: TXB1CON = 0;
 12979  005F5E  0E00               	movlw	0
 12980  005F60  6F10               	movwf	16,b	;volatile
 12981                           
 12982                           ; BSR set to: 15
 12983                           ;can18.c: 278: TXB1CONbits.TXPRI0 = 0;
 12984  005F62  9110               	bcf	16,0,b	;volatile
 12985                           
 12986                           ; BSR set to: 15
 12987                           ;can18.c: 279: TXB1CONbits.TXPRI1 = 1;
 12988  005F64  8310               	bsf	16,1,b	;volatile
 12989                           
 12990                           ; BSR set to: 15
 12991                           ;can18.c: 280: TXB1DLC = 0x40;
 12992  005F66  0E40               	movlw	64
 12993  005F68  6F15               	movwf	21,b	;volatile
 12994                           
 12995                           ; BSR set to: 15
 12996                           ;can18.c: 281: TXB1SIDH = 0b10110000 | ((canID & 0x78U) >>3U);
 12997  005F6A  382C               	swapf	_canID^0,w,c
 12998  005F6C  46E8               	rlncf	wreg,f,c
 12999  005F6E  0B1F               	andlw	31
 13000  005F70  0B0F               	andlw	15
 13001  005F72  09B0               	iorlw	176
 13002  005F74  6F11               	movwf	17,b	;volatile
 13003                           
 13004                           ; BSR set to: 15
 13005                           ;can18.c: 282: TXB1SIDL = TXB0SIDL;
 13006  005F76  CF22 FF12          	movff	3874,3858	;volatile
 13007                           
 13008                           ; BSR set to: 15
 13009                           ;can18.c: 286: TXB2CON = 0;
 13010  005F7A  0E00               	movlw	0
 13011  005F7C  6F00               	movwf	0,b	;volatile
 13012                           
 13013                           ; BSR set to: 15
 13014                           ;can18.c: 287: TXB2CONbits.TXPRI0 = 1;
 13015  005F7E  8100               	bsf	0,0,b	;volatile
 13016                           
 13017                           ; BSR set to: 15
 13018                           ;can18.c: 288: TXB2CONbits.TXPRI1 = 1;
 13019  005F80  8300               	bsf	0,1,b	;volatile
 13020                           
 13021                           ; BSR set to: 15
 13022                           ;can18.c: 289: TXB2DLC = 0;
 13023  005F82  0E00               	movlw	0
 13024  005F84  6F05               	movwf	5,b	;volatile
 13025                           
 13026                           ; BSR set to: 15
 13027                           ;can18.c: 290: TXB2SIDH = 0b10110000 | ((canID & 0x78U) >>3U);
 13028  005F86  382C               	swapf	_canID^0,w,c
 13029  005F88  46E8               	rlncf	wreg,f,c
 13030  005F8A  0B1F               	andlw	31
 13031  005F8C  0B0F               	andlw	15
 13032  005F8E  09B0               	iorlw	176
 13033  005F90  6F01               	movwf	1,b	;volatile
 13034                           
 13035                           ; BSR set to: 15
 13036                           ;can18.c: 291: TXB2SIDL = TXB0SIDL;
 13037  005F92  CF22 FF02          	movff	3874,3842	;volatile
 13038                           
 13039                           ; BSR set to: 15
 13040                           ;can18.c: 295: enumerationRequired = enumerationInProgress = 0;
 13041  005F96  0E00               	movlw	0
 13042  005F98  6E07               	movwf	_enumerationInProgress^0,c
 13043  005F9A  C007  F009         	movff	_enumerationInProgress,_enumerationRequired
 13044                           
 13045                           ; BSR set to: 15
 13046                           ;can18.c: 296: enumerationStartTime.Val = tickGet();
 13047  005F9E  EC9D  F04B         	call	_tickGet	;wreg free
 13048  005FA2  C071  F1B0         	movff	?_tickGet,_enumerationStartTime
 13049  005FA6  C072  F1B1         	movff	?_tickGet+1,_enumerationStartTime+1
 13050  005FAA  C073  F1B2         	movff	?_tickGet+2,_enumerationStartTime+2
 13051  005FAE  C074  F1B3         	movff	?_tickGet+3,_enumerationStartTime+3
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;can18.c: 300: PIE5bits.FIFOWMIE = 1;
 13055  005FB2  8076               	bsf	118,0,c	;volatile
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;can18.c: 301: PIE5bits.ERRIE = 1;
 13059  005FB4  8A76               	bsf	118,5,c	;volatile
 13060                           
 13061                           ; BSR set to: 0
 13062  005FB6  0012               	return		;funcret
 13063  005FB8                     __end_of_canInit:
 13064                           	callstack 0
 13065                           
 13066 ;; *************** function _mioEventsInit *****************
 13067 ;; Defined at:
 13068 ;;		line 88 in file "../../github/CANMIOfirmware/mioEvents.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;		None
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;		None
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  1    wreg      void 
 13075 ;; Registers used:
 13076 ;;		wreg, status,2
 13077 ;; Tracked objects:
 13078 ;;		On entry : 3F/1
 13079 ;;		On exit  : 3F/1
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13086 ;;Total ram usage:        0 bytes
 13087 ;; Hardware stack levels used: 1
 13088 ;; Hardware stack levels required when called: 8
 13089 ;; This function calls:
 13090 ;;		Nothing
 13091 ;; This function is called by:
 13092 ;;		_initialise
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text38
 13097  00A62E                     __ptext38:
 13098                           	callstack 0
 13099  00A62E                     _mioEventsInit:
 13100                           	callstack 21
 13101                           
 13102                           ; BSR set to: 1
 13103                           ;mioEvents.c: 89: startWait.Val = 0;
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;incstack = 0
 13107  00A62E  0E00               	movlw	0
 13108  00A630  6FB8               	movwf	_startWait& (0+255),b
 13109  00A632  0E00               	movlw	0
 13110  00A634  6FB9               	movwf	(_startWait+1)& (0+255),b
 13111  00A636  0E00               	movlw	0
 13112  00A638  6FBA               	movwf	(_startWait+2)& (0+255),b
 13113  00A63A  0E00               	movlw	0
 13114  00A63C  6FBB               	movwf	(_startWait+3)& (0+255),b
 13115                           
 13116                           ; BSR set to: 1
 13117  00A63E  0012               	return		;funcret
 13118  00A640                     __end_of_mioEventsInit:
 13119                           	callstack 0
 13120                           
 13121 ;; *************** function _initTimedResponse *****************
 13122 ;; Defined at:
 13123 ;;		line 75 in file "../../github/CBUSlib/timedResponse.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;		None
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;		None
 13128 ;; Return value:  Size  Location     Type
 13129 ;;                  1    wreg      void 
 13130 ;; Registers used:
 13131 ;;		wreg, status,2
 13132 ;; Tracked objects:
 13133 ;;		On entry : 3F/0
 13134 ;;		On exit  : 3F/0
 13135 ;;		Unchanged: 3F/0
 13136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13141 ;;Total ram usage:        0 bytes
 13142 ;; Hardware stack levels used: 1
 13143 ;; Hardware stack levels required when called: 8
 13144 ;; This function calls:
 13145 ;;		Nothing
 13146 ;; This function is called by:
 13147 ;;		_initialise
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151                           	psect	text39
 13152  00A6F4                     __ptext39:
 13153                           	callstack 0
 13154  00A6F4                     _initTimedResponse:
 13155                           	callstack 21
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;timedResponse.c: 76: timedResponse = 0;
 13159                           
 13160                           ; BSR set to: 1
 13161                           ;incstack = 0
 13162  00A6F4  0E00               	movlw	0
 13163  00A6F6  6E14               	movwf	_timedResponse^0,c
 13164                           
 13165                           ; BSR set to: 0
 13166  00A6F8  0012               	return		;funcret
 13167  00A6FA                     __end_of_initTimedResponse:
 13168                           	callstack 0
 13169                           
 13170 ;; *************** function _initTicker *****************
 13171 ;; Defined at:
 13172 ;;		line 102 in file "../../github/CBUSlib/ticktime.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  priority        1    wreg     unsigned char 
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;  priority        1   17[BANK0 ] unsigned char 
 13177 ;;  i               1   19[BANK0 ] unsigned char 
 13178 ;;  divider         1   18[BANK0 ] unsigned char 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/1
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;Total ram usage:        3 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 9
 13195 ;; This function calls:
 13196 ;;		_setclkMHz
 13197 ;; This function is called by:
 13198 ;;		_initialise
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text40
 13203  009E5A                     __ptext40:
 13204                           	callstack 0
 13205  009E5A                     _initTicker:
 13206                           	callstack 20
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;incstack = 0
 13210                           ;initTicker@priority stored from wreg
 13211  009E5A  0100               	movlb	0	; () banked
 13212  009E5C  6F71               	movwf	initTicker@priority& (0+255),b
 13213                           
 13214                           ;ticktime.c: 104: BYTE divider, i;;ticktime.c: 106: setclkMHz();
 13215  009E5E  EC7D  F053         	call	_setclkMHz	;wreg free
 13216                           
 13217                           ;ticktime.c: 107: divider = 0;
 13218  009E62  0E00               	movlw	0
 13219  009E64  0100               	movlb	0	; () banked
 13220  009E66  6F72               	movwf	initTicker@divider& (0+255),b
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;ticktime.c: 109: for (i=clkMHz;i>0;i>>=1)
 13224  009E68  C017  F073         	movff	_clkMHz,initTicker@i
 13225  009E6C                     l11433:
 13226                           
 13227                           ; BSR set to: 0
 13228  009E6C  5173               	movf	initTicker@i& (0+255),w,b
 13229  009E6E  B4D8               	btfsc	status,2,c
 13230  009E70  D004               	goto	l2610
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;ticktime.c: 110: divider++;
 13234  009E72  2B72               	incf	initTicker@divider& (0+255),f,b
 13235                           
 13236                           ; BSR set to: 0
 13237  009E74  90D8               	bcf	status,0,c
 13238  009E76  3373               	rrcf	initTicker@i& (0+255),f,b
 13239  009E78  D7F9               	goto	l11433
 13240  009E7A                     l2610:
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;ticktime.c: 113: T0CON = (unsigned char)(0b00000000 | divider);
 13244  009E7A  C072  FFD5         	movff	initTicker@divider,4053	;volatile
 13245                           
 13246                           ;ticktime.c: 114: INTCON2bits.TMR0IP = priority;
 13247  009E7E  B171               	btfsc	initTicker@priority& (0+255),0,b
 13248  009E80  D002               	bra	u11605
 13249  009E82  94F1               	bcf	241,2,c	;volatile
 13250  009E84  D001               	bra	u11606
 13251  009E86                     u11605:
 13252  009E86  84F1               	bsf	241,2,c	;volatile
 13253  009E88                     u11606:
 13254                           
 13255                           ;ticktime.c: 115: INTCONbits.TMR0IF = 0;
 13256  009E88  94F2               	bcf	242,2,c	;volatile
 13257                           
 13258                           ;ticktime.c: 116: INTCONbits.TMR0IE = 1;
 13259  009E8A  8AF2               	bsf	242,5,c	;volatile
 13260                           
 13261                           ;ticktime.c: 117: T0CONbits.TMR0ON = 1;
 13262  009E8C  8ED5               	bsf	213,7,c	;volatile
 13263                           
 13264                           ;ticktime.c: 119: timerExtension1 = 0;
 13265  009E8E  0E00               	movlw	0
 13266  009E90  6E04               	movwf	_timerExtension1^0,c	;volatile
 13267                           
 13268                           ;ticktime.c: 120: timerExtension2 = 0;
 13269  009E92  0E00               	movlw	0
 13270  009E94  6E03               	movwf	_timerExtension2^0,c	;volatile
 13271  009E96  0012               	return		;funcret
 13272  009E98                     __end_of_initTicker:
 13273                           	callstack 0
 13274                           
 13275 ;; *************** function _setclkMHz *****************
 13276 ;; Defined at:
 13277 ;;		line 165 in file "../../github/CANMIOfirmware/hwsettings.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;		None
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;		None
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  1    wreg      void 
 13284 ;; Registers used:
 13285 ;;		wreg, status,2
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13295 ;;Total ram usage:        0 bytes
 13296 ;; Hardware stack levels used: 1
 13297 ;; Hardware stack levels required when called: 8
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		_initTicker
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text41
 13306  00A6FA                     __ptext41:
 13307                           	callstack 0
 13308  00A6FA                     _setclkMHz:
 13309                           	callstack 20
 13310                           
 13311                           ;hwsettings.c: 172: clkMHz= 64;
 13312                           
 13313                           ;incstack = 0
 13314  00A6FA  0E40               	movlw	64
 13315  00A6FC  6E17               	movwf	_clkMHz^0,c
 13316  00A6FE  0012               	return		;funcret
 13317  00A700                     __end_of_setclkMHz:
 13318                           	callstack 0
 13319                           
 13320 ;; *************** function _initServos *****************
 13321 ;; Defined at:
 13322 ;;		line 116 in file "../../github/CANMIOfirmware/servo.c"
 13323 ;; Parameters:    Size  Location     Type
 13324 ;;		None
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;  io              1   37[BANK0 ] unsigned char 
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  1    wreg      void 
 13329 ;; Registers used:
 13330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13331 ;; Tracked objects:
 13332 ;;		On entry : 3F/F
 13333 ;;		On exit  : 3F/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13339 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;Total ram usage:        5 bytes
 13341 ;; Hardware stack levels used: 1
 13342 ;; Hardware stack levels required when called: 11
 13343 ;; This function calls:
 13344 ;;		_ee_read
 13345 ;;		_setOutputPosition
 13346 ;;		_tickGet
 13347 ;; This function is called by:
 13348 ;;		_initialise
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text42
 13353  005A40                     __ptext42:
 13354                           	callstack 0
 13355  005A40                     _initServos:
 13356                           	callstack 18
 13357                           
 13358                           ; BSR set to: 15
 13359                           ;servo.c: 117: unsigned char io;;servo.c: 118: for (io=0; io<16U; io++) {
 13360                           
 13361                           ;incstack = 0
 13362  005A40  0E00               	movlw	0
 13363  005A42  0100               	movlb	0	; () banked
 13364  005A44  6F85               	movwf	initServos@io& (0+255),b
 13365  005A46                     l20363:
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;servo.c: 120: if (NV->io[io].flags & 0x04U) {
 13369  005A46  5185               	movf	initServos@io& (0+255),w,b
 13370  005A48  0D07               	mullw	7
 13371  005A4A  C0EC  F081         	movff	_NV,??_initServos
 13372  005A4E  C0ED  F082         	movff	_NV+1,??_initServos+1
 13373  005A52  50F3               	movf	243,w,c
 13374  005A54  2781               	addwf	??_initServos& (0+255),f,b
 13375  005A56  50F4               	movf	244,w,c
 13376  005A58  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13377  005A5A  0E11               	movlw	17
 13378  005A5C  2581               	addwf	??_initServos& (0+255),w,b
 13379  005A5E  6ED9               	movwf	fsr2l,c
 13380  005A60  0E00               	movlw	0
 13381  005A62  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13382  005A64  6EDA               	movwf	fsr2h,c
 13383  005A66  A4DF               	btfss	indf2,2,c
 13384  005A68  D008               	goto	l20367
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;servo.c: 122: servoState[io] = STOPPED;
 13388  005A6A  0E40               	movlw	low _servoState
 13389  005A6C  2585               	addwf	initServos@io& (0+255),w,b
 13390  005A6E  6ED9               	movwf	fsr2l,c
 13391  005A70  6ADA               	clrf	fsr2h,c
 13392  005A72  0E01               	movlw	high _servoState
 13393  005A74  22DA               	addwfc	fsr2h,f,c
 13394  005A76  0E01               	movlw	1
 13395  005A78  D007               	goto	L3
 13396  005A7A                     l20367:
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;servo.c: 124: servoState[io] = OFF;
 13400  005A7A  0E40               	movlw	low _servoState
 13401  005A7C  2585               	addwf	initServos@io& (0+255),w,b
 13402  005A7E  6ED9               	movwf	fsr2l,c
 13403  005A80  6ADA               	clrf	fsr2h,c
 13404  005A82  0E01               	movlw	high _servoState
 13405  005A84  22DA               	addwfc	fsr2h,f,c
 13406  005A86  0E00               	movlw	0
 13407  005A88                     L3:
 13408  005A88  6EDF               	movwf	indf2,c
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;servo.c: 125: };servo.c: 126: ticksWhenStopped[io].Val = tickGet();
 13412  005A8A  EC9D  F04B         	call	_tickGet	;wreg free
 13413  005A8E  5185               	movf	initServos@io& (0+255),w,b
 13414  005A90  0D04               	mullw	4
 13415  005A92  0E00               	movlw	low _ticksWhenStopped
 13416  005A94  24F3               	addwf	243,w,c
 13417  005A96  6ED9               	movwf	fsr2l,c
 13418  005A98  0E02               	movlw	high _ticksWhenStopped
 13419  005A9A  20F4               	addwfc	prodh,w,c
 13420  005A9C  6EDA               	movwf	fsr2h,c
 13421  005A9E  C071  FFDE         	movff	?_tickGet,postinc2
 13422  005AA2  C072  FFDE         	movff	?_tickGet+1,postinc2
 13423  005AA6  C073  FFDE         	movff	?_tickGet+2,postinc2
 13424  005AAA  C074  FFDE         	movff	?_tickGet+3,postinc2
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;servo.c: 127: if ((NV->io[io].type == 2U) || (NV->io[io].type == 3U) || (NV->io[io].typ
      +                          e == 4U)) {
 13428  005AAE  5185               	movf	initServos@io& (0+255),w,b
 13429  005AB0  0D07               	mullw	7
 13430  005AB2  C0EC  F081         	movff	_NV,??_initServos
 13431  005AB6  C0ED  F082         	movff	_NV+1,??_initServos+1
 13432  005ABA  50F3               	movf	243,w,c
 13433  005ABC  2781               	addwf	??_initServos& (0+255),f,b
 13434  005ABE  50F4               	movf	244,w,c
 13435  005AC0  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13436  005AC2  0E10               	movlw	16
 13437  005AC4  2581               	addwf	??_initServos& (0+255),w,b
 13438  005AC6  6ED9               	movwf	fsr2l,c
 13439  005AC8  0E00               	movlw	0
 13440  005ACA  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13441  005ACC  6EDA               	movwf	fsr2h,c
 13442  005ACE  0E02               	movlw	2
 13443  005AD0  18DE               	xorwf	postinc2,w,c
 13444  005AD2  B4D8               	btfsc	status,2,c
 13445  005AD4  D028               	goto	u25300
 13446                           
 13447                           ; BSR set to: 0
 13448  005AD6  5185               	movf	initServos@io& (0+255),w,b
 13449  005AD8  0D07               	mullw	7
 13450  005ADA  C0EC  F081         	movff	_NV,??_initServos
 13451  005ADE  C0ED  F082         	movff	_NV+1,??_initServos+1
 13452  005AE2  50F3               	movf	243,w,c
 13453  005AE4  2781               	addwf	??_initServos& (0+255),f,b
 13454  005AE6  50F4               	movf	244,w,c
 13455  005AE8  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13456  005AEA  0E10               	movlw	16
 13457  005AEC  2581               	addwf	??_initServos& (0+255),w,b
 13458  005AEE  6ED9               	movwf	fsr2l,c
 13459  005AF0  0E00               	movlw	0
 13460  005AF2  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13461  005AF4  6EDA               	movwf	fsr2h,c
 13462  005AF6  0E03               	movlw	3
 13463  005AF8  18DE               	xorwf	postinc2,w,c
 13464  005AFA  B4D8               	btfsc	status,2,c
 13465  005AFC  D014               	goto	u25300
 13466                           
 13467                           ; BSR set to: 0
 13468  005AFE  5185               	movf	initServos@io& (0+255),w,b
 13469  005B00  0D07               	mullw	7
 13470  005B02  C0EC  F081         	movff	_NV,??_initServos
 13471  005B06  C0ED  F082         	movff	_NV+1,??_initServos+1
 13472  005B0A  50F3               	movf	243,w,c
 13473  005B0C  2781               	addwf	??_initServos& (0+255),f,b
 13474  005B0E  50F4               	movf	244,w,c
 13475  005B10  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13476  005B12  0E10               	movlw	16
 13477  005B14  2581               	addwf	??_initServos& (0+255),w,b
 13478  005B16  6ED9               	movwf	fsr2l,c
 13479  005B18  0E00               	movlw	0
 13480  005B1A  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13481  005B1C  6EDA               	movwf	fsr2h,c
 13482  005B1E  0E04               	movlw	4
 13483  005B20  18DE               	xorwf	postinc2,w,c
 13484  005B22  A4D8               	btfss	status,2,c
 13485  005B24  D059               	goto	l20383
 13486  005B26                     u25300:
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;servo.c: 128: if (NV->io[io].flags & 0x04U) {
 13490  005B26  5185               	movf	initServos@io& (0+255),w,b
 13491  005B28  0D07               	mullw	7
 13492  005B2A  C0EC  F081         	movff	_NV,??_initServos
 13493  005B2E  C0ED  F082         	movff	_NV+1,??_initServos+1
 13494  005B32  50F3               	movf	243,w,c
 13495  005B34  2781               	addwf	??_initServos& (0+255),f,b
 13496  005B36  50F4               	movf	244,w,c
 13497  005B38  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13498  005B3A  0E11               	movlw	17
 13499  005B3C  2581               	addwf	??_initServos& (0+255),w,b
 13500  005B3E  6ED9               	movwf	fsr2l,c
 13501  005B40  0E00               	movlw	0
 13502  005B42  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13503  005B44  6EDA               	movwf	fsr2h,c
 13504  005B46  A4DF               	btfss	indf2,2,c
 13505  005B48  D020               	goto	l20381
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;servo.c: 129: setOutputPosition(io, ee_read(((WORD)(((BYTE*)(0x3FF-40)))-17)+io), NV->i
      +                          o[io].type);
 13509  005B4A  0EC6               	movlw	198
 13510  005B4C  2585               	addwf	initServos@io& (0+255),w,b
 13511  005B4E  6F71               	movwf	ee_read@addr& (0+255),b
 13512  005B50  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 13513  005B52  0E03               	movlw	3
 13514  005B54  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 13515  005B56  EC91  F052         	call	_ee_read	;wreg free
 13516  005B5A  0100               	movlb	0	; () banked
 13517  005B5C  6F7C               	movwf	setOutputPosition@pos& (0+255),b
 13518  005B5E  5185               	movf	initServos@io& (0+255),w,b
 13519  005B60  0D07               	mullw	7
 13520  005B62  C0EC  F081         	movff	_NV,??_initServos
 13521  005B66  C0ED  F082         	movff	_NV+1,??_initServos+1
 13522  005B6A  50F3               	movf	243,w,c
 13523  005B6C  2781               	addwf	??_initServos& (0+255),f,b
 13524  005B6E  50F4               	movf	244,w,c
 13525  005B70  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13526  005B72  0E10               	movlw	16
 13527  005B74  2581               	addwf	??_initServos& (0+255),w,b
 13528  005B76  6ED9               	movwf	fsr2l,c
 13529  005B78  0E00               	movlw	0
 13530  005B7A  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13531  005B7C  6EDA               	movwf	fsr2h,c
 13532  005B7E  50DF               	movf	indf2,w,c
 13533  005B80  6F7D               	movwf	setOutputPosition@type& (0+255),b
 13534  005B82  5185               	movf	initServos@io& (0+255),w,b
 13535  005B84  EC36  F047         	call	_setOutputPosition
 13536                           
 13537                           ;servo.c: 130: } else {
 13538  005B88  D027               	goto	l20383
 13539  005B8A                     l20381:
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;servo.c: 131: setOutputPosition(io, NV->io[io].nv_io.nv_servo.servo_start_pos, NV->io[i
      +                          o].type);
 13543  005B8A  5185               	movf	initServos@io& (0+255),w,b
 13544  005B8C  0D07               	mullw	7
 13545  005B8E  C0EC  F081         	movff	_NV,??_initServos
 13546  005B92  C0ED  F082         	movff	_NV+1,??_initServos+1
 13547  005B96  50F3               	movf	243,w,c
 13548  005B98  2781               	addwf	??_initServos& (0+255),f,b
 13549  005B9A  50F4               	movf	244,w,c
 13550  005B9C  2382               	addwfc	(??_initServos+1)& (0+255),f,b
 13551  005B9E  0E12               	movlw	18
 13552  005BA0  2581               	addwf	??_initServos& (0+255),w,b
 13553  005BA2  6ED9               	movwf	fsr2l,c
 13554  005BA4  0E00               	movlw	0
 13555  005BA6  2182               	addwfc	(??_initServos+1)& (0+255),w,b
 13556  005BA8  6EDA               	movwf	fsr2h,c
 13557  005BAA  50DF               	movf	indf2,w,c
 13558  005BAC  6F7C               	movwf	setOutputPosition@pos& (0+255),b
 13559  005BAE  5185               	movf	initServos@io& (0+255),w,b
 13560  005BB0  0D07               	mullw	7
 13561  005BB2  C0EC  F083         	movff	_NV,??_initServos+2
 13562  005BB6  C0ED  F084         	movff	_NV+1,??_initServos+3
 13563  005BBA  50F3               	movf	243,w,c
 13564  005BBC  2783               	addwf	(??_initServos+2)& (0+255),f,b
 13565  005BBE  50F4               	movf	244,w,c
 13566  005BC0  2384               	addwfc	(??_initServos+3)& (0+255),f,b
 13567  005BC2  0E10               	movlw	16
 13568  005BC4  2583               	addwf	(??_initServos+2)& (0+255),w,b
 13569  005BC6  6ED9               	movwf	fsr2l,c
 13570  005BC8  0E00               	movlw	0
 13571  005BCA  2184               	addwfc	(??_initServos+3)& (0+255),w,b
 13572  005BCC  6EDA               	movwf	fsr2h,c
 13573  005BCE  50DF               	movf	indf2,w,c
 13574  005BD0  6F7D               	movwf	setOutputPosition@type& (0+255),b
 13575  005BD2  5185               	movf	initServos@io& (0+255),w,b
 13576  005BD4  EC36  F047         	call	_setOutputPosition
 13577  005BD8                     l20383:
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;servo.c: 132: };servo.c: 133: };servo.c: 134: stepsPerPollSpeed[io] = 0;
 13581  005BD8  0E30               	movlw	low _stepsPerPollSpeed
 13582  005BDA  2585               	addwf	initServos@io& (0+255),w,b
 13583  005BDC  6ED9               	movwf	fsr2l,c
 13584  005BDE  6ADA               	clrf	fsr2h,c
 13585  005BE0  0E01               	movlw	high _stepsPerPollSpeed
 13586  005BE2  22DA               	addwfc	fsr2h,f,c
 13587  005BE4  0E00               	movlw	0
 13588  005BE6  6EDF               	movwf	indf2,c
 13589                           
 13590                           ; BSR set to: 0
 13591  005BE8  2B85               	incf	initServos@io& (0+255),f,b
 13592                           
 13593                           ; BSR set to: 0
 13594  005BEA  0E0F               	movlw	15
 13595  005BEC  6585               	cpfsgt	initServos@io& (0+255),b
 13596  005BEE  D72B               	goto	l20363
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;servo.c: 135: };servo.c: 138: T1GCONbits.TMR1GE = 0;
 13600  005BF0  9EAA               	bcf	170,7,c	;volatile
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;servo.c: 139: T1CONbits.TMR1CS = 0;
 13604  005BF2  0E3F               	movlw	-193
 13605  005BF4  16CD               	andwf	205,f,c	;volatile
 13606                           
 13607                           ;servo.c: 140: T1CONbits.T1CKPS = 2;
 13608  005BF6  50CD               	movf	205,w,c	;volatile
 13609  005BF8  0BCF               	andlw	-49
 13610  005BFA  0920               	iorlw	32
 13611  005BFC  6ECD               	movwf	205,c	;volatile
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;servo.c: 141: T1CONbits.SOSCEN = 1;
 13615  005BFE  86CD               	bsf	205,3,c	;volatile
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;servo.c: 142: T1CONbits.RD16 = 1;
 13619  005C00  82CD               	bsf	205,1,c	;volatile
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;servo.c: 143: PIE1bits.TMR1IE = 1;
 13623  005C02  809D               	bsf	157,0,c	;volatile
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;servo.c: 145: T3GCONbits.TMR3GE = 0;
 13627  005C04  9EB0               	bcf	176,7,c	;volatile
 13628                           
 13629                           ;servo.c: 146: T3CONbits.TMR3CS = 0;
 13630  005C06  0E3F               	movlw	-193
 13631  005C08  16B1               	andwf	177,f,c	;volatile
 13632                           
 13633                           ;servo.c: 147: T3CONbits.T3CKPS = 2;
 13634  005C0A  50B1               	movf	177,w,c	;volatile
 13635  005C0C  0BCF               	andlw	-49
 13636  005C0E  0920               	iorlw	32
 13637  005C10  6EB1               	movwf	177,c	;volatile
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;servo.c: 148: T3CONbits.SOSCEN = 1;
 13641  005C12  86B1               	bsf	177,3,c	;volatile
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;servo.c: 149: T3CONbits.RD16 = 1;
 13645  005C14  82B1               	bsf	177,1,c	;volatile
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;servo.c: 150: PIE2bits.TMR3IE = 1;
 13649  005C16  82A0               	bsf	160,1,c	;volatile
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;servo.c: 152: servoInBlock = io - 1U;
 13653  005C18  0585               	decf	initServos@io& (0+255),w,b
 13654  005C1A  6E12               	movwf	_servoInBlock^0,c
 13655                           
 13656                           ; BSR set to: 0
 13657  005C1C  0012               	return		;funcret
 13658  005C1E                     __end_of_initServos:
 13659                           	callstack 0
 13660                           
 13661 ;; *************** function _setOutputPosition *****************
 13662 ;; Defined at:
 13663 ;;		line 137 in file "../../github/CANMIOfirmware/outputs.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  io              1    wreg     unsigned char 
 13666 ;;  pos             1   28[BANK0 ] unsigned char 
 13667 ;;  type            1   29[BANK0 ] unsigned char 
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;  io              1   32[BANK0 ] unsigned char 
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  1    wreg      void 
 13672 ;; Registers used:
 13673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13674 ;; Tracked objects:
 13675 ;;		On entry : 3F/0
 13676 ;;		On exit  : 3F/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13683 ;;Total ram usage:        5 bytes
 13684 ;; Hardware stack levels used: 1
 13685 ;; Hardware stack levels required when called: 10
 13686 ;; This function calls:
 13687 ;;		_setDigitalOutput
 13688 ;;		_setOutputPin
 13689 ;;		_setServoPosition
 13690 ;; This function is called by:
 13691 ;;		_initServos
 13692 ;; This function uses a non-reentrant model
 13693 ;;
 13694                           
 13695                           	psect	text43
 13696  008E6C                     __ptext43:
 13697                           	callstack 0
 13698  008E6C                     _setOutputPosition:
 13699                           	callstack 18
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;incstack = 0
 13703                           ;setOutputPosition@io stored from wreg
 13704  008E6C  6F80               	movwf	setOutputPosition@io& (0+255),b
 13705                           
 13706                           ;outputs.c: 138: switch(type) {
 13707  008E6E  D022               	goto	l20085
 13708  008E70                     l20073:
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;outputs.c: 145: setDigitalOutput(io, pos);
 13712  008E70  C07C  F077         	movff	setOutputPosition@pos,setDigitalOutput@state
 13713  008E74  5180               	movf	setOutputPosition@io& (0+255),w,b
 13714  008E76  ECBC  F03F         	call	_setDigitalOutput
 13715  008E7A  0012               	return	
 13716  008E7C                     l20077:
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;outputs.c: 151: case 4U:;outputs.c: 154: case 2U:;outputs.c: 155: setServoPosition(io, 
      +                          pos);
 13720  008E7C  C07C  F071         	movff	setOutputPosition@pos,setServoPosition@pos
 13721  008E80  5180               	movf	setOutputPosition@io& (0+255),w,b
 13722  008E82  ECC4  F051         	call	_setServoPosition
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;outputs.c: 156: setOutputPin(io, (NV->io[io].flags & 0x20U));
 13726  008E86  5180               	movf	setOutputPosition@io& (0+255),w,b
 13727  008E88  0D07               	mullw	7
 13728  008E8A  C0EC  F07E         	movff	_NV,??_setOutputPosition
 13729  008E8E  C0ED  F07F         	movff	_NV+1,??_setOutputPosition+1
 13730  008E92  50F3               	movf	243,w,c
 13731  008E94  277E               	addwf	??_setOutputPosition& (0+255),f,b
 13732  008E96  50F4               	movf	244,w,c
 13733  008E98  237F               	addwfc	(??_setOutputPosition+1)& (0+255),f,b
 13734  008E9A  0E11               	movlw	17
 13735  008E9C  257E               	addwf	??_setOutputPosition& (0+255),w,b
 13736  008E9E  6ED9               	movwf	fsr2l,c
 13737  008EA0  0E00               	movlw	0
 13738  008EA2  217F               	addwfc	(??_setOutputPosition+1)& (0+255),w,b
 13739  008EA4  6EDA               	movwf	fsr2h,c
 13740  008EA6  50DF               	movf	indf2,w,c
 13741  008EA8  0B20               	andlw	32
 13742  008EAA  6F71               	movwf	setOutputPin@state& (0+255),b
 13743  008EAC  5180               	movf	setOutputPosition@io& (0+255),w,b
 13744  008EAE  EC90  F031         	call	_setOutputPin
 13745  008EB2  0012               	return	
 13746  008EB4                     l20085:
 13747  008EB4  0100               	movlb	0	; () banked
 13748  008EB6  517D               	movf	setOutputPosition@type& (0+255),w,b
 13749                           
 13750                           ; Switch size 1, requested type "simple"
 13751                           ; Number of cases is 7, Range of values is 0 to 6
 13752                           ; switch strategies available:
 13753                           ; Name         Instructions Cycles
 13754                           ; simple_byte           22    12 (average)
 13755                           ;	Chosen strategy is simple_byte
 13756  008EB8  0A00               	xorlw	0	; case 0
 13757  008EBA  B4D8               	btfsc	status,2,c
 13758  008EBC  0012               	return	
 13759  008EBE  0A01               	xorlw	1	; case 1
 13760  008EC0  B4D8               	btfsc	status,2,c
 13761  008EC2  D7D6               	goto	l20073
 13762  008EC4  0A03               	xorlw	3	; case 2
 13763  008EC6  B4D8               	btfsc	status,2,c
 13764  008EC8  D7D9               	goto	l20077
 13765  008ECA  0A01               	xorlw	1	; case 3
 13766  008ECC  B4D8               	btfsc	status,2,c
 13767  008ECE  D7D6               	goto	l20077
 13768  008ED0  0A07               	xorlw	7	; case 4
 13769  008ED2  B4D8               	btfsc	status,2,c
 13770  008ED4  D7D3               	goto	l20077
 13771  008ED6  0A01               	xorlw	1	; case 5
 13772  008ED8  B4D8               	btfsc	status,2,c
 13773  008EDA  0012               	return	
 13774  008EDC  0A03               	xorlw	3	; case 6
 13775  008EDE  0012               	return	
 13776  008EE0                     __end_of_setOutputPosition:
 13777                           	callstack 0
 13778                           
 13779 ;; *************** function _setServoPosition *****************
 13780 ;; Defined at:
 13781 ;;		line 617 in file "../../github/CANMIOfirmware/servo.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  io              1    wreg     unsigned char 
 13784 ;;  pos             1   17[BANK0 ] unsigned char 
 13785 ;; Auto vars:     Size  Location     Type
 13786 ;;  io              1   18[BANK0 ] unsigned char 
 13787 ;; Return value:  Size  Location     Type
 13788 ;;                  1    wreg      void 
 13789 ;; Registers used:
 13790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13791 ;; Tracked objects:
 13792 ;;		On entry : 3F/0
 13793 ;;		On exit  : 3F/0
 13794 ;;		Unchanged: 0/0
 13795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13796 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13800 ;;Total ram usage:        2 bytes
 13801 ;; Hardware stack levels used: 1
 13802 ;; Hardware stack levels required when called: 8
 13803 ;; This function calls:
 13804 ;;		Nothing
 13805 ;; This function is called by:
 13806 ;;		_setOutputPosition
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text44
 13811  00A388                     __ptext44:
 13812                           	callstack 0
 13813  00A388                     _setServoPosition:
 13814                           	callstack 19
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;incstack = 0
 13818                           ;setServoPosition@io stored from wreg
 13819  00A388  6F72               	movwf	setServoPosition@io& (0+255),b
 13820                           
 13821                           ;servo.c: 618: targetPos[io] = pos;
 13822  00A38A  0E70               	movlw	low _targetPos
 13823  00A38C  0100               	movlb	0	; () banked
 13824  00A38E  2572               	addwf	setServoPosition@io& (0+255),w,b
 13825  00A390  6ED9               	movwf	fsr2l,c
 13826  00A392  6ADA               	clrf	fsr2h,c
 13827  00A394  0E01               	movlw	high _targetPos
 13828  00A396  22DA               	addwfc	fsr2h,f,c
 13829  00A398  C071  FFDF         	movff	setServoPosition@pos,indf2
 13830                           
 13831                           ;servo.c: 619: currentPos[io] = pos;
 13832  00A39C  0E80               	movlw	low _currentPos
 13833  00A39E  2572               	addwf	setServoPosition@io& (0+255),w,b
 13834  00A3A0  6ED9               	movwf	fsr2l,c
 13835  00A3A2  6ADA               	clrf	fsr2h,c
 13836  00A3A4  0E01               	movlw	high _currentPos
 13837  00A3A6  22DA               	addwfc	fsr2h,f,c
 13838  00A3A8  C071  FFDF         	movff	setServoPosition@pos,indf2
 13839                           
 13840                           ; BSR set to: 0
 13841  00A3AC  0012               	return		;funcret
 13842  00A3AE                     __end_of_setServoPosition:
 13843                           	callstack 0
 13844                           
 13845 ;; *************** function _initOutputs *****************
 13846 ;; Defined at:
 13847 ;;		line 87 in file "../../github/CANMIOfirmware/digitalOut.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;		None
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;  io              1   17[BANK0 ] unsigned char 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      void 
 13854 ;; Registers used:
 13855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13856 ;; Tracked objects:
 13857 ;;		On entry : 3F/0
 13858 ;;		On exit  : 3F/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13864 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;Total ram usage:        1 bytes
 13866 ;; Hardware stack levels used: 1
 13867 ;; Hardware stack levels required when called: 8
 13868 ;; This function calls:
 13869 ;;		Nothing
 13870 ;; This function is called by:
 13871 ;;		_initialise
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text45
 13876  00A27E                     __ptext45:
 13877                           	callstack 0
 13878  00A27E                     _initOutputs:
 13879                           	callstack 21
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;digitalOut.c: 89: unsigned char io;;digitalOut.c: 90: for (io=0; io<16U; io++) {
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;incstack = 0
 13886  00A27E  0E00               	movlw	0
 13887  00A280  6F71               	movwf	initOutputs@io& (0+255),b
 13888  00A282                     l15995:
 13889                           
 13890                           ; BSR set to: 0
 13891                           ;digitalOut.c: 91: pulseDelays[io] = 0;
 13892  00A282  0EA4               	movlw	low _pulseDelays
 13893  00A284  2571               	addwf	initOutputs@io& (0+255),w,b
 13894  00A286  6ED9               	movwf	fsr2l,c
 13895  00A288  6ADA               	clrf	fsr2h,c
 13896  00A28A  0E02               	movlw	high _pulseDelays
 13897  00A28C  22DA               	addwfc	fsr2h,f,c
 13898  00A28E  0E00               	movlw	0
 13899  00A290  6EDF               	movwf	indf2,c
 13900                           
 13901                           ;digitalOut.c: 92: flashDelays[io] = 0;
 13902  00A292  0E60               	movlw	low _flashDelays
 13903  00A294  2571               	addwf	initOutputs@io& (0+255),w,b
 13904  00A296  6ED9               	movwf	fsr2l,c
 13905  00A298  6ADA               	clrf	fsr2h,c
 13906  00A29A  0E01               	movlw	high _flashDelays
 13907  00A29C  22DA               	addwfc	fsr2h,f,c
 13908  00A29E  0E00               	movlw	0
 13909  00A2A0  6EDF               	movwf	indf2,c
 13910                           
 13911                           ; BSR set to: 0
 13912  00A2A2  2B71               	incf	initOutputs@io& (0+255),f,b
 13913                           
 13914                           ; BSR set to: 0
 13915  00A2A4  0E0F               	movlw	15
 13916  00A2A6  6571               	cpfsgt	initOutputs@io& (0+255),b
 13917  00A2A8  D7EC               	goto	l15995
 13918  00A2AA  0012               	return	
 13919  00A2AC                     __end_of_initOutputs:
 13920                           	callstack 0
 13921                           
 13922 ;; *************** function _initInputScan *****************
 13923 ;; Defined at:
 13924 ;;		line 75 in file "../../github/CANMIOfirmware/inputs.c"
 13925 ;; Parameters:    Size  Location     Type
 13926 ;;		None
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;  input           1   24[BANK0 ] unsigned char 
 13929 ;; Return value:  Size  Location     Type
 13930 ;;                  1    wreg      void 
 13931 ;; Registers used:
 13932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13933 ;; Tracked objects:
 13934 ;;		On entry : 3F/0
 13935 ;;		On exit  : 3F/0
 13936 ;;		Unchanged: 0/0
 13937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13940 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13941 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13942 ;;Total ram usage:        3 bytes
 13943 ;; Hardware stack levels used: 1
 13944 ;; Hardware stack levels required when called: 9
 13945 ;; This function calls:
 13946 ;;		_ee_read
 13947 ;;		_readInput
 13948 ;; This function is called by:
 13949 ;;		_initialise
 13950 ;; This function uses a non-reentrant model
 13951 ;;
 13952                           
 13953                           	psect	text46
 13954  007C98                     __ptext46:
 13955                           	callstack 0
 13956  007C98                     _initInputScan:
 13957                           	callstack 20
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;inputs.c: 76: for (io=0; io<16U; io++) {
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;incstack = 0
 13964  007C98  0E00               	movlw	0
 13965  007C9A  6FE7               	movwf	_io& (0+255),b
 13966  007C9C                     l20329:
 13967                           
 13968                           ; BSR set to: 0
 13969  007C9C  0E0F               	movlw	15
 13970  007C9E  65E7               	cpfsgt	_io& (0+255),b
 13971  007CA0  D001               	goto	l20333
 13972  007CA2  0012               	return	
 13973  007CA4                     l20333:
 13974                           
 13975                           ; BSR set to: 0
 13976                           ;inputs.c: 77: BYTE input = readInput(io);
 13977  007CA4  51E7               	movf	_io& (0+255),w,b
 13978  007CA6  EC12  F037         	call	_readInput
 13979  007CAA  6F78               	movwf	initInputScan@input& (0+255),b
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;inputs.c: 78: inputState[io] = input;
 13983  007CAC  0E94               	movlw	low _inputState
 13984  007CAE  25E7               	addwf	_io& (0+255),w,b
 13985  007CB0  6ED9               	movwf	fsr2l,c
 13986  007CB2  6ADA               	clrf	fsr2h,c
 13987  007CB4  0E02               	movlw	high _inputState
 13988  007CB6  22DA               	addwfc	fsr2h,f,c
 13989  007CB8  C078  FFDF         	movff	initInputScan@input,indf2
 13990                           
 13991                           ; BSR set to: 0
 13992                           ;inputs.c: 79: if (!(NV->io[io].flags & 0x01U)) {
 13993  007CBC  51E7               	movf	_io& (0+255),w,b
 13994  007CBE  0D07               	mullw	7
 13995  007CC0  C0EC  F076         	movff	_NV,??_initInputScan
 13996  007CC4  C0ED  F077         	movff	_NV+1,??_initInputScan+1
 13997  007CC8  50F3               	movf	243,w,c
 13998  007CCA  2776               	addwf	??_initInputScan& (0+255),f,b
 13999  007CCC  50F4               	movf	244,w,c
 14000  007CCE  2377               	addwfc	(??_initInputScan+1)& (0+255),f,b
 14001  007CD0  0E11               	movlw	17
 14002  007CD2  2576               	addwf	??_initInputScan& (0+255),w,b
 14003  007CD4  6ED9               	movwf	fsr2l,c
 14004  007CD6  0E00               	movlw	0
 14005  007CD8  2177               	addwfc	(??_initInputScan+1)& (0+255),w,b
 14006  007CDA  6EDA               	movwf	fsr2h,c
 14007  007CDC  B0DF               	btfsc	indf2,0,c
 14008  007CDE  D007               	goto	l20341
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;inputs.c: 80: input = (BYTE)(!input);
 14012  007CE0  5178               	movf	initInputScan@input& (0+255),w,b
 14013  007CE2  A4D8               	btfss	status,2,c
 14014  007CE4  D002               	goto	u25240
 14015  007CE6  0E01               	movlw	1
 14016  007CE8  D001               	goto	u25250
 14017  007CEA                     u25240:
 14018  007CEA  0E00               	movlw	0
 14019  007CEC                     u25250:
 14020  007CEC  6F78               	movwf	initInputScan@input& (0+255),b
 14021  007CEE                     l20341:
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;inputs.c: 81: };inputs.c: 82: outputState[io] = input;
 14025  007CEE  0E50               	movlw	low _outputState
 14026  007CF0  25E7               	addwf	_io& (0+255),w,b
 14027  007CF2  6ED9               	movwf	fsr2l,c
 14028  007CF4  6ADA               	clrf	fsr2h,c
 14029  007CF6  0E01               	movlw	high _outputState
 14030  007CF8  22DA               	addwfc	fsr2h,f,c
 14031  007CFA  C078  FFDF         	movff	initInputScan@input,indf2
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;inputs.c: 83: if (NV->io[io].flags & 0x10U) {
 14035  007CFE  51E7               	movf	_io& (0+255),w,b
 14036  007D00  0D07               	mullw	7
 14037  007D02  C0EC  F076         	movff	_NV,??_initInputScan
 14038  007D06  C0ED  F077         	movff	_NV+1,??_initInputScan+1
 14039  007D0A  50F3               	movf	243,w,c
 14040  007D0C  2776               	addwf	??_initInputScan& (0+255),f,b
 14041  007D0E  50F4               	movf	244,w,c
 14042  007D10  2377               	addwfc	(??_initInputScan+1)& (0+255),f,b
 14043  007D12  0E11               	movlw	17
 14044  007D14  2576               	addwf	??_initInputScan& (0+255),w,b
 14045  007D16  6ED9               	movwf	fsr2l,c
 14046  007D18  0E00               	movlw	0
 14047  007D1A  2177               	addwfc	(??_initInputScan+1)& (0+255),w,b
 14048  007D1C  6EDA               	movwf	fsr2h,c
 14049  007D1E  A8DF               	btfss	indf2,4,c
 14050  007D20  D00F               	goto	l20347
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;inputs.c: 84: outputState[io] = ee_read(((WORD)(((BYTE*)(0x3FF-40)))-17)+io);
 14054  007D22  0E50               	movlw	low _outputState
 14055  007D24  25E7               	addwf	_io& (0+255),w,b
 14056  007D26  6ED9               	movwf	fsr2l,c
 14057  007D28  6ADA               	clrf	fsr2h,c
 14058  007D2A  0E01               	movlw	high _outputState
 14059  007D2C  22DA               	addwfc	fsr2h,f,c
 14060  007D2E  0EC6               	movlw	198
 14061  007D30  25E7               	addwf	_io& (0+255),w,b
 14062  007D32  6F71               	movwf	ee_read@addr& (0+255),b
 14063  007D34  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 14064  007D36  0E03               	movlw	3
 14065  007D38  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 14066  007D3A  EC91  F052         	call	_ee_read	;wreg free
 14067  007D3E  6EDF               	movwf	indf2,c
 14068  007D40                     l20347:
 14069                           
 14070                           ;inputs.c: 85: };inputs.c: 86: delayCount[io] = 0;
 14071  007D40  0E84               	movlw	low _delayCount
 14072  007D42  0100               	movlb	0	; () banked
 14073  007D44  25E7               	addwf	_io& (0+255),w,b
 14074  007D46  6ED9               	movwf	fsr2l,c
 14075  007D48  6ADA               	clrf	fsr2h,c
 14076  007D4A  0E02               	movlw	high _delayCount
 14077  007D4C  22DA               	addwfc	fsr2h,f,c
 14078  007D4E  0E00               	movlw	0
 14079  007D50  6EDF               	movwf	indf2,c
 14080                           
 14081                           ; BSR set to: 0
 14082  007D52  2BE7               	incf	_io& (0+255),f,b
 14083  007D54  D7A3               	goto	l20329
 14084  007D56                     __end_of_initInputScan:
 14085                           	callstack 0
 14086                           
 14087 ;; *************** function _readInput *****************
 14088 ;; Defined at:
 14089 ;;		line 173 in file "../../github/CANMIOfirmware/inputs.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;  io              1    wreg     unsigned char 
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;  io              1   21[BANK0 ] unsigned char 
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      unsigned char 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14098 ;; Tracked objects:
 14099 ;;		On entry : 3F/0
 14100 ;;		On exit  : 3F/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14107 ;;Total ram usage:        5 bytes
 14108 ;; Hardware stack levels used: 1
 14109 ;; Hardware stack levels required when called: 8
 14110 ;; This function calls:
 14111 ;;		Nothing
 14112 ;; This function is called by:
 14113 ;;		_initInputScan
 14114 ;;		_inputScan
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text47
 14119  006E24                     __ptext47:
 14120                           	callstack 0
 14121  006E24                     _readInput:
 14122                           	callstack 21
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;incstack = 0
 14126                           ;readInput@io stored from wreg
 14127  006E24  6F75               	movwf	readInput@io& (0+255),b
 14128                           
 14129                           ;inputs.c: 174: if (NV->io[io].type == 0U) {
 14130  006E26  0100               	movlb	0	; () banked
 14131  006E28  5175               	movf	readInput@io& (0+255),w,b
 14132  006E2A  0D07               	mullw	7
 14133  006E2C  C0EC  F071         	movff	_NV,??_readInput
 14134  006E30  C0ED  F072         	movff	_NV+1,??_readInput+1
 14135  006E34  50F3               	movf	243,w,c
 14136  006E36  2771               	addwf	??_readInput& (0+255),f,b
 14137  006E38  50F4               	movf	244,w,c
 14138  006E3A  2372               	addwfc	(??_readInput+1)& (0+255),f,b
 14139  006E3C  0E10               	movlw	16
 14140  006E3E  2571               	addwf	??_readInput& (0+255),w,b
 14141  006E40  6ED9               	movwf	fsr2l,c
 14142  006E42  0E00               	movlw	0
 14143  006E44  2172               	addwfc	(??_readInput+1)& (0+255),w,b
 14144  006E46  6EDA               	movwf	fsr2h,c
 14145  006E48  50DF               	movf	indf2,w,c
 14146  006E4A  B4D8               	btfsc	status,2,c
 14147  006E4C  D058               	goto	l10989
 14148  006E4E  D070               	goto	l10991
 14149  006E50                     l10975:
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;inputs.c: 177: return PORTA & (1U<<configs[io].no);
 14153  006E50  5175               	movf	readInput@io& (0+255),w,b
 14154  006E52  0D04               	mullw	4
 14155  006E54  CFF3 F071          	movff	prodl,??_readInput
 14156  006E58  0E02               	movlw	2
 14157  006E5A  2771               	addwf	??_readInput& (0+255),f,b
 14158  006E5C  5171               	movf	??_readInput& (0+255),w,b
 14159  006E5E  0F01               	addlw	low _configs
 14160  006E60  6F72               	movwf	(??_readInput+1)& (0+255),b
 14161  006E62  C072  FFF6         	movff	??_readInput+1,tblptrl
 14162  006E66                     	if	1	;There is more than 1 active tblptr byte
 14163  006E66  0E0F               	movlw	high __smallconst
 14164  006E68  6EF7               	movwf	tblptrh,c
 14165  006E6A                     	endif
 14166  006E6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14167  006E6A  6AF8               	clrf	tblptru,c
 14168  006E6C                     	endif
 14169  006E6C                     	if	0	;tblptru may be non-zero
 14170  006E6C                     	endif
 14171  006E6C  0008               	tblrd		*
 14172  006E6E  CFF5 F073          	movff	tablat,??_readInput+2
 14173  006E72  0E01               	movlw	1
 14174  006E74  6F74               	movwf	(??_readInput+3)& (0+255),b
 14175  006E76  2B73               	incf	(??_readInput+2)& (0+255),f,b
 14176  006E78  D002               	goto	u11124
 14177  006E7A                     u11125:
 14178  006E7A  90D8               	bcf	status,0,c
 14179  006E7C  3774               	rlcf	(??_readInput+3)& (0+255),f,b
 14180  006E7E                     u11124:
 14181  006E7E  2F73               	decfsz	(??_readInput+2)& (0+255),f,b
 14182  006E80  D7FC               	goto	u11125
 14183  006E82  0100               	movlb	0	; () banked
 14184  006E84  5174               	movf	(??_readInput+3)& (0+255),w,b
 14185  006E86  1480               	andwf	128,w,c	;volatile
 14186  006E88  0012               	return	
 14187  006E8A                     l10979:
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;inputs.c: 179: return PORTB & (1U<<configs[io].no);
 14191  006E8A  5175               	movf	readInput@io& (0+255),w,b
 14192  006E8C  0D04               	mullw	4
 14193  006E8E  CFF3 F071          	movff	prodl,??_readInput
 14194  006E92  0E02               	movlw	2
 14195  006E94  2771               	addwf	??_readInput& (0+255),f,b
 14196  006E96  5171               	movf	??_readInput& (0+255),w,b
 14197  006E98  0F01               	addlw	low _configs
 14198  006E9A  6F72               	movwf	(??_readInput+1)& (0+255),b
 14199  006E9C  C072  FFF6         	movff	??_readInput+1,tblptrl
 14200  006EA0                     	if	1	;There is more than 1 active tblptr byte
 14201  006EA0  0E0F               	movlw	high __smallconst
 14202  006EA2  6EF7               	movwf	tblptrh,c
 14203  006EA4                     	endif
 14204  006EA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14205  006EA4  6AF8               	clrf	tblptru,c
 14206  006EA6                     	endif
 14207  006EA6                     	if	0	;tblptru may be non-zero
 14208  006EA6                     	endif
 14209  006EA6  0008               	tblrd		*
 14210  006EA8  CFF5 F073          	movff	tablat,??_readInput+2
 14211  006EAC  0E01               	movlw	1
 14212  006EAE  6F74               	movwf	(??_readInput+3)& (0+255),b
 14213  006EB0  2B73               	incf	(??_readInput+2)& (0+255),f,b
 14214  006EB2  D002               	goto	u11134
 14215  006EB4                     u11135:
 14216  006EB4  90D8               	bcf	status,0,c
 14217  006EB6  3774               	rlcf	(??_readInput+3)& (0+255),f,b
 14218  006EB8                     u11134:
 14219  006EB8  2F73               	decfsz	(??_readInput+2)& (0+255),f,b
 14220  006EBA  D7FC               	goto	u11135
 14221  006EBC  0100               	movlb	0	; () banked
 14222  006EBE  5174               	movf	(??_readInput+3)& (0+255),w,b
 14223  006EC0  1481               	andwf	129,w,c	;volatile
 14224  006EC2  0012               	return	
 14225  006EC4                     l10983:
 14226                           
 14227                           ; BSR set to: 0
 14228                           ;inputs.c: 181: return PORTC & (1U<<configs[io].no);
 14229  006EC4  5175               	movf	readInput@io& (0+255),w,b
 14230  006EC6  0D04               	mullw	4
 14231  006EC8  CFF3 F071          	movff	prodl,??_readInput
 14232  006ECC  0E02               	movlw	2
 14233  006ECE  2771               	addwf	??_readInput& (0+255),f,b
 14234  006ED0  5171               	movf	??_readInput& (0+255),w,b
 14235  006ED2  0F01               	addlw	low _configs
 14236  006ED4  6F72               	movwf	(??_readInput+1)& (0+255),b
 14237  006ED6  C072  FFF6         	movff	??_readInput+1,tblptrl
 14238  006EDA                     	if	1	;There is more than 1 active tblptr byte
 14239  006EDA  0E0F               	movlw	high __smallconst
 14240  006EDC  6EF7               	movwf	tblptrh,c
 14241  006EDE                     	endif
 14242  006EDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14243  006EDE  6AF8               	clrf	tblptru,c
 14244  006EE0                     	endif
 14245  006EE0                     	if	0	;tblptru may be non-zero
 14246  006EE0                     	endif
 14247  006EE0  0008               	tblrd		*
 14248  006EE2  CFF5 F073          	movff	tablat,??_readInput+2
 14249  006EE6  0E01               	movlw	1
 14250  006EE8  6F74               	movwf	(??_readInput+3)& (0+255),b
 14251  006EEA  2B73               	incf	(??_readInput+2)& (0+255),f,b
 14252  006EEC  D002               	goto	u11144
 14253  006EEE                     u11145:
 14254  006EEE  90D8               	bcf	status,0,c
 14255  006EF0  3774               	rlcf	(??_readInput+3)& (0+255),f,b
 14256  006EF2                     u11144:
 14257  006EF2  2F73               	decfsz	(??_readInput+2)& (0+255),f,b
 14258  006EF4  D7FC               	goto	u11145
 14259  006EF6  0100               	movlb	0	; () banked
 14260  006EF8  5174               	movf	(??_readInput+3)& (0+255),w,b
 14261  006EFA  1482               	andwf	130,w,c	;volatile
 14262  006EFC  0012               	return	
 14263  006EFE                     l10989:
 14264                           
 14265                           ; BSR set to: 0
 14266  006EFE  5175               	movf	readInput@io& (0+255),w,b
 14267  006F00  0D04               	mullw	4
 14268  006F02  CFF3 F071          	movff	prodl,??_readInput
 14269  006F06  0E01               	movlw	1
 14270  006F08  2771               	addwf	??_readInput& (0+255),f,b
 14271  006F0A  5171               	movf	??_readInput& (0+255),w,b
 14272  006F0C  0F01               	addlw	low _configs
 14273  006F0E  6F72               	movwf	(??_readInput+1)& (0+255),b
 14274  006F10  C072  FFF6         	movff	??_readInput+1,tblptrl
 14275  006F14                     	if	1	;There is more than 1 active tblptr byte
 14276  006F14  0E0F               	movlw	high __smallconst
 14277  006F16  6EF7               	movwf	tblptrh,c
 14278  006F18                     	endif
 14279  006F18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14280  006F18  6AF8               	clrf	tblptru,c
 14281  006F1A                     	endif
 14282  006F1A                     	if	0	;tblptru may be non-zero
 14283  006F1A                     	endif
 14284  006F1A  0008               	tblrd		*
 14285  006F1C  50F5               	movf	tablat,w,c
 14286                           
 14287                           ; Switch size 1, requested type "simple"
 14288                           ; Number of cases is 3, Range of values is 65 to 67
 14289                           ; switch strategies available:
 14290                           ; Name         Instructions Cycles
 14291                           ; simple_byte           10     6 (average)
 14292                           ;	Chosen strategy is simple_byte
 14293  006F1E  0A41               	xorlw	65	; case 65
 14294  006F20  B4D8               	btfsc	status,2,c
 14295  006F22  D796               	goto	l10975
 14296  006F24  0A03               	xorlw	3	; case 66
 14297  006F26  B4D8               	btfsc	status,2,c
 14298  006F28  D7B0               	goto	l10979
 14299  006F2A  0A01               	xorlw	1	; case 67
 14300  006F2C  B4D8               	btfsc	status,2,c
 14301  006F2E  D7CA               	goto	l10983
 14302  006F30                     l10991:
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;inputs.c: 183: };inputs.c: 184: return 0;
 14306  006F30  0E00               	movlw	0
 14307                           
 14308                           ; BSR set to: 0
 14309  006F32  0012               	return		;funcret
 14310  006F34                     __end_of_readInput:
 14311                           	callstack 0
 14312                           
 14313 ;; *************** function _initAnalogue *****************
 14314 ;; Defined at:
 14315 ;;		line 51 in file "../../github/CANMIOfirmware/analogue.c"
 14316 ;; Parameters:    Size  Location     Type
 14317 ;;		None
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;		None
 14320 ;; Return value:  Size  Location     Type
 14321 ;;                  1    wreg      void 
 14322 ;; Registers used:
 14323 ;;		wreg, status,2
 14324 ;; Tracked objects:
 14325 ;;		On entry : 3F/1
 14326 ;;		On exit  : 3F/0
 14327 ;;		Unchanged: 0/0
 14328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14333 ;;Total ram usage:        0 bytes
 14334 ;; Hardware stack levels used: 1
 14335 ;; Hardware stack levels required when called: 8
 14336 ;; This function calls:
 14337 ;;		Nothing
 14338 ;; This function is called by:
 14339 ;;		_initialise
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text48
 14344  009FFA                     __ptext48:
 14345                           	callstack 0
 14346  009FFA                     _initAnalogue:
 14347                           	callstack 21
 14348                           
 14349                           ; BSR set to: 1
 14350                           ;analogue.c: 52: ADCON1bits.VCFG = 0;
 14351                           
 14352                           ; BSR set to: 0
 14353                           ;incstack = 0
 14354  009FFA  0ECF               	movlw	-49
 14355  009FFC  16C1               	andwf	193,f,c	;volatile
 14356                           
 14357                           ; BSR set to: 1
 14358                           ;analogue.c: 53: ADCON1bits.VNCFG = 0;
 14359  009FFE  96C1               	bcf	193,3,c	;volatile
 14360                           
 14361                           ;analogue.c: 54: ADCON1bits.TRIGSEL = 1;
 14362  00A000  50C1               	movf	193,w,c	;volatile
 14363  00A002  0B3F               	andlw	-193
 14364  00A004  0940               	iorlw	64
 14365  00A006  6EC1               	movwf	193,c	;volatile
 14366                           
 14367                           ;analogue.c: 55: ADCON1bits.CHSN = 0;
 14368  00A008  0EF8               	movlw	-8
 14369  00A00A  16C1               	andwf	193,f,c	;volatile
 14370                           
 14371                           ; BSR set to: 1
 14372                           ;analogue.c: 56: ADCON2bits.ADFM = 1;
 14373  00A00C  8EC0               	bsf	192,7,c	;volatile
 14374                           
 14375                           ;analogue.c: 57: ADCON2bits.ACQT = 2;
 14376  00A00E  50C0               	movf	192,w,c	;volatile
 14377  00A010  0BC7               	andlw	-57
 14378  00A012  0910               	iorlw	16
 14379  00A014  6EC0               	movwf	192,c	;volatile
 14380                           
 14381                           ;analogue.c: 58: ADCON2bits.ADCS = 6;
 14382  00A016  50C0               	movf	192,w,c	;volatile
 14383  00A018  0BF8               	andlw	-8
 14384  00A01A  0906               	iorlw	6
 14385  00A01C  6EC0               	movwf	192,c	;volatile
 14386                           
 14387                           ;analogue.c: 60: portInProgress = 0;
 14388  00A01E  0E00               	movlw	0
 14389  00A020  0100               	movlb	0	; () banked
 14390  00A022  6FE8               	movwf	_portInProgress& (0+255),b
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;analogue.c: 61: ADCON0bits.ADON = 1;
 14394  00A024  80C2               	bsf	194,0,c	;volatile
 14395                           
 14396                           ;analogue.c: 63: setupState = 0U;
 14397  00A026  0E00               	movlw	0
 14398  00A028  6E19               	movwf	_setupState^0,c
 14399                           
 14400                           ;analogue.c: 64: haveRequestedAdc = 0;
 14401  00A02A  0E00               	movlw	0
 14402  00A02C  6E18               	movwf	_haveRequestedAdc^0,c
 14403                           
 14404                           ; BSR set to: 0
 14405  00A02E  0012               	return		;funcret
 14406  00A030                     __end_of_initAnalogue:
 14407                           	callstack 0
 14408                           
 14409 ;; *************** function _actionQueueInit *****************
 14410 ;; Defined at:
 14411 ;;		line 58 in file "../../github/CANMIOfirmware/actionQueue.c"
 14412 ;; Parameters:    Size  Location     Type
 14413 ;;		None
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      void 
 14418 ;; Registers used:
 14419 ;;		wreg, status,2, status,0
 14420 ;; Tracked objects:
 14421 ;;		On entry : 3F/F
 14422 ;;		On exit  : 3F/1
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14429 ;;Total ram usage:        0 bytes
 14430 ;; Hardware stack levels used: 1
 14431 ;; Hardware stack levels required when called: 8
 14432 ;; This function calls:
 14433 ;;		Nothing
 14434 ;; This function is called by:
 14435 ;;		_initialise
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text49
 14440  00A100                     __ptext49:
 14441                           	callstack 0
 14442  00A100                     _actionQueueInit:
 14443                           	callstack 21
 14444                           
 14445                           ; BSR set to: 15
 14446                           ;actionQueue.c: 59: normalQueue.size = 64;
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;incstack = 0
 14450  00A100  0E40               	movlw	64
 14451  00A102  0101               	movlb	1	; () banked
 14452  00A104  6FE8               	movwf	_normalQueue& (0+255),b
 14453                           
 14454                           ;actionQueue.c: 60: normalQueue.readIdx = 0;
 14455  00A106  0E00               	movlw	0
 14456  00A108  6FE9               	movwf	(_normalQueue+1)& (0+255),b
 14457                           
 14458                           ;actionQueue.c: 61: normalQueue.writeIdx = 0;
 14459  00A10A  0E00               	movlw	0
 14460  00A10C  6FEA               	movwf	(_normalQueue+2)& (0+255),b
 14461                           
 14462                           ; BSR set to: 1
 14463                           ;actionQueue.c: 62: normalQueue.queue = normalQueueBuf;
 14464  00A10E  0E88               	movlw	low _normalQueueBuf
 14465  00A110  6FEB               	movwf	(_normalQueue+3)& (0+255),b
 14466  00A112  0E03               	movlw	high _normalQueueBuf
 14467  00A114  6FEC               	movwf	(_normalQueue+4)& (0+255),b
 14468                           
 14469                           ; BSR set to: 1
 14470                           ;actionQueue.c: 64: expeditedQueue.size = 8;
 14471  00A116  0E08               	movlw	8
 14472  00A118  6FE3               	movwf	_expeditedQueue& (0+255),b
 14473                           
 14474                           ; BSR set to: 1
 14475                           ;actionQueue.c: 65: expeditedQueue.readIdx = 0;
 14476  00A11A  0E00               	movlw	0
 14477  00A11C  6FE4               	movwf	(_expeditedQueue+1)& (0+255),b
 14478                           
 14479                           ; BSR set to: 1
 14480                           ;actionQueue.c: 66: expeditedQueue.writeIdx = 0;
 14481  00A11E  0E00               	movlw	0
 14482  00A120  6FE5               	movwf	(_expeditedQueue+2)& (0+255),b
 14483                           
 14484                           ;actionQueue.c: 67: expeditedQueue.queue = expeditedQueueBuf;
 14485  00A122  0EC4               	movlw	low _expeditedQueueBuf
 14486  00A124  6FE6               	movwf	(_expeditedQueue+3)& (0+255),b
 14487  00A126  0E02               	movlw	high _expeditedQueueBuf
 14488  00A128  6FE7               	movwf	(_expeditedQueue+4)& (0+255),b
 14489                           
 14490                           ; BSR set to: 1
 14491                           ;actionQueue.c: 69: expedited = 0;
 14492  00A12A  0E00               	movlw	0
 14493  00A12C  6E1B               	movwf	_expedited^0,c
 14494                           
 14495                           ; BSR set to: 1
 14496  00A12E  0012               	return		;funcret
 14497  00A130                     __end_of_actionQueueInit:
 14498                           	callstack 0
 14499                           
 14500 ;; *************** function _initStatusLeds *****************
 14501 ;; Defined at:
 14502 ;;		line 65 in file "../../github/CBUSlib/StatusLeds.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;		None
 14505 ;; Auto vars:     Size  Location     Type
 14506 ;;		None
 14507 ;; Return value:  Size  Location     Type
 14508 ;;                  1    wreg      void 
 14509 ;; Registers used:
 14510 ;;		wreg, status,2
 14511 ;; Tracked objects:
 14512 ;;		On entry : 3F/0
 14513 ;;		On exit  : 3F/1
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14520 ;;Total ram usage:        0 bytes
 14521 ;; Hardware stack levels used: 1
 14522 ;; Hardware stack levels required when called: 8
 14523 ;; This function calls:
 14524 ;;		Nothing
 14525 ;; This function is called by:
 14526 ;;		_main
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530                           	psect	text50
 14531  00A48C                     __ptext50:
 14532                           	callstack 0
 14533  00A48C                     _initStatusLeds:
 14534                           	callstack 22
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;StatusLeds.c: 67: TRISBbits.TRISB6 = 0;
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;incstack = 0
 14541  00A48C  9C93               	bcf	147,6,c	;volatile
 14542                           
 14543                           ;StatusLeds.c: 68: TRISBbits.TRISB7 = 0;
 14544  00A48E  9E93               	bcf	147,7,c	;volatile
 14545                           
 14546                           ;StatusLeds.c: 69: LATBbits.LATB6 = 0;
 14547  00A490  9C8A               	bcf	138,6,c	;volatile
 14548                           
 14549                           ;StatusLeds.c: 70: LATBbits.LATB7 = 0;
 14550  00A492  9E8A               	bcf	138,7,c	;volatile
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;StatusLeds.c: 71: flashState = flNone;
 14554  00A494  0E00               	movlw	0
 14555  00A496  0101               	movlb	1	; () banked
 14556  00A498  6FD3               	movwf	_flashState& (0+255),b
 14557                           
 14558                           ;StatusLeds.c: 72: flickerTime.Val = 0;
 14559  00A49A  0E00               	movlw	0
 14560  00A49C  6FA0               	movwf	_flickerTime& (0+255),b
 14561  00A49E  0E00               	movlw	0
 14562  00A4A0  6FA1               	movwf	(_flickerTime+1)& (0+255),b
 14563  00A4A2  0E00               	movlw	0
 14564  00A4A4  6FA2               	movwf	(_flickerTime+2)& (0+255),b
 14565  00A4A6  0E00               	movlw	0
 14566  00A4A8  6FA3               	movwf	(_flickerTime+3)& (0+255),b
 14567                           
 14568                           ; BSR set to: 1
 14569  00A4AA  0012               	return		;funcret
 14570  00A4AC                     __end_of_initStatusLeds:
 14571                           	callstack 0
 14572                           
 14573 ;; *************** function _initRomOps *****************
 14574 ;; Defined at:
 14575 ;;		line 88 in file "../../github/CBUSlib/romops.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;		None
 14578 ;; Auto vars:     Size  Location     Type
 14579 ;;		None
 14580 ;; Return value:  Size  Location     Type
 14581 ;;                  1    wreg      void 
 14582 ;; Registers used:
 14583 ;;		wreg, status,2
 14584 ;; Tracked objects:
 14585 ;;		On entry : 3F/0
 14586 ;;		On exit  : 3F/1
 14587 ;;		Unchanged: 0/0
 14588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14593 ;;Total ram usage:        0 bytes
 14594 ;; Hardware stack levels used: 1
 14595 ;; Hardware stack levels required when called: 8
 14596 ;; This function calls:
 14597 ;;		Nothing
 14598 ;; This function is called by:
 14599 ;;		_main
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           	psect	text51
 14604  00A684                     __ptext51:
 14605                           	callstack 0
 14606  00A684                     _initRomOps:
 14607                           	callstack 22
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;romops.c: 91: flashFlags.asByte = 0;
 14611                           
 14612                           ; BSR set to: 1
 14613                           ;incstack = 0
 14614  00A684  0E00               	movlw	0
 14615  00A686  6E05               	movwf	_flashFlags^0,c
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;romops.c: 92: flashblock = 0xFFFF;
 14619  00A688  0101               	movlb	1	; () banked
 14620  00A68A  69F6               	setf	_flashblock& (0+255),b
 14621  00A68C  69F7               	setf	(_flashblock+1)& (0+255),b
 14622                           
 14623                           ; BSR set to: 1
 14624  00A68E  0012               	return		;funcret
 14625  00A690                     __end_of_initRomOps:
 14626                           	callstack 0
 14627                           
 14628 ;; *************** function _doTimedResponse *****************
 14629 ;; Defined at:
 14630 ;;		line 83 in file "../../github/CBUSlib/timedResponse.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;		None
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;  n               2  115[BANK0 ] unsigned int 
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  1    wreg      void 
 14637 ;; Registers used:
 14638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14639 ;; Tracked objects:
 14640 ;;		On entry : 3F/0
 14641 ;;		On exit  : 3E/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;Total ram usage:        2 bytes
 14649 ;; Hardware stack levels used: 1
 14650 ;; Hardware stack levels required when called: 18
 14651 ;; This function calls:
 14652 ;;		_APP_doSOD
 14653 ;;		_cbusSendOpcMyNN
 14654 ;;		_getEN
 14655 ;;		_getNN
 14656 ;;		_tableIndexToEvtIdx
 14657 ;;		_validStart
 14658 ;; This function is called by:
 14659 ;;		_main
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           	psect	text52
 14664  008A3A                     __ptext52:
 14665                           	callstack 0
 14666  008A3A                     _doTimedResponse:
 14667                           	callstack 12
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;timedResponse.c: 85: switch (timedResponse) {
 14671                           
 14672                           ; BSR set to: 1
 14673                           ;incstack = 0
 14674  008A3A  D03B               	goto	l21641
 14675  008A3C                     l21607:
 14676                           
 14677                           ;timedResponse.c: 90: timedResponse = 0;
 14678  008A3C  0E00               	movlw	0
 14679  008A3E  6E14               	movwf	_timedResponse^0,c
 14680                           
 14681                           ;timedResponse.c: 91: timedResponseStep = 0;
 14682  008A40  0E00               	movlw	0
 14683  008A42  6E13               	movwf	_timedResponseStep^0,c
 14684  008A44  0012               	return	
 14685  008A46                     l21613:
 14686                           
 14687                           ; BSR set to: 0
 14688  008A46  5013               	movf	_timedResponseStep^0,w,c
 14689  008A48  ECDC  F01E         	call	_APP_doSOD
 14690                           
 14691                           ; Switch size 1, requested type "simple"
 14692                           ; Number of cases is 2, Range of values is 0 to 1
 14693                           ; switch strategies available:
 14694                           ; Name         Instructions Cycles
 14695                           ; simple_byte            7     4 (average)
 14696                           ;	Chosen strategy is simple_byte
 14697  008A4C  0A00               	xorlw	0	; case 0
 14698  008A4E  B4D8               	btfsc	status,2,c
 14699  008A50  D7F5               	goto	l21607
 14700  008A52  0A01               	xorlw	1	; case 1
 14701  008A54  B4D8               	btfsc	status,2,c
 14702  008A56  0012               	return	
 14703  008A58  D033               	goto	l21643
 14704  008A5A                     l21615:
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;timedResponse.c: 102: if (timedResponseStep >= 255U) {
 14708  008A5A  2813               	incf	_timedResponseStep^0,w,c
 14709  008A5C  B4D8               	btfsc	status,2,c
 14710  008A5E  D7EE               	goto	l21607
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;timedResponse.c: 106: };timedResponse.c: 108: if (validStart(timedResponseStep)) {
 14714  008A60  5013               	movf	_timedResponseStep^0,w,c
 14715  008A62  ECF8  F050         	call	_validStart
 14716  008A66  0900               	iorlw	0
 14717  008A68  B4D8               	btfsc	status,2,c
 14718  008A6A  D02A               	goto	l21643
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;timedResponse.c: 109: WORD n = getNN(timedResponseStep);
 14722  008A6C  5013               	movf	_timedResponseStep^0,w,c
 14723  008A6E  ECA8  F043         	call	_getNN
 14724  008A72  C07D  F0D3         	movff	?_getNN,doTimedResponse@n
 14725  008A76  C07E  F0D4         	movff	?_getNN+1,doTimedResponse@n+1
 14726                           
 14727                           ; BSR set to: 0
 14728                           ;timedResponse.c: 110: cbusMsg[d3] = n >> 8;
 14729  008A7A  C0D4  F025         	movff	doTimedResponse@n+1,_cbusMsg+9
 14730                           
 14731                           ; BSR set to: 0
 14732                           ;timedResponse.c: 111: cbusMsg[d4] = n & 0xFF;
 14733  008A7E  C0D3  F026         	movff	doTimedResponse@n,_cbusMsg+10
 14734                           
 14735                           ;timedResponse.c: 113: n = getEN(timedResponseStep);
 14736  008A82  5013               	movf	_timedResponseStep^0,w,c
 14737  008A84  EC19  F048         	call	_getEN
 14738  008A88  C07D  F0D3         	movff	?_getEN,doTimedResponse@n
 14739  008A8C  C07E  F0D4         	movff	?_getEN+1,doTimedResponse@n+1
 14740                           
 14741                           ; BSR set to: 0
 14742                           ;timedResponse.c: 114: cbusMsg[d5] = n >> 8;
 14743  008A90  C0D4  F027         	movff	doTimedResponse@n+1,_cbusMsg+11
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;timedResponse.c: 115: cbusMsg[d6] = n & 0xFF;
 14747  008A94  C0D3  F028         	movff	doTimedResponse@n,_cbusMsg+12
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;timedResponse.c: 117: cbusMsg[d7] = tableIndexToEvtIdx(timedResponseStep);
 14751  008A98  5013               	movf	_timedResponseStep^0,w,c
 14752  008A9A  EC6C  F053         	call	_tableIndexToEvtIdx
 14753  008A9E  6E29               	movwf	(_cbusMsg+13)^0,c
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;timedResponse.c: 118: if (!cbusSendOpcMyNN( 0, 0xF2, cbusMsg )) {
 14757  008AA0  0EF2               	movlw	242
 14758  008AA2  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 14759  008AA4  0E1C               	movlw	low _cbusMsg
 14760  008AA6  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 14761  008AA8  0E00               	movlw	0
 14762  008AAA  EC65  F052         	call	_cbusSendOpcMyNN
 14763  008AAE  0900               	iorlw	0
 14764  008AB0  D7D1               	goto	L4
 14765  008AB2                     l21641:
 14766                           
 14767                           ; BSR set to: 0
 14768  008AB2  5014               	movf	_timedResponse^0,w,c
 14769                           
 14770                           ; Switch size 1, requested type "simple"
 14771                           ; Number of cases is 2, Range of values is 1 to 2
 14772                           ; switch strategies available:
 14773                           ; Name         Instructions Cycles
 14774                           ; simple_byte            7     4 (average)
 14775                           ;	Chosen strategy is simple_byte
 14776  008AB4  0A01               	xorlw	1	; case 1
 14777  008AB6  B4D8               	btfsc	status,2,c
 14778  008AB8  D7C6               	goto	l21613
 14779  008ABA  0A03               	xorlw	3	; case 2
 14780  008ABC  B4D8               	btfsc	status,2,c
 14781  008ABE  D7CD               	goto	l21615
 14782  008AC0                     l21643:
 14783                           
 14784                           ;timedResponse.c: 125: timedResponseStep++;
 14785  008AC0  2A13               	incf	_timedResponseStep^0,f,c
 14786  008AC2  0012               	return		;funcret
 14787  008AC4                     __end_of_doTimedResponse:
 14788                           	callstack 0
 14789                           
 14790 ;; *************** function _tableIndexToEvtIdx *****************
 14791 ;; Defined at:
 14792 ;;		line 847 in file "../../github/CBUSlib/events.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  tableIndex      1    wreg     unsigned char 
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;  tableIndex      1   17[BANK0 ] unsigned char 
 14797 ;; Return value:  Size  Location     Type
 14798 ;;                  1    wreg      unsigned char 
 14799 ;; Registers used:
 14800 ;;		wreg, status,2, status,0
 14801 ;; Tracked objects:
 14802 ;;		On entry : 3F/0
 14803 ;;		On exit  : 3F/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14809 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14810 ;;Total ram usage:        1 bytes
 14811 ;; Hardware stack levels used: 1
 14812 ;; Hardware stack levels required when called: 8
 14813 ;; This function calls:
 14814 ;;		Nothing
 14815 ;; This function is called by:
 14816 ;;		_doTimedResponse
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text53
 14821  00A6D8                     __ptext53:
 14822                           	callstack 0
 14823  00A6D8                     _tableIndexToEvtIdx:
 14824                           	callstack 21
 14825                           
 14826                           ;incstack = 0
 14827                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 14828  00A6D8  6F71               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 14829                           
 14830                           ;events.c: 848: return tableIndex+1U;
 14831  00A6DA  0100               	movlb	0	; () banked
 14832  00A6DC  2971               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 14833                           
 14834                           ; BSR set to: 0
 14835  00A6DE  0012               	return		;funcret
 14836  00A6E0                     __end_of_tableIndexToEvtIdx:
 14837                           	callstack 0
 14838                           
 14839 ;; *************** function _APP_doSOD *****************
 14840 ;; Defined at:
 14841 ;;		line 492 in file "../../github/CANMIOfirmware/mioEvents.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;  step            1    wreg     unsigned char 
 14844 ;; Auto vars:     Size  Location     Type
 14845 ;;  step            1  105[BANK0 ] unsigned char 
 14846 ;;  io              1  114[BANK0 ] unsigned char 
 14847 ;;  happeningInd    1  113[BANK0 ] unsigned char 
 14848 ;;  value           1  112[BANK0 ] unsigned char 
 14849 ;;  flags           1  111[BANK0 ] unsigned char 
 14850 ;;  event_invert    1  110[BANK0 ] unsigned char 
 14851 ;;  disable_off     1  109[BANK0 ] unsigned char 
 14852 ;;  disable_SOD_    1  108[BANK0 ] unsigned char 
 14853 ;;  send_off_ok     1  107[BANK0 ] unsigned char 
 14854 ;;  send_on_ok      1  106[BANK0 ] unsigned char 
 14855 ;; Return value:  Size  Location     Type
 14856 ;;                  1    wreg      unsigned char 
 14857 ;; Registers used:
 14858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14859 ;; Tracked objects:
 14860 ;;		On entry : 3F/0
 14861 ;;		On exit  : 3E/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14865 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;Total ram usage:       22 bytes
 14869 ;; Hardware stack levels used: 1
 14870 ;; Hardware stack levels required when called: 17
 14871 ;; This function calls:
 14872 ;;		_ee_read
 14873 ;;		_sendInvertedProducedEvent
 14874 ;; This function is called by:
 14875 ;;		_doTimedResponse
 14876 ;; This function uses a non-reentrant model
 14877 ;;
 14878                           
 14879                           	psect	text54
 14880  003DB8                     __ptext54:
 14881                           	callstack 0
 14882  003DB8                     _APP_doSOD:
 14883                           	callstack 12
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;incstack = 0
 14887                           ;APP_doSOD@step stored from wreg
 14888  003DB8  6FC9               	movwf	APP_doSOD@step& (0+255),b
 14889                           
 14890                           ;mioEvents.c: 493: unsigned char io;;mioEvents.c: 494: unsigned char happeningIndex;;mio
      +                          Events.c: 495: BOOL disable_off;;mioEvents.c: 496: BOOL send_on_ok;;mioEvents.c: 497: BO
      +                          OL send_off_ok;;mioEvents.c: 498: BOOL event_inverted;;mioEvents.c: 499: BOOL disable_SO
      +                          D_response;;mioEvents.c: 500: unsigned char flags;;mioEvents.c: 501: unsigned char value
      +                          ;;mioEvents.c: 505: io = step/4U;
 14891  003DBA  0100               	movlb	0	; () banked
 14892  003DBC  41C9               	rrncf	APP_doSOD@step& (0+255),w,b
 14893  003DBE  42E8               	rrncf	wreg,f,c
 14894  003DC0  0B3F               	andlw	63
 14895  003DC2  6FD2               	movwf	APP_doSOD@io& (0+255),b
 14896                           
 14897                           ;mioEvents.c: 506: if (io >= 16U) {
 14898  003DC4  0E0F               	movlw	15
 14899  003DC6  65D2               	cpfsgt	APP_doSOD@io& (0+255),b
 14900  003DC8  D002               	goto	l20505
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;mioEvents.c: 507: return 0;
 14904  003DCA  0E00               	movlw	0
 14905  003DCC  0012               	return	
 14906  003DCE                     l20505:
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;mioEvents.c: 508: };mioEvents.c: 509: happeningIndex = step%4U;
 14910  003DCE  51C9               	movf	APP_doSOD@step& (0+255),w,b
 14911  003DD0  0B03               	andlw	3
 14912  003DD2  6FD1               	movwf	APP_doSOD@happeningIndex& (0+255),b
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;mioEvents.c: 510: flags = NV->io[io].flags;
 14916  003DD4  51D2               	movf	APP_doSOD@io& (0+255),w,b
 14917  003DD6  0D07               	mullw	7
 14918  003DD8  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 14919  003DDC  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 14920  003DE0  50F3               	movf	243,w,c
 14921  003DE2  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 14922  003DE4  50F4               	movf	244,w,c
 14923  003DE6  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 14924  003DE8  0E11               	movlw	17
 14925  003DEA  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 14926  003DEC  6ED9               	movwf	fsr2l,c
 14927  003DEE  0E00               	movlw	0
 14928  003DF0  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 14929  003DF2  6EDA               	movwf	fsr2h,c
 14930  003DF4  50DF               	movf	indf2,w,c
 14931  003DF6  6FCF               	movwf	APP_doSOD@flags& (0+255),b
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;mioEvents.c: 511: disable_SOD_response = flags & 0x20U;
 14935  003DF8  51CF               	movf	APP_doSOD@flags& (0+255),w,b
 14936  003DFA  0B20               	andlw	32
 14937  003DFC  6FCC               	movwf	APP_doSOD@disable_SOD_response& (0+255),b
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;mioEvents.c: 513: event_inverted = flags & 0x40U;
 14941  003DFE  51CF               	movf	APP_doSOD@flags& (0+255),w,b
 14942  003E00  0B40               	andlw	64
 14943  003E02  6FCE               	movwf	APP_doSOD@event_inverted& (0+255),b
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;mioEvents.c: 514: disable_off = flags & 0x08U;
 14947  003E04  51CF               	movf	APP_doSOD@flags& (0+255),w,b
 14948  003E06  0B08               	andlw	8
 14949  003E08  6FCD               	movwf	APP_doSOD@disable_off& (0+255),b
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;mioEvents.c: 515: send_on_ok = (unsigned char)!( disable_off && event_inverted );
 14953  003E0A  0E01               	movlw	1
 14954  003E0C  6FC7               	movwf	_APP_doSOD$1818& (0+255),b
 14955                           
 14956                           ; BSR set to: 0
 14957  003E0E  51CD               	movf	APP_doSOD@disable_off& (0+255),w,b
 14958  003E10  B4D8               	btfsc	status,2,c
 14959  003E12  D005               	goto	l20523
 14960                           
 14961                           ; BSR set to: 0
 14962  003E14  51CE               	movf	APP_doSOD@event_inverted& (0+255),w,b
 14963  003E16  B4D8               	btfsc	status,2,c
 14964  003E18  D002               	goto	l20523
 14965                           
 14966                           ; BSR set to: 0
 14967  003E1A  0E00               	movlw	0
 14968  003E1C  6FC7               	movwf	_APP_doSOD$1818& (0+255),b
 14969  003E1E                     l20523:
 14970                           
 14971                           ; BSR set to: 0
 14972  003E1E  C0C7  F0CA         	movff	_APP_doSOD$1818,APP_doSOD@send_on_ok
 14973                           
 14974                           ;mioEvents.c: 516: send_off_ok = (unsigned char)!( disable_off && !event_inverted);
 14975  003E22  0E01               	movlw	1
 14976  003E24  6FC8               	movwf	_APP_doSOD$1819& (0+255),b
 14977  003E26  51CD               	movf	APP_doSOD@disable_off& (0+255),w,b
 14978  003E28  B4D8               	btfsc	status,2,c
 14979  003E2A  D005               	goto	l20529
 14980                           
 14981                           ; BSR set to: 0
 14982  003E2C  51CE               	movf	APP_doSOD@event_inverted& (0+255),w,b
 14983  003E2E  A4D8               	btfss	status,2,c
 14984  003E30  D002               	goto	l20529
 14985                           
 14986                           ; BSR set to: 0
 14987  003E32  0E00               	movlw	0
 14988  003E34  6FC8               	movwf	_APP_doSOD$1819& (0+255),b
 14989  003E36                     l20529:
 14990                           
 14991                           ; BSR set to: 0
 14992  003E36  C0C8  F0CB         	movff	_APP_doSOD$1819,APP_doSOD@send_off_ok
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;mioEvents.c: 517: value = 255U;
 14996  003E3A  69D0               	setf	APP_doSOD@value& (0+255),b
 14997                           
 14998                           ;mioEvents.c: 519: switch(NV->io[io].type) {
 14999  003E3C  D157               	goto	l20609
 15000  003E3E                     l20533:
 15001                           
 15002                           ; BSR set to: 0
 15003                           ;mioEvents.c: 521: if (disable_SOD_response) {
 15004  003E3E  51CC               	movf	APP_doSOD@disable_SOD_response& (0+255),w,b
 15005  003E40  B4D8               	btfsc	status,2,c
 15006  003E42  D018               	goto	l20547
 15007  003E44                     u25440:
 15008                           
 15009                           ;mioEvents.c: 522: return 2;
 15010  003E44  0E02               	movlw	2
 15011  003E46  0012               	return	
 15012  003E48                     l20539:
 15013                           
 15014                           ; BSR set to: 0
 15015                           ;mioEvents.c: 527: value = outputState[io];
 15016  003E48  0E50               	movlw	low _outputState
 15017  003E4A  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15018  003E4C  6ED9               	movwf	fsr2l,c
 15019  003E4E  6ADA               	clrf	fsr2h,c
 15020  003E50  0E01               	movlw	high _outputState
 15021  003E52  22DA               	addwfc	fsr2h,f,c
 15022  003E54  50DF               	movf	indf2,w,c
 15023  003E56  D134               	goto	u25680
 15024  003E58                     l20541:
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;mioEvents.c: 531: if (disable_off) {
 15028  003E58  51CD               	movf	APP_doSOD@disable_off& (0+255),w,b
 15029  003E5A  B4D8               	btfsc	status,2,c
 15030  003E5C  D16D               	goto	l20611
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;mioEvents.c: 532: value = (unsigned char)(outputState[io]==0);
 15034  003E5E  0E50               	movlw	low _outputState
 15035  003E60  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15036  003E62  6ED9               	movwf	fsr2l,c
 15037  003E64  6ADA               	clrf	fsr2h,c
 15038  003E66  0E01               	movlw	high _outputState
 15039  003E68  22DA               	addwfc	fsr2h,f,c
 15040  003E6A  50DF               	movf	indf2,w,c
 15041  003E6C                     L9:
 15042  003E6C  B4D8               	btfsc	status,2,c
 15043  003E6E  D134               	goto	u25691
 15044  003E70  0E00               	movlw	0
 15045  003E72  D126               	goto	u25680
 15046  003E74                     l20547:
 15047                           
 15048                           ; BSR set to: 0
 15049  003E74  51D1               	movf	APP_doSOD@happeningIndex& (0+255),w,b
 15050                           
 15051                           ; Switch size 1, requested type "simple"
 15052                           ; Number of cases is 2, Range of values is 0 to 1
 15053                           ; switch strategies available:
 15054                           ; Name         Instructions Cycles
 15055                           ; simple_byte            7     4 (average)
 15056                           ;	Chosen strategy is simple_byte
 15057  003E76  0A00               	xorlw	0	; case 0
 15058  003E78  B4D8               	btfsc	status,2,c
 15059  003E7A  D7E6               	goto	l20539
 15060  003E7C  0A01               	xorlw	1	; case 1
 15061  003E7E  B4D8               	btfsc	status,2,c
 15062  003E80  D7EB               	goto	l20541
 15063  003E82  D15A               	goto	l20611
 15064  003E84                     l20549:
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;mioEvents.c: 540: value = (unsigned char)(ee_read(((WORD)(((BYTE*)(0x3FF-40)))-17)+io)!
      +                          =2U);
 15068  003E84  0EC6               	movlw	198
 15069  003E86  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15070  003E88  6F71               	movwf	ee_read@addr& (0+255),b
 15071  003E8A  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 15072  003E8C  0E03               	movlw	3
 15073  003E8E  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 15074  003E90  EC91  F052         	call	_ee_read	;wreg free
 15075  003E94  0A02               	xorlw	2
 15076  003E96  B4D8               	btfsc	status,2,c
 15077  003E98  D002               	goto	u25480
 15078  003E9A  0E01               	movlw	1
 15079  003E9C  D001               	goto	u25490
 15080  003E9E                     u25480:
 15081  003E9E  0E00               	movlw	0
 15082  003EA0                     u25490:
 15083  003EA0  0100               	movlb	0	; () banked
 15084  003EA2  D10E               	goto	u25680
 15085  003EA4                     l20553:
 15086                           
 15087                           ; BSR set to: 0
 15088  003EA4  51D1               	movf	APP_doSOD@happeningIndex& (0+255),w,b
 15089                           
 15090                           ; Switch size 1, requested type "simple"
 15091                           ; Number of cases is 1, Range of values is 0 to 0
 15092                           ; switch strategies available:
 15093                           ; Name         Instructions Cycles
 15094                           ; simple_byte            4     3 (average)
 15095                           ;	Chosen strategy is simple_byte
 15096  003EA6  0A00               	xorlw	0	; case 0
 15097  003EA8  B4D8               	btfsc	status,2,c
 15098  003EAA  D7EC               	goto	l20549
 15099  003EAC  D145               	goto	l20611
 15100  003EAE                     l20555:
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;mioEvents.c: 548: value = (unsigned char)(currentPos[io] == NV->io[io].nv_io.nv_servo.s
      +                          ervo_start_pos);
 15104  003EAE  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15105  003EB0  0D07               	mullw	7
 15106  003EB2  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15107  003EB6  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15108  003EBA  50F3               	movf	243,w,c
 15109  003EBC  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15110  003EBE  50F4               	movf	244,w,c
 15111  003EC0  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15112  003EC2  0E12               	movlw	18
 15113  003EC4  D00D               	goto	L10
 15114  003EC6                     u25510:
 15115  003EC6  6FD0               	movwf	APP_doSOD@value& (0+255),b
 15116                           
 15117                           ;mioEvents.c: 549: break;
 15118  003EC8  D063               	goto	l20565
 15119  003ECA                     l20557:
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;mioEvents.c: 551: value = (unsigned char)(currentPos[io] == NV->io[io].nv_io.nv_servo.s
      +                          ervo_end_pos);
 15123  003ECA  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15124  003ECC  0D07               	mullw	7
 15125  003ECE  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15126  003ED2  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15127  003ED6  50F3               	movf	243,w,c
 15128  003ED8  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15129  003EDA  50F4               	movf	244,w,c
 15130  003EDC  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15131  003EDE  0E13               	movlw	19
 15132  003EE0                     L10:
 15133  003EE0  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 15134  003EE2  6ED9               	movwf	fsr2l,c
 15135  003EE4  0E00               	movlw	0
 15136  003EE6  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 15137  003EE8  6EDA               	movwf	fsr2h,c
 15138  003EEA  0E80               	movlw	low _currentPos
 15139  003EEC  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15140  003EEE  6EE1               	movwf	fsr1l,c
 15141  003EF0  6AE2               	clrf	fsr1h,c
 15142  003EF2  0E01               	movlw	high _currentPos
 15143  003EF4  22E2               	addwfc	fsr1h,f,c
 15144  003EF6  50DE               	movf	postinc2,w,c
 15145  003EF8  18E6               	xorwf	postinc1,w,c
 15146  003EFA  A4D8               	btfss	status,2,c
 15147  003EFC  D0C3               	goto	u25640
 15148  003EFE  D093               	goto	u25611
 15149  003F00                     l20559:
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;mioEvents.c: 555: value = (unsigned char)((currentPos[io] >= (NV->io[io].nv_io.nv_servo
      +                          .servo_end_pos)/2U +;mioEvents.c: 556: (NV->io[io].nv_io.nv_servo.servo_start_pos)/2U));
 15153  003F00  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15154  003F02  0D07               	mullw	7
 15155  003F04  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15156  003F08  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15157  003F0C  50F3               	movf	243,w,c
 15158  003F0E  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15159  003F10  50F4               	movf	244,w,c
 15160  003F12  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15161  003F14  0E13               	movlw	19
 15162  003F16  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 15163  003F18  6ED9               	movwf	fsr2l,c
 15164  003F1A  0E00               	movlw	0
 15165  003F1C  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 15166  003F1E  6EDA               	movwf	fsr2h,c
 15167  003F20  50DF               	movf	indf2,w,c
 15168  003F22  6FBF               	movwf	(??_APP_doSOD+2)& (0+255),b
 15169  003F24  90D8               	bcf	status,0,c
 15170  003F26  31BF               	rrcf	(??_APP_doSOD+2)& (0+255),w,b
 15171  003F28  6FC0               	movwf	(??_APP_doSOD+3)& (0+255),b
 15172  003F2A  6BC1               	clrf	(??_APP_doSOD+4)& (0+255),b
 15173  003F2C  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15174  003F2E  0D07               	mullw	7
 15175  003F30  C0EC  F0C2         	movff	_NV,??_APP_doSOD+5
 15176  003F34  C0ED  F0C3         	movff	_NV+1,??_APP_doSOD+6
 15177  003F38  50F3               	movf	243,w,c
 15178  003F3A  27C2               	addwf	(??_APP_doSOD+5)& (0+255),f,b
 15179  003F3C  50F4               	movf	244,w,c
 15180  003F3E  23C3               	addwfc	(??_APP_doSOD+6)& (0+255),f,b
 15181  003F40  0E12               	movlw	18
 15182  003F42  25C2               	addwf	(??_APP_doSOD+5)& (0+255),w,b
 15183  003F44  6ED9               	movwf	fsr2l,c
 15184  003F46  0E00               	movlw	0
 15185  003F48  21C3               	addwfc	(??_APP_doSOD+6)& (0+255),w,b
 15186  003F4A  6EDA               	movwf	fsr2h,c
 15187  003F4C  50DF               	movf	indf2,w,c
 15188  003F4E  6FC4               	movwf	(??_APP_doSOD+7)& (0+255),b
 15189  003F50  90D8               	bcf	status,0,c
 15190  003F52  33C4               	rrcf	(??_APP_doSOD+7)& (0+255),f,b
 15191  003F54  51C4               	movf	(??_APP_doSOD+7)& (0+255),w,b
 15192  003F56  27C0               	addwf	(??_APP_doSOD+3)& (0+255),f,b
 15193  003F58  0E00               	movlw	0
 15194  003F5A  23C1               	addwfc	(??_APP_doSOD+4)& (0+255),f,b
 15195  003F5C  0E80               	movlw	low _currentPos
 15196  003F5E  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15197  003F60  6ED9               	movwf	fsr2l,c
 15198  003F62  6ADA               	clrf	fsr2h,c
 15199  003F64  0E01               	movlw	high _currentPos
 15200  003F66  22DA               	addwfc	fsr2h,f,c
 15201  003F68  50DF               	movf	indf2,w,c
 15202  003F6A  6FC5               	movwf	(??_APP_doSOD+8)& (0+255),b
 15203  003F6C  6BC6               	clrf	(??_APP_doSOD+9)& (0+255),b
 15204  003F6E  51C0               	movf	(??_APP_doSOD+3)& (0+255),w,b
 15205  003F70  5DC5               	subwf	(??_APP_doSOD+8)& (0+255),w,b
 15206  003F72  51C1               	movf	(??_APP_doSOD+4)& (0+255),w,b
 15207  003F74  59C6               	subwfb	(??_APP_doSOD+9)& (0+255),w,b
 15208  003F76  A0D8               	btfss	status,0,c
 15209  003F78  D085               	goto	u25640
 15210  003F7A  D055               	goto	u25611
 15211  003F7C                     l20563:
 15212                           
 15213                           ; BSR set to: 0
 15214  003F7C  51D1               	movf	APP_doSOD@happeningIndex& (0+255),w,b
 15215                           
 15216                           ; Switch size 1, requested type "simple"
 15217                           ; Number of cases is 3, Range of values is 0 to 2
 15218                           ; switch strategies available:
 15219                           ; Name         Instructions Cycles
 15220                           ; simple_byte           10     6 (average)
 15221                           ;	Chosen strategy is simple_byte
 15222  003F7E  0A00               	xorlw	0	; case 0
 15223  003F80  B4D8               	btfsc	status,2,c
 15224  003F82  D795               	goto	l20555
 15225  003F84  0A01               	xorlw	1	; case 1
 15226  003F86  B4D8               	btfsc	status,2,c
 15227  003F88  D7BB               	goto	l20559
 15228  003F8A  0A03               	xorlw	3	; case 2
 15229  003F8C  B4D8               	btfsc	status,2,c
 15230  003F8E  D79D               	goto	l20557
 15231  003F90                     l20565:
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;mioEvents.c: 559: send_on_ok = 1;
 15235  003F90  0E01               	movlw	1
 15236  003F92  6FCA               	movwf	APP_doSOD@send_on_ok& (0+255),b
 15237                           
 15238                           ;mioEvents.c: 560: send_off_ok = 1;
 15239  003F94  0E01               	movlw	1
 15240  003F96  6FCB               	movwf	APP_doSOD@send_off_ok& (0+255),b
 15241                           
 15242                           ;mioEvents.c: 561: break;
 15243  003F98  D0CF               	goto	l20611
 15244  003F9A                     l20567:
 15245                           
 15246                           ; BSR set to: 0
 15247                           ;mioEvents.c: 566: value = ee_read(((WORD)(((BYTE*)(0x3FF-40)))-17)+io);
 15248  003F9A  0EC6               	movlw	198
 15249  003F9C  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15250  003F9E  6F71               	movwf	ee_read@addr& (0+255),b
 15251  003FA0  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 15252  003FA2  0E03               	movlw	3
 15253  003FA4  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 15254  003FA6  EC91  F052         	call	_ee_read	;wreg free
 15255  003FAA  0100               	movlb	0	; () banked
 15256  003FAC  D78C               	goto	u25510
 15257  003FAE                     l20571:
 15258                           
 15259                           ; BSR set to: 0
 15260  003FAE  51D1               	movf	APP_doSOD@happeningIndex& (0+255),w,b
 15261                           
 15262                           ; Switch size 1, requested type "simple"
 15263                           ; Number of cases is 1, Range of values is 0 to 0
 15264                           ; switch strategies available:
 15265                           ; Name         Instructions Cycles
 15266                           ; simple_byte            4     3 (average)
 15267                           ;	Chosen strategy is simple_byte
 15268  003FB0  0A00               	xorlw	0	; case 0
 15269  003FB2  B4D8               	btfsc	status,2,c
 15270  003FB4  D7F2               	goto	l20567
 15271  003FB6  D7EC               	goto	l20565
 15272  003FB8                     l20575:
 15273                           
 15274                           ; BSR set to: 0
 15275                           ;mioEvents.c: 577: value = (unsigned char)(currentPos[io] == NV->io[io].nv_io.nv_multi.m
      +                          ulti_pos1);
 15276  003FB8  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15277  003FBA  0D07               	mullw	7
 15278  003FBC  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15279  003FC0  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15280  003FC4  50F3               	movf	243,w,c
 15281  003FC6  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15282  003FC8  50F4               	movf	244,w,c
 15283  003FCA  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15284  003FCC  0E13               	movlw	19
 15285  003FCE  D04B               	goto	L8
 15286  003FD0                     l20577:
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;mioEvents.c: 580: value = (unsigned char)(currentPos[io] == NV->io[io].nv_io.nv_multi.m
      +                          ulti_pos2);
 15290  003FD0  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15291  003FD2  0D07               	mullw	7
 15292  003FD4  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15293  003FD8  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15294  003FDC  50F3               	movf	243,w,c
 15295  003FDE  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15296  003FE0  50F4               	movf	244,w,c
 15297  003FE2  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15298  003FE4  0E14               	movlw	20
 15299  003FE6  D03F               	goto	L8
 15300  003FE8                     l20579:
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;mioEvents.c: 584: if (NV->io[io].nv_io.nv_multi.multi_num_pos > 2U) {
 15304  003FE8  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15305  003FEA  0D07               	mullw	7
 15306  003FEC  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15307  003FF0  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15308  003FF4  50F3               	movf	243,w,c
 15309  003FF6  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15310  003FF8  50F4               	movf	244,w,c
 15311  003FFA  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15312  003FFC  0E12               	movlw	18
 15313  003FFE  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 15314  004000  6ED9               	movwf	fsr2l,c
 15315  004002  0E00               	movlw	0
 15316  004004  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 15317  004006  6EDA               	movwf	fsr2h,c
 15318  004008  0E02               	movlw	2
 15319  00400A  64DF               	cpfsgt	indf2,c
 15320  00400C  D7C1               	goto	l20565
 15321                           
 15322                           ; BSR set to: 0
 15323                           ;mioEvents.c: 585: value = (unsigned char)(currentPos[io] == NV->io[io].nv_io.nv_multi.m
      +                          ulti_pos3);
 15324  00400E  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15325  004010  0D07               	mullw	7
 15326  004012  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15327  004016  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15328  00401A  50F3               	movf	243,w,c
 15329  00401C  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15330  00401E  50F4               	movf	244,w,c
 15331  004020  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15332  004022  0E15               	movlw	21
 15333  004024  D020               	goto	L8
 15334  004026                     u25611:
 15335  004026  0E01               	movlw	1
 15336  004028  D74E               	goto	u25510
 15337  00402A                     l20583:
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;mioEvents.c: 589: if (NV->io[io].nv_io.nv_multi.multi_num_pos > 3U) {
 15341  00402A  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15342  00402C  0D07               	mullw	7
 15343  00402E  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15344  004032  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15345  004036  50F3               	movf	243,w,c
 15346  004038  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15347  00403A  50F4               	movf	244,w,c
 15348  00403C  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15349  00403E  0E12               	movlw	18
 15350  004040  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 15351  004042  6ED9               	movwf	fsr2l,c
 15352  004044  0E00               	movlw	0
 15353  004046  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 15354  004048  6EDA               	movwf	fsr2h,c
 15355  00404A  0E03               	movlw	3
 15356  00404C  64DF               	cpfsgt	indf2,c
 15357  00404E  D7A0               	goto	l20565
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;mioEvents.c: 590: value = (unsigned char)(currentPos[io] == NV->io[io].nv_io.nv_multi.m
      +                          ulti_pos4);
 15361  004050  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15362  004052  0D07               	mullw	7
 15363  004054  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15364  004058  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15365  00405C  50F3               	movf	243,w,c
 15366  00405E  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15367  004060  50F4               	movf	244,w,c
 15368  004062  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15369  004064  0E16               	movlw	22
 15370  004066                     L8:
 15371  004066  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 15372  004068  6ED9               	movwf	fsr2l,c
 15373  00406A  0E00               	movlw	0
 15374  00406C  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 15375  00406E  6EDA               	movwf	fsr2h,c
 15376  004070  0E80               	movlw	low _currentPos
 15377  004072  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15378  004074  6EE1               	movwf	fsr1l,c
 15379  004076  6AE2               	clrf	fsr1h,c
 15380  004078  0E01               	movlw	high _currentPos
 15381  00407A  22E2               	addwfc	fsr1h,f,c
 15382  00407C  50DE               	movf	postinc2,w,c
 15383  00407E  18E6               	xorwf	postinc1,w,c
 15384  004080  B4D8               	btfsc	status,2,c
 15385  004082  D7D1               	goto	u25611
 15386  004084                     u25640:
 15387  004084  0E00               	movlw	0
 15388  004086  D71F               	goto	u25510
 15389  004088                     l20589:
 15390                           
 15391                           ; BSR set to: 0
 15392  004088  51D1               	movf	APP_doSOD@happeningIndex& (0+255),w,b
 15393                           
 15394                           ; Switch size 1, requested type "simple"
 15395                           ; Number of cases is 4, Range of values is 0 to 3
 15396                           ; switch strategies available:
 15397                           ; Name         Instructions Cycles
 15398                           ; simple_byte           13     7 (average)
 15399                           ;	Chosen strategy is simple_byte
 15400  00408A  0A00               	xorlw	0	; case 0
 15401  00408C  B4D8               	btfsc	status,2,c
 15402  00408E  D794               	goto	l20575
 15403  004090  0A01               	xorlw	1	; case 1
 15404  004092  B4D8               	btfsc	status,2,c
 15405  004094  D79D               	goto	l20577
 15406  004096  0A03               	xorlw	3	; case 2
 15407  004098  B4D8               	btfsc	status,2,c
 15408  00409A  D7A6               	goto	l20579
 15409  00409C  0A01               	xorlw	1	; case 3
 15410  00409E  B4D8               	btfsc	status,2,c
 15411  0040A0  D7C4               	goto	l20583
 15412  0040A2  D776               	goto	l20565
 15413  0040A4                     l20593:
 15414                           
 15415                           ; BSR set to: 0
 15416                           ;mioEvents.c: 601: case 6U:;mioEvents.c: 602: if (disable_SOD_response) {
 15417  0040A4  51CC               	movf	APP_doSOD@disable_SOD_response& (0+255),w,b
 15418  0040A6  A4D8               	btfss	status,2,c
 15419  0040A8  D6CD               	goto	u25440
 15420  0040AA  D018               	goto	l20605
 15421  0040AC                     l20599:
 15422                           
 15423                           ; BSR set to: 0
 15424                           ;mioEvents.c: 607: value = (unsigned char)(analogueState[io].eventState == 1U);
 15425  0040AC  0E90               	movlw	low _analogueState
 15426  0040AE  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15427  0040B0  6ED9               	movwf	fsr2l,c
 15428  0040B2  6ADA               	clrf	fsr2h,c
 15429  0040B4  0E01               	movlw	high _analogueState
 15430  0040B6  22DA               	addwfc	fsr2h,f,c
 15431  0040B8  50DF               	movf	223,w,c
 15432  0040BA  0B03               	andlw	3
 15433  0040BC  06E8               	decf	wreg,f,c
 15434  0040BE  D6D6               	goto	L9
 15435  0040C0                     u25680:
 15436  0040C0  6FD0               	movwf	APP_doSOD@value& (0+255),b
 15437                           
 15438                           ;mioEvents.c: 608: break;
 15439  0040C2  D03A               	goto	l20611
 15440  0040C4                     l20601:
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;mioEvents.c: 610: value = (unsigned char)(analogueState[io].eventState == 2U);
 15444  0040C4  0E90               	movlw	low _analogueState
 15445  0040C6  25D2               	addwf	APP_doSOD@io& (0+255),w,b
 15446  0040C8  6ED9               	movwf	fsr2l,c
 15447  0040CA  6ADA               	clrf	fsr2h,c
 15448  0040CC  0E01               	movlw	high _analogueState
 15449  0040CE  22DA               	addwfc	fsr2h,f,c
 15450  0040D0  50DF               	movf	223,w,c
 15451  0040D2  0B03               	andlw	3
 15452  0040D4  0A02               	xorlw	2
 15453  0040D6  D6CA               	goto	L9
 15454  0040D8                     u25691:
 15455  0040D8  0E01               	movlw	1
 15456  0040DA  D7F2               	goto	u25680
 15457  0040DC                     l20605:
 15458                           
 15459                           ; BSR set to: 0
 15460  0040DC  51D1               	movf	APP_doSOD@happeningIndex& (0+255),w,b
 15461                           
 15462                           ; Switch size 1, requested type "simple"
 15463                           ; Number of cases is 2, Range of values is 0 to 1
 15464                           ; switch strategies available:
 15465                           ; Name         Instructions Cycles
 15466                           ; simple_byte            7     4 (average)
 15467                           ;	Chosen strategy is simple_byte
 15468  0040DE  0A00               	xorlw	0	; case 0
 15469  0040E0  B4D8               	btfsc	status,2,c
 15470  0040E2  D7E4               	goto	l20599
 15471  0040E4  0A01               	xorlw	1	; case 1
 15472  0040E6  B4D8               	btfsc	status,2,c
 15473  0040E8  D7ED               	goto	l20601
 15474  0040EA  D026               	goto	l20611
 15475  0040EC                     l20609:
 15476                           
 15477                           ; BSR set to: 0
 15478  0040EC  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15479  0040EE  0D07               	mullw	7
 15480  0040F0  C0EC  F0BD         	movff	_NV,??_APP_doSOD
 15481  0040F4  C0ED  F0BE         	movff	_NV+1,??_APP_doSOD+1
 15482  0040F8  50F3               	movf	243,w,c
 15483  0040FA  27BD               	addwf	??_APP_doSOD& (0+255),f,b
 15484  0040FC  50F4               	movf	244,w,c
 15485  0040FE  23BE               	addwfc	(??_APP_doSOD+1)& (0+255),f,b
 15486  004100  0E10               	movlw	16
 15487  004102  25BD               	addwf	??_APP_doSOD& (0+255),w,b
 15488  004104  6ED9               	movwf	fsr2l,c
 15489  004106  0E00               	movlw	0
 15490  004108  21BE               	addwfc	(??_APP_doSOD+1)& (0+255),w,b
 15491  00410A  6EDA               	movwf	fsr2h,c
 15492  00410C  50DF               	movf	indf2,w,c
 15493                           
 15494                           ; Switch size 1, requested type "simple"
 15495                           ; Number of cases is 7, Range of values is 0 to 6
 15496                           ; switch strategies available:
 15497                           ; Name         Instructions Cycles
 15498                           ; simple_byte           22    12 (average)
 15499                           ;	Chosen strategy is simple_byte
 15500  00410E  0A00               	xorlw	0	; case 0
 15501  004110  B4D8               	btfsc	status,2,c
 15502  004112  D695               	goto	l20533
 15503  004114  0A01               	xorlw	1	; case 1
 15504  004116  B4D8               	btfsc	status,2,c
 15505  004118  D6C5               	goto	l20553
 15506  00411A  0A03               	xorlw	3	; case 2
 15507  00411C  B4D8               	btfsc	status,2,c
 15508  00411E  D72E               	goto	l20563
 15509  004120  0A01               	xorlw	1	; case 3
 15510  004122  B4D8               	btfsc	status,2,c
 15511  004124  D744               	goto	l20571
 15512  004126  0A07               	xorlw	7	; case 4
 15513  004128  B4D8               	btfsc	status,2,c
 15514  00412A  D7AE               	goto	l20589
 15515  00412C  0A01               	xorlw	1	; case 5
 15516  00412E  B4D8               	btfsc	status,2,c
 15517  004130  D7B9               	goto	l20593
 15518  004132  0A03               	xorlw	3	; case 6
 15519  004134  B4D8               	btfsc	status,2,c
 15520  004136  D7B6               	goto	l20593
 15521  004138                     l20611:
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;mioEvents.c: 616: if (value != 255) {
 15525  004138  29D0               	incf	APP_doSOD@value& (0+255),w,b
 15526  00413A  B4D8               	btfsc	status,2,c
 15527  00413C  D683               	goto	u25440
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;mioEvents.c: 617: if (!sendInvertedProducedEvent((8U + 4U*(io))+happeningIndex, value, 
      +                          event_inverted, send_on_ok, send_off_ok)) {
 15531  00413E  C0D0  F0B5         	movff	APP_doSOD@value,sendInvertedProducedEvent@state
 15532  004142  C0CE  F0B6         	movff	APP_doSOD@event_inverted,sendInvertedProducedEvent@invert
 15533  004146  C0CA  F0B7         	movff	APP_doSOD@send_on_ok,sendInvertedProducedEvent@can_send_on
 15534  00414A  C0CB  F0B8         	movff	APP_doSOD@send_off_ok,sendInvertedProducedEvent@can_send_off
 15535  00414E  51D2               	movf	APP_doSOD@io& (0+255),w,b
 15536  004150  0D04               	mullw	4
 15537  004152  50F3               	movf	243,w,c
 15538  004154  25D1               	addwf	APP_doSOD@happeningIndex& (0+255),w,b
 15539  004156  0F08               	addlw	8
 15540  004158  EC8B  F04D         	call	_sendInvertedProducedEvent
 15541  00415C  0900               	iorlw	0
 15542  00415E  A4D8               	btfss	status,2,c
 15543  004160  D671               	goto	u25440
 15544                           
 15545                           ;mioEvents.c: 618: return 1;
 15546  004162  0E01               	movlw	1
 15547  004164  0012               	return		;funcret
 15548  004166                     __end_of_APP_doSOD:
 15549                           	callstack 0
 15550                           
 15551 ;; *************** function _sendInvertedProducedEvent *****************
 15552 ;; Defined at:
 15553 ;;		line 634 in file "../../github/CANMIOfirmware/mioEvents.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;  happening       1    wreg     unsigned char 
 15556 ;;  state           1   85[BANK0 ] unsigned char 
 15557 ;;  invert          1   86[BANK0 ] unsigned char 
 15558 ;;  can_send_on     1   87[BANK0 ] unsigned char 
 15559 ;;  can_send_off    1   88[BANK0 ] unsigned char 
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;  happening       1   89[BANK0 ] unsigned char 
 15562 ;;  state_to_sen    1   92[BANK0 ] unsigned char 
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      unsigned char 
 15565 ;; Registers used:
 15566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15567 ;; Tracked objects:
 15568 ;;		On entry : 3F/0
 15569 ;;		On exit  : 3E/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15573 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15575 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15576 ;;Total ram usage:        8 bytes
 15577 ;; Hardware stack levels used: 1
 15578 ;; Hardware stack levels required when called: 16
 15579 ;; This function calls:
 15580 ;;		_sendProducedEvent
 15581 ;; This function is called by:
 15582 ;;		_startDigitalOutput
 15583 ;;		_APP_doSOD
 15584 ;; This function uses a non-reentrant model
 15585 ;;
 15586                           
 15587                           	psect	text55
 15588  009B16                     __ptext55:
 15589                           	callstack 0
 15590  009B16                     _sendInvertedProducedEvent:
 15591                           	callstack 11
 15592                           
 15593                           ;incstack = 0
 15594                           ;sendInvertedProducedEvent@happening stored from wreg
 15595  009B16  6FB9               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 15596                           
 15597                           ;mioEvents.c: 636: BOOL state_to_send = (unsigned char)(invert?!state:state);
 15598  009B18  0100               	movlb	0	; () banked
 15599  009B1A  51B6               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 15600  009B1C  A4D8               	btfss	status,2,c
 15601  009B1E  D003               	goto	l19285
 15602                           
 15603                           ; BSR set to: 0
 15604  009B20  C0B5  F0BA         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1832
 15605  009B24  D007               	goto	L11
 15606  009B26                     l19285:
 15607                           
 15608                           ; BSR set to: 0
 15609  009B26  51B5               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 15610  009B28  A4D8               	btfss	status,2,c
 15611  009B2A  D002               	goto	u23740
 15612  009B2C  0E01               	movlw	1
 15613  009B2E  D001               	goto	u23750
 15614  009B30                     u23740:
 15615  009B30  0E00               	movlw	0
 15616  009B32                     u23750:
 15617  009B32  6FBA               	movwf	_sendInvertedProducedEvent$1832& (0+255),b
 15618  009B34                     L11:
 15619  009B34  6BBB               	clrf	(_sendInvertedProducedEvent$1832+1)& (0+255),b
 15620                           
 15621                           ; BSR set to: 0
 15622  009B36  C0BA  F0BC         	movff	_sendInvertedProducedEvent$1832,sendInvertedProducedEvent@state_to_send
 15623                           
 15624                           ;mioEvents.c: 637: if ((state_to_send && can_send_on) || (!state_to_send && can_send_off
      +                          )) {
 15625  009B3A  51BC               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 15626  009B3C  B4D8               	btfsc	status,2,c
 15627  009B3E  D003               	goto	u23770
 15628                           
 15629                           ; BSR set to: 0
 15630  009B40  51B7               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 15631  009B42  A4D8               	btfss	status,2,c
 15632  009B44  D006               	goto	u23790
 15633  009B46                     u23770:
 15634                           
 15635                           ; BSR set to: 0
 15636  009B46  51BC               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 15637  009B48  A4D8               	btfss	status,2,c
 15638  009B4A  D009               	goto	l19301
 15639                           
 15640                           ; BSR set to: 0
 15641  009B4C  51B8               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 15642  009B4E  B4D8               	btfsc	status,2,c
 15643  009B50  D006               	goto	l19301
 15644  009B52                     u23790:
 15645                           
 15646                           ; BSR set to: 0
 15647                           ;mioEvents.c: 638: return sendProducedEvent(happening, state_to_send);
 15648  009B52  C0BC  F0AE         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@on
 15649  009B56  51B9               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 15650  009B58  EC54  F03C         	call	_sendProducedEvent
 15651  009B5C  0012               	return	
 15652  009B5E                     l19301:
 15653                           
 15654                           ; BSR set to: 0
 15655                           ;mioEvents.c: 640: return 1;
 15656  009B5E  0E01               	movlw	1
 15657  009B60  0012               	return		;funcret
 15658  009B62                     __end_of_sendInvertedProducedEvent:
 15659                           	callstack 0
 15660                           
 15661 ;; *************** function _sendProducedEvent *****************
 15662 ;; Defined at:
 15663 ;;		line 109 in file "../../github/CBUSlib/happeningsActions.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  happening       1    wreg     unsigned char 
 15666 ;;  on              1   78[BANK0 ] unsigned char 
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;  happening       1   84[BANK0 ] unsigned char 
 15669 ;;  thisByte        1   83[BANK0 ] unsigned char 
 15670 ;;  thisBit         1   82[BANK0 ] unsigned char 
 15671 ;;  status          1   81[BANK0 ] unsigned char 
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1    wreg      unsigned char 
 15674 ;; Registers used:
 15675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15676 ;; Tracked objects:
 15677 ;;		On entry : 3F/0
 15678 ;;		On exit  : 3E/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15681 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15682 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;Total ram usage:        7 bytes
 15686 ;; Hardware stack levels used: 1
 15687 ;; Hardware stack levels required when called: 15
 15688 ;; This function calls:
 15689 ;;		_cbusSendEvent
 15690 ;;		_ee_read
 15691 ;;		_ee_write
 15692 ;;		_getDefaultProducedEvent
 15693 ;;		_getProducedEvent
 15694 ;; This function is called by:
 15695 ;;		_pollAnalogue
 15696 ;;		_processOutputs
 15697 ;;		_inputScan
 15698 ;;		_main
 15699 ;;		_sendInvertedProducedEvent
 15700 ;;		_pollServos
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704                           	psect	text56
 15705  0078A8                     __ptext56:
 15706                           	callstack 0
 15707  0078A8                     _sendProducedEvent:
 15708                           	callstack 13
 15709                           
 15710                           ;incstack = 0
 15711                           ;sendProducedEvent@happening stored from wreg
 15712  0078A8  6FB4               	movwf	sendProducedEvent@happening& (0+255),b
 15713                           
 15714                           ;happeningsActions.c: 111: unsigned char thisBit = (unsigned char)(happening & 0x7);
 15715  0078AA  0100               	movlb	0	; () banked
 15716  0078AC  51B4               	movf	sendProducedEvent@happening& (0+255),w,b
 15717  0078AE  0B07               	andlw	7
 15718  0078B0  6FB2               	movwf	sendProducedEvent@thisBit& (0+255),b
 15719                           
 15720                           ;happeningsActions.c: 112: unsigned char thisByte = (unsigned char)(happening >> 3);
 15721  0078B2  39B4               	swapf	sendProducedEvent@happening& (0+255),w,b
 15722  0078B4  46E8               	rlncf	wreg,f,c
 15723  0078B6  0B1F               	andlw	31
 15724  0078B8  6FB3               	movwf	sendProducedEvent@thisByte& (0+255),b
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;happeningsActions.c: 113: unsigned char status = ee_read((WORD)(((BYTE*)(0x3FF-39))+thi
      +                          sByte));
 15728  0078BA  0ED8               	movlw	216
 15729  0078BC  25B3               	addwf	sendProducedEvent@thisByte& (0+255),w,b
 15730  0078BE  6F71               	movwf	ee_read@addr& (0+255),b
 15731  0078C0  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 15732  0078C2  0E03               	movlw	3
 15733  0078C4  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 15734  0078C6  EC91  F052         	call	_ee_read	;wreg free
 15735  0078CA  0100               	movlb	0	; () banked
 15736  0078CC  6FB1               	movwf	sendProducedEvent@status& (0+255),b
 15737                           
 15738                           ; BSR set to: 0
 15739                           ;happeningsActions.c: 114: if (on) {
 15740  0078CE  51AE               	movf	sendProducedEvent@on& (0+255),w,b
 15741  0078D0  B4D8               	btfsc	status,2,c
 15742  0078D2  D00E               	goto	l18863
 15743                           
 15744                           ; BSR set to: 0
 15745                           ;happeningsActions.c: 115: status |= (unsigned char)(1U<<thisBit);
 15746  0078D4  C0B2  F0AF         	movff	sendProducedEvent@thisBit,??_sendProducedEvent
 15747  0078D8  0E01               	movlw	1
 15748  0078DA  6FB0               	movwf	(??_sendProducedEvent+1)& (0+255),b
 15749  0078DC  2BAF               	incf	??_sendProducedEvent& (0+255),f,b
 15750  0078DE  D002               	goto	u23334
 15751  0078E0                     u23335:
 15752  0078E0  90D8               	bcf	status,0,c
 15753  0078E2  37B0               	rlcf	(??_sendProducedEvent+1)& (0+255),f,b
 15754  0078E4                     u23334:
 15755  0078E4  2FAF               	decfsz	??_sendProducedEvent& (0+255),f,b
 15756  0078E6  D7FC               	goto	u23335
 15757  0078E8  0100               	movlb	0	; () banked
 15758  0078EA  51B0               	movf	(??_sendProducedEvent+1)& (0+255),w,b
 15759  0078EC  13B1               	iorwf	sendProducedEvent@status& (0+255),f,b
 15760                           
 15761                           ;happeningsActions.c: 116: } else {
 15762  0078EE  D00E               	goto	l18865
 15763  0078F0                     l18863:
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;happeningsActions.c: 117: status &= (unsigned char)(~(1U<<thisBit));
 15767  0078F0  C0B2  F0AF         	movff	sendProducedEvent@thisBit,??_sendProducedEvent
 15768  0078F4  0E01               	movlw	1
 15769  0078F6  6FB0               	movwf	(??_sendProducedEvent+1)& (0+255),b
 15770  0078F8  2BAF               	incf	??_sendProducedEvent& (0+255),f,b
 15771  0078FA  D002               	goto	u23344
 15772  0078FC                     u23345:
 15773  0078FC  90D8               	bcf	status,0,c
 15774  0078FE  37B0               	rlcf	(??_sendProducedEvent+1)& (0+255),f,b
 15775  007900                     u23344:
 15776  007900  2FAF               	decfsz	??_sendProducedEvent& (0+255),f,b
 15777  007902  D7FC               	goto	u23345
 15778  007904  0100               	movlb	0	; () banked
 15779  007906  51B0               	movf	(??_sendProducedEvent+1)& (0+255),w,b
 15780  007908  0AFF               	xorlw	255
 15781  00790A  17B1               	andwf	sendProducedEvent@status& (0+255),f,b
 15782  00790C                     l18865:
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;happeningsActions.c: 118: };happeningsActions.c: 119: ee_write((WORD)(((BYTE*)(0x3FF-39
      +                          ))+thisByte), status);
 15786  00790C  0ED8               	movlw	216
 15787  00790E  25B3               	addwf	sendProducedEvent@thisByte& (0+255),w,b
 15788  007910  6F73               	movwf	ee_write@addr& (0+255),b
 15789  007912  6B74               	clrf	(ee_write@addr+1)& (0+255),b
 15790  007914  0E03               	movlw	3
 15791  007916  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
 15792  007918  C0B1  F075         	movff	sendProducedEvent@status,ee_write@data
 15793  00791C  EC17  F04D         	call	_ee_write	;wreg free
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;happeningsActions.c: 122: if (getProducedEvent(happening)) {
 15797  007920  51B4               	movf	sendProducedEvent@happening& (0+255),w,b
 15798  007922  ECB8  F04A         	call	_getProducedEvent
 15799  007926  0900               	iorlw	0
 15800  007928  B4D8               	btfsc	status,2,c
 15801  00792A  D00E               	goto	l18873
 15802                           
 15803                           ; BSR set to: 0
 15804                           ;happeningsActions.c: 123: return cbusSendEvent( 0, producedEvent.NN, producedEvent.EN, 
      +                          on );
 15805  00792C  C1A8  F09E         	movff	_producedEvent,cbusSendEvent@eventNode
 15806  007930  C1A9  F09F         	movff	_producedEvent+1,cbusSendEvent@eventNode+1
 15807  007934  C1AA  F0A0         	movff	_producedEvent+2,cbusSendEvent@eventNum
 15808  007938  C1AB  F0A1         	movff	_producedEvent+3,cbusSendEvent@eventNum+1
 15809  00793C  C0AE  F0A2         	movff	sendProducedEvent@on,cbusSendEvent@onEvent
 15810  007940  0E00               	movlw	0
 15811  007942  EC9A  F051         	call	_cbusSendEvent
 15812  007946  0012               	return	
 15813  007948                     l18873:
 15814                           
 15815                           ; BSR set to: 0
 15816                           ;happeningsActions.c: 124: };happeningsActions.c: 127: if (getDefaultProducedEvent(happe
      +                          ning)) {
 15817  007948  51B4               	movf	sendProducedEvent@happening& (0+255),w,b
 15818  00794A  EC89  F053         	call	_getDefaultProducedEvent
 15819  00794E  0900               	iorlw	0
 15820  007950  B4D8               	btfsc	status,2,c
 15821  007952  D013               	goto	l18881
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;happeningsActions.c: 128: if (producedEvent.EN != 0)
 15825  007954  0101               	movlb	1	; () banked
 15826  007956  51AA               	movf	(_producedEvent+2)& (0+255),w,b
 15827  007958  11AB               	iorwf	(_producedEvent+3)& (0+255),w,b
 15828  00795A  B4D8               	btfsc	status,2,c
 15829  00795C  D00E               	goto	l18881
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;happeningsActions.c: 129: return cbusSendEvent( 0, producedEvent.NN, producedEvent.EN, 
      +                          on );
 15833  00795E  C1A8  F09E         	movff	_producedEvent,cbusSendEvent@eventNode
 15834  007962  C1A9  F09F         	movff	_producedEvent+1,cbusSendEvent@eventNode+1
 15835  007966  C1AA  F0A0         	movff	_producedEvent+2,cbusSendEvent@eventNum
 15836  00796A  C1AB  F0A1         	movff	_producedEvent+3,cbusSendEvent@eventNum+1
 15837  00796E  C0AE  F0A2         	movff	sendProducedEvent@on,cbusSendEvent@onEvent
 15838  007972  0E00               	movlw	0
 15839  007974  EC9A  F051         	call	_cbusSendEvent
 15840  007978  0012               	return	
 15841  00797A                     l18881:
 15842                           
 15843                           ;happeningsActions.c: 131: return 1;
 15844  00797A  0E01               	movlw	1
 15845  00797C  0012               	return		;funcret
 15846  00797E                     __end_of_sendProducedEvent:
 15847                           	callstack 0
 15848                           
 15849 ;; *************** function _getProducedEvent *****************
 15850 ;; Defined at:
 15851 ;;		line 78 in file "../../github/CBUSlib/happeningsActions.c"
 15852 ;; Parameters:    Size  Location     Type
 15853 ;;  happening       1    wreg     unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  happening       1   41[BANK0 ] unsigned char 
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  1    wreg      unsigned char 
 15858 ;; Registers used:
 15859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15860 ;; Tracked objects:
 15861 ;;		On entry : 3F/0
 15862 ;;		On exit  : 3F/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15869 ;;Total ram usage:        2 bytes
 15870 ;; Hardware stack levels used: 1
 15871 ;; Hardware stack levels required when called: 14
 15872 ;; This function calls:
 15873 ;;		_getEN
 15874 ;;		_getNN
 15875 ;; This function is called by:
 15876 ;;		_initialise
 15877 ;;		_sendProducedEvent
 15878 ;; This function uses a non-reentrant model
 15879 ;;
 15880                           
 15881                           	psect	text57
 15882  009570                     __ptext57:
 15883                           	callstack 0
 15884  009570                     _getProducedEvent:
 15885                           	callstack 13
 15886                           
 15887                           ;incstack = 0
 15888                           ;getProducedEvent@happening stored from wreg
 15889  009570  6F89               	movwf	getProducedEvent@happening& (0+255),b
 15890                           
 15891                           ;happeningsActions.c: 82: if ((happening < 1U) || (happening >= 1U + (8U + 16U * 4U))) r
      +                          eturn 0;
 15892  009572  0100               	movlb	0	; () banked
 15893  009574  5189               	movf	getProducedEvent@happening& (0+255),w,b
 15894  009576  B4D8               	btfsc	status,2,c
 15895  009578  D003               	goto	u23070
 15896                           
 15897                           ; BSR set to: 0
 15898  00957A  0E48               	movlw	72
 15899  00957C  6589               	cpfsgt	getProducedEvent@happening& (0+255),b
 15900  00957E  D002               	goto	l18619
 15901  009580                     u23070:
 15902                           
 15903                           ; BSR set to: 0
 15904  009580  0E00               	movlw	0
 15905  009582  0012               	return	
 15906  009584                     l18619:
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;happeningsActions.c: 84: if (happening2Event[happening-1U] == 0xff) return 0;
 15910  009584  0EFF               	movlw	low (_happening2Event+65535)
 15911  009586  2589               	addwf	getProducedEvent@happening& (0+255),w,b
 15912  009588  6ED9               	movwf	fsr2l,c
 15913  00958A  6ADA               	clrf	fsr2h,c
 15914  00958C  0E02               	movlw	high (_happening2Event+65535)
 15915  00958E  22DA               	addwfc	fsr2h,f,c
 15916  009590  28DE               	incf	postinc2,w,c
 15917  009592  B4D8               	btfsc	status,2,c
 15918  009594  D7F5               	goto	u23070
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;happeningsActions.c: 85: producedEvent.NN = getNN(happening2Event[happening-1U]);
 15922  009596  0EFF               	movlw	low (_happening2Event+65535)
 15923  009598  2589               	addwf	getProducedEvent@happening& (0+255),w,b
 15924  00959A  6ED9               	movwf	fsr2l,c
 15925  00959C  6ADA               	clrf	fsr2h,c
 15926  00959E  0E02               	movlw	high (_happening2Event+65535)
 15927  0095A0  22DA               	addwfc	fsr2h,f,c
 15928  0095A2  50DF               	movf	indf2,w,c
 15929  0095A4  ECA8  F043         	call	_getNN
 15930  0095A8  C07D  F1A8         	movff	?_getNN,_producedEvent
 15931  0095AC  C07E  F1A9         	movff	?_getNN+1,_producedEvent+1
 15932                           
 15933                           ;happeningsActions.c: 86: producedEvent.EN = getEN(happening2Event[happening-1U]);
 15934  0095B0  0EFF               	movlw	low (_happening2Event+65535)
 15935  0095B2  2589               	addwf	getProducedEvent@happening& (0+255),w,b
 15936  0095B4  6ED9               	movwf	fsr2l,c
 15937  0095B6  6ADA               	clrf	fsr2h,c
 15938  0095B8  0E02               	movlw	high (_happening2Event+65535)
 15939  0095BA  22DA               	addwfc	fsr2h,f,c
 15940  0095BC  50DF               	movf	indf2,w,c
 15941  0095BE  EC19  F048         	call	_getEN
 15942  0095C2  C07D  F1AA         	movff	?_getEN,_producedEvent+2
 15943  0095C6  C07E  F1AB         	movff	?_getEN+1,_producedEvent+3
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;happeningsActions.c: 87: return 1;
 15947  0095CA  0E01               	movlw	1
 15948                           
 15949                           ; BSR set to: 0
 15950  0095CC  0012               	return		;funcret
 15951  0095CE                     __end_of_getProducedEvent:
 15952                           	callstack 0
 15953                           
 15954 ;; *************** function _getDefaultProducedEvent *****************
 15955 ;; Defined at:
 15956 ;;		line 189 in file "../../github/CANMIOfirmware/mioEvents.c"
 15957 ;; Parameters:    Size  Location     Type
 15958 ;;  paction         1    wreg     unsigned char 
 15959 ;; Auto vars:     Size  Location     Type
 15960 ;;  paction         1    0[COMRAM] unsigned char 
 15961 ;; Return value:  Size  Location     Type
 15962 ;;                  1    wreg      unsigned char 
 15963 ;; Registers used:
 15964 ;;		wreg
 15965 ;; Tracked objects:
 15966 ;;		On entry : 3F/0
 15967 ;;		On exit  : 3F/0
 15968 ;;		Unchanged: 3F/0
 15969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15974 ;;Total ram usage:        0 bytes
 15975 ;; Hardware stack levels used: 1
 15976 ;; Hardware stack levels required when called: 8
 15977 ;; This function calls:
 15978 ;;		Nothing
 15979 ;; This function is called by:
 15980 ;;		_sendProducedEvent
 15981 ;; This function uses a non-reentrant model
 15982 ;;
 15983                           
 15984                           	psect	text58
 15985  00A712                     __ptext58:
 15986                           	callstack 0
 15987  00A712                     _getDefaultProducedEvent:
 15988                           	callstack 19
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;mioEvents.c: 190: return 0;
 15992                           
 15993                           ; BSR set to: 0
 15994                           ;incstack = 0
 15995  00A712  0E00               	movlw	0
 15996                           
 15997                           ; BSR set to: 0
 15998  00A714  0012               	return		;funcret
 15999  00A716                     __end_of_getDefaultProducedEvent:
 16000                           	callstack 0
 16001                           
 16002 ;; *************** function _cbusSendEvent *****************
 16003 ;; Defined at:
 16004 ;;		line 198 in file "../../github/CBUSlib/cbus.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;  cbusNum         1    wreg     unsigned char 
 16007 ;;  eventNode       2   62[BANK0 ] unsigned int 
 16008 ;;  eventNum        2   64[BANK0 ] unsigned int 
 16009 ;;  onEvent         1   66[BANK0 ] unsigned char 
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;  cbusNum         1   77[BANK0 ] unsigned char 
 16012 ;;  msg            10   67[BANK0 ] unsigned char [10]
 16013 ;; Return value:  Size  Location     Type
 16014 ;;                  1    wreg      unsigned char 
 16015 ;; Registers used:
 16016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16017 ;; Tracked objects:
 16018 ;;		On entry : 3E/0
 16019 ;;		On exit  : 3F/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16022 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16023 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16025 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16026 ;;Total ram usage:       16 bytes
 16027 ;; Hardware stack levels used: 1
 16028 ;; Hardware stack levels required when called: 14
 16029 ;; This function calls:
 16030 ;;		_cbusSendEventWithData
 16031 ;; This function is called by:
 16032 ;;		_sendProducedEvent
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text59
 16037  00A334                     __ptext59:
 16038                           	callstack 0
 16039  00A334                     _cbusSendEvent:
 16040                           	callstack 13
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;incstack = 0
 16044                           ;cbusSendEvent@cbusNum stored from wreg
 16045  00A334  0100               	movlb	0	; () banked
 16046  00A336  6FAD               	movwf	cbusSendEvent@cbusNum& (0+255),b
 16047                           
 16048                           ;cbus.c: 200: BYTE msg[d0+4];;cbus.c: 202: return cbusSendEventWithData( cbusNum, eventN
      +                          ode, eventNum, onEvent, msg, 0);
 16049  00A338  C09E  F093         	movff	cbusSendEvent@eventNode,cbusSendEventWithData@eventNode
 16050  00A33C  C09F  F094         	movff	cbusSendEvent@eventNode+1,cbusSendEventWithData@eventNode+1
 16051  00A340  C0A0  F095         	movff	cbusSendEvent@eventNum,cbusSendEventWithData@eventNum
 16052  00A344  C0A1  F096         	movff	cbusSendEvent@eventNum+1,cbusSendEventWithData@eventNum+1
 16053  00A348  C0A2  F097         	movff	cbusSendEvent@onEvent,cbusSendEventWithData@onEvent
 16054  00A34C  0EA3               	movlw	low cbusSendEvent@msg
 16055  00A34E  0100               	movlb	0	; () banked
 16056  00A350  6F98               	movwf	cbusSendEventWithData@msg& (0+255),b
 16057  00A352  0E00               	movlw	0
 16058  00A354  6F99               	movwf	cbusSendEventWithData@datalen& (0+255),b
 16059  00A356  51AD               	movf	cbusSendEvent@cbusNum& (0+255),w,b
 16060  00A358  EC63  F03F         	call	_cbusSendEventWithData
 16061                           
 16062                           ; BSR set to: 0
 16063  00A35C  0012               	return		;funcret
 16064  00A35E                     __end_of_cbusSendEvent:
 16065                           	callstack 0
 16066                           
 16067 ;; *************** function _cbusSendEventWithData *****************
 16068 ;; Defined at:
 16069 ;;		line 218 in file "../../github/CBUSlib/cbus.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;  cbusNum         1    wreg     unsigned char 
 16072 ;;  eventNode       2   51[BANK0 ] unsigned int 
 16073 ;;  eventNum        2   53[BANK0 ] unsigned int 
 16074 ;;  onEvent         1   55[BANK0 ] unsigned char 
 16075 ;;  msg             1   56[BANK0 ] PTR unsigned char 
 16076 ;;		 -> cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 16077 ;;  datalen         1   57[BANK0 ] unsigned char 
 16078 ;; Auto vars:     Size  Location     Type
 16079 ;;  cbusNum         1   61[BANK0 ] unsigned char 
 16080 ;;  ret             1   60[BANK0 ] unsigned char 
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  1    wreg      unsigned char 
 16083 ;; Registers used:
 16084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16085 ;; Tracked objects:
 16086 ;;		On entry : 3F/0
 16087 ;;		On exit  : 3F/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16090 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16093 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16094 ;;Total ram usage:       11 bytes
 16095 ;; Hardware stack levels used: 1
 16096 ;; Hardware stack levels required when called: 13
 16097 ;; This function calls:
 16098 ;;		_canQueueRx
 16099 ;;		_cbusSendMsgNN
 16100 ;; This function is called by:
 16101 ;;		_cbusSendEvent
 16102 ;; This function uses a non-reentrant model
 16103 ;;
 16104                           
 16105                           	psect	text60
 16106  007EC6                     __ptext60:
 16107                           	callstack 0
 16108  007EC6                     _cbusSendEventWithData:
 16109                           	callstack 13
 16110                           
 16111                           ; BSR set to: 0
 16112                           ;incstack = 0
 16113                           ;cbusSendEventWithData@cbusNum stored from wreg
 16114  007EC6  6F9D               	movwf	cbusSendEventWithData@cbusNum& (0+255),b
 16115                           
 16116                           ;cbus.c: 220: BOOL ret;;cbus.c: 221: msg[d0] = 0x90;
 16117  007EC8  0100               	movlb	0	; () banked
 16118  007ECA  5198               	movf	cbusSendEventWithData@msg& (0+255),w,b
 16119  007ECC  6ED9               	movwf	fsr2l,c
 16120  007ECE  6ADA               	clrf	fsr2h,c
 16121  007ED0  0E06               	movlw	6
 16122  007ED2  26D9               	addwf	fsr2l,f,c
 16123  007ED4  0E90               	movlw	144
 16124  007ED6  6EDF               	movwf	indf2,c
 16125                           
 16126                           ; BSR set to: 0
 16127                           ;cbus.c: 223: if (eventNode == 0)
 16128  007ED8  5193               	movf	cbusSendEventWithData@eventNode& (0+255),w,b
 16129  007EDA  1194               	iorwf	(cbusSendEventWithData@eventNode+1)& (0+255),w,b
 16130  007EDC  A4D8               	btfss	status,2,c
 16131  007EDE  D00B               	goto	l18575
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;cbus.c: 224: {;cbus.c: 225: msg[d0] |= 0x08;
 16135  007EE0  5198               	movf	cbusSendEventWithData@msg& (0+255),w,b
 16136  007EE2  6ED9               	movwf	fsr2l,c
 16137  007EE4  6ADA               	clrf	fsr2h,c
 16138  007EE6  0E06               	movlw	6
 16139  007EE8  26D9               	addwf	fsr2l,f,c
 16140  007EEA  0E00               	movlw	0
 16141  007EEC  86DB               	bsf	plusw2,3,c
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;cbus.c: 226: eventNode = nodeID;
 16145  007EEE  C001  F093         	movff	_nodeID,cbusSendEventWithData@eventNode
 16146  007EF2  C002  F094         	movff	_nodeID+1,cbusSendEventWithData@eventNode+1
 16147  007EF6                     l18575:
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;cbus.c: 227: };cbus.c: 229: if (!onEvent)
 16151  007EF6  5197               	movf	cbusSendEventWithData@onEvent& (0+255),w,b
 16152  007EF8  A4D8               	btfss	status,2,c
 16153  007EFA  D007               	goto	l18579
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;cbus.c: 230: msg[d0] |= 0x01;
 16157  007EFC  5198               	movf	cbusSendEventWithData@msg& (0+255),w,b
 16158  007EFE  6ED9               	movwf	fsr2l,c
 16159  007F00  6ADA               	clrf	fsr2h,c
 16160  007F02  0E06               	movlw	6
 16161  007F04  26D9               	addwf	fsr2l,f,c
 16162  007F06  0E00               	movlw	0
 16163  007F08  80DB               	bsf	plusw2,0,c
 16164  007F0A                     l18579:
 16165                           
 16166                           ; BSR set to: 0
 16167                           ;cbus.c: 232: if (datalen > 0)
 16168  007F0A  5199               	movf	cbusSendEventWithData@datalen& (0+255),w,b
 16169  007F0C  B4D8               	btfsc	status,2,c
 16170  007F0E  D00F               	goto	l1761
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;cbus.c: 233: msg[d0] |= (unsigned char)(datalen << 5U);
 16174  007F10  C099  F09A         	movff	cbusSendEventWithData@datalen,??_cbusSendEventWithData
 16175  007F14  0E05               	movlw	5
 16176  007F16  6F9B               	movwf	(??_cbusSendEventWithData+1)& (0+255),b
 16177  007F18                     u23015:
 16178  007F18  90D8               	bcf	status,0,c
 16179  007F1A  379A               	rlcf	??_cbusSendEventWithData& (0+255),f,b
 16180  007F1C  2F9B               	decfsz	(??_cbusSendEventWithData+1)& (0+255),f,b
 16181  007F1E  D7FC               	goto	u23015
 16182  007F20  5198               	movf	cbusSendEventWithData@msg& (0+255),w,b
 16183  007F22  6ED9               	movwf	fsr2l,c
 16184  007F24  6ADA               	clrf	fsr2h,c
 16185  007F26  0E06               	movlw	6
 16186  007F28  26D9               	addwf	fsr2l,f,c
 16187  007F2A  519A               	movf	??_cbusSendEventWithData& (0+255),w,b
 16188  007F2C  12DF               	iorwf	indf2,f,c
 16189  007F2E                     l1761:
 16190                           
 16191                           ; BSR set to: 0
 16192                           ;cbus.c: 235: msg[d3] = eventNum>>8;
 16193  007F2E  5198               	movf	cbusSendEventWithData@msg& (0+255),w,b
 16194  007F30  6ED9               	movwf	fsr2l,c
 16195  007F32  6ADA               	clrf	fsr2h,c
 16196  007F34  0E09               	movlw	9
 16197  007F36  26D9               	addwf	fsr2l,f,c
 16198  007F38  C096  FFDF         	movff	cbusSendEventWithData@eventNum+1,indf2
 16199                           
 16200                           ;cbus.c: 236: msg[d4] = eventNum & 0xFF;
 16201  007F3C  5198               	movf	cbusSendEventWithData@msg& (0+255),w,b
 16202  007F3E  6ED9               	movwf	fsr2l,c
 16203  007F40  6ADA               	clrf	fsr2h,c
 16204  007F42  0E0A               	movlw	10
 16205  007F44  26D9               	addwf	fsr2l,f,c
 16206  007F46  C095  FFDF         	movff	cbusSendEventWithData@eventNum,indf2
 16207                           
 16208                           ; BSR set to: 0
 16209                           ;cbus.c: 238: ret = cbusSendMsgNN( cbusNum, eventNode, msg );
 16210  007F4A  C093  F08F         	movff	cbusSendEventWithData@eventNode,cbusSendMsgNN@eventNode
 16211  007F4E  C094  F090         	movff	cbusSendEventWithData@eventNode+1,cbusSendMsgNN@eventNode+1
 16212  007F52  C098  F091         	movff	cbusSendEventWithData@msg,cbusSendMsgNN@msg
 16213  007F56  519D               	movf	cbusSendEventWithData@cbusNum& (0+255),w,b
 16214  007F58  EC4C  F04F         	call	_cbusSendMsgNN
 16215  007F5C  6F9C               	movwf	cbusSendEventWithData@ret& (0+255),b
 16216                           
 16217                           ; BSR set to: 0
 16218                           ;cbus.c: 241: if ((cbusNum == 0) || (cbusNum == 0xFF) )
 16219  007F5E  519D               	movf	cbusSendEventWithData@cbusNum& (0+255),w,b
 16220  007F60  B4D8               	btfsc	status,2,c
 16221  007F62  D003               	goto	u23030
 16222                           
 16223                           ; BSR set to: 0
 16224  007F64  299D               	incf	cbusSendEventWithData@cbusNum& (0+255),w,b
 16225  007F66  A4D8               	btfss	status,2,c
 16226  007F68  D004               	goto	l18591
 16227  007F6A                     u23030:
 16228                           
 16229                           ; BSR set to: 0
 16230                           ;cbus.c: 242: canQueueRx( (CanPacket*)msg );
 16231  007F6A  C098  F07F         	movff	cbusSendEventWithData@msg,canQueueRx@msg
 16232  007F6E  EC32  F053         	call	_canQueueRx	;wreg free
 16233  007F72                     l18591:
 16234                           
 16235                           ;cbus.c: 245: return ret;
 16236  007F72  0100               	movlb	0	; () banked
 16237  007F74  519C               	movf	cbusSendEventWithData@ret& (0+255),w,b
 16238                           
 16239                           ; BSR set to: 0
 16240  007F76  0012               	return		;funcret
 16241  007F78                     __end_of_cbusSendEventWithData:
 16242                           	callstack 0
 16243                           
 16244 ;; *************** function _canQueueRx *****************
 16245 ;; Defined at:
 16246 ;;		line 416 in file "../../github/CBUSlib/can18.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;  msg             1   31[BANK0 ] PTR struct .
 16249 ;;		 -> cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;		None
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      unsigned char 
 16254 ;; Registers used:
 16255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16256 ;; Tracked objects:
 16257 ;;		On entry : 3F/0
 16258 ;;		On exit  : 3F/1
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16261 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16265 ;;Total ram usage:        1 bytes
 16266 ;; Hardware stack levels used: 1
 16267 ;; Hardware stack levels required when called: 10
 16268 ;; This function calls:
 16269 ;;		_insertIntoRxFifo
 16270 ;; This function is called by:
 16271 ;;		_cbusSendEventWithData
 16272 ;; This function uses a non-reentrant model
 16273 ;;
 16274                           
 16275                           	psect	text61
 16276  00A664                     __ptext61:
 16277                           	callstack 0
 16278  00A664                     _canQueueRx:
 16279                           	callstack 15
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;can18.c: 419: PIE5bits.FIFOWMIE = 0;
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;incstack = 0
 16286  00A664  9076               	bcf	118,0,c	;volatile
 16287                           
 16288                           ; BSR set to: 0
 16289                           ;can18.c: 420: insertIntoRxFifo( msg );
 16290  00A666  C07F  F07C         	movff	canQueueRx@msg,insertIntoRxFifo@ptr
 16291  00A66A  6B7D               	clrf	(insertIntoRxFifo@ptr+1)& (0+255),b
 16292  00A66C  EC26  F04A         	call	_insertIntoRxFifo	;wreg free
 16293                           
 16294                           ; BSR set to: 1
 16295                           ;can18.c: 421: PIE5bits.FIFOWMIE = 1;
 16296  00A670  8076               	bsf	118,0,c	;volatile
 16297                           
 16298                           ; BSR set to: 1
 16299  00A672  0012               	return		;funcret
 16300  00A674                     __end_of_canQueueRx:
 16301                           	callstack 0
 16302                           
 16303 ;; *************** function _insertIntoRxFifo *****************
 16304 ;; Defined at:
 16305 ;;		line 561 in file "../../github/CBUSlib/can18.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;  ptr             2   28[BANK0 ] PTR struct .
 16308 ;;		 -> cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), B5CON(1), 
 16309 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 16310 ;;		 -> B0CON(1), RXB1CON(1), RXB0CON(1), 
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;		None
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  1    wreg      unsigned char 
 16315 ;; Registers used:
 16316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16317 ;; Tracked objects:
 16318 ;;		On entry : 3F/0
 16319 ;;		On exit  : 3F/1
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16326 ;;Total ram usage:        3 bytes
 16327 ;; Hardware stack levels used: 1
 16328 ;; Hardware stack levels required when called: 9
 16329 ;; This function calls:
 16330 ;;		_memcpy
 16331 ;; This function is called by:
 16332 ;;		_canQueueRx
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text62
 16337  00944C                     __ptext62:
 16338                           	callstack 0
 16339  00944C                     _insertIntoRxFifo:
 16340                           	callstack 15
 16341                           
 16342                           ; BSR set to: 0
 16343                           ;can18.c: 564: memcpy(canRxFifo[rxIndexNextFree].buffer, ptr, ptr->buffer[dlc] + 6U);
 16344                           
 16345                           ; BSR set to: 1
 16346                           ;incstack = 0
 16347  00944C  500F               	movf	_rxIndexNextFree^0,w,c
 16348  00944E  0D10               	mullw	16
 16349  009450  0E00               	movlw	low _canRxFifo
 16350  009452  24F3               	addwf	243,w,c
 16351  009454  6F71               	movwf	memcpy@d1& (0+255),b
 16352  009456  0E05               	movlw	high _canRxFifo
 16353  009458  20F4               	addwfc	prodh,w,c
 16354  00945A  6F72               	movwf	(memcpy@d1+1)& (0+255),b
 16355  00945C  C07C  F073         	movff	insertIntoRxFifo@ptr,memcpy@s1
 16356  009460  C07D  F074         	movff	insertIntoRxFifo@ptr+1,memcpy@s1+1
 16357  009464  EE20 F005          	lfsr	2,5
 16358  009468  517C               	movf	insertIntoRxFifo@ptr& (0+255),w,b
 16359  00946A  26D9               	addwf	fsr2l,f,c
 16360  00946C  517D               	movf	(insertIntoRxFifo@ptr+1)& (0+255),w,b
 16361  00946E  22DA               	addwfc	fsr2h,f,c
 16362  009470  50DF               	movf	indf2,w,c
 16363  009472  6F7E               	movwf	??_insertIntoRxFifo& (0+255),b
 16364  009474  0E06               	movlw	6
 16365  009476  257E               	addwf	??_insertIntoRxFifo& (0+255),w,b
 16366  009478  6F75               	movwf	memcpy@n& (0+255),b
 16367  00947A  6B76               	clrf	(memcpy@n+1)& (0+255),b
 16368  00947C  0E00               	movlw	0
 16369  00947E  2376               	addwfc	(memcpy@n+1)& (0+255),f,b
 16370  009480  EC65  F04E         	call	_memcpy	;wreg free
 16371                           
 16372                           ; BSR set to: 0
 16373                           ;can18.c: 565: rxFifoUsage++;
 16374  009484  0101               	movlb	1	; () banked
 16375  009486  2BD8               	incf	_rxFifoUsage& (0+255),f,b
 16376                           
 16377                           ; BSR set to: 1
 16378                           ;can18.c: 567: if (++rxIndexNextFree >= 16U)
 16379  009488  2A0F               	incf	_rxIndexNextFree^0,f,c
 16380  00948A  0E0F               	movlw	15
 16381  00948C  640F               	cpfsgt	_rxIndexNextFree^0,c
 16382  00948E  D002               	goto	l18229
 16383                           
 16384                           ; BSR set to: 1
 16385                           ;can18.c: 568: {;can18.c: 569: rxIndexNextFree = 0;
 16386  009490  0E00               	movlw	0
 16387  009492  6E0F               	movwf	_rxIndexNextFree^0,c
 16388  009494                     l18229:
 16389                           
 16390                           ; BSR set to: 1
 16391                           ;can18.c: 570: };can18.c: 572: if (rxIndexNextFree == rxIndexNextUsed)
 16392  009494  500E               	movf	_rxIndexNextUsed^0,w,c
 16393  009496  180F               	xorwf	_rxIndexNextFree^0,w,c
 16394  009498  A4D8               	btfss	status,2,c
 16395  00949A  0012               	return	
 16396                           
 16397                           ; BSR set to: 1
 16398                           ;can18.c: 573: {;can18.c: 574: rxOflowCount++;
 16399  00949C  2BDA               	incf	_rxOflowCount& (0+255),f,b
 16400                           
 16401                           ; BSR set to: 1
 16402                           ;can18.c: 575: if (rxIndexNextFree == 0)
 16403  00949E  500F               	movf	_rxIndexNextFree^0,w,c
 16404  0094A0  A4D8               	btfss	status,2,c
 16405  0094A2  D003               	goto	l18237
 16406                           
 16407                           ; BSR set to: 1
 16408                           ;can18.c: 576: rxIndexNextFree = 16U - 1;
 16409  0094A4  0E0F               	movlw	15
 16410  0094A6  6E0F               	movwf	_rxIndexNextFree^0,c
 16411  0094A8  0012               	return	
 16412  0094AA                     l18237:
 16413                           
 16414                           ; BSR set to: 1
 16415                           ;can18.c: 577: else;can18.c: 578: rxIndexNextFree--;
 16416  0094AA  060F               	decf	_rxIndexNextFree^0,f,c
 16417                           
 16418                           ; BSR set to: 1
 16419  0094AC  0012               	return		;funcret
 16420  0094AE                     __end_of_insertIntoRxFifo:
 16421                           	callstack 0
 16422                           
 16423 ;; *************** function _checkFlashing *****************
 16424 ;; Defined at:
 16425 ;;		line 127 in file "../../github/CBUSlib/StatusLeds.c"
 16426 ;; Parameters:    Size  Location     Type
 16427 ;;		None
 16428 ;; Auto vars:     Size  Location     Type
 16429 ;;		None
 16430 ;; Return value:  Size  Location     Type
 16431 ;;                  1    wreg      void 
 16432 ;; Registers used:
 16433 ;;		wreg, status,2, status,0, cstack
 16434 ;; Tracked objects:
 16435 ;;		On entry : 3D/2
 16436 ;;		On exit  : 3E/0
 16437 ;;		Unchanged: 0/0
 16438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16443 ;;Total ram usage:        4 bytes
 16444 ;; Hardware stack levels used: 1
 16445 ;; Hardware stack levels required when called: 10
 16446 ;; This function calls:
 16447 ;;		_doFLiMFlash
 16448 ;;		_tickGet
 16449 ;; This function is called by:
 16450 ;;		_main
 16451 ;; This function uses a non-reentrant model
 16452 ;;
 16453                           
 16454                           	psect	text63
 16455  00734A                     __ptext63:
 16456                           	callstack 0
 16457  00734A                     _checkFlashing:
 16458                           	callstack 20
 16459                           
 16460                           ;StatusLeds.c: 129: switch (flashState)
 16461                           
 16462                           ; BSR set to: 1
 16463                           ;incstack = 0
 16464  00734A  D042               	goto	l21657
 16465  00734C                     l21647:
 16466                           
 16467                           ; BSR set to: 1
 16468                           ;StatusLeds.c: 132: if ((tickGet() - flashTime.Val) > (62500/2))
 16469  00734C  EC9D  F04B         	call	_tickGet	;wreg free
 16470  007350  0101               	movlb	1	; () banked
 16471  007352  51A4               	movf	_flashTime& (0+255),w,b
 16472  007354  0100               	movlb	0	; () banked
 16473  007356  5D71               	subwf	?_tickGet& (0+255),w,b
 16474  007358  6F7C               	movwf	??_checkFlashing& (0+255),b
 16475  00735A  0101               	movlb	1	; () banked
 16476  00735C  51A5               	movf	(_flashTime+1)& (0+255),w,b
 16477  00735E  0100               	movlb	0	; () banked
 16478  007360  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 16479  007362  6F7D               	movwf	(??_checkFlashing+1)& (0+255),b
 16480  007364  0101               	movlb	1	; () banked
 16481  007366  51A6               	movf	(_flashTime+2)& (0+255),w,b
 16482  007368  0100               	movlb	0	; () banked
 16483  00736A  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 16484  00736C  6F7E               	movwf	(??_checkFlashing+2)& (0+255),b
 16485  00736E  0101               	movlb	1	; () banked
 16486  007370  51A7               	movf	(_flashTime+3)& (0+255),w,b
 16487  007372  0100               	movlb	0	; () banked
 16488  007374  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 16489  007376  6F7F               	movwf	(??_checkFlashing+3)& (0+255),b
 16490  007378  517F               	movf	(??_checkFlashing+3)& (0+255),w,b
 16491  00737A  117E               	iorwf	(??_checkFlashing+2)& (0+255),w,b
 16492  00737C  E106               	bnz	u27800
 16493  00737E  0E13               	movlw	19
 16494  007380  5D7C               	subwf	??_checkFlashing& (0+255),w,b
 16495  007382  0E7A               	movlw	122
 16496  007384  597D               	subwfb	(??_checkFlashing+1)& (0+255),w,b
 16497  007386  A0D8               	btfss	status,0,c
 16498  007388  D053               	goto	l21675
 16499  00738A                     u27800:
 16500  00738A                     l21649:
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;StatusLeds.c: 133: doFLiMFlash();
 16504  00738A  EC18  F050         	call	_doFLiMFlash	;wreg free
 16505  00738E  D050               	goto	l21675
 16506  007390                     l21651:
 16507                           
 16508                           ; BSR set to: 1
 16509                           ;StatusLeds.c: 137: if ((tickGet() - flashTime.Val) > (62500/2)/3)
 16510  007390  EC9D  F04B         	call	_tickGet	;wreg free
 16511  007394  0101               	movlb	1	; () banked
 16512  007396  51A4               	movf	_flashTime& (0+255),w,b
 16513  007398  0100               	movlb	0	; () banked
 16514  00739A  5D71               	subwf	?_tickGet& (0+255),w,b
 16515  00739C  6F7C               	movwf	??_checkFlashing& (0+255),b
 16516  00739E  0101               	movlb	1	; () banked
 16517  0073A0  51A5               	movf	(_flashTime+1)& (0+255),w,b
 16518  0073A2  0100               	movlb	0	; () banked
 16519  0073A4  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 16520  0073A6  6F7D               	movwf	(??_checkFlashing+1)& (0+255),b
 16521  0073A8  0101               	movlb	1	; () banked
 16522  0073AA  51A6               	movf	(_flashTime+2)& (0+255),w,b
 16523  0073AC  0100               	movlb	0	; () banked
 16524  0073AE  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 16525  0073B0  6F7E               	movwf	(??_checkFlashing+2)& (0+255),b
 16526  0073B2  0101               	movlb	1	; () banked
 16527  0073B4  51A7               	movf	(_flashTime+3)& (0+255),w,b
 16528  0073B6  0100               	movlb	0	; () banked
 16529  0073B8  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 16530  0073BA  6F7F               	movwf	(??_checkFlashing+3)& (0+255),b
 16531  0073BC  517F               	movf	(??_checkFlashing+3)& (0+255),w,b
 16532  0073BE  117E               	iorwf	(??_checkFlashing+2)& (0+255),w,b
 16533  0073C0  E1E4               	bnz	l21649
 16534  0073C2  0EB1               	movlw	177
 16535  0073C4  5D7C               	subwf	??_checkFlashing& (0+255),w,b
 16536  0073C6  0E28               	movlw	40
 16537  0073C8  597D               	subwfb	(??_checkFlashing+1)& (0+255),w,b
 16538  0073CA  B0D8               	btfsc	status,0,c
 16539  0073CC  D7DE               	goto	u27800
 16540  0073CE  D030               	goto	l21675
 16541  0073D0                     l21657:
 16542  0073D0  0101               	movlb	1	; () banked
 16543  0073D2  51D3               	movf	_flashState& (0+255),w,b
 16544                           
 16545                           ; Switch size 1, requested type "simple"
 16546                           ; Number of cases is 2, Range of values is 1 to 2
 16547                           ; switch strategies available:
 16548                           ; Name         Instructions Cycles
 16549                           ; simple_byte            7     4 (average)
 16550                           ;	Chosen strategy is simple_byte
 16551  0073D4  0A01               	xorlw	1	; case 1
 16552  0073D6  B4D8               	btfsc	status,2,c
 16553  0073D8  D7B9               	goto	l21647
 16554  0073DA  0A03               	xorlw	3	; case 2
 16555  0073DC  B4D8               	btfsc	status,2,c
 16556  0073DE  D7D8               	goto	l21651
 16557  0073E0  D027               	goto	l21675
 16558  0073E2                     l21659:
 16559                           
 16560                           ; BSR set to: 1
 16561                           ;StatusLeds.c: 144: if (flimState == fsSLiM) {
 16562  0073E2  5016               	movf	_flimState^0,w,c
 16563  0073E4  A4D8               	btfss	status,2,c
 16564  0073E6  D002               	goto	l2572
 16565                           
 16566                           ; BSR set to: 1
 16567                           ;StatusLeds.c: 145: LATBbits.LATB6 = 1;
 16568  0073E8  8C8A               	bsf	138,6,c	;volatile
 16569                           
 16570                           ;StatusLeds.c: 146: } else {
 16571  0073EA  D001               	goto	l21663
 16572  0073EC                     l2572:
 16573                           
 16574                           ; BSR set to: 1
 16575                           ;StatusLeds.c: 147: LATBbits.LATB7 = 1;
 16576  0073EC  8E8A               	bsf	138,7,c	;volatile
 16577  0073EE                     l21663:
 16578                           
 16579                           ; BSR set to: 1
 16580                           ;StatusLeds.c: 148: };StatusLeds.c: 149: flickerState = flickOn;
 16581  0073EE  0E02               	movlw	2
 16582  0073F0  6FD2               	movwf	_flickerState& (0+255),b
 16583                           
 16584                           ;StatusLeds.c: 150: break;
 16585  0073F2  0012               	return	
 16586  0073F4                     l21665:
 16587                           
 16588                           ; BSR set to: 1
 16589                           ;StatusLeds.c: 153: if (tickGet() >= flickerTime.Val) {
 16590  0073F4  EC9D  F04B         	call	_tickGet	;wreg free
 16591  0073F8  0101               	movlb	1	; () banked
 16592  0073FA  51A0               	movf	_flickerTime& (0+255),w,b
 16593  0073FC  0100               	movlb	0	; () banked
 16594  0073FE  5D71               	subwf	?_tickGet& (0+255),w,b
 16595  007400  0101               	movlb	1	; () banked
 16596  007402  51A1               	movf	(_flickerTime+1)& (0+255),w,b
 16597  007404  0100               	movlb	0	; () banked
 16598  007406  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 16599  007408  0101               	movlb	1	; () banked
 16600  00740A  51A2               	movf	(_flickerTime+2)& (0+255),w,b
 16601  00740C  0100               	movlb	0	; () banked
 16602  00740E  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 16603  007410  0101               	movlb	1	; () banked
 16604  007412  51A3               	movf	(_flickerTime+3)& (0+255),w,b
 16605  007414  0100               	movlb	0	; () banked
 16606  007416  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 16607  007418  A0D8               	btfss	status,0,c
 16608  00741A  0012               	return	
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;StatusLeds.c: 155: if (flimState == fsSLiM) {
 16612  00741C  5016               	movf	_flimState^0,w,c
 16613  00741E  A4D8               	btfss	status,2,c
 16614  007420  D002               	goto	l2577
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;StatusLeds.c: 156: LATBbits.LATB6 = 0;
 16618  007422  9C8A               	bcf	138,6,c	;volatile
 16619                           
 16620                           ;StatusLeds.c: 157: } else {
 16621  007424  D001               	goto	l21671
 16622  007426                     l2577:
 16623                           
 16624                           ; BSR set to: 0
 16625                           ;StatusLeds.c: 158: LATBbits.LATB7 = 0;
 16626  007426  9E8A               	bcf	138,7,c	;volatile
 16627  007428                     l21671:
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;StatusLeds.c: 159: };StatusLeds.c: 160: flickerState = flickOff;
 16631  007428  0E00               	movlw	0
 16632  00742A  0101               	movlb	1	; () banked
 16633  00742C  6FD2               	movwf	_flickerState& (0+255),b
 16634  00742E  0012               	return	
 16635  007430                     l21675:
 16636  007430  0101               	movlb	1	; () banked
 16637  007432  51D2               	movf	_flickerState& (0+255),w,b
 16638                           
 16639                           ; Switch size 1, requested type "simple"
 16640                           ; Number of cases is 2, Range of values is 1 to 2
 16641                           ; switch strategies available:
 16642                           ; Name         Instructions Cycles
 16643                           ; simple_byte            7     4 (average)
 16644                           ;	Chosen strategy is simple_byte
 16645  007434  0A01               	xorlw	1	; case 1
 16646  007436  B4D8               	btfsc	status,2,c
 16647  007438  D7D4               	goto	l21659
 16648  00743A  0A03               	xorlw	3	; case 2
 16649  00743C  A4D8               	btfss	status,2,c
 16650  00743E  0012               	return	
 16651  007440  D7D9               	goto	l21665
 16652  007442                     __end_of_checkFlashing:
 16653                           	callstack 0
 16654                           
 16655 ;; *************** function _checkCBUS *****************
 16656 ;; Defined at:
 16657 ;;		line 623 in file "../../github/CANMIOfirmware/main.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;		None
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;  msg            20    0[BANK2 ] unsigned char [20]
 16662 ;; Return value:  Size  Location     Type
 16663 ;;                  1    wreg      unsigned char 
 16664 ;; Registers used:
 16665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16666 ;; Tracked objects:
 16667 ;;		On entry : 0/0
 16668 ;;		On exit  : 0/0
 16669 ;;		Unchanged: 0/0
 16670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;Total ram usage:       20 bytes
 16676 ;; Hardware stack levels used: 1
 16677 ;; Hardware stack levels required when called: 27
 16678 ;; This function calls:
 16679 ;;		_cbusMsgReceived
 16680 ;;		_cbusSendOpcMyNN
 16681 ;;		_factoryReset
 16682 ;;		_longFlicker
 16683 ;;		_parseCBUSMsg
 16684 ;;		_shortFlicker
 16685 ;;		_thisNN
 16686 ;; This function is called by:
 16687 ;;		_main
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text64
 16692  008D68                     __ptext64:
 16693                           	callstack 0
 16694  008D68                     _checkCBUS:
 16695                           	callstack 3
 16696                           
 16697                           ;main.c: 624: BYTE msg[20];;main.c: 626: if (cbusMsgReceived( 0, (BYTE *)msg )) {
 16698                           
 16699                           ;incstack = 0
 16700  008D68  0ECC               	movlw	low checkCBUS@msg
 16701  008D6A  0100               	movlb	0	; () banked
 16702  008D6C  6FA1               	movwf	cbusMsgReceived@msg& (0+255),b
 16703  008D6E  0E02               	movlw	high checkCBUS@msg
 16704  008D70  6FA2               	movwf	(cbusMsgReceived@msg+1)& (0+255),b
 16705  008D72  0E00               	movlw	0
 16706  008D74  EC83  F052         	call	_cbusMsgReceived
 16707  008D78  0900               	iorlw	0
 16708  008D7A  B4D8               	btfsc	status,2,c
 16709  008D7C  0012               	return	
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;main.c: 627: shortFlicker();
 16713  008D7E  EC51  F048         	call	_shortFlicker	;wreg free
 16714                           
 16715                           ; BSR set to: 1
 16716                           ;main.c: 628: if (parseCBUSMsg(msg)) {
 16717  008D82  0ECC               	movlw	low checkCBUS@msg
 16718  008D84  0100               	movlb	0	; () banked
 16719  008D86  6FE4               	movwf	parseCBUSMsg@msg& (0+255),b
 16720  008D88  0E02               	movlw	high checkCBUS@msg
 16721  008D8A  6FE5               	movwf	(parseCBUSMsg@msg+1)& (0+255),b
 16722  008D8C  ECB1  F04D         	call	_parseCBUSMsg	;wreg free
 16723  008D90  0900               	iorlw	0
 16724  008D92  B4D8               	btfsc	status,2,c
 16725  008D94  D003               	goto	l21401
 16726                           
 16727                           ; BSR set to: 0
 16728                           ;main.c: 629: longFlicker();
 16729  008D96  ECE0  F050         	call	_longFlicker	;wreg free
 16730  008D9A  0012               	return	
 16731  008D9C                     l21401:
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;main.c: 631: };main.c: 632: if (thisNN(msg)) {
 16735  008D9C  0ECC               	movlw	low checkCBUS@msg
 16736  008D9E  6F71               	movwf	thisNN@rx_ptr& (0+255),b
 16737  008DA0  0E02               	movlw	high checkCBUS@msg
 16738  008DA2  6F72               	movwf	(thisNN@rx_ptr+1)& (0+255),b
 16739  008DA4  EC90  F049         	call	_thisNN	;wreg free
 16740  008DA8  0900               	iorlw	0
 16741  008DAA  B4D8               	btfsc	status,2,c
 16742  008DAC  0012               	return	
 16743  008DAE  D014               	goto	l21415
 16744  008DB0                     l21405:
 16745                           
 16746                           ; BSR set to: 2
 16747                           ;main.c: 636: if (flimState == fsFLiMLearn) {
 16748  008DB0  0E07               	movlw	7
 16749  008DB2  1816               	xorwf	_flimState^0,w,c
 16750  008DB4  A4D8               	btfss	status,2,c
 16751  008DB6  D003               	goto	l21409
 16752                           
 16753                           ; BSR set to: 2
 16754                           ;main.c: 637: factoryReset();
 16755  008DB8  EC63  F053         	call	_factoryReset	;wreg free
 16756                           
 16757                           ;main.c: 638: }
 16758  008DBC  0012               	return	
 16759  008DBE                     l21409:
 16760                           
 16761                           ; BSR set to: 2
 16762                           ;main.c: 639: else;main.c: 640: {;main.c: 641: cbusMsg[d3] = 2;
 16763  008DBE  0E02               	movlw	2
 16764  008DC0  6E25               	movwf	(_cbusMsg+9)^0,c
 16765                           
 16766                           ; BSR set to: 2
 16767                           ;main.c: 642: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 16768  008DC2  0E6F               	movlw	111
 16769  008DC4  0100               	movlb	0	; () banked
 16770  008DC6  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 16771  008DC8  0E1C               	movlw	low _cbusMsg
 16772  008DCA  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 16773  008DCC  0E00               	movlw	0
 16774  008DCE  EC65  F052         	call	_cbusSendOpcMyNN
 16775  008DD2  0012               	return	
 16776  008DD4                     l594:
 16777                           
 16778                           ; BSR set to: 2
 16779  008DD4  00FF               	reset		;# 
 16780                           
 16781                           ;main.c: 649: }
 16782  008DD6  0012               	return	
 16783  008DD8                     l21415:
 16784                           
 16785                           ; BSR set to: 0
 16786  008DD8  0102               	movlb	2	; () banked
 16787  008DDA  51D2               	movf	(checkCBUS@msg+6)& (0+255),w,b
 16788                           
 16789                           ; Switch size 1, requested type "simple"
 16790                           ; Number of cases is 2, Range of values is 79 to 94
 16791                           ; switch strategies available:
 16792                           ; Name         Instructions Cycles
 16793                           ; simple_byte            7     4 (average)
 16794                           ;	Chosen strategy is simple_byte
 16795  008DDC  0A4F               	xorlw	79	; case 79
 16796  008DDE  B4D8               	btfsc	status,2,c
 16797  008DE0  D7E7               	goto	l21405
 16798  008DE2  0A11               	xorlw	17	; case 94
 16799  008DE4  A4D8               	btfss	status,2,c
 16800  008DE6  0012               	return	
 16801  008DE8  D7F5               	goto	l594
 16802  008DEA                     __end_of_checkCBUS:
 16803                           	callstack 0
 16804                           
 16805 ;; *************** function _shortFlicker *****************
 16806 ;; Defined at:
 16807 ;;		line 169 in file "../../github/CBUSlib/StatusLeds.c"
 16808 ;; Parameters:    Size  Location     Type
 16809 ;;		None
 16810 ;; Auto vars:     Size  Location     Type
 16811 ;;		None
 16812 ;; Return value:  Size  Location     Type
 16813 ;;                  1    wreg      void 
 16814 ;; Registers used:
 16815 ;;		wreg, status,2, status,0, cstack
 16816 ;; Tracked objects:
 16817 ;;		On entry : 3F/0
 16818 ;;		On exit  : 3F/1
 16819 ;;		Unchanged: 0/0
 16820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16823 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;Total ram usage:        4 bytes
 16826 ;; Hardware stack levels used: 1
 16827 ;; Hardware stack levels required when called: 9
 16828 ;; This function calls:
 16829 ;;		_tickGet
 16830 ;; This function is called by:
 16831 ;;		_checkCBUS
 16832 ;; This function uses a non-reentrant model
 16833 ;;
 16834                           
 16835                           	psect	text65
 16836  0090A2                     __ptext65:
 16837                           	callstack 0
 16838  0090A2                     _shortFlicker:
 16839                           	callstack 20
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;StatusLeds.c: 170: if (flickerTime.Val < tickGet() + (62500/10)) {
 16843                           
 16844                           ;incstack = 0
 16845  0090A2  EC9D  F04B         	call	_tickGet	;wreg free
 16846  0090A6  0E6A               	movlw	106
 16847  0090A8  2571               	addwf	?_tickGet& (0+255),w,b
 16848  0090AA  6F7B               	movwf	??_shortFlicker& (0+255),b
 16849  0090AC  0E18               	movlw	24
 16850  0090AE  2172               	addwfc	(?_tickGet+1)& (0+255),w,b
 16851  0090B0  6F7C               	movwf	(??_shortFlicker+1)& (0+255),b
 16852  0090B2  0E00               	movlw	0
 16853  0090B4  2173               	addwfc	(?_tickGet+2)& (0+255),w,b
 16854  0090B6  6F7D               	movwf	(??_shortFlicker+2)& (0+255),b
 16855  0090B8  0E00               	movlw	0
 16856  0090BA  2174               	addwfc	(?_tickGet+3)& (0+255),w,b
 16857  0090BC  6F7E               	movwf	(??_shortFlicker+3)& (0+255),b
 16858  0090BE  517B               	movf	??_shortFlicker& (0+255),w,b
 16859  0090C0  0101               	movlb	1	; () banked
 16860  0090C2  5DA0               	subwf	_flickerTime& (0+255),w,b
 16861  0090C4  0100               	movlb	0	; () banked
 16862  0090C6  517C               	movf	(??_shortFlicker+1)& (0+255),w,b
 16863  0090C8  0101               	movlb	1	; () banked
 16864  0090CA  59A1               	subwfb	(_flickerTime+1)& (0+255),w,b
 16865  0090CC  0100               	movlb	0	; () banked
 16866  0090CE  517D               	movf	(??_shortFlicker+2)& (0+255),w,b
 16867  0090D0  0101               	movlb	1	; () banked
 16868  0090D2  59A2               	subwfb	(_flickerTime+2)& (0+255),w,b
 16869  0090D4  0100               	movlb	0	; () banked
 16870  0090D6  517E               	movf	(??_shortFlicker+3)& (0+255),w,b
 16871  0090D8  0101               	movlb	1	; () banked
 16872  0090DA  59A3               	subwfb	(_flickerTime+3)& (0+255),w,b
 16873  0090DC  B0D8               	btfsc	status,0,c
 16874  0090DE  0012               	return	
 16875                           
 16876                           ; BSR set to: 1
 16877                           ;StatusLeds.c: 171: flickerTime.Val = tickGet() + (62500/10);
 16878  0090E0  EC9D  F04B         	call	_tickGet	;wreg free
 16879  0090E4  0E6A               	movlw	106
 16880  0090E6  2571               	addwf	?_tickGet& (0+255),w,b
 16881  0090E8  0101               	movlb	1	; () banked
 16882  0090EA  6FA0               	movwf	_flickerTime& (0+255),b
 16883  0090EC  0E18               	movlw	24
 16884  0090EE  0100               	movlb	0	; () banked
 16885  0090F0  2172               	addwfc	(?_tickGet+1)& (0+255),w,b
 16886  0090F2  0101               	movlb	1	; () banked
 16887  0090F4  6FA1               	movwf	(_flickerTime+1)& (0+255),b
 16888  0090F6  0E00               	movlw	0
 16889  0090F8  0100               	movlb	0	; () banked
 16890  0090FA  2173               	addwfc	(?_tickGet+2)& (0+255),w,b
 16891  0090FC  0101               	movlb	1	; () banked
 16892  0090FE  6FA2               	movwf	(_flickerTime+2)& (0+255),b
 16893  009100  0E00               	movlw	0
 16894  009102  0100               	movlb	0	; () banked
 16895  009104  2174               	addwfc	(?_tickGet+3)& (0+255),w,b
 16896  009106  0101               	movlb	1	; () banked
 16897  009108  6FA3               	movwf	(_flickerTime+3)& (0+255),b
 16898                           
 16899                           ; BSR set to: 1
 16900                           ;StatusLeds.c: 172: flickerState = flickWaitingOn;
 16901  00910A  0E01               	movlw	1
 16902  00910C  6FD2               	movwf	_flickerState& (0+255),b
 16903                           
 16904                           ; BSR set to: 1
 16905  00910E  0012               	return		;funcret
 16906  009110                     __end_of_shortFlicker:
 16907                           	callstack 0
 16908                           
 16909 ;; *************** function _parseCBUSMsg *****************
 16910 ;; Defined at:
 16911 ;;		line 301 in file "../../github/CBUSlib/FliM.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  msg             2  132[BANK0 ] PTR unsigned char 
 16914 ;;		 -> checkCBUS@msg(20), 
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;		None
 16917 ;; Return value:  Size  Location     Type
 16918 ;;                  1    wreg      unsigned char 
 16919 ;; Registers used:
 16920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16921 ;; Tracked objects:
 16922 ;;		On entry : 3F/0
 16923 ;;		On exit  : 3F/0
 16924 ;;		Unchanged: 0/0
 16925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16930 ;;Total ram usage:        2 bytes
 16931 ;; Hardware stack levels used: 1
 16932 ;; Hardware stack levels required when called: 26
 16933 ;; This function calls:
 16934 ;;		_parseCbusEvent
 16935 ;;		_parseFLiMCmd
 16936 ;; This function is called by:
 16937 ;;		_checkCBUS
 16938 ;; This function uses a non-reentrant model
 16939 ;;
 16940                           
 16941                           	psect	text66
 16942  009B62                     __ptext66:
 16943                           	callstack 0
 16944  009B62                     _parseCBUSMsg:
 16945                           	callstack 3
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;FliM.c: 305: if (((msg[d0] & 0b10010000) == 0b10010000) && ((~msg[d0] & 0b00000110)== 0
      +                          b00000110))
 16949                           
 16950                           ; BSR set to: 1
 16951                           ;incstack = 0
 16952  009B62  EE20 F006          	lfsr	2,6
 16953  009B66  51E4               	movf	parseCBUSMsg@msg& (0+255),w,b
 16954  009B68  26D9               	addwf	fsr2l,f,c
 16955  009B6A  51E5               	movf	(parseCBUSMsg@msg+1)& (0+255),w,b
 16956  009B6C  22DA               	addwfc	fsr2h,f,c
 16957  009B6E  50DF               	movf	indf2,w,c
 16958  009B70  0B90               	andlw	144
 16959  009B72  0A90               	xorlw	144
 16960  009B74  A4D8               	btfss	status,2,c
 16961  009B76  D013               	goto	l20435
 16962                           
 16963                           ; BSR set to: 0
 16964  009B78  EE20 F006          	lfsr	2,6
 16965  009B7C  51E4               	movf	parseCBUSMsg@msg& (0+255),w,b
 16966  009B7E  26D9               	addwf	fsr2l,f,c
 16967  009B80  51E5               	movf	(parseCBUSMsg@msg+1)& (0+255),w,b
 16968  009B82  22DA               	addwfc	fsr2h,f,c
 16969  009B84  50DF               	movf	indf2,w,c
 16970  009B86  0AFF               	xorlw	255
 16971  009B88  0B06               	andlw	6
 16972  009B8A  0A06               	xorlw	6
 16973  009B8C  A4D8               	btfss	status,2,c
 16974  009B8E  D007               	goto	l20435
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;FliM.c: 306: {;FliM.c: 308: return parseCbusEvent(msg);
 16978  009B90  C0E4  F09B         	movff	parseCBUSMsg@msg,parseCbusEvent@msg
 16979  009B94  C0E5  F09C         	movff	parseCBUSMsg@msg+1,parseCbusEvent@msg+1
 16980  009B98  ECC2  F040         	call	_parseCbusEvent	;wreg free
 16981  009B9C  0012               	return	
 16982  009B9E                     l20435:
 16983                           
 16984                           ; BSR set to: 0
 16985                           ;FliM.c: 309: };FliM.c: 312: return( parseFLiMCmd(msg));
 16986  009B9E  C0E4  F0E1         	movff	parseCBUSMsg@msg,parseFLiMCmd@rx_ptr
 16987  009BA2  C0E5  F0E2         	movff	parseCBUSMsg@msg+1,parseFLiMCmd@rx_ptr+1
 16988  009BA6  EC1E  F018         	call	_parseFLiMCmd	;wreg free
 16989                           
 16990                           ; BSR set to: 0
 16991  009BAA  0012               	return		;funcret
 16992  009BAC                     __end_of_parseCBUSMsg:
 16993                           	callstack 0
 16994                           
 16995 ;; *************** function _parseFLiMCmd *****************
 16996 ;; Defined at:
 16997 ;;		line 323 in file "../../github/CBUSlib/FliM.c"
 16998 ;; Parameters:    Size  Location     Type
 16999 ;;  rx_ptr          2  129[BANK0 ] PTR unsigned char 
 17000 ;;		 -> checkCBUS@msg(20), 
 17001 ;; Auto vars:     Size  Location     Type
 17002 ;;  cmdProcessed    1  131[BANK0 ] unsigned char 
 17003 ;; Return value:  Size  Location     Type
 17004 ;;                  1    wreg      unsigned char 
 17005 ;; Registers used:
 17006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17007 ;; Tracked objects:
 17008 ;;		On entry : 3F/0
 17009 ;;		On exit  : 3F/0
 17010 ;;		Unchanged: 0/0
 17011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17014 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17015 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;Total ram usage:        9 bytes
 17017 ;; Hardware stack levels used: 1
 17018 ;; Hardware stack levels required when called: 25
 17019 ;; This function calls:
 17020 ;;		_QNNrespond
 17021 ;;		_doAreq
 17022 ;;		_doEnum
 17023 ;;		_doError
 17024 ;;		_doEvlrn
 17025 ;;		_doEvuln
 17026 ;;		_doNenrd
 17027 ;;		_doNerd
 17028 ;;		_doNnclr
 17029 ;;		_doNnevn
 17030 ;;		_doNvrd
 17031 ;;		_doNvset
 17032 ;;		_doReqev
 17033 ;;		_doReval
 17034 ;;		_doRqevn
 17035 ;;		_doRqmn
 17036 ;;		_doRqnp
 17037 ;;		_doRqnpn
 17038 ;;		_doSnn
 17039 ;;		_ee_write
 17040 ;;		_setNewCanId
 17041 ;;		_thisNN
 17042 ;; This function is called by:
 17043 ;;		_parseCBUSMsg
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text67
 17048  00303C                     __ptext67:
 17049                           	callstack 0
 17050  00303C                     _parseFLiMCmd:
 17051                           	callstack 3
 17052                           
 17053                           ; BSR set to: 0
 17054                           ;FliM.c: 326: BOOL cmdProcessed = 0;
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;incstack = 0
 17058  00303C  0E00               	movlw	0
 17059  00303E  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;FliM.c: 332: if (flimState == fsFLiMLearn)
 17063  003040  0E07               	movlw	7
 17064  003042  1816               	xorwf	_flimState^0,w,c
 17065  003044  A4D8               	btfss	status,2,c
 17066  003046  D126               	goto	l20221
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;FliM.c: 333: {;FliM.c: 334: cmdProcessed = 1;
 17070  003048  0E01               	movlw	1
 17071  00304A  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17072                           
 17073                           ;FliM.c: 336: switch(rx_ptr[d0])
 17074  00304C  D106               	goto	l20219
 17075  00304E                     l20199:
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;FliM.c: 339: if (thisNN(rx_ptr))
 17079  00304E  C0E1  F071         	movff	parseFLiMCmd@rx_ptr,thisNN@rx_ptr
 17080  003052  C0E2  F072         	movff	parseFLiMCmd@rx_ptr+1,thisNN@rx_ptr+1
 17081  003056  EC90  F049         	call	_thisNN	;wreg free
 17082  00305A  0900               	iorlw	0
 17083  00305C  A4D8               	btfss	status,2,c
 17084  00305E  D11A               	goto	l20221
 17085  003060                     l20203:
 17086                           
 17087                           ; BSR set to: 0
 17088                           ;FliM.c: 344: flimState = fsFLiM;
 17089  003060  0E01               	movlw	1
 17090  003062  6E16               	movwf	_flimState^0,c
 17091                           
 17092                           ;FliM.c: 345: break;
 17093  003064  D117               	goto	l20221
 17094  003066                     l20205:
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;FliM.c: 349: doNnclr();
 17098  003066  ECB0  F050         	call	_doNnclr	;wreg free
 17099                           
 17100                           ;FliM.c: 350: break;
 17101  00306A  D114               	goto	l20221
 17102  00306C                     l20207:
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;FliM.c: 354: doEvuln( (((WORD)rx_ptr[d1]) << 8) + rx_ptr[d2], (((WORD)rx_ptr[d3]) << 8)
      +                           + rx_ptr[d4]);
 17106  00306C  EE20 F008          	lfsr	2,8
 17107  003070  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17108  003072  26D9               	addwf	fsr2l,f,c
 17109  003074  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17110  003076  22DA               	addwfc	fsr2h,f,c
 17111  003078  50DF               	movf	indf2,w,c
 17112  00307A  0101               	movlb	1	; () banked
 17113  00307C  6FED               	movwf	??_parseFLiMCmd& (0+255),b
 17114  00307E  0100               	movlb	0	; () banked
 17115  003080  EE20 F007          	lfsr	2,7
 17116  003084  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17117  003086  26D9               	addwf	fsr2l,f,c
 17118  003088  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17119  00308A  22DA               	addwfc	fsr2h,f,c
 17120  00308C  50DF               	movf	indf2,w,c
 17121  00308E  0101               	movlb	1	; () banked
 17122  003090  6FEE               	movwf	(??_parseFLiMCmd+1)& (0+255),b
 17123  003092  51ED               	movf	??_parseFLiMCmd& (0+255),w,b
 17124  003094  0100               	movlb	0	; () banked
 17125  003096  6FA4               	movwf	doEvuln@nodeNumber& (0+255),b
 17126  003098  C1EE  F0A5         	movff	??_parseFLiMCmd+1,doEvuln@nodeNumber+1
 17127  00309C  EE20 F00A          	lfsr	2,10
 17128  0030A0  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17129  0030A2  26D9               	addwf	fsr2l,f,c
 17130  0030A4  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17131  0030A6  22DA               	addwfc	fsr2h,f,c
 17132  0030A8  50DF               	movf	indf2,w,c
 17133  0030AA  0101               	movlb	1	; () banked
 17134  0030AC  6FF0               	movwf	(??_parseFLiMCmd+3)& (0+255),b
 17135  0030AE  0100               	movlb	0	; () banked
 17136  0030B0  EE20 F009          	lfsr	2,9
 17137  0030B4  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17138  0030B6  26D9               	addwf	fsr2l,f,c
 17139  0030B8  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17140  0030BA  22DA               	addwfc	fsr2h,f,c
 17141  0030BC  50DF               	movf	indf2,w,c
 17142  0030BE  0101               	movlb	1	; () banked
 17143  0030C0  6FF1               	movwf	(??_parseFLiMCmd+4)& (0+255),b
 17144  0030C2  51F0               	movf	(??_parseFLiMCmd+3)& (0+255),w,b
 17145  0030C4  0100               	movlb	0	; () banked
 17146  0030C6  6FA6               	movwf	doEvuln@eventNumber& (0+255),b
 17147  0030C8  C1F1  F0A7         	movff	??_parseFLiMCmd+4,doEvuln@eventNumber+1
 17148  0030CC  ECF7  F052         	call	_doEvuln	;wreg free
 17149                           
 17150                           ;FliM.c: 355: break;
 17151  0030D0  D0E1               	goto	l20221
 17152  0030D2                     l20209:
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;FliM.c: 359: doEvlrn( (((WORD)rx_ptr[d1]) << 8) + rx_ptr[d2] , (((WORD)rx_ptr[d3]) << 8
      +                          ) + rx_ptr[d4], rx_ptr[d5], rx_ptr[d6]);
 17156  0030D2  EE20 F008          	lfsr	2,8
 17157  0030D6  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17158  0030D8  26D9               	addwf	fsr2l,f,c
 17159  0030DA  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17160  0030DC  22DA               	addwfc	fsr2h,f,c
 17161  0030DE  50DF               	movf	indf2,w,c
 17162  0030E0  0101               	movlb	1	; () banked
 17163  0030E2  6FED               	movwf	??_parseFLiMCmd& (0+255),b
 17164  0030E4  0100               	movlb	0	; () banked
 17165  0030E6  EE20 F007          	lfsr	2,7
 17166  0030EA  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17167  0030EC  26D9               	addwf	fsr2l,f,c
 17168  0030EE  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17169  0030F0  22DA               	addwfc	fsr2h,f,c
 17170  0030F2  50DF               	movf	indf2,w,c
 17171  0030F4  0101               	movlb	1	; () banked
 17172  0030F6  6FEE               	movwf	(??_parseFLiMCmd+1)& (0+255),b
 17173  0030F8  51ED               	movf	??_parseFLiMCmd& (0+255),w,b
 17174  0030FA  0100               	movlb	0	; () banked
 17175  0030FC  6FD0               	movwf	doEvlrn@nodeNumber& (0+255),b
 17176  0030FE  C1EE  F0D1         	movff	??_parseFLiMCmd+1,doEvlrn@nodeNumber+1
 17177  003102  EE20 F00A          	lfsr	2,10
 17178  003106  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17179  003108  26D9               	addwf	fsr2l,f,c
 17180  00310A  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17181  00310C  22DA               	addwfc	fsr2h,f,c
 17182  00310E  50DF               	movf	indf2,w,c
 17183  003110  0101               	movlb	1	; () banked
 17184  003112  6FF0               	movwf	(??_parseFLiMCmd+3)& (0+255),b
 17185  003114  0100               	movlb	0	; () banked
 17186  003116  EE20 F009          	lfsr	2,9
 17187  00311A  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17188  00311C  26D9               	addwf	fsr2l,f,c
 17189  00311E  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17190  003120  22DA               	addwfc	fsr2h,f,c
 17191  003122  50DF               	movf	indf2,w,c
 17192  003124  0101               	movlb	1	; () banked
 17193  003126  6FF1               	movwf	(??_parseFLiMCmd+4)& (0+255),b
 17194  003128  51F0               	movf	(??_parseFLiMCmd+3)& (0+255),w,b
 17195  00312A  0100               	movlb	0	; () banked
 17196  00312C  6FD2               	movwf	doEvlrn@eventNumber& (0+255),b
 17197  00312E  C1F1  F0D3         	movff	??_parseFLiMCmd+4,doEvlrn@eventNumber+1
 17198  003132  EE20 F00B          	lfsr	2,11
 17199  003136  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17200  003138  26D9               	addwf	fsr2l,f,c
 17201  00313A  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17202  00313C  22DA               	addwfc	fsr2h,f,c
 17203  00313E  50DF               	movf	indf2,w,c
 17204  003140  6FD4               	movwf	doEvlrn@evNum& (0+255),b
 17205  003142  EE20 F00C          	lfsr	2,12
 17206  003146  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17207  003148  26D9               	addwf	fsr2l,f,c
 17208  00314A  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17209  00314C  22DA               	addwfc	fsr2h,f,c
 17210  00314E  50DF               	movf	indf2,w,c
 17211  003150  6FD5               	movwf	doEvlrn@evVal& (0+255),b
 17212  003152  ECF4  F048         	call	_doEvlrn	;wreg free
 17213                           
 17214                           ;FliM.c: 360: break;
 17215  003156  D09E               	goto	l20221
 17216  003158                     l20211:
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;FliM.c: 364: doEvlrn((((WORD)rx_ptr[d1]) << 8) + rx_ptr[d2] , (((WORD)rx_ptr[d3]) << 8)
      +                           + rx_ptr[d4], rx_ptr[d6], rx_ptr[d7]);
 17220  003158  EE20 F008          	lfsr	2,8
 17221  00315C  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17222  00315E  26D9               	addwf	fsr2l,f,c
 17223  003160  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17224  003162  22DA               	addwfc	fsr2h,f,c
 17225  003164  50DF               	movf	indf2,w,c
 17226  003166  0101               	movlb	1	; () banked
 17227  003168  6FED               	movwf	??_parseFLiMCmd& (0+255),b
 17228  00316A  0100               	movlb	0	; () banked
 17229  00316C  EE20 F007          	lfsr	2,7
 17230  003170  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17231  003172  26D9               	addwf	fsr2l,f,c
 17232  003174  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17233  003176  22DA               	addwfc	fsr2h,f,c
 17234  003178  50DF               	movf	indf2,w,c
 17235  00317A  0101               	movlb	1	; () banked
 17236  00317C  6FEE               	movwf	(??_parseFLiMCmd+1)& (0+255),b
 17237  00317E  51ED               	movf	??_parseFLiMCmd& (0+255),w,b
 17238  003180  0100               	movlb	0	; () banked
 17239  003182  6FD0               	movwf	doEvlrn@nodeNumber& (0+255),b
 17240  003184  C1EE  F0D1         	movff	??_parseFLiMCmd+1,doEvlrn@nodeNumber+1
 17241  003188  EE20 F00A          	lfsr	2,10
 17242  00318C  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17243  00318E  26D9               	addwf	fsr2l,f,c
 17244  003190  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17245  003192  22DA               	addwfc	fsr2h,f,c
 17246  003194  50DF               	movf	indf2,w,c
 17247  003196  0101               	movlb	1	; () banked
 17248  003198  6FF0               	movwf	(??_parseFLiMCmd+3)& (0+255),b
 17249  00319A  0100               	movlb	0	; () banked
 17250  00319C  EE20 F009          	lfsr	2,9
 17251  0031A0  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17252  0031A2  26D9               	addwf	fsr2l,f,c
 17253  0031A4  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17254  0031A6  22DA               	addwfc	fsr2h,f,c
 17255  0031A8  50DF               	movf	indf2,w,c
 17256  0031AA  0101               	movlb	1	; () banked
 17257  0031AC  6FF1               	movwf	(??_parseFLiMCmd+4)& (0+255),b
 17258  0031AE  51F0               	movf	(??_parseFLiMCmd+3)& (0+255),w,b
 17259  0031B0  0100               	movlb	0	; () banked
 17260  0031B2  6FD2               	movwf	doEvlrn@eventNumber& (0+255),b
 17261  0031B4  C1F1  F0D3         	movff	??_parseFLiMCmd+4,doEvlrn@eventNumber+1
 17262  0031B8  EE20 F00C          	lfsr	2,12
 17263  0031BC  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17264  0031BE  26D9               	addwf	fsr2l,f,c
 17265  0031C0  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17266  0031C2  22DA               	addwfc	fsr2h,f,c
 17267  0031C4  50DF               	movf	indf2,w,c
 17268  0031C6  6FD4               	movwf	doEvlrn@evNum& (0+255),b
 17269  0031C8  EE20 F00D          	lfsr	2,13
 17270  0031CC  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17271  0031CE  26D9               	addwf	fsr2l,f,c
 17272  0031D0  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17273  0031D2  22DA               	addwfc	fsr2h,f,c
 17274  0031D4  50DF               	movf	indf2,w,c
 17275  0031D6  6FD5               	movwf	doEvlrn@evVal& (0+255),b
 17276  0031D8  ECF4  F048         	call	_doEvlrn	;wreg free
 17277                           
 17278                           ;FliM.c: 365: break;
 17279  0031DC  D05B               	goto	l20221
 17280  0031DE                     l20213:
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;FliM.c: 369: doReqev((((WORD)rx_ptr[d1]) << 8) + rx_ptr[d2] , (((WORD)rx_ptr[d3]) << 8)
      +                           + rx_ptr[d4], rx_ptr[d5]);
 17284  0031DE  EE20 F008          	lfsr	2,8
 17285  0031E2  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17286  0031E4  26D9               	addwf	fsr2l,f,c
 17287  0031E6  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17288  0031E8  22DA               	addwfc	fsr2h,f,c
 17289  0031EA  50DF               	movf	indf2,w,c
 17290  0031EC  0101               	movlb	1	; () banked
 17291  0031EE  6FED               	movwf	??_parseFLiMCmd& (0+255),b
 17292  0031F0  0100               	movlb	0	; () banked
 17293  0031F2  EE20 F007          	lfsr	2,7
 17294  0031F6  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17295  0031F8  26D9               	addwf	fsr2l,f,c
 17296  0031FA  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17297  0031FC  22DA               	addwfc	fsr2h,f,c
 17298  0031FE  50DF               	movf	indf2,w,c
 17299  003200  0101               	movlb	1	; () banked
 17300  003202  6FEE               	movwf	(??_parseFLiMCmd+1)& (0+255),b
 17301  003204  51ED               	movf	??_parseFLiMCmd& (0+255),w,b
 17302  003206  0100               	movlb	0	; () banked
 17303  003208  6F9B               	movwf	doReqev@nodeNumber& (0+255),b
 17304  00320A  C1EE  F09C         	movff	??_parseFLiMCmd+1,doReqev@nodeNumber+1
 17305  00320E  EE20 F00A          	lfsr	2,10
 17306  003212  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17307  003214  26D9               	addwf	fsr2l,f,c
 17308  003216  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17309  003218  22DA               	addwfc	fsr2h,f,c
 17310  00321A  50DF               	movf	indf2,w,c
 17311  00321C  0101               	movlb	1	; () banked
 17312  00321E  6FF0               	movwf	(??_parseFLiMCmd+3)& (0+255),b
 17313  003220  0100               	movlb	0	; () banked
 17314  003222  EE20 F009          	lfsr	2,9
 17315  003226  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17316  003228  26D9               	addwf	fsr2l,f,c
 17317  00322A  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17318  00322C  22DA               	addwfc	fsr2h,f,c
 17319  00322E  50DF               	movf	indf2,w,c
 17320  003230  0101               	movlb	1	; () banked
 17321  003232  6FF1               	movwf	(??_parseFLiMCmd+4)& (0+255),b
 17322  003234  51F0               	movf	(??_parseFLiMCmd+3)& (0+255),w,b
 17323  003236  0100               	movlb	0	; () banked
 17324  003238  6F9D               	movwf	doReqev@eventNumber& (0+255),b
 17325  00323A  C1F1  F09E         	movff	??_parseFLiMCmd+4,doReqev@eventNumber+1
 17326  00323E  EE20 F00B          	lfsr	2,11
 17327  003242  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17328  003244  26D9               	addwf	fsr2l,f,c
 17329  003246  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17330  003248  22DA               	addwfc	fsr2h,f,c
 17331  00324A  50DF               	movf	indf2,w,c
 17332  00324C  6F9F               	movwf	doReqev@evNum& (0+255),b
 17333  00324E  EC6B  F040         	call	_doReqev	;wreg free
 17334                           
 17335                           ;FliM.c: 370: break;
 17336  003252  D020               	goto	l20221
 17337  003254                     l20215:
 17338                           
 17339                           ; BSR set to: 0
 17340                           ;FliM.c: 373: cmdProcessed = 0;
 17341  003254  0E00               	movlw	0
 17342  003256  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17343                           
 17344                           ;FliM.c: 374: break;
 17345  003258  D01D               	goto	l20221
 17346  00325A                     l20219:
 17347                           
 17348                           ; BSR set to: 0
 17349  00325A  EE20 F006          	lfsr	2,6
 17350  00325E  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17351  003260  26D9               	addwf	fsr2l,f,c
 17352  003262  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17353  003264  22DA               	addwfc	fsr2h,f,c
 17354  003266  50DF               	movf	indf2,w,c
 17355                           
 17356                           ; Switch size 1, requested type "simple"
 17357                           ; Number of cases is 7, Range of values is 83 to 245
 17358                           ; switch strategies available:
 17359                           ; Name         Instructions Cycles
 17360                           ; simple_byte           22    12 (average)
 17361                           ;	Chosen strategy is simple_byte
 17362  003268  0A53               	xorlw	83	; case 83
 17363  00326A  B4D8               	btfsc	status,2,c
 17364  00326C  D6F0               	goto	l20199
 17365  00326E  0A07               	xorlw	7	; case 84
 17366  003270  B4D8               	btfsc	status,2,c
 17367  003272  D6F6               	goto	l20203
 17368  003274  0A01               	xorlw	1	; case 85
 17369  003276  B4D8               	btfsc	status,2,c
 17370  003278  D6F6               	goto	l20205
 17371  00327A  0AC0               	xorlw	192	; case 149
 17372  00327C  B4D8               	btfsc	status,2,c
 17373  00327E  D6F6               	goto	l20207
 17374  003280  0A27               	xorlw	39	; case 178
 17375  003282  B4D8               	btfsc	status,2,c
 17376  003284  D7AC               	goto	l20213
 17377  003286  0A60               	xorlw	96	; case 210
 17378  003288  B4D8               	btfsc	status,2,c
 17379  00328A  D723               	goto	l20209
 17380  00328C  0A27               	xorlw	39	; case 245
 17381  00328E  B4D8               	btfsc	status,2,c
 17382  003290  D763               	goto	l20211
 17383  003292  D7E0               	goto	l20215
 17384  003294                     l20221:
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;FliM.c: 376: };FliM.c: 378: if (!cmdProcessed && thisNN(rx_ptr))
 17388  003294  51E3               	movf	parseFLiMCmd@cmdProcessed& (0+255),w,b
 17389  003296  A4D8               	btfss	status,2,c
 17390  003298  D102               	goto	l20269
 17391                           
 17392                           ; BSR set to: 0
 17393  00329A  C0E1  F071         	movff	parseFLiMCmd@rx_ptr,thisNN@rx_ptr
 17394  00329E  C0E2  F072         	movff	parseFLiMCmd@rx_ptr+1,thisNN@rx_ptr+1
 17395  0032A2  EC90  F049         	call	_thisNN	;wreg free
 17396  0032A6  0900               	iorlw	0
 17397  0032A8  B4D8               	btfsc	status,2,c
 17398  0032AA  D0F9               	goto	l20269
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;FliM.c: 379: {;FliM.c: 380: cmdProcessed = 1;
 17402  0032AC  0E01               	movlw	1
 17403  0032AE  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17404                           
 17405                           ;FliM.c: 382: switch(rx_ptr[d0])
 17406  0032B0  D0C4               	goto	l20267
 17407  0032B2                     l20227:
 17408                           
 17409                           ; BSR set to: 0
 17410                           ;FliM.c: 386: doRqnpn(rx_ptr[d3]);
 17411  0032B2  EE20 F009          	lfsr	2,9
 17412  0032B6  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17413  0032B8  26D9               	addwf	fsr2l,f,c
 17414  0032BA  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17415  0032BC  22DA               	addwfc	fsr2h,f,c
 17416  0032BE  50DF               	movf	indf2,w,c
 17417  0032C0  EC9A  F03A         	call	_doRqnpn
 17418                           
 17419                           ;FliM.c: 387: break;
 17420  0032C4  D0EC               	goto	l20269
 17421  0032C6                     l20229:
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;FliM.c: 391: if (flimState == fsFLiM)
 17425  0032C6  0416               	decf	_flimState^0,w,c
 17426  0032C8  A4D8               	btfss	status,2,c
 17427  0032CA  D0E9               	goto	l20269
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;FliM.c: 392: flimState = fsFLiMLearn;
 17431  0032CC  0E07               	movlw	7
 17432  0032CE  6E16               	movwf	_flimState^0,c
 17433  0032D0  D0E6               	goto	l20269
 17434  0032D2                     l20233:
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;FliM.c: 397: doNnevn();
 17438  0032D2  EC1F  F04E         	call	_doNnevn	;wreg free
 17439                           
 17440                           ;FliM.c: 398: break;
 17441  0032D6  D0E3               	goto	l20269
 17442  0032D8                     l20235:
 17443                           
 17444                           ; BSR set to: 0
 17445                           ;FliM.c: 402: doNerd();
 17446  0032D8  EC5E  F053         	call	_doNerd	;wreg free
 17447                           
 17448                           ;FliM.c: 403: break;
 17449  0032DC  D0E0               	goto	l20269
 17450  0032DE                     l20237:
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;FliM.c: 407: doNenrd(rx_ptr[d3]);
 17454  0032DE  EE20 F009          	lfsr	2,9
 17455  0032E2  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17456  0032E4  26D9               	addwf	fsr2l,f,c
 17457  0032E6  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17458  0032E8  22DA               	addwfc	fsr2h,f,c
 17459  0032EA  50DF               	movf	indf2,w,c
 17460  0032EC  EC88  F04A         	call	_doNenrd
 17461                           
 17462                           ;FliM.c: 408: break;
 17463  0032F0  D0D6               	goto	l20269
 17464  0032F2                     l20239:
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;FliM.c: 412: doRqevn();
 17468  0032F2  EC98  F050         	call	_doRqevn	;wreg free
 17469                           
 17470                           ;FliM.c: 413: break;
 17471  0032F6  D0D3               	goto	l20269
 17472  0032F8                     l20241:
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;FliM.c: 417: doNvrd(rx_ptr[d3]);
 17476  0032F8  EE20 F009          	lfsr	2,9
 17477  0032FC  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17478  0032FE  26D9               	addwf	fsr2l,f,c
 17479  003300  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17480  003302  22DA               	addwfc	fsr2h,f,c
 17481  003304  50DF               	movf	indf2,w,c
 17482  003306  ECD6  F04D         	call	_doNvrd
 17483                           
 17484                           ;FliM.c: 418: break;
 17485  00330A  D0C9               	goto	l20269
 17486  00330C                     l20243:
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;FliM.c: 422: doNvset(rx_ptr[d3], rx_ptr[d4]);
 17490  00330C  EE20 F00A          	lfsr	2,10
 17491  003310  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17492  003312  26D9               	addwf	fsr2l,f,c
 17493  003314  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17494  003316  22DA               	addwfc	fsr2h,f,c
 17495  003318  50DF               	movf	indf2,w,c
 17496  00331A  6FDA               	movwf	doNvset@NVvalue& (0+255),b
 17497  00331C  EE20 F009          	lfsr	2,9
 17498  003320  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17499  003322  26D9               	addwf	fsr2l,f,c
 17500  003324  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17501  003326  22DA               	addwfc	fsr2h,f,c
 17502  003328  50DF               	movf	indf2,w,c
 17503  00332A  EC15  F042         	call	_doNvset
 17504                           
 17505                           ;FliM.c: 423: break;
 17506  00332E  D0B7               	goto	l20269
 17507  003330                     l20245:
 17508                           
 17509                           ; BSR set to: 0
 17510                           ;FliM.c: 427: doReval(rx_ptr[d3], rx_ptr[d4]);
 17511  003330  EE20 F00A          	lfsr	2,10
 17512  003334  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17513  003336  26D9               	addwf	fsr2l,f,c
 17514  003338  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17515  00333A  22DA               	addwfc	fsr2h,f,c
 17516  00333C  50DF               	movf	indf2,w,c
 17517  00333E  6F94               	movwf	doReval@evNum& (0+255),b
 17518  003340  EE20 F009          	lfsr	2,9
 17519  003344  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17520  003346  26D9               	addwf	fsr2l,f,c
 17521  003348  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17522  00334A  22DA               	addwfc	fsr2h,f,c
 17523  00334C  50DF               	movf	indf2,w,c
 17524  00334E  EC14  F040         	call	_doReval
 17525                           
 17526                           ;FliM.c: 428: break;
 17527  003352  D0A5               	goto	l20269
 17528  003354                     l20247:
 17529                           
 17530                           ; BSR set to: 0
 17531                           ;FliM.c: 433: ee_write((WORD)((BYTE*)(0x3FF)), 0xFF);
 17532  003354  0E03               	movlw	3
 17533  003356  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 17534  003358  6973               	setf	ee_write@addr& (0+255),b
 17535  00335A  0EFF               	movlw	255
 17536  00335C  6F75               	movwf	ee_write@data& (0+255),b
 17537  00335E  EC17  F04D         	call	_ee_write	;wreg free
 17538  003362  00FF               	reset		;# 
 17539                           
 17540                           ;FliM.c: 435: break;
 17541  003364  D09C               	goto	l20269
 17542  003366                     l20249:
 17543                           
 17544                           ; BSR set to: 0
 17545                           ;FliM.c: 439: if (! setNewCanId(rx_ptr[d3])) {
 17546  003366  EE20 F009          	lfsr	2,9
 17547  00336A  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17548  00336C  26D9               	addwf	fsr2l,f,c
 17549  00336E  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17550  003370  22DA               	addwfc	fsr2h,f,c
 17551  003372  50DF               	movf	indf2,w,c
 17552  003374  ECA7  F045         	call	_setNewCanId
 17553  003378  0900               	iorlw	0
 17554  00337A  A4D8               	btfss	status,2,c
 17555  00337C  D090               	goto	l20269
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;FliM.c: 440: doError(7);
 17559  00337E  0E07               	movlw	7
 17560  003380  EC56  F052         	call	_doError
 17561  003384  D08C               	goto	l20269
 17562  003386                     l20253:
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;FliM.c: 445: doEnum(1);
 17566  003386  0E01               	movlw	1
 17567  003388  EC20  F053         	call	_doEnum
 17568                           
 17569                           ;FliM.c: 446: break;
 17570  00338C  D088               	goto	l20269
 17571  00338E                     l20255:
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;FliM.c: 453: doAreq((((WORD)rx_ptr[d1]) << 8) + rx_ptr[d2] , (((WORD)rx_ptr[d3]) << 8) 
      +                          + rx_ptr[d4]);
 17575  00338E  EE20 F008          	lfsr	2,8
 17576  003392  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17577  003394  26D9               	addwf	fsr2l,f,c
 17578  003396  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17579  003398  22DA               	addwfc	fsr2h,f,c
 17580  00339A  50DF               	movf	indf2,w,c
 17581  00339C  0101               	movlb	1	; () banked
 17582  00339E  6FED               	movwf	??_parseFLiMCmd& (0+255),b
 17583  0033A0  0100               	movlb	0	; () banked
 17584  0033A2  EE20 F007          	lfsr	2,7
 17585  0033A6  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17586  0033A8  26D9               	addwf	fsr2l,f,c
 17587  0033AA  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17588  0033AC  22DA               	addwfc	fsr2h,f,c
 17589  0033AE  50DF               	movf	indf2,w,c
 17590  0033B0  0101               	movlb	1	; () banked
 17591  0033B2  6FEE               	movwf	(??_parseFLiMCmd+1)& (0+255),b
 17592  0033B4  51ED               	movf	??_parseFLiMCmd& (0+255),w,b
 17593  0033B6  0100               	movlb	0	; () banked
 17594  0033B8  6F9B               	movwf	doAreq@nodeNumber& (0+255),b
 17595  0033BA  C1EE  F09C         	movff	??_parseFLiMCmd+1,doAreq@nodeNumber+1
 17596  0033BE  EE20 F00A          	lfsr	2,10
 17597  0033C2  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17598  0033C4  26D9               	addwf	fsr2l,f,c
 17599  0033C6  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17600  0033C8  22DA               	addwfc	fsr2h,f,c
 17601  0033CA  50DF               	movf	indf2,w,c
 17602  0033CC  0101               	movlb	1	; () banked
 17603  0033CE  6FF0               	movwf	(??_parseFLiMCmd+3)& (0+255),b
 17604  0033D0  0100               	movlb	0	; () banked
 17605  0033D2  EE20 F009          	lfsr	2,9
 17606  0033D6  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17607  0033D8  26D9               	addwf	fsr2l,f,c
 17608  0033DA  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17609  0033DC  22DA               	addwfc	fsr2h,f,c
 17610  0033DE  50DF               	movf	indf2,w,c
 17611  0033E0  0101               	movlb	1	; () banked
 17612  0033E2  6FF1               	movwf	(??_parseFLiMCmd+4)& (0+255),b
 17613  0033E4  51F0               	movf	(??_parseFLiMCmd+3)& (0+255),w,b
 17614  0033E6  0100               	movlb	0	; () banked
 17615  0033E8  6F9D               	movwf	doAreq@eventNumber& (0+255),b
 17616  0033EA  C1F1  F09E         	movff	??_parseFLiMCmd+4,doAreq@eventNumber+1
 17617  0033EE  EC9A  F037         	call	_doAreq	;wreg free
 17618  0033F2                     l20257:
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;FliM.c: 454: cmdProcessed = 1;
 17622  0033F2  0E01               	movlw	1
 17623  0033F4  D020               	goto	L12
 17624  0033F6                     l20259:
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;FliM.c: 461: doAreq(0 , (((WORD)rx_ptr[d3]) << 8) + rx_ptr[d4]);
 17628  0033F6  0E00               	movlw	0
 17629  0033F8  6F9C               	movwf	(doAreq@nodeNumber+1)& (0+255),b
 17630  0033FA  0E00               	movlw	0
 17631  0033FC  6F9B               	movwf	doAreq@nodeNumber& (0+255),b
 17632  0033FE  EE20 F00A          	lfsr	2,10
 17633  003402  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17634  003404  26D9               	addwf	fsr2l,f,c
 17635  003406  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17636  003408  22DA               	addwfc	fsr2h,f,c
 17637  00340A  50DF               	movf	indf2,w,c
 17638  00340C  0101               	movlb	1	; () banked
 17639  00340E  6FED               	movwf	??_parseFLiMCmd& (0+255),b
 17640  003410  0100               	movlb	0	; () banked
 17641  003412  EE20 F009          	lfsr	2,9
 17642  003416  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17643  003418  26D9               	addwf	fsr2l,f,c
 17644  00341A  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17645  00341C  22DA               	addwfc	fsr2h,f,c
 17646  00341E  50DF               	movf	indf2,w,c
 17647  003420  0101               	movlb	1	; () banked
 17648  003422  6FEE               	movwf	(??_parseFLiMCmd+1)& (0+255),b
 17649  003424  51ED               	movf	??_parseFLiMCmd& (0+255),w,b
 17650  003426  0100               	movlb	0	; () banked
 17651  003428  6F9D               	movwf	doAreq@eventNumber& (0+255),b
 17652  00342A  C1EE  F09E         	movff	??_parseFLiMCmd+1,doAreq@eventNumber+1
 17653  00342E  EC9A  F037         	call	_doAreq	;wreg free
 17654  003432  D7DF               	goto	l20257
 17655  003434                     l20263:
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;FliM.c: 466: cmdProcessed = 0;
 17659  003434  0E00               	movlw	0
 17660  003436                     L12:
 17661  003436  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17662                           
 17663                           ;FliM.c: 467: break;
 17664  003438  D032               	goto	l20269
 17665  00343A                     l20267:
 17666                           
 17667                           ; BSR set to: 0
 17668  00343A  EE20 F006          	lfsr	2,6
 17669  00343E  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17670  003440  26D9               	addwf	fsr2l,f,c
 17671  003442  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17672  003444  22DA               	addwfc	fsr2h,f,c
 17673  003446  50DF               	movf	indf2,w,c
 17674                           
 17675                           ; Switch size 1, requested type "simple"
 17676                           ; Number of cases is 14, Range of values is 83 to 156
 17677                           ; switch strategies available:
 17678                           ; Name         Instructions Cycles
 17679                           ; simple_byte           43    22 (average)
 17680                           ;	Chosen strategy is simple_byte
 17681  003448  0A53               	xorlw	83	; case 83
 17682  00344A  B4D8               	btfsc	status,2,c
 17683  00344C  D73C               	goto	l20229
 17684  00344E  0A05               	xorlw	5	; case 86
 17685  003450  B4D8               	btfsc	status,2,c
 17686  003452  D73F               	goto	l20233
 17687  003454  0A01               	xorlw	1	; case 87
 17688  003456  B4D8               	btfsc	status,2,c
 17689  003458  D73F               	goto	l20235
 17690  00345A  0A0F               	xorlw	15	; case 88
 17691  00345C  B4D8               	btfsc	status,2,c
 17692  00345E  D749               	goto	l20239
 17693  003460  0A04               	xorlw	4	; case 92
 17694  003462  B4D8               	btfsc	status,2,c
 17695  003464  D777               	goto	l20247
 17696  003466  0A01               	xorlw	1	; case 93
 17697  003468  B4D8               	btfsc	status,2,c
 17698  00346A  D78D               	goto	l20253
 17699  00346C  0A2C               	xorlw	44	; case 113
 17700  00346E  B4D8               	btfsc	status,2,c
 17701  003470  D743               	goto	l20241
 17702  003472  0A03               	xorlw	3	; case 114
 17703  003474  B4D8               	btfsc	status,2,c
 17704  003476  D733               	goto	l20237
 17705  003478  0A01               	xorlw	1	; case 115
 17706  00347A  B4D8               	btfsc	status,2,c
 17707  00347C  D71A               	goto	l20227
 17708  00347E  0A06               	xorlw	6	; case 117
 17709  003480  B4D8               	btfsc	status,2,c
 17710  003482  D771               	goto	l20249
 17711  003484  0AE7               	xorlw	231	; case 146
 17712  003486  B4D8               	btfsc	status,2,c
 17713  003488  D782               	goto	l20255
 17714  00348A  0A04               	xorlw	4	; case 150
 17715  00348C  B4D8               	btfsc	status,2,c
 17716  00348E  D73E               	goto	l20243
 17717  003490  0A0C               	xorlw	12	; case 154
 17718  003492  B4D8               	btfsc	status,2,c
 17719  003494  D7B0               	goto	l20259
 17720  003496  0A06               	xorlw	6	; case 156
 17721  003498  B4D8               	btfsc	status,2,c
 17722  00349A  D74A               	goto	l20245
 17723  00349C  D7CB               	goto	l20263
 17724  00349E                     l20269:
 17725                           
 17726                           ;FliM.c: 469: };FliM.c: 471: if (!cmdProcessed)
 17727  00349E  0100               	movlb	0	; () banked
 17728  0034A0  51E3               	movf	parseFLiMCmd@cmdProcessed& (0+255),w,b
 17729  0034A2  B4D8               	btfsc	status,2,c
 17730  0034A4  D006               	goto	l20279
 17731  0034A6  D00F               	goto	l20281
 17732  0034A8                     l20273:
 17733                           
 17734                           ; BSR set to: 0
 17735                           ;FliM.c: 475: QNNrespond();
 17736  0034A8  EC75  F04C         	call	_QNNrespond	;wreg free
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;FliM.c: 476: cmdProcessed = 1;
 17740  0034AC  0E01               	movlw	1
 17741  0034AE  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17742                           
 17743                           ;FliM.c: 477: break;
 17744  0034B0  D00A               	goto	l20281
 17745  0034B2                     l20279:
 17746                           
 17747                           ; BSR set to: 0
 17748  0034B2  EE20 F006          	lfsr	2,6
 17749  0034B6  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17750  0034B8  26D9               	addwf	fsr2l,f,c
 17751  0034BA  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17752  0034BC  22DA               	addwfc	fsr2h,f,c
 17753  0034BE  50DF               	movf	indf2,w,c
 17754                           
 17755                           ; Switch size 1, requested type "simple"
 17756                           ; Number of cases is 1, Range of values is 13 to 13
 17757                           ; switch strategies available:
 17758                           ; Name         Instructions Cycles
 17759                           ; simple_byte            4     3 (average)
 17760                           ;	Chosen strategy is simple_byte
 17761  0034C0  0A0D               	xorlw	13	; case 13
 17762  0034C2  B4D8               	btfsc	status,2,c
 17763  0034C4  D7F1               	goto	l20273
 17764  0034C6                     l20281:
 17765                           
 17766                           ; BSR set to: 0
 17767                           ;FliM.c: 479: };FliM.c: 484: if ((!cmdProcessed) && (flimState == fsFLiMSetup))
 17768  0034C6  51E3               	movf	parseFLiMCmd@cmdProcessed& (0+255),w,b
 17769  0034C8  A4D8               	btfss	status,2,c
 17770  0034CA  D028               	goto	l20299
 17771                           
 17772                           ; BSR set to: 0
 17773  0034CC  0E04               	movlw	4
 17774  0034CE  1816               	xorwf	_flimState^0,w,c
 17775  0034D0  A4D8               	btfss	status,2,c
 17776  0034D2  D024               	goto	l20299
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;FliM.c: 485: {;FliM.c: 486: cmdProcessed = 1;
 17780  0034D4  0E01               	movlw	1
 17781  0034D6  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17782                           
 17783                           ;FliM.c: 488: switch(rx_ptr[d0])
 17784  0034D8  D010               	goto	l20297
 17785  0034DA                     l20287:
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;FliM.c: 492: doRqnp();
 17789  0034DA  EC88  F048         	call	_doRqnp	;wreg free
 17790                           
 17791                           ;FliM.c: 493: break;
 17792  0034DE  D01E               	goto	l20299
 17793  0034E0                     l20289:
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;FliM.c: 497: doRqmn();
 17797  0034E0  EC70  F047         	call	_doRqmn	;wreg free
 17798                           
 17799                           ;FliM.c: 498: break;
 17800  0034E4  D01B               	goto	l20299
 17801  0034E6                     l20291:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;FliM.c: 502: doSnn(rx_ptr);
 17805  0034E6  C0E1  F09B         	movff	parseFLiMCmd@rx_ptr,doSnn@rx_ptr
 17806  0034EA  C0E2  F09C         	movff	parseFLiMCmd@rx_ptr+1,doSnn@rx_ptr+1
 17807  0034EE  EC15  F04B         	call	_doSnn	;wreg free
 17808                           
 17809                           ;FliM.c: 503: break;
 17810  0034F2  D014               	goto	l20299
 17811  0034F4                     l20293:
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;FliM.c: 507: cmdProcessed = 0;
 17815  0034F4  0E00               	movlw	0
 17816  0034F6  6FE3               	movwf	parseFLiMCmd@cmdProcessed& (0+255),b
 17817                           
 17818                           ;FliM.c: 508: break;
 17819  0034F8  D011               	goto	l20299
 17820  0034FA                     l20297:
 17821                           
 17822                           ; BSR set to: 0
 17823  0034FA  EE20 F006          	lfsr	2,6
 17824  0034FE  51E1               	movf	parseFLiMCmd@rx_ptr& (0+255),w,b
 17825  003500  26D9               	addwf	fsr2l,f,c
 17826  003502  51E2               	movf	(parseFLiMCmd@rx_ptr+1)& (0+255),w,b
 17827  003504  22DA               	addwfc	fsr2h,f,c
 17828  003506  50DF               	movf	indf2,w,c
 17829                           
 17830                           ; Switch size 1, requested type "simple"
 17831                           ; Number of cases is 3, Range of values is 16 to 66
 17832                           ; switch strategies available:
 17833                           ; Name         Instructions Cycles
 17834                           ; simple_byte           10     6 (average)
 17835                           ;	Chosen strategy is simple_byte
 17836  003508  0A10               	xorlw	16	; case 16
 17837  00350A  B4D8               	btfsc	status,2,c
 17838  00350C  D7E6               	goto	l20287
 17839  00350E  0A01               	xorlw	1	; case 17
 17840  003510  B4D8               	btfsc	status,2,c
 17841  003512  D7E6               	goto	l20289
 17842  003514  0A53               	xorlw	83	; case 66
 17843  003516  B4D8               	btfsc	status,2,c
 17844  003518  D7E6               	goto	l20291
 17845  00351A  D7EC               	goto	l20293
 17846  00351C                     l20299:
 17847                           
 17848                           ;FliM.c: 510: };FliM.c: 512: return( cmdProcessed );
 17849  00351C  0100               	movlb	0	; () banked
 17850  00351E  51E3               	movf	parseFLiMCmd@cmdProcessed& (0+255),w,b
 17851                           
 17852                           ; BSR set to: 0
 17853  003520  0012               	return		;funcret
 17854  003522                     __end_of_parseFLiMCmd:
 17855                           	callstack 0
 17856                           
 17857 ;; *************** function _thisNN *****************
 17858 ;; Defined at:
 17859 ;;		line 754 in file "../../github/CBUSlib/FliM.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;  rx_ptr          2   17[BANK0 ] PTR unsigned char 
 17862 ;;		 -> checkCBUS@msg(20), 
 17863 ;; Auto vars:     Size  Location     Type
 17864 ;;		None
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  1    wreg      unsigned char 
 17867 ;; Registers used:
 17868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17869 ;; Tracked objects:
 17870 ;;		On entry : 3F/0
 17871 ;;		On exit  : 3F/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17877 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17878 ;;Total ram usage:        6 bytes
 17879 ;; Hardware stack levels used: 1
 17880 ;; Hardware stack levels required when called: 8
 17881 ;; This function calls:
 17882 ;;		Nothing
 17883 ;; This function is called by:
 17884 ;;		_checkCBUS
 17885 ;;		_parseFLiMCmd
 17886 ;; This function uses a non-reentrant model
 17887 ;;
 17888                           
 17889                           	psect	text68
 17890  009320                     __ptext68:
 17891                           	callstack 0
 17892  009320                     _thisNN:
 17893                           	callstack 21
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;FliM.c: 756: if (((rx_ptr[d0] >> 5) >= 2) && (((WORD)(rx_ptr[d1])<<8) + rx_ptr[d2]) == 
      +                          nodeID)
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;incstack = 0
 17900  009320  EE20 F006          	lfsr	2,6
 17901  009324  5171               	movf	thisNN@rx_ptr& (0+255),w,b
 17902  009326  26D9               	addwf	fsr2l,f,c
 17903  009328  5172               	movf	(thisNN@rx_ptr+1)& (0+255),w,b
 17904  00932A  22DA               	addwfc	fsr2h,f,c
 17905  00932C  50DF               	movf	indf2,w,c
 17906  00932E  6F73               	movwf	??_thisNN& (0+255),b
 17907  009330  0E05               	movlw	5
 17908  009332  6F74               	movwf	(??_thisNN+1)& (0+255),b
 17909  009334                     u23805:
 17910  009334  90D8               	bcf	status,0,c
 17911  009336  3373               	rrcf	??_thisNN& (0+255),f,b
 17912  009338  2F74               	decfsz	(??_thisNN+1)& (0+255),f,b
 17913  00933A  D7FC               	goto	u23805
 17914  00933C  0E01               	movlw	1
 17915  00933E  6573               	cpfsgt	??_thisNN& (0+255),b
 17916  009340  D020               	goto	l19317
 17917                           
 17918                           ; BSR set to: 0
 17919  009342  EE20 F007          	lfsr	2,7
 17920  009346  5171               	movf	thisNN@rx_ptr& (0+255),w,b
 17921  009348  26D9               	addwf	fsr2l,f,c
 17922  00934A  5172               	movf	(thisNN@rx_ptr+1)& (0+255),w,b
 17923  00934C  22DA               	addwfc	fsr2h,f,c
 17924  00934E  50DF               	movf	indf2,w,c
 17925  009350  6F73               	movwf	??_thisNN& (0+255),b
 17926  009352  5173               	movf	??_thisNN& (0+255),w,b
 17927  009354  6F75               	movwf	(??_thisNN+2)& (0+255),b
 17928  009356  6B74               	clrf	(??_thisNN+1)& (0+255),b
 17929  009358  EE20 F008          	lfsr	2,8
 17930  00935C  5171               	movf	thisNN@rx_ptr& (0+255),w,b
 17931  00935E  26D9               	addwf	fsr2l,f,c
 17932  009360  5172               	movf	(thisNN@rx_ptr+1)& (0+255),w,b
 17933  009362  22DA               	addwfc	fsr2h,f,c
 17934  009364  50DF               	movf	indf2,w,c
 17935  009366  6F76               	movwf	(??_thisNN+3)& (0+255),b
 17936  009368  5176               	movf	(??_thisNN+3)& (0+255),w,b
 17937  00936A  2774               	addwf	(??_thisNN+1)& (0+255),f,b
 17938  00936C  0E00               	movlw	0
 17939  00936E  2375               	addwfc	(??_thisNN+2)& (0+255),f,b
 17940  009370  5001               	movf	_nodeID^0,w,c
 17941  009372  1974               	xorwf	(??_thisNN+1)& (0+255),w,b
 17942  009374  E106               	bnz	l19317
 17943  009376  5002               	movf	(_nodeID+1)^0,w,c
 17944  009378  1975               	xorwf	(??_thisNN+2)& (0+255),w,b
 17945  00937A  A4D8               	btfss	status,2,c
 17946  00937C  D002               	goto	l19317
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;FliM.c: 757: return 1;
 17950  00937E  0E01               	movlw	1
 17951  009380  0012               	return	
 17952  009382                     l19317:
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;FliM.c: 758: else;FliM.c: 759: return 0;
 17956  009382  0E00               	movlw	0
 17957                           
 17958                           ; BSR set to: 0
 17959  009384  0012               	return		;funcret
 17960  009386                     __end_of_thisNN:
 17961                           	callstack 0
 17962                           
 17963 ;; *************** function _doSnn *****************
 17964 ;; Defined at:
 17965 ;;		line 717 in file "../../github/CBUSlib/FliM.c"
 17966 ;; Parameters:    Size  Location     Type
 17967 ;;  rx_ptr          2   59[BANK0 ] PTR unsigned char 
 17968 ;;		 -> checkCBUS@msg(20), 
 17969 ;; Auto vars:     Size  Location     Type
 17970 ;;		None
 17971 ;; Return value:  Size  Location     Type
 17972 ;;                  1    wreg      void 
 17973 ;; Registers used:
 17974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17975 ;; Tracked objects:
 17976 ;;		On entry : 3F/0
 17977 ;;		On exit  : 3F/1
 17978 ;;		Unchanged: 0/0
 17979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17984 ;;Total ram usage:        3 bytes
 17985 ;; Hardware stack levels used: 1
 17986 ;; Hardware stack levels required when called: 17
 17987 ;; This function calls:
 17988 ;;		_SaveNodeDetails
 17989 ;;		_cbusSendOpcMyNN
 17990 ;;		_setFLiMLed
 17991 ;; This function is called by:
 17992 ;;		_parseFLiMCmd
 17993 ;; This function uses a non-reentrant model
 17994 ;;
 17995                           
 17996                           	psect	text69
 17997  00962A                     __ptext69:
 17998                           	callstack 0
 17999  00962A                     _doSnn:
 18000                           	callstack 10
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;FliM.c: 721: nodeID = rx_ptr[d1];
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;incstack = 0
 18007  00962A  EE20 F007          	lfsr	2,7
 18008  00962E  519B               	movf	doSnn@rx_ptr& (0+255),w,b
 18009  009630  26D9               	addwf	fsr2l,f,c
 18010  009632  519C               	movf	(doSnn@rx_ptr+1)& (0+255),w,b
 18011  009634  22DA               	addwfc	fsr2h,f,c
 18012  009636  50DF               	movf	indf2,w,c
 18013  009638  6F9D               	movwf	??_doSnn& (0+255),b
 18014  00963A  519D               	movf	??_doSnn& (0+255),w,b
 18015  00963C  6E01               	movwf	_nodeID^0,c
 18016  00963E  6A02               	clrf	(_nodeID+1)^0,c
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;FliM.c: 722: nodeID <<= 8;
 18020  009640  5001               	movf	_nodeID^0,w,c
 18021  009642  6E02               	movwf	(_nodeID+1)^0,c
 18022  009644  6A01               	clrf	_nodeID^0,c
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;FliM.c: 723: nodeID += rx_ptr[d2];
 18026  009646  EE20 F008          	lfsr	2,8
 18027  00964A  519B               	movf	doSnn@rx_ptr& (0+255),w,b
 18028  00964C  26D9               	addwf	fsr2l,f,c
 18029  00964E  519C               	movf	(doSnn@rx_ptr+1)& (0+255),w,b
 18030  009650  22DA               	addwfc	fsr2h,f,c
 18031  009652  50DF               	movf	indf2,w,c
 18032  009654  6F9D               	movwf	??_doSnn& (0+255),b
 18033  009656  519D               	movf	??_doSnn& (0+255),w,b
 18034  009658  2601               	addwf	_nodeID^0,f,c
 18035  00965A  0E00               	movlw	0
 18036  00965C  2202               	addwfc	(_nodeID+1)^0,f,c
 18037                           
 18038                           ;FliM.c: 724: flimState = fsFLiM;
 18039  00965E  0E01               	movlw	1
 18040  009660  6E16               	movwf	_flimState^0,c
 18041                           
 18042                           ; BSR set to: 0
 18043                           ;FliM.c: 728: SaveNodeDetails(nodeID, fsFLiM);
 18044  009662  C001  F098         	movff	_nodeID,SaveNodeDetails@nodeID
 18045  009666  C002  F099         	movff	_nodeID+1,SaveNodeDetails@nodeID+1
 18046  00966A  0E01               	movlw	1
 18047  00966C  6F9A               	movwf	SaveNodeDetails@flimState& (0+255),b
 18048  00966E  ECAF  F051         	call	_SaveNodeDetails	;wreg free
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;FliM.c: 732: cbusSendOpcMyNN( 0, 0x52, cbusMsg );
 18052  009672  0E52               	movlw	82
 18053  009674  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18054  009676  0E1C               	movlw	low _cbusMsg
 18055  009678  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18056  00967A  0E00               	movlw	0
 18057  00967C  EC65  F052         	call	_cbusSendOpcMyNN
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;FliM.c: 733: setFLiMLed();
 18061  009680  EC4E  F053         	call	_setFLiMLed	;wreg free
 18062                           
 18063                           ; BSR set to: 1
 18064  009684  0012               	return		;funcret
 18065  009686                     __end_of_doSnn:
 18066                           	callstack 0
 18067                           
 18068 ;; *************** function _doRqnpn *****************
 18069 ;; Defined at:
 18070 ;;		line 554 in file "../../github/CBUSlib/FliM.c"
 18071 ;; Parameters:    Size  Location     Type
 18072 ;;  idx             1    wreg     unsigned char 
 18073 ;; Auto vars:     Size  Location     Type
 18074 ;;  idx             1   62[BANK0 ] unsigned char 
 18075 ;;  paramptr        3   59[BANK0 ] PTR struct .
 18076 ;;		 -> FLiMparams(20), 
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  1    wreg      void 
 18079 ;; Registers used:
 18080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18081 ;; Tracked objects:
 18082 ;;		On entry : 3F/0
 18083 ;;		On exit  : 3F/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18087 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18088 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18089 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18090 ;;Total ram usage:       11 bytes
 18091 ;; Hardware stack levels used: 1
 18092 ;; Hardware stack levels required when called: 14
 18093 ;; This function calls:
 18094 ;;		_cbusSendMsgNN
 18095 ;;		_doError
 18096 ;;		_readCPUType
 18097 ;; This function is called by:
 18098 ;;		_parseFLiMCmd
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102                           	psect	text70
 18103  007534                     __ptext70:
 18104                           	callstack 0
 18105  007534                     _doRqnpn:
 18106                           	callstack 13
 18107                           
 18108                           ; BSR set to: 1
 18109                           ;incstack = 0
 18110                           ;doRqnpn@idx stored from wreg
 18111  007534  6F9E               	movwf	doRqnpn@idx& (0+255),b
 18112                           
 18113                           ;FliM.c: 556: FLiMprmptr paramptr;;FliM.c: 558: paramptr = (FLiMprmptr)&FLiMparams;
 18114  007536  0E20               	movlw	32
 18115  007538  0100               	movlb	0	; () banked
 18116  00753A  6F9B               	movwf	doRqnpn@paramptr& (0+255),b
 18117  00753C  0E08               	movlw	8
 18118  00753E  6F9C               	movwf	(doRqnpn@paramptr+1)& (0+255),b
 18119  007540  0E00               	movlw	0
 18120  007542  6F9D               	movwf	(doRqnpn@paramptr+2)& (0+255),b
 18121                           
 18122                           ; BSR set to: 0
 18123                           ;FliM.c: 560: if (idx <= FCUparams.parameter_count)
 18124  007544  519E               	movf	doRqnpn@idx& (0+255),w,b
 18125  007546  6F94               	movwf	??_doRqnpn& (0+255),b
 18126  007548  6B95               	clrf	(??_doRqnpn+1)& (0+255),b
 18127  00754A  0E38               	movlw	56
 18128  00754C  6EF6               	movwf	tblptrl,c
 18129  00754E                     	if	1	;There is more than 1 active tblptr byte
 18130  00754E  0E08               	movlw	8
 18131  007550  6EF7               	movwf	tblptrh,c
 18132  007552                     	endif
 18133  007552                     	if	1	;There are 3 active tblptr bytes
 18134  007552  0E00               	movlw	0
 18135  007554  6EF8               	movwf	tblptru,c
 18136  007556                     	endif
 18137  007556  5194               	movf	??_doRqnpn& (0+255),w,b
 18138  007558  0009               	tblrd		*+
 18139  00755A  5CF5               	subwf	tablat,w,c
 18140  00755C  5195               	movf	(??_doRqnpn+1)& (0+255),w,b
 18141  00755E  0009               	tblrd		*+
 18142  007560  58F5               	subwfb	tablat,w,c
 18143  007562  A0D8               	btfss	status,0,c
 18144  007564  D053               	goto	l19717
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;FliM.c: 561: {;FliM.c: 562: cbusMsg[d0] = 0x9B;
 18148  007566  0E9B               	movlw	155
 18149  007568  6E22               	movwf	(_cbusMsg+6)^0,c
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;FliM.c: 563: cbusMsg[d3] = idx;
 18153  00756A  C09E  F025         	movff	doRqnpn@idx,_cbusMsg+9
 18154                           
 18155                           ;FliM.c: 565: if (idx == 0)
 18156  00756E  519E               	movf	doRqnpn@idx& (0+255),w,b
 18157  007570  A4D8               	btfss	status,2,c
 18158  007572  D007               	goto	l19701
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;FliM.c: 566: cbusMsg[d4] = FCUparams.parameter_count;
 18162  007574  0E38               	movlw	56
 18163  007576  6EF6               	movwf	tblptrl,c
 18164  007578                     	if	1	;There is more than 1 active tblptr byte
 18165  007578  0E08               	movlw	8
 18166  00757A  6EF7               	movwf	tblptrh,c
 18167  00757C                     	endif
 18168  00757C                     	if	1	;There are 3 active tblptr bytes
 18169  00757C  0E00               	movlw	0
 18170  00757E  6EF8               	movwf	tblptru,c
 18171  007580                     	endif
 18172  007580  D032               	goto	L13
 18173  007582                     l19701:
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;FliM.c: 567: else if ((idx >= 15) && (idx < 19) )
 18177  007582  0E0E               	movlw	14
 18178  007584  659E               	cpfsgt	doRqnpn@idx& (0+255),b
 18179  007586  D015               	goto	l19707
 18180                           
 18181                           ; BSR set to: 0
 18182  007588  0E13               	movlw	19
 18183  00758A  619E               	cpfslt	doRqnpn@idx& (0+255),b
 18184  00758C  D012               	goto	l19707
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;FliM.c: 568: cbusMsg[d4] = (unsigned char)(readCPUType() >> ((unsigned char)( idx - 15 
      +                          )*8U));
 18188  00758E  519E               	movf	doRqnpn@idx& (0+255),w,b
 18189  007590  0FF1               	addlw	241
 18190  007592  0D08               	mullw	8
 18191  007594  CFF3 F094          	movff	prodl,??_doRqnpn
 18192  007598  ECAD  F052         	call	_readCPUType	;wreg free
 18193  00759C  2B94               	incf	??_doRqnpn& (0+255),f,b
 18194  00759E  D003               	goto	u24414
 18195  0075A0                     u24415:
 18196  0075A0  90D8               	bcf	status,0,c
 18197  0075A2  3372               	rrcf	(?_readCPUType+1)& (0+255),f,b
 18198  0075A4  3371               	rrcf	?_readCPUType& (0+255),f,b
 18199  0075A6                     u24414:
 18200  0075A6  2F94               	decfsz	??_doRqnpn& (0+255),f,b
 18201  0075A8  D7FB               	goto	u24415
 18202  0075AA  0100               	movlb	0	; () banked
 18203  0075AC  5171               	movf	?_readCPUType& (0+255),w,b
 18204  0075AE  6E26               	movwf	(_cbusMsg+10)^0,c
 18205  0075B0  D01D               	goto	l19709
 18206  0075B2                     l19707:
 18207                           
 18208                           ; BSR set to: 0
 18209                           ;FliM.c: 569: else;FliM.c: 570: cbusMsg[d4] = paramptr->bytes[idx-1U];
 18210  0075B2  0EFF               	movlw	255
 18211  0075B4  6F94               	movwf	??_doRqnpn& (0+255),b
 18212  0075B6  0EFF               	movlw	255
 18213  0075B8  6F95               	movwf	(??_doRqnpn+1)& (0+255),b
 18214  0075BA  519E               	movf	doRqnpn@idx& (0+255),w,b
 18215  0075BC  6F96               	movwf	(??_doRqnpn+2)& (0+255),b
 18216  0075BE  6B97               	clrf	(??_doRqnpn+3)& (0+255),b
 18217  0075C0  5194               	movf	??_doRqnpn& (0+255),w,b
 18218  0075C2  2796               	addwf	(??_doRqnpn+2)& (0+255),f,b
 18219  0075C4  5195               	movf	(??_doRqnpn+1)& (0+255),w,b
 18220  0075C6  2397               	addwfc	(??_doRqnpn+3)& (0+255),f,b
 18221  0075C8  5196               	movf	(??_doRqnpn+2)& (0+255),w,b
 18222  0075CA  259B               	addwf	doRqnpn@paramptr& (0+255),w,b
 18223  0075CC  6F98               	movwf	(??_doRqnpn+4)& (0+255),b
 18224  0075CE  5197               	movf	(??_doRqnpn+3)& (0+255),w,b
 18225  0075D0  219C               	addwfc	(doRqnpn@paramptr+1)& (0+255),w,b
 18226  0075D2  6F99               	movwf	(??_doRqnpn+5)& (0+255),b
 18227  0075D4  0E00               	movlw	0
 18228  0075D6  219D               	addwfc	(doRqnpn@paramptr+2)& (0+255),w,b
 18229  0075D8  6F9A               	movwf	(??_doRqnpn+6)& (0+255),b
 18230  0075DA  C098  FFF6         	movff	??_doRqnpn+4,tblptrl
 18231  0075DE  C099  FFF7         	movff	??_doRqnpn+5,tblptrh
 18232  0075E2  C09A  FFF8         	movff	??_doRqnpn+6,tblptru
 18233  0075E6                     L13:
 18234  0075E6  0008               	tblrd		*
 18235  0075E8  CFF5 F026          	movff	tablat,_cbusMsg+10
 18236  0075EC                     l19709:
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;FliM.c: 572: if ((idx == 8) && (flimState == fsFLiM))
 18240  0075EC  0E08               	movlw	8
 18241  0075EE  199E               	xorwf	doRqnpn@idx& (0+255),w,b
 18242  0075F0  A4D8               	btfss	status,2,c
 18243  0075F2  D003               	goto	l19715
 18244                           
 18245                           ; BSR set to: 0
 18246  0075F4  0416               	decf	_flimState^0,w,c
 18247  0075F6  B4D8               	btfsc	status,2,c
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;FliM.c: 573: cbusMsg[d4] |= 4U;
 18251  0075F8  8426               	bsf	(_cbusMsg+10)^0,2,c
 18252  0075FA                     l19715:
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;FliM.c: 575: cbusSendMsgNN(0xFF, -1, cbusMsg);
 18256  0075FA  0EFF               	movlw	255
 18257  0075FC  6F90               	movwf	(cbusSendMsgNN@eventNode+1)& (0+255),b
 18258  0075FE  698F               	setf	cbusSendMsgNN@eventNode& (0+255),b
 18259  007600  0E1C               	movlw	low _cbusMsg
 18260  007602  6F91               	movwf	cbusSendMsgNN@msg& (0+255),b
 18261  007604  0EFF               	movlw	255
 18262  007606  EC4C  F04F         	call	_cbusSendMsgNN
 18263                           
 18264                           ;FliM.c: 576: }
 18265  00760A  0012               	return	
 18266  00760C                     l19717:
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;FliM.c: 577: else;FliM.c: 578: {;FliM.c: 579: doError(9);
 18270  00760C  0E09               	movlw	9
 18271  00760E  EC56  F052         	call	_doError
 18272                           
 18273                           ; BSR set to: 0
 18274  007612  0012               	return		;funcret
 18275  007614                     __end_of_doRqnpn:
 18276                           	callstack 0
 18277                           
 18278 ;; *************** function _readCPUType *****************
 18279 ;; Defined at:
 18280 ;;		line 475 in file "../../github/CBUSlib/romops.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;		None
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;		None
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  2   17[BANK0 ] unsigned int 
 18287 ;; Registers used:
 18288 ;;		wreg, tblptrl, tblptrh, tblptru
 18289 ;; Tracked objects:
 18290 ;;		On entry : 3F/0
 18291 ;;		On exit  : 3F/0
 18292 ;;		Unchanged: 3F/0
 18293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18297 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18298 ;;Total ram usage:        2 bytes
 18299 ;; Hardware stack levels used: 1
 18300 ;; Hardware stack levels required when called: 8
 18301 ;; This function calls:
 18302 ;;		Nothing
 18303 ;; This function is called by:
 18304 ;;		_doRqnpn
 18305 ;; This function uses a non-reentrant model
 18306 ;;
 18307                           
 18308                           	psect	text71
 18309  00A55A                     __ptext71:
 18310                           	callstack 0
 18311  00A55A                     _readCPUType:
 18312                           	callstack 18
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;romops.c: 477: return devId;
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;incstack = 0
 18319  00A55A  0EFE               	movlw	254
 18320  00A55C  6EF6               	movwf	tblptrl,c
 18321  00A55E                     	if	1	;There is more than 1 active tblptr byte
 18322  00A55E  0EFF               	movlw	255
 18323  00A560  6EF7               	movwf	tblptrh,c
 18324  00A562                     	endif
 18325  00A562                     	if	1	;There are 3 active tblptr bytes
 18326  00A562  0E3F               	movlw	63
 18327  00A564  6EF8               	movwf	tblptru,c
 18328  00A566                     	endif
 18329  00A566  0009               	tblrd		*+
 18330  00A568  CFF5 F071          	movff	tablat,?_readCPUType
 18331  00A56C  000A               	tblrd		*-
 18332  00A56E  CFF5 F072          	movff	tablat,?_readCPUType+1
 18333                           
 18334                           ; BSR set to: 0
 18335  00A572  0012               	return		;funcret
 18336  00A574                     __end_of_readCPUType:
 18337                           	callstack 0
 18338                           
 18339 ;; *************** function _doRqnp *****************
 18340 ;; Defined at:
 18341 ;;		line 658 in file "../../github/CBUSlib/FliM.c"
 18342 ;; Parameters:    Size  Location     Type
 18343 ;;		None
 18344 ;; Auto vars:     Size  Location     Type
 18345 ;;  paramptr        3   53[BANK0 ] PTR struct .
 18346 ;;		 -> FLiMparams(20), 
 18347 ;;  copyCounter     1   56[BANK0 ] unsigned char 
 18348 ;; Return value:  Size  Location     Type
 18349 ;;                  1    wreg      void 
 18350 ;; Registers used:
 18351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18352 ;; Tracked objects:
 18353 ;;		On entry : 3F/0
 18354 ;;		On exit  : 3F/0
 18355 ;;		Unchanged: 0/0
 18356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18358 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18359 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18360 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18361 ;;Total ram usage:       10 bytes
 18362 ;; Hardware stack levels used: 1
 18363 ;; Hardware stack levels required when called: 12
 18364 ;; This function calls:
 18365 ;;		_cbusSendMsg
 18366 ;;		_getParFlags
 18367 ;; This function is called by:
 18368 ;;		_parseFLiMCmd
 18369 ;; This function uses a non-reentrant model
 18370 ;;
 18371                           
 18372                           	psect	text72
 18373  009110                     __ptext72:
 18374                           	callstack 0
 18375  009110                     _doRqnp:
 18376                           	callstack 15
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;FliM.c: 660: FLiMprmptr paramptr;;FliM.c: 661: BYTE copyCounter;;FliM.c: 663: paramptr 
      +                          = (FLiMprmptr)&FLiMparams;
 18380                           
 18381                           ; BSR set to: 0
 18382                           ;incstack = 0
 18383  009110  0E20               	movlw	32
 18384  009112  6F95               	movwf	doRqnp@paramptr& (0+255),b
 18385  009114  0E08               	movlw	8
 18386  009116  6F96               	movwf	(doRqnp@paramptr+1)& (0+255),b
 18387  009118  0E00               	movlw	0
 18388  00911A  6F97               	movwf	(doRqnp@paramptr+2)& (0+255),b
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;FliM.c: 665: cbusMsg[d0] = 0xEF;
 18392  00911C  0EEF               	movlw	239
 18393  00911E  6E22               	movwf	(_cbusMsg+6)^0,c
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;FliM.c: 667: for (copyCounter = (unsigned char)d1; copyCounter <= (unsigned char)d7; co
      +                          pyCounter++)
 18397  009120  0E07               	movlw	7
 18398  009122  6F98               	movwf	doRqnp@copyCounter& (0+255),b
 18399  009124                     l19863:
 18400                           
 18401                           ; BSR set to: 0
 18402                           ;FliM.c: 668: {;FliM.c: 669: cbusMsg[copyCounter] = paramptr->bytes[(unsigned char)(copy
      +                          Counter-d1)];
 18403  009124  C098  F08F         	movff	doRqnp@copyCounter,??_doRqnp
 18404  009128  0EF9               	movlw	249
 18405  00912A  278F               	addwf	??_doRqnp& (0+255),f,b
 18406  00912C  518F               	movf	??_doRqnp& (0+255),w,b
 18407  00912E  0D01               	mullw	1
 18408  009130  CFF3 F090          	movff	prodl,??_doRqnp+1
 18409  009134  CFF4 F091          	movff	prodh,??_doRqnp+2
 18410  009138  5190               	movf	(??_doRqnp+1)& (0+255),w,b
 18411  00913A  2595               	addwf	doRqnp@paramptr& (0+255),w,b
 18412  00913C  6F92               	movwf	(??_doRqnp+3)& (0+255),b
 18413  00913E  5191               	movf	(??_doRqnp+2)& (0+255),w,b
 18414  009140  2196               	addwfc	(doRqnp@paramptr+1)& (0+255),w,b
 18415  009142  6F93               	movwf	(??_doRqnp+4)& (0+255),b
 18416  009144  0E00               	movlw	0
 18417  009146  2197               	addwfc	(doRqnp@paramptr+2)& (0+255),w,b
 18418  009148  6F94               	movwf	(??_doRqnp+5)& (0+255),b
 18419  00914A  C092  FFF6         	movff	??_doRqnp+3,tblptrl
 18420  00914E  C093  FFF7         	movff	??_doRqnp+4,tblptrh
 18421  009152  C094  FFF8         	movff	??_doRqnp+5,tblptru
 18422  009156  5198               	movf	doRqnp@copyCounter& (0+255),w,b
 18423  009158  0F1C               	addlw	low _cbusMsg
 18424  00915A  6ED9               	movwf	fsr2l,c
 18425  00915C  6ADA               	clrf	fsr2h,c
 18426  00915E  0008               	tblrd		*
 18427  009160  CFF5 FFDF          	movff	tablat,indf2
 18428                           
 18429                           ; BSR set to: 0
 18430  009164  2B98               	incf	doRqnp@copyCounter& (0+255),f,b
 18431                           
 18432                           ; BSR set to: 0
 18433  009166  0E0D               	movlw	13
 18434  009168  6598               	cpfsgt	doRqnp@copyCounter& (0+255),b
 18435  00916A  D7DC               	goto	l19863
 18436                           
 18437                           ; BSR set to: 0
 18438                           ;FliM.c: 670: };FliM.c: 673: cbusMsg[(unsigned char)d1+8-1U] = getParFlags();
 18439  00916C  EC9E  F04C         	call	_getParFlags	;wreg free
 18440  009170  6E2A               	movwf	(_cbusMsg+14)^0,c
 18441                           
 18442                           ; BSR set to: 0
 18443                           ;FliM.c: 675: cbusSendMsg(0, cbusMsg);
 18444  009172  0E1C               	movlw	low _cbusMsg
 18445  009174  6F8B               	movwf	cbusSendMsg@msg& (0+255),b
 18446  009176  0E00               	movlw	0
 18447  009178  ECA7  F04F         	call	_cbusSendMsg
 18448                           
 18449                           ; BSR set to: 0
 18450  00917C  0012               	return		;funcret
 18451  00917E                     __end_of_doRqnp:
 18452                           	callstack 0
 18453                           
 18454 ;; *************** function _doRqmn *****************
 18455 ;; Defined at:
 18456 ;;		line 683 in file "../../github/CBUSlib/FliM.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;		None
 18459 ;; Auto vars:     Size  Location     Type
 18460 ;;  namadr          4   47[BANK0 ] unsigned long 
 18461 ;;  namptr          3   51[BANK0 ] PTR const unsigned char 
 18462 ;;		 -> ROM(65535), 
 18463 ;;  copyCounter     1   54[BANK0 ] unsigned char 
 18464 ;;  padCounter      1    0        unsigned char 
 18465 ;; Return value:  Size  Location     Type
 18466 ;;                  1    wreg      void 
 18467 ;; Registers used:
 18468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18469 ;; Tracked objects:
 18470 ;;		On entry : 3F/0
 18471 ;;		On exit  : 3F/0
 18472 ;;		Unchanged: 0/0
 18473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18477 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18478 ;;Total ram usage:        8 bytes
 18479 ;; Hardware stack levels used: 1
 18480 ;; Hardware stack levels required when called: 12
 18481 ;; This function calls:
 18482 ;;		_cbusSendMsg
 18483 ;; This function is called by:
 18484 ;;		_parseFLiMCmd
 18485 ;; This function uses a non-reentrant model
 18486 ;;
 18487                           
 18488                           	psect	text73
 18489  008EE0                     __ptext73:
 18490                           	callstack 0
 18491  008EE0                     _doRqmn:
 18492                           	callstack 15
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;FliM.c: 685: BYTE copyCounter, padCounter;;FliM.c: 687: const char* namptr;;FliM.c: 691
      +                          : DWORD namadr;;FliM.c: 694: namadr = FCUparams.module_type_name;
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;incstack = 0
 18499  008EE0  0E3A               	movlw	58
 18500  008EE2  6EF6               	movwf	tblptrl,c
 18501  008EE4  0E08               	movlw	8
 18502  008EE6  6EF7               	movwf	tblptrh,c
 18503  008EE8  0E00               	movlw	0
 18504  008EEA  6EF8               	movwf	tblptru,c
 18505  008EEC  0009               	tblrd		*+
 18506  008EEE  CFF5 F08F          	movff	tablat,doRqmn@namadr
 18507  008EF2  0009               	tblrd		*+
 18508  008EF4  CFF5 F090          	movff	tablat,doRqmn@namadr+1
 18509  008EF8  0009               	tblrd		*+
 18510  008EFA  CFF5 F091          	movff	tablat,doRqmn@namadr+2
 18511  008EFE  000A               	tblrd		*-
 18512  008F00  CFF5 F092          	movff	tablat,doRqmn@namadr+3
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;FliM.c: 696: namptr = (const char*)namadr;
 18516  008F04  C08F  F093         	movff	doRqmn@namadr,doRqmn@namptr
 18517  008F08  C090  F094         	movff	doRqmn@namadr+1,doRqmn@namptr+1
 18518  008F0C  C091  F095         	movff	doRqmn@namadr+2,doRqmn@namptr+2
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;FliM.c: 703: cbusMsg[d0] = 0xE2;
 18522  008F10  0EE2               	movlw	226
 18523  008F12  6E22               	movwf	(_cbusMsg+6)^0,c
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;FliM.c: 705: for (copyCounter = 0U; copyCounter < 7U; copyCounter++ )
 18527  008F14  0E00               	movlw	0
 18528  008F16  6F96               	movwf	doRqmn@copyCounter& (0+255),b
 18529  008F18                     l19885:
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;FliM.c: 706: cbusMsg[(unsigned char)(copyCounter+d1)] = *namptr++;
 18533  008F18  C093  FFF6         	movff	doRqmn@namptr,tblptrl
 18534  008F1C  C094  FFF7         	movff	doRqmn@namptr+1,tblptrh
 18535  008F20  C095  FFF8         	movff	doRqmn@namptr+2,tblptru
 18536  008F24  5196               	movf	doRqmn@copyCounter& (0+255),w,b
 18537  008F26  0F23               	addlw	low (_cbusMsg+7)
 18538  008F28  6ED9               	movwf	fsr2l,c
 18539  008F2A  6ADA               	clrf	fsr2h,c
 18540  008F2C  0008               	tblrd		*
 18541  008F2E  CFF5 FFDF          	movff	tablat,indf2
 18542                           
 18543                           ; BSR set to: 0
 18544  008F32  0E01               	movlw	1
 18545  008F34  2793               	addwf	doRqmn@namptr& (0+255),f,b
 18546  008F36  0E00               	movlw	0
 18547  008F38  2394               	addwfc	(doRqmn@namptr+1)& (0+255),f,b
 18548  008F3A  0E00               	movlw	0
 18549  008F3C  2395               	addwfc	(doRqmn@namptr+2)& (0+255),f,b
 18550                           
 18551                           ; BSR set to: 0
 18552  008F3E  2B96               	incf	doRqmn@copyCounter& (0+255),f,b
 18553                           
 18554                           ; BSR set to: 0
 18555  008F40  0E06               	movlw	6
 18556  008F42  6596               	cpfsgt	doRqmn@copyCounter& (0+255),b
 18557  008F44  D7E9               	goto	l19885
 18558                           
 18559                           ; BSR set to: 0
 18560                           ;FliM.c: 709: cbusSendMsg( 0, cbusMsg );
 18561  008F46  0E1C               	movlw	low _cbusMsg
 18562  008F48  6F8B               	movwf	cbusSendMsg@msg& (0+255),b
 18563  008F4A  0E00               	movlw	0
 18564  008F4C  ECA7  F04F         	call	_cbusSendMsg
 18565                           
 18566                           ; BSR set to: 0
 18567  008F50  0012               	return		;funcret
 18568  008F52                     __end_of_doRqmn:
 18569                           	callstack 0
 18570                           
 18571 ;; *************** function _doRqevn *****************
 18572 ;; Defined at:
 18573 ;;		line 406 in file "../../github/CBUSlib/events.c"
 18574 ;; Parameters:    Size  Location     Type
 18575 ;;		None
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;  i               1   53[BANK0 ] unsigned char 
 18578 ;;  count           1   52[BANK0 ] unsigned char 
 18579 ;; Return value:  Size  Location     Type
 18580 ;;                  1    wreg      void 
 18581 ;; Registers used:
 18582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18583 ;; Tracked objects:
 18584 ;;		On entry : 3F/0
 18585 ;;		On exit  : 3F/0
 18586 ;;		Unchanged: 0/0
 18587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18592 ;;Total ram usage:        2 bytes
 18593 ;; Hardware stack levels used: 1
 18594 ;; Hardware stack levels required when called: 14
 18595 ;; This function calls:
 18596 ;;		_cbusSendOpcMyNN
 18597 ;;		_validStart
 18598 ;; This function is called by:
 18599 ;;		_parseFLiMCmd
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text74
 18604  00A130                     __ptext74:
 18605                           	callstack 0
 18606  00A130                     _doRqevn:
 18607                           	callstack 13
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;events.c: 409: unsigned char count = 0;
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;incstack = 0
 18614  00A130  0E00               	movlw	0
 18615  00A132  6F94               	movwf	doRqevn@count& (0+255),b
 18616                           
 18617                           ;events.c: 410: unsigned char i;;events.c: 411: for (i=0; i<255U; i++) {
 18618  00A134  0E00               	movlw	0
 18619  00A136  6F95               	movwf	doRqevn@i& (0+255),b
 18620  00A138                     l19605:
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;events.c: 412: if (validStart(i)) {
 18624  00A138  5195               	movf	doRqevn@i& (0+255),w,b
 18625  00A13A  ECF8  F050         	call	_validStart
 18626  00A13E  0900               	iorlw	0
 18627  00A140  A4D8               	btfss	status,2,c
 18628                           
 18629                           ; BSR set to: 0
 18630                           ;events.c: 413: count++;
 18631  00A142  2B94               	incf	doRqevn@count& (0+255),f,b
 18632                           
 18633                           ; BSR set to: 0
 18634  00A144  2B95               	incf	doRqevn@i& (0+255),f,b
 18635                           
 18636                           ; BSR set to: 0
 18637  00A146  2995               	incf	doRqevn@i& (0+255),w,b
 18638  00A148  A4D8               	btfss	status,2,c
 18639  00A14A  D7F6               	goto	l19605
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;events.c: 414: };events.c: 415: };events.c: 416: cbusMsg[d3] = count;
 18643  00A14C  C094  F025         	movff	doRqevn@count,_cbusMsg+9
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;events.c: 417: cbusSendOpcMyNN( 0, 0x74, cbusMsg );
 18647  00A150  0E74               	movlw	116
 18648  00A152  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18649  00A154  0E1C               	movlw	low _cbusMsg
 18650  00A156  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18651  00A158  0E00               	movlw	0
 18652  00A15A  EC65  F052         	call	_cbusSendOpcMyNN
 18653                           
 18654                           ; BSR set to: 0
 18655  00A15E  0012               	return		;funcret
 18656  00A160                     __end_of_doRqevn:
 18657                           	callstack 0
 18658                           
 18659 ;; *************** function _doReval *****************
 18660 ;; Defined at:
 18661 ;;		line 828 in file "../../github/CBUSlib/FliM.c"
 18662 ;; Parameters:    Size  Location     Type
 18663 ;;  enNum           1    wreg     unsigned char 
 18664 ;;  evNum           1   52[BANK0 ] unsigned char 
 18665 ;; Auto vars:     Size  Location     Type
 18666 ;;  enNum           1   55[BANK0 ] unsigned char 
 18667 ;;  evVal           2   56[BANK0 ] int 
 18668 ;;  tableIndex      1   58[BANK0 ] unsigned char 
 18669 ;;  evIndex         1   54[BANK0 ] unsigned char 
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  1    wreg      void 
 18672 ;; Registers used:
 18673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18674 ;; Tracked objects:
 18675 ;;		On entry : 3F/0
 18676 ;;		On exit  : 3F/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18679 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18682 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18683 ;;Total ram usage:        7 bytes
 18684 ;; Hardware stack levels used: 1
 18685 ;; Hardware stack levels required when called: 15
 18686 ;; This function calls:
 18687 ;;		_cbusSendOpcMyNN
 18688 ;;		_evtIdxToTableIndex
 18689 ;;		_getEv
 18690 ;;		_numEv
 18691 ;;		_validStart
 18692 ;; This function is called by:
 18693 ;;		_parseFLiMCmd
 18694 ;; This function uses a non-reentrant model
 18695 ;;
 18696                           
 18697                           	psect	text75
 18698  008028                     __ptext75:
 18699                           	callstack 0
 18700  008028                     _doReval:
 18701                           	callstack 12
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;incstack = 0
 18705                           ;doReval@enNum stored from wreg
 18706  008028  6F97               	movwf	doReval@enNum& (0+255),b
 18707                           
 18708                           ;FliM.c: 832: BYTE evIndex;;FliM.c: 833: BYTE tableIndex = evtIdxToTableIndex(enNum);
 18709  00802A  0100               	movlb	0	; () banked
 18710  00802C  5197               	movf	doReval@enNum& (0+255),w,b
 18711  00802E  EC70  F053         	call	_evtIdxToTableIndex
 18712  008032  6F9A               	movwf	doReval@tableIndex& (0+255),b
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;FliM.c: 835: if (evNum > 20U)
 18716  008034  0E14               	movlw	20
 18717  008036  6594               	cpfsgt	doReval@evNum& (0+255),b
 18718  008038  D00A               	goto	l19769
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;FliM.c: 836: {;FliM.c: 837: cbusMsg[d3] = 6;
 18722  00803A  0E06               	movlw	6
 18723  00803C  6E25               	movwf	(_cbusMsg+9)^0,c
 18724                           
 18725                           ; BSR set to: 0
 18726                           ;FliM.c: 838: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 18727  00803E  0E6F               	movlw	111
 18728  008040  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18729  008042  0E1C               	movlw	low _cbusMsg
 18730  008044  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18731  008046  0E00               	movlw	0
 18732  008048  EC65  F052         	call	_cbusSendOpcMyNN
 18733  00804C  0012               	return	
 18734  00804E                     l19769:
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;FliM.c: 840: };FliM.c: 842: evIndex = evNum-1U;
 18738  00804E  0594               	decf	doReval@evNum& (0+255),w,b
 18739  008050  6F96               	movwf	doReval@evIndex& (0+255),b
 18740                           
 18741                           ;FliM.c: 845: if (tableIndex < 255U)
 18742  008052  299A               	incf	doReval@tableIndex& (0+255),w,b
 18743  008054  B4D8               	btfsc	status,2,c
 18744  008056  D035               	goto	l19793
 18745                           
 18746                           ; BSR set to: 0
 18747                           ;FliM.c: 846: if (validStart(tableIndex))
 18748  008058  519A               	movf	doReval@tableIndex& (0+255),w,b
 18749  00805A  ECF8  F050         	call	_validStart
 18750  00805E  0900               	iorlw	0
 18751  008060  B4D8               	btfsc	status,2,c
 18752  008062  D02F               	goto	l19793
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;FliM.c: 847: {;FliM.c: 848: int evVal;;FliM.c: 849: if (evNum == 0)
 18756  008064  5194               	movf	doReval@evNum& (0+255),w,b
 18757  008066  A4D8               	btfss	status,2,c
 18758  008068  D008               	goto	l19777
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;FliM.c: 850: {;FliM.c: 851: evVal = numEv(tableIndex);
 18762  00806A  519A               	movf	doReval@tableIndex& (0+255),w,b
 18763  00806C  EC8C  F044         	call	_numEv
 18764  008070  6F95               	movwf	??_doReval& (0+255),b
 18765  008072  5195               	movf	??_doReval& (0+255),w,b
 18766  008074  6F98               	movwf	doReval@evVal& (0+255),b
 18767  008076  6B99               	clrf	(doReval@evVal+1)& (0+255),b
 18768                           
 18769                           ;FliM.c: 852: }
 18770  008078  D009               	goto	l19779
 18771  00807A                     l19777:
 18772                           
 18773                           ; BSR set to: 0
 18774                           ;FliM.c: 853: else;FliM.c: 854: {;FliM.c: 855: evVal = getEv(tableIndex, evIndex);
 18775  00807A  C096  F081         	movff	doReval@evIndex,getEv@evNum
 18776  00807E  519A               	movf	doReval@tableIndex& (0+255),w,b
 18777  008080  EC22  F038         	call	_getEv
 18778  008084  C081  F098         	movff	?_getEv,doReval@evVal
 18779  008088  C082  F099         	movff	?_getEv+1,doReval@evVal+1
 18780  00808C                     l19779:
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;FliM.c: 856: };FliM.c: 857: if (evVal >= 0) {
 18784  00808C  BF99               	btfsc	(doReval@evVal+1)& (0+255),7,b
 18785  00808E  D00E               	goto	l19787
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;FliM.c: 858: cbusMsg[d3] = enNum;
 18789  008090  C097  F025         	movff	doReval@enNum,_cbusMsg+9
 18790                           
 18791                           ;FliM.c: 859: cbusMsg[d4] = evNum;
 18792  008094  C094  F026         	movff	doReval@evNum,_cbusMsg+10
 18793                           
 18794                           ;FliM.c: 860: cbusMsg[d5] = (unsigned char)evVal;
 18795  008098  C098  F027         	movff	doReval@evVal,_cbusMsg+11
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;FliM.c: 861: cbusSendOpcMyNN( 0, 0xB5, cbusMsg );
 18799  00809C  0EB5               	movlw	181
 18800  00809E  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18801  0080A0  0E1C               	movlw	low _cbusMsg
 18802  0080A2  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18803  0080A4  0E00               	movlw	0
 18804  0080A6  EC65  F052         	call	_cbusSendOpcMyNN
 18805  0080AA  0012               	return	
 18806  0080AC                     l19787:
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;FliM.c: 863: };FliM.c: 864: cbusMsg[d3] = (unsigned char)(-evVal);
 18810  0080AC  5198               	movf	doReval@evVal& (0+255),w,b
 18811  0080AE  0800               	sublw	0
 18812  0080B0  6E25               	movwf	(_cbusMsg+9)^0,c
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;FliM.c: 865: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 18816  0080B2  0E6F               	movlw	111
 18817  0080B4  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18818  0080B6  0E1C               	movlw	low _cbusMsg
 18819  0080B8  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18820  0080BA  0E00               	movlw	0
 18821  0080BC  EC65  F052         	call	_cbusSendOpcMyNN
 18822  0080C0  0012               	return	
 18823  0080C2                     l19793:
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;FliM.c: 867: };FliM.c: 868: cbusMsg[d3] = 7;
 18827  0080C2  0E07               	movlw	7
 18828  0080C4  6E25               	movwf	(_cbusMsg+9)^0,c
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;FliM.c: 869: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 18832  0080C6  0E6F               	movlw	111
 18833  0080C8  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18834  0080CA  0E1C               	movlw	low _cbusMsg
 18835  0080CC  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18836  0080CE  0E00               	movlw	0
 18837  0080D0  EC65  F052         	call	_cbusSendOpcMyNN
 18838                           
 18839                           ; BSR set to: 0
 18840  0080D4  0012               	return		;funcret
 18841  0080D6                     __end_of_doReval:
 18842                           	callstack 0
 18843                           
 18844 ;; *************** function _doReqev *****************
 18845 ;; Defined at:
 18846 ;;		line 889 in file "../../github/CBUSlib/FliM.c"
 18847 ;; Parameters:    Size  Location     Type
 18848 ;;  nodeNumber      2   59[BANK0 ] unsigned int 
 18849 ;;  eventNumber     2   61[BANK0 ] unsigned int 
 18850 ;;  evNum           1   63[BANK0 ] unsigned char 
 18851 ;; Auto vars:     Size  Location     Type
 18852 ;;  evVal           2   66[BANK0 ] int 
 18853 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 18854 ;; Return value:  Size  Location     Type
 18855 ;;                  1    wreg      void 
 18856 ;; Registers used:
 18857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18858 ;; Tracked objects:
 18859 ;;		On entry : 3F/0
 18860 ;;		On exit  : 3F/0
 18861 ;;		Unchanged: 0/0
 18862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18863 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18864 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18866 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18867 ;;Total ram usage:        9 bytes
 18868 ;; Hardware stack levels used: 1
 18869 ;; Hardware stack levels required when called: 15
 18870 ;; This function calls:
 18871 ;;		_cbusSendOpcMyNN
 18872 ;;		_findEvent
 18873 ;;		_getEv
 18874 ;;		_numEv
 18875 ;; This function is called by:
 18876 ;;		_parseFLiMCmd
 18877 ;; This function uses a non-reentrant model
 18878 ;;
 18879                           
 18880                           	psect	text76
 18881  0080D6                     __ptext76:
 18882                           	callstack 0
 18883  0080D6                     _doReqev:
 18884                           	callstack 12
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;FliM.c: 891: int evVal;;FliM.c: 893: unsigned char tableIndex = findEvent(nodeNumber, e
      +                          ventNumber);
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;incstack = 0
 18891  0080D6  C09B  F08E         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 18892  0080DA  C09C  F08F         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 18893  0080DE  C09D  F090         	movff	doReqev@eventNumber,findEvent@eventNumber
 18894  0080E2  C09E  F091         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 18895  0080E6  ECD6  F044         	call	_findEvent	;wreg free
 18896  0080EA  6FA1               	movwf	doReqev@tableIndex& (0+255),b
 18897                           
 18898                           ; BSR set to: 0
 18899                           ;FliM.c: 894: if (tableIndex == 0xff)
 18900  0080EC  29A1               	incf	doReqev@tableIndex& (0+255),w,b
 18901  0080EE  A4D8               	btfss	status,2,c
 18902  0080F0  D00A               	goto	l19663
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;FliM.c: 895: {;FliM.c: 896: cbusMsg[d3] = 7;
 18906  0080F2  0E07               	movlw	7
 18907  0080F4  6E25               	movwf	(_cbusMsg+9)^0,c
 18908                           
 18909                           ; BSR set to: 0
 18910                           ;FliM.c: 897: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 18911  0080F6  0E6F               	movlw	111
 18912  0080F8  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18913  0080FA  0E1C               	movlw	low _cbusMsg
 18914  0080FC  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18915  0080FE  0E00               	movlw	0
 18916  008100  EC65  F052         	call	_cbusSendOpcMyNN
 18917  008104  0012               	return	
 18918  008106                     l19663:
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;FliM.c: 899: };FliM.c: 900: if (evNum > 20U)
 18922  008106  0E14               	movlw	20
 18923  008108  659F               	cpfsgt	doReqev@evNum& (0+255),b
 18924  00810A  D00A               	goto	l2302
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;FliM.c: 901: {;FliM.c: 902: cbusMsg[d3] = 6;
 18928  00810C  0E06               	movlw	6
 18929  00810E  6E25               	movwf	(_cbusMsg+9)^0,c
 18930                           
 18931                           ; BSR set to: 0
 18932                           ;FliM.c: 903: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 18933  008110  0E6F               	movlw	111
 18934  008112  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18935  008114  0E1C               	movlw	low _cbusMsg
 18936  008116  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18937  008118  0E00               	movlw	0
 18938  00811A  EC65  F052         	call	_cbusSendOpcMyNN
 18939  00811E  0012               	return	
 18940  008120                     l2302:
 18941                           
 18942                           ; BSR set to: 0
 18943                           ;FliM.c: 905: };FliM.c: 907: cbusMsg[d3] = eventNumber >> 8;
 18944  008120  C09E  F025         	movff	doReqev@eventNumber+1,_cbusMsg+9
 18945                           
 18946                           ;FliM.c: 908: cbusMsg[d4] = eventNumber & 0x00FF;
 18947  008124  C09D  F026         	movff	doReqev@eventNumber,_cbusMsg+10
 18948                           
 18949                           ;FliM.c: 909: cbusMsg[d5] = evNum;
 18950  008128  C09F  F027         	movff	doReqev@evNum,_cbusMsg+11
 18951                           
 18952                           ; BSR set to: 0
 18953                           ;FliM.c: 910: if (evNum == 0)
 18954  00812C  519F               	movf	doReqev@evNum& (0+255),w,b
 18955  00812E  A4D8               	btfss	status,2,c
 18956  008130  D008               	goto	l19675
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;FliM.c: 911: {;FliM.c: 912: evVal = numEv(tableIndex);
 18960  008132  51A1               	movf	doReqev@tableIndex& (0+255),w,b
 18961  008134  EC8C  F044         	call	_numEv
 18962  008138  6FA0               	movwf	??_doReqev& (0+255),b
 18963  00813A  51A0               	movf	??_doReqev& (0+255),w,b
 18964  00813C  6FA2               	movwf	doReqev@evVal& (0+255),b
 18965  00813E  6BA3               	clrf	(doReqev@evVal+1)& (0+255),b
 18966                           
 18967                           ;FliM.c: 913: } else {
 18968  008140  D00A               	goto	l19679
 18969  008142                     l19675:
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;FliM.c: 914: evNum--;
 18973  008142  079F               	decf	doReqev@evNum& (0+255),f,b
 18974                           
 18975                           ; BSR set to: 0
 18976                           ;FliM.c: 915: evVal = getEv(tableIndex, evNum);
 18977  008144  C09F  F081         	movff	doReqev@evNum,getEv@evNum
 18978  008148  51A1               	movf	doReqev@tableIndex& (0+255),w,b
 18979  00814A  EC22  F038         	call	_getEv
 18980  00814E  C081  F0A2         	movff	?_getEv,doReqev@evVal
 18981  008152  C082  F0A3         	movff	?_getEv+1,doReqev@evVal+1
 18982  008156                     l19679:
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;FliM.c: 916: };FliM.c: 917: if (evVal >= 0) {
 18986  008156  BFA3               	btfsc	(doReqev@evVal+1)& (0+255),7,b
 18987  008158  D00A               	goto	l19687
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;FliM.c: 918: cbusMsg[d6] = (unsigned char)evVal;
 18991  00815A  C0A2  F028         	movff	doReqev@evVal,_cbusMsg+12
 18992                           
 18993                           ; BSR set to: 0
 18994                           ;FliM.c: 919: cbusSendOpcMyNN( 0, 0xd3, cbusMsg);
 18995  00815E  0ED3               	movlw	211
 18996  008160  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 18997  008162  0E1C               	movlw	low _cbusMsg
 18998  008164  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 18999  008166  0E00               	movlw	0
 19000  008168  EC65  F052         	call	_cbusSendOpcMyNN
 19001  00816C  0012               	return	
 19002  00816E                     l19687:
 19003                           
 19004                           ; BSR set to: 0
 19005                           ;FliM.c: 921: };FliM.c: 922: cbusMsg[d3] = (unsigned char)(-evVal);
 19006  00816E  51A2               	movf	doReqev@evVal& (0+255),w,b
 19007  008170  0800               	sublw	0
 19008  008172  6E25               	movwf	(_cbusMsg+9)^0,c
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;FliM.c: 923: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 19012  008174  0E6F               	movlw	111
 19013  008176  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 19014  008178  0E1C               	movlw	low _cbusMsg
 19015  00817A  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 19016  00817C  0E00               	movlw	0
 19017  00817E  EC65  F052         	call	_cbusSendOpcMyNN
 19018                           
 19019                           ; BSR set to: 0
 19020  008182  0012               	return		;funcret
 19021  008184                     __end_of_doReqev:
 19022                           	callstack 0
 19023                           
 19024 ;; *************** function _numEv *****************
 19025 ;; Defined at:
 19026 ;;		line 700 in file "../../github/CBUSlib/events.c"
 19027 ;; Parameters:    Size  Location     Type
 19028 ;;  tableIndex      1    wreg     unsigned char 
 19029 ;; Auto vars:     Size  Location     Type
 19030 ;;  tableIndex      1   37[BANK0 ] unsigned char 
 19031 ;;  f               1   36[BANK0 ] struct .
 19032 ;;  num             1   35[BANK0 ] unsigned char 
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  1    wreg      unsigned char 
 19035 ;; Registers used:
 19036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19037 ;; Tracked objects:
 19038 ;;		On entry : 3F/0
 19039 ;;		On exit  : 3F/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19044 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19045 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19046 ;;Total ram usage:        5 bytes
 19047 ;; Hardware stack levels used: 1
 19048 ;; Hardware stack levels required when called: 14
 19049 ;; This function calls:
 19050 ;;		_readFlashBlock
 19051 ;;		_validStart
 19052 ;; This function is called by:
 19053 ;;		_doReval
 19054 ;;		_doReqev
 19055 ;; This function uses a non-reentrant model
 19056 ;;
 19057                           
 19058                           	psect	text77
 19059  008918                     __ptext77:
 19060                           	callstack 0
 19061  008918                     _numEv:
 19062                           	callstack 12
 19063                           
 19064                           ; BSR set to: 0
 19065                           ;incstack = 0
 19066                           ;numEv@tableIndex stored from wreg
 19067  008918  6F85               	movwf	numEv@tableIndex& (0+255),b
 19068                           
 19069                           ;events.c: 701: EventTableFlags f;;events.c: 702: BYTE num=0;
 19070  00891A  0E00               	movlw	0
 19071  00891C  0100               	movlb	0	; () banked
 19072  00891E  6F83               	movwf	numEv@num& (0+255),b
 19073                           
 19074                           ; BSR set to: 0
 19075                           ;events.c: 703: if ( ! validStart(tableIndex)) {
 19076  008920  5185               	movf	numEv@tableIndex& (0+255),w,b
 19077  008922  ECF8  F050         	call	_validStart
 19078  008926  0900               	iorlw	0
 19079  008928  A4D8               	btfss	status,2,c
 19080  00892A  D002               	goto	l19229
 19081  00892C                     u23680:
 19082                           
 19083                           ; BSR set to: 0
 19084                           ;events.c: 705: return 0;
 19085  00892C  0E00               	movlw	0
 19086  00892E  0012               	return	
 19087  008930                     l19229:
 19088                           
 19089                           ; BSR set to: 0
 19090                           ;events.c: 706: };events.c: 707: f.asByte = readFlashBlock((WORD)(&(eventTable[tableInde
      +                          x].flags.asByte)));
 19091  008930  5185               	movf	numEv@tableIndex& (0+255),w,b
 19092  008932  0D10               	mullw	16
 19093  008934  CFF3 F081          	movff	prodl,??_numEv
 19094  008938  CFF4 F082          	movff	prodh,??_numEv+1
 19095  00893C  51E9               	movf	_eventTable& (0+255),w,b
 19096  00893E  2581               	addwf	??_numEv& (0+255),w,b
 19097  008940  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 19098  008942  51EA               	movf	(_eventTable+1)& (0+255),w,b
 19099  008944  2182               	addwfc	(??_numEv+1)& (0+255),w,b
 19100  008946  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 19101  008948  EC8D  F03D         	call	_readFlashBlock	;wreg free
 19102  00894C  6F84               	movwf	numEv@f& (0+255),b
 19103                           
 19104                           ;events.c: 708: while (f.continued) {
 19105  00894E  D027               	goto	l19243
 19106  008950                     l19231:
 19107                           
 19108                           ; BSR set to: 0
 19109                           ;events.c: 709: tableIndex = readFlashBlock((WORD)(&(eventTable[tableIndex].next)));
 19110  008950  5185               	movf	numEv@tableIndex& (0+255),w,b
 19111  008952  0D10               	mullw	16
 19112  008954  CFF3 F081          	movff	prodl,??_numEv
 19113  008958  CFF4 F082          	movff	prodh,??_numEv+1
 19114  00895C  51E9               	movf	_eventTable& (0+255),w,b
 19115  00895E  2781               	addwf	??_numEv& (0+255),f,b
 19116  008960  51EA               	movf	(_eventTable+1)& (0+255),w,b
 19117  008962  2382               	addwfc	(??_numEv+1)& (0+255),f,b
 19118  008964  0E01               	movlw	1
 19119  008966  2581               	addwf	??_numEv& (0+255),w,b
 19120  008968  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 19121  00896A  0E00               	movlw	0
 19122  00896C  2182               	addwfc	(??_numEv+1)& (0+255),w,b
 19123  00896E  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 19124  008970  EC8D  F03D         	call	_readFlashBlock	;wreg free
 19125  008974  6F85               	movwf	numEv@tableIndex& (0+255),b
 19126                           
 19127                           ; BSR set to: 0
 19128                           ;events.c: 710: if (tableIndex == 0xff) {
 19129  008976  2985               	incf	numEv@tableIndex& (0+255),w,b
 19130  008978  B4D8               	btfsc	status,2,c
 19131  00897A  D7D8               	goto	u23680
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;events.c: 712: };events.c: 713: f.asByte = readFlashBlock((WORD)(&(eventTable[tableInde
      +                          x].flags.asByte)));
 19135  00897C  5185               	movf	numEv@tableIndex& (0+255),w,b
 19136  00897E  0D10               	mullw	16
 19137  008980  CFF3 F081          	movff	prodl,??_numEv
 19138  008984  CFF4 F082          	movff	prodh,??_numEv+1
 19139  008988  51E9               	movf	_eventTable& (0+255),w,b
 19140  00898A  2581               	addwf	??_numEv& (0+255),w,b
 19141  00898C  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 19142  00898E  51EA               	movf	(_eventTable+1)& (0+255),w,b
 19143  008990  2182               	addwfc	(??_numEv+1)& (0+255),w,b
 19144  008992  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 19145  008994  EC8D  F03D         	call	_readFlashBlock	;wreg free
 19146  008998  6F84               	movwf	numEv@f& (0+255),b
 19147                           
 19148                           ; BSR set to: 0
 19149                           ;events.c: 714: num += 10U;
 19150  00899A  0E0A               	movlw	10
 19151  00899C  2783               	addwf	numEv@num& (0+255),f,b
 19152  00899E                     l19243:
 19153                           
 19154                           ; BSR set to: 0
 19155  00899E  B984               	btfsc	numEv@f& (0+255),4,b
 19156  0089A0  D7D7               	goto	l19231
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;events.c: 715: };events.c: 716: num += f.eVsUsed;
 19160  0089A2  5184               	movf	numEv@f& (0+255),w,b
 19161  0089A4  0B0F               	andlw	15
 19162  0089A6  2783               	addwf	numEv@num& (0+255),f,b
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;events.c: 717: return num;
 19166  0089A8  5183               	movf	numEv@num& (0+255),w,b
 19167                           
 19168                           ; BSR set to: 0
 19169  0089AA  0012               	return		;funcret
 19170  0089AC                     __end_of_numEv:
 19171                           	callstack 0
 19172                           
 19173 ;; *************** function _doNvset *****************
 19174 ;; Defined at:
 19175 ;;		line 617 in file "../../github/CBUSlib/FliM.c"
 19176 ;; Parameters:    Size  Location     Type
 19177 ;;  NVindex         1    wreg     unsigned char 
 19178 ;;  NVvalue         1  122[BANK0 ] unsigned char 
 19179 ;; Auto vars:     Size  Location     Type
 19180 ;;  NVindex         1  128[BANK0 ] unsigned char 
 19181 ;;  flashIndex      2  125[BANK0 ] unsigned int 
 19182 ;;  oldValue        1  127[BANK0 ] unsigned char 
 19183 ;; Return value:  Size  Location     Type
 19184 ;;                  1    wreg      void 
 19185 ;; Registers used:
 19186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19187 ;; Tracked objects:
 19188 ;;		On entry : 3F/0
 19189 ;;		On exit  : 3F/0
 19190 ;;		Unchanged: 0/0
 19191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19192 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19193 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19194 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19195 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19196 ;;Total ram usage:        7 bytes
 19197 ;; Hardware stack levels used: 1
 19198 ;; Hardware stack levels required when called: 24
 19199 ;; This function calls:
 19200 ;;		_actUponNVchange
 19201 ;;		_cbusSendOpcMyNN
 19202 ;;		_doError
 19203 ;;		_loadNvCache
 19204 ;;		_validateNV
 19205 ;;		_writeFlashByte
 19206 ;; This function is called by:
 19207 ;;		_parseFLiMCmd
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           	psect	text78
 19212  00842A                     __ptext78:
 19213                           	callstack 0
 19214  00842A                     _doNvset:
 19215                           	callstack 3
 19216                           
 19217                           ; BSR set to: 0
 19218                           ;incstack = 0
 19219                           ;doNvset@NVindex stored from wreg
 19220  00842A  6FE0               	movwf	doNvset@NVindex& (0+255),b
 19221                           
 19222                           ;FliM.c: 620: if ((NVindex == 0) || (NVindex >= sizeof(ModuleNvDefs)))
 19223  00842C  0100               	movlb	0	; () banked
 19224  00842E  51E0               	movf	doNvset@NVindex& (0+255),w,b
 19225  008430  B4D8               	btfsc	status,2,c
 19226  008432  D003               	goto	u24470
 19227                           
 19228                           ; BSR set to: 0
 19229  008434  0E7F               	movlw	127
 19230  008436  65E0               	cpfsgt	doNvset@NVindex& (0+255),b
 19231  008438  D004               	goto	l19743
 19232  00843A                     u24470:
 19233                           
 19234                           ; BSR set to: 0
 19235                           ;FliM.c: 621: {;FliM.c: 622: doError(10);
 19236  00843A  0E0A               	movlw	10
 19237  00843C  EC56  F052         	call	_doError
 19238                           
 19239                           ;FliM.c: 623: }
 19240  008440  0012               	return	
 19241  008442                     l19743:
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;FliM.c: 624: else;FliM.c: 625: {;FliM.c: 626: WORD flashIndex;;FliM.c: 627: BYTE oldVal
      +                          ue;;FliM.c: 631: flashIndex = 0xFF80U;
 19245  008442  0EFF               	movlw	255
 19246  008444  6FDE               	movwf	(doNvset@flashIndex+1)& (0+255),b
 19247  008446  0E80               	movlw	128
 19248  008448  6FDD               	movwf	doNvset@flashIndex& (0+255),b
 19249                           
 19250                           ; BSR set to: 0
 19251                           ;FliM.c: 632: flashIndex += NVindex;
 19252  00844A  51E0               	movf	doNvset@NVindex& (0+255),w,b
 19253  00844C  27DD               	addwf	doNvset@flashIndex& (0+255),f,b
 19254  00844E  0E00               	movlw	0
 19255  008450  23DE               	addwfc	(doNvset@flashIndex+1)& (0+255),f,b
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;FliM.c: 634: oldValue = NvBytePtr[NVindex];
 19259  008452  51E0               	movf	doNvset@NVindex& (0+255),w,b
 19260  008454  0D01               	mullw	1
 19261  008456  CFF3 F0DB          	movff	prodl,??_doNvset
 19262  00845A  CFF4 F0DC          	movff	prodh,??_doNvset+1
 19263  00845E  0E80               	movlw	128
 19264  008460  25DB               	addwf	??_doNvset& (0+255),w,b
 19265  008462  6EF6               	movwf	tblptrl,c
 19266  008464  0EFF               	movlw	255
 19267  008466  21DC               	addwfc	(??_doNvset+1)& (0+255),w,b
 19268  008468  6EF7               	movwf	tblptrh,c
 19269  00846A  6AF8               	clrf	tblptru,c
 19270  00846C  0E00               	movlw	0
 19271  00846E  22F8               	addwfc	tblptru,f,c
 19272  008470  0008               	tblrd		*
 19273  008472  CFF5 F0DF          	movff	tablat,doNvset@oldValue
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;FliM.c: 635: if (validateNV(NVindex, oldValue, NVvalue))
 19277  008476  C0DF  F078         	movff	doNvset@oldValue,validateNV@oldValue
 19278  00847A  C0DA  F079         	movff	doNvset@NVvalue,validateNV@value
 19279  00847E  51E0               	movf	doNvset@NVindex& (0+255),w,b
 19280  008480  EC67  F042         	call	_validateNV
 19281  008484  0900               	iorlw	0
 19282  008486  B4D8               	btfsc	status,2,c
 19283  008488  D01E               	goto	l19757
 19284                           
 19285                           ; BSR set to: 0
 19286                           ;FliM.c: 636: {;FliM.c: 637: writeFlashByte((BYTE *)flashIndex, NVvalue);
 19287  00848A  C0DD  F087         	movff	doNvset@flashIndex,writeFlashByte@flashAddr
 19288  00848E  C0DE  F088         	movff	doNvset@flashIndex+1,writeFlashByte@flashAddr+1
 19289  008492  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 19290  008494  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 19291  008496  A4D8               	btfss	status,2,c
 19292  008498  0E20               	movlw	32
 19293  00849A  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 19294  00849C  C0DA  F08A         	movff	doNvset@NVvalue,writeFlashByte@flashData
 19295  0084A0  ECBA  F052         	call	_writeFlashByte	;wreg free
 19296                           
 19297                           ;FliM.c: 639: loadNvCache();
 19298  0084A4  EC0C  F04F         	call	_loadNvCache	;wreg free
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;FliM.c: 641: actUponNVchange(NVindex, oldValue, NVvalue);
 19302  0084A8  C0DF  F0D2         	movff	doNvset@oldValue,actUponNVchange@oldValue
 19303  0084AC  C0DA  F0D3         	movff	doNvset@NVvalue,actUponNVchange@value
 19304  0084B0  51E0               	movf	doNvset@NVindex& (0+255),w,b
 19305  0084B2  EC56  F028         	call	_actUponNVchange
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;FliM.c: 642: cbusSendOpcMyNN( 0, 0x59, cbusMsg);
 19309  0084B6  0E59               	movlw	89
 19310  0084B8  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 19311  0084BA  0E1C               	movlw	low _cbusMsg
 19312  0084BC  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 19313  0084BE  0E00               	movlw	0
 19314  0084C0  EC65  F052         	call	_cbusSendOpcMyNN
 19315                           
 19316                           ;FliM.c: 643: }
 19317  0084C4  0012               	return	
 19318  0084C6                     l19757:
 19319                           
 19320                           ; BSR set to: 0
 19321                           ;FliM.c: 644: else;FliM.c: 645: {;FliM.c: 646: doError(12);
 19322  0084C6  0E0C               	movlw	12
 19323  0084C8  EC56  F052         	call	_doError
 19324                           
 19325                           ; BSR set to: 0
 19326  0084CC  0012               	return		;funcret
 19327  0084CE                     __end_of_doNvset:
 19328                           	callstack 0
 19329                           
 19330 ;; *************** function _validateNV *****************
 19331 ;; Defined at:
 19332 ;;		line 84 in file "../../github/CANMIOfirmware/mioNv.c"
 19333 ;; Parameters:    Size  Location     Type
 19334 ;;  index           1    wreg     unsigned char 
 19335 ;;  oldValue        1   24[BANK0 ] unsigned char 
 19336 ;;  value           1   25[BANK0 ] unsigned char 
 19337 ;; Auto vars:     Size  Location     Type
 19338 ;;  index           1   29[BANK0 ] unsigned char 
 19339 ;;  io              1   28[BANK0 ] unsigned char 
 19340 ;; Return value:  Size  Location     Type
 19341 ;;                  1    wreg      unsigned char 
 19342 ;; Registers used:
 19343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19344 ;; Tracked objects:
 19345 ;;		On entry : 3F/0
 19346 ;;		On exit  : 3F/0
 19347 ;;		Unchanged: 0/0
 19348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19353 ;;Total ram usage:        6 bytes
 19354 ;; Hardware stack levels used: 1
 19355 ;; Hardware stack levels required when called: 9
 19356 ;; This function calls:
 19357 ;;		___lwdiv
 19358 ;;		___lwmod
 19359 ;; This function is called by:
 19360 ;;		_doNvset
 19361 ;; This function uses a non-reentrant model
 19362 ;;
 19363                           
 19364                           	psect	text79
 19365  0084CE                     __ptext79:
 19366                           	callstack 0
 19367  0084CE                     _validateNV:
 19368                           	callstack 17
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;incstack = 0
 19372                           ;validateNV@index stored from wreg
 19373  0084CE  6F7D               	movwf	validateNV@index& (0+255),b
 19374                           
 19375                           ;mioNv.c: 86: unsigned char io;;mioNv.c: 87: if ((index >= 16U) && (((index-16U) % 7U) =
      +                          = 0)) {
 19376  0084D0  0E0F               	movlw	15
 19377  0084D2  0100               	movlb	0	; () banked
 19378  0084D4  657D               	cpfsgt	validateNV@index& (0+255),b
 19379  0084D6  D04B               	goto	l947
 19380                           
 19381                           ; BSR set to: 0
 19382  0084D8  0EF0               	movlw	240
 19383  0084DA  257D               	addwf	validateNV@index& (0+255),w,b
 19384  0084DC  6F71               	movwf	___lwmod@dividend& (0+255),b
 19385  0084DE  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
 19386  0084E0  0EFF               	movlw	255
 19387  0084E2  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
 19388  0084E4  0E00               	movlw	0
 19389  0084E6  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
 19390  0084E8  0E07               	movlw	7
 19391  0084EA  6F73               	movwf	___lwmod@divisor& (0+255),b
 19392  0084EC  ECCA  F04E         	call	___lwmod	;wreg free
 19393  0084F0  5171               	movf	?___lwmod& (0+255),w,b
 19394  0084F2  1172               	iorwf	(?___lwmod+1)& (0+255),w,b
 19395  0084F4  B4D8               	btfsc	status,2,c
 19396  0084F6  D024               	goto	l18943
 19397  0084F8  D03A               	goto	l947
 19398  0084FA                     l18929:
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;mioNv.c: 91: case 6U:;mioNv.c: 92: io = ((unsigned char)((index-16U)/7U));
 19402  0084FA  0EF0               	movlw	240
 19403  0084FC  257D               	addwf	validateNV@index& (0+255),w,b
 19404  0084FE  6F71               	movwf	___lwdiv@dividend& (0+255),b
 19405  008500  6B72               	clrf	(___lwdiv@dividend+1)& (0+255),b
 19406  008502  0EFF               	movlw	255
 19407  008504  2372               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 19408  008506  0E00               	movlw	0
 19409  008508  6F74               	movwf	(___lwdiv@divisor+1)& (0+255),b
 19410  00850A  0E07               	movlw	7
 19411  00850C  6F73               	movwf	___lwdiv@divisor& (0+255),b
 19412  00850E  ECC7  F04C         	call	___lwdiv	;wreg free
 19413  008512  5171               	movf	?___lwdiv& (0+255),w,b
 19414  008514  6F7C               	movwf	validateNV@io& (0+255),b
 19415                           
 19416                           ; BSR set to: 0
 19417                           ;mioNv.c: 93: if (configs[io].an == 0xFF) return 0;
 19418  008516  517C               	movf	validateNV@io& (0+255),w,b
 19419  008518  0D04               	mullw	4
 19420  00851A  CFF3 F07A          	movff	prodl,??_validateNV
 19421  00851E  0E03               	movlw	3
 19422  008520  277A               	addwf	??_validateNV& (0+255),f,b
 19423  008522  517A               	movf	??_validateNV& (0+255),w,b
 19424  008524  0F01               	addlw	low _configs
 19425  008526  6F7B               	movwf	(??_validateNV+1)& (0+255),b
 19426  008528  C07B  FFF6         	movff	??_validateNV+1,tblptrl
 19427  00852C                     	if	1	;There is more than 1 active tblptr byte
 19428  00852C  0E0F               	movlw	high __smallconst
 19429  00852E  6EF7               	movwf	tblptrh,c
 19430  008530                     	endif
 19431  008530                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19432  008530  6AF8               	clrf	tblptru,c
 19433  008532                     	endif
 19434  008532                     	if	0	;tblptru may be non-zero
 19435  008532                     	endif
 19436  008532  0008               	tblrd		*
 19437  008534  50F5               	movf	tablat,w,c
 19438  008536  0AFF               	xorlw	255
 19439  008538  A4D8               	btfss	status,2,c
 19440  00853A  D019               	goto	l947
 19441  00853C                     u23440:
 19442                           
 19443                           ; BSR set to: 0
 19444  00853C  0E00               	movlw	0
 19445  00853E  0012               	return	
 19446  008540                     l18943:
 19447                           
 19448                           ; BSR set to: 0
 19449  008540  5179               	movf	validateNV@value& (0+255),w,b
 19450                           
 19451                           ; Switch size 1, requested type "simple"
 19452                           ; Number of cases is 7, Range of values is 0 to 6
 19453                           ; switch strategies available:
 19454                           ; Name         Instructions Cycles
 19455                           ; simple_byte           22    12 (average)
 19456                           ;	Chosen strategy is simple_byte
 19457  008542  0A00               	xorlw	0	; case 0
 19458  008544  B4D8               	btfsc	status,2,c
 19459  008546  D013               	goto	l947
 19460  008548  0A01               	xorlw	1	; case 1
 19461  00854A  B4D8               	btfsc	status,2,c
 19462  00854C  D010               	goto	l947
 19463  00854E  0A03               	xorlw	3	; case 2
 19464  008550  B4D8               	btfsc	status,2,c
 19465  008552  D00D               	goto	l947
 19466  008554  0A01               	xorlw	1	; case 3
 19467  008556  B4D8               	btfsc	status,2,c
 19468  008558  D00A               	goto	l947
 19469  00855A  0A07               	xorlw	7	; case 4
 19470  00855C  B4D8               	btfsc	status,2,c
 19471  00855E  D007               	goto	l947
 19472  008560  0A01               	xorlw	1	; case 5
 19473  008562  B4D8               	btfsc	status,2,c
 19474  008564  D7CA               	goto	l18929
 19475  008566  0A03               	xorlw	3	; case 6
 19476  008568  B4D8               	btfsc	status,2,c
 19477  00856A  D7C7               	goto	l18929
 19478  00856C  D7E7               	goto	u23440
 19479  00856E                     l947:
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;mioNv.c: 114: };mioNv.c: 115: return 1;
 19483                           
 19484                           ; BSR set to: 0
 19485  00856E  0E01               	movlw	1
 19486                           
 19487                           ; BSR set to: 0
 19488  008570  0012               	return		;funcret
 19489  008572                     __end_of_validateNV:
 19490                           	callstack 0
 19491                           
 19492 ;; *************** function _actUponNVchange *****************
 19493 ;; Defined at:
 19494 ;;		line 118 in file "../../github/CANMIOfirmware/mioNv.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;  index           1    wreg     unsigned char 
 19497 ;;  oldValue        1  114[BANK0 ] unsigned char 
 19498 ;;  value           1  115[BANK0 ] unsigned char 
 19499 ;; Auto vars:     Size  Location     Type
 19500 ;;  index           1  120[BANK0 ] unsigned char 
 19501 ;;  io              1  121[BANK0 ] unsigned char 
 19502 ;;  nv              1    0        unsigned char 
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      void 
 19505 ;; Registers used:
 19506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19507 ;; Tracked objects:
 19508 ;;		On entry : 3F/0
 19509 ;;		On exit  : 3F/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19512 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19513 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19515 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19516 ;;Total ram usage:        8 bytes
 19517 ;; Hardware stack levels used: 1
 19518 ;; Hardware stack levels required when called: 23
 19519 ;; This function calls:
 19520 ;;		___lbdiv
 19521 ;;		___lwdiv
 19522 ;;		___lwmod
 19523 ;;		_setBounceState
 19524 ;;		_setMultiState
 19525 ;;		_setServoState
 19526 ;;		_setType
 19527 ;;		_startBounceOutput
 19528 ;;		_startMultiOutput
 19529 ;;		_startServoOutput
 19530 ;; This function is called by:
 19531 ;;		_doNvset
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           
 19535                           	psect	text80
 19536  0050AC                     __ptext80:
 19537                           	callstack 0
 19538  0050AC                     _actUponNVchange:
 19539                           	callstack 3
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;incstack = 0
 19543                           ;actUponNVchange@index stored from wreg
 19544  0050AC  6FD8               	movwf	actUponNVchange@index& (0+255),b
 19545                           
 19546                           ;mioNv.c: 120: unsigned char io;;mioNv.c: 121: unsigned char nv;;mioNv.c: 122: if ((((in
      +                          dex-16U) % 7U) == 0)) {
 19547  0050AE  0EF0               	movlw	240
 19548  0050B0  0100               	movlb	0	; () banked
 19549  0050B2  25D8               	addwf	actUponNVchange@index& (0+255),w,b
 19550  0050B4  6F71               	movwf	___lwmod@dividend& (0+255),b
 19551  0050B6  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
 19552  0050B8  0EFF               	movlw	255
 19553  0050BA  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
 19554  0050BC  0E00               	movlw	0
 19555  0050BE  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
 19556  0050C0  0E07               	movlw	7
 19557  0050C2  6F73               	movwf	___lwmod@divisor& (0+255),b
 19558  0050C4  ECCA  F04E         	call	___lwmod	;wreg free
 19559  0050C8  5171               	movf	?___lwmod& (0+255),w,b
 19560  0050CA  1172               	iorwf	(?___lwmod+1)& (0+255),w,b
 19561  0050CC  A4D8               	btfss	status,2,c
 19562  0050CE  D012               	goto	l18959
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;mioNv.c: 123: io = index-16U;
 19566  0050D0  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19567  0050D2  0FF0               	addlw	240
 19568  0050D4  6FD9               	movwf	actUponNVchange@io& (0+255),b
 19569                           
 19570                           ; BSR set to: 0
 19571                           ;mioNv.c: 124: io /= 7U;
 19572  0050D6  0E07               	movlw	7
 19573  0050D8  6F71               	movwf	___lbdiv@divisor& (0+255),b
 19574  0050DA  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19575  0050DC  EC6B  F04F         	call	___lbdiv
 19576  0050E0  6FD9               	movwf	actUponNVchange@io& (0+255),b
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;mioNv.c: 125: if (oldValue != value) {
 19580  0050E2  51D3               	movf	actUponNVchange@value& (0+255),w,b
 19581  0050E4  19D2               	xorwf	actUponNVchange@oldValue& (0+255),w,b
 19582  0050E6  B4D8               	btfsc	status,2,c
 19583  0050E8  D005               	goto	l18959
 19584                           
 19585                           ; BSR set to: 0
 19586                           ;mioNv.c: 126: setType(io, value);
 19587  0050EA  C0D3  F0CC         	movff	actUponNVchange@value,setType@type
 19588  0050EE  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19589  0050F0  EC08  F03F         	call	_setType
 19590  0050F4                     l18959:
 19591                           
 19592                           ;mioNv.c: 127: };mioNv.c: 128: };mioNv.c: 129: if (index == 4U) {
 19593  0050F4  0E04               	movlw	4
 19594  0050F6  0100               	movlb	0	; () banked
 19595  0050F8  19D8               	xorwf	actUponNVchange@index& (0+255),w,b
 19596  0050FA  B4D8               	btfsc	status,2,c
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;mioNv.c: 130: WPUB = value;
 19600  0050FC  C0D3  FF5B         	movff	actUponNVchange@value,3931	;volatile
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;mioNv.c: 131: };mioNv.c: 133: if (index >= 16U) {
 19604  005100  0E0F               	movlw	15
 19605  005102  65D8               	cpfsgt	actUponNVchange@index& (0+255),b
 19606  005104  0012               	return	
 19607                           
 19608                           ; BSR set to: 0
 19609                           ;mioNv.c: 134: io = ((unsigned char)((index-16U)/7U));
 19610  005106  0EF0               	movlw	240
 19611  005108  25D8               	addwf	actUponNVchange@index& (0+255),w,b
 19612  00510A  6F71               	movwf	___lwdiv@dividend& (0+255),b
 19613  00510C  6B72               	clrf	(___lwdiv@dividend+1)& (0+255),b
 19614  00510E  0EFF               	movlw	255
 19615  005110  2372               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 19616  005112  0E00               	movlw	0
 19617  005114  6F74               	movwf	(___lwdiv@divisor+1)& (0+255),b
 19618  005116  0E07               	movlw	7
 19619  005118  6F73               	movwf	___lwdiv@divisor& (0+255),b
 19620  00511A  ECC7  F04C         	call	___lwdiv	;wreg free
 19621  00511E  5171               	movf	?___lwdiv& (0+255),w,b
 19622  005120  6FD9               	movwf	actUponNVchange@io& (0+255),b
 19623  005122  0EF0               	movlw	240
 19624  005124  25D8               	addwf	actUponNVchange@index& (0+255),w,b
 19625  005126  6F71               	movwf	___lwmod@dividend& (0+255),b
 19626  005128  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
 19627  00512A  0EFF               	movlw	255
 19628  00512C  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
 19629  00512E  0E00               	movlw	0
 19630  005130  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
 19631  005132  0E07               	movlw	7
 19632  005134  6F73               	movwf	___lwmod@divisor& (0+255),b
 19633  005136  ECCA  F04E         	call	___lwmod	;wreg free
 19634                           
 19635                           ;mioNv.c: 136: switch(NV->io[io].type) {
 19636  00513A  D0F7               	goto	l19023
 19637  00513C                     l18967:
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;mioNv.c: 140: if (index == (16U + 7U*(io) + 2U)) {
 19641  00513C  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19642  00513E  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19643  005140  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19644  005142  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19645  005144  0D07               	mullw	7
 19646  005146  0E12               	movlw	18
 19647  005148  26F3               	addwf	243,f,c
 19648  00514A  0E00               	movlw	0
 19649  00514C  22F4               	addwfc	244,f,c
 19650  00514E  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19651  005150  18F3               	xorwf	243,w,c
 19652  005152  E103               	bnz	u23491
 19653  005154  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19654  005156  18F4               	xorwf	244,w,c
 19655  005158  A4D8               	btfss	status,2,c
 19656  00515A                     u23491:
 19657  00515A  0012               	return	
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;mioNv.c: 142: setupIo = io;
 19661  00515C  C0D9  F01A         	movff	actUponNVchange@io,_setupIo
 19662                           
 19663                           ;mioNv.c: 143: setupState = (value & 0x80)?2U:1U;
 19664  005160  BFD3               	btfsc	actUponNVchange@value& (0+255),7,b
 19665  005162  D004               	goto	l18973
 19666                           
 19667                           ; BSR set to: 0
 19668  005164  0E00               	movlw	0
 19669  005166  6FD7               	movwf	(_actUponNVchange$2139+1)& (0+255),b
 19670  005168  0E01               	movlw	1
 19671  00516A  D003               	goto	L14
 19672  00516C                     l18973:
 19673                           
 19674                           ; BSR set to: 0
 19675  00516C  0E00               	movlw	0
 19676  00516E  6FD7               	movwf	(_actUponNVchange$2139+1)& (0+255),b
 19677  005170  0E02               	movlw	2
 19678  005172                     L14:
 19679  005172  6FD6               	movwf	_actUponNVchange$2139& (0+255),b
 19680                           
 19681                           ; BSR set to: 0
 19682  005174  C0D6  F019         	movff	_actUponNVchange$2139,_setupState
 19683  005178                     l962:
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;mioNv.c: 144: };mioNv.c: 145: break;
 19687  005178  0012               	return	
 19688  00517A                     l18977:
 19689                           
 19690                           ; BSR set to: 0
 19691                           ;mioNv.c: 150: if (index == (16U + 7U*(io) + 2U)) {
 19692  00517A  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19693  00517C  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19694  00517E  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19695  005180  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19696  005182  0D07               	mullw	7
 19697  005184  0E12               	movlw	18
 19698  005186  26F3               	addwf	243,f,c
 19699  005188  0E00               	movlw	0
 19700  00518A  22F4               	addwfc	244,f,c
 19701  00518C  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19702  00518E  18F3               	xorwf	243,w,c
 19703  005190  E10F               	bnz	l18981
 19704  005192  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19705  005194  18F4               	xorwf	244,w,c
 19706  005196  A4D8               	btfss	status,2,c
 19707  005198  D00B               	goto	l18981
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;mioNv.c: 151: setServoState(io, 2U);
 19711  00519A  0E02               	movlw	2
 19712  00519C  6F71               	movwf	setServoState@action& (0+255),b
 19713  00519E  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19714  0051A0  ECEC  F035         	call	_setServoState
 19715                           
 19716                           ;mioNv.c: 152: startServoOutput(io, 2U);
 19717  0051A4  0E02               	movlw	2
 19718  0051A6  6F71               	movwf	startServoOutput@action& (0+255),b
 19719  0051A8  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19720  0051AA  EC0A  F03B         	call	_startServoOutput
 19721                           
 19722                           ;mioNv.c: 153: } else if (index == (16U + 7U*(io) + 3U)) {
 19723  0051AE  0012               	return	
 19724  0051B0                     l18981:
 19725                           
 19726                           ; BSR set to: 0
 19727  0051B0  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19728  0051B2  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19729  0051B4  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19730  0051B6  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19731  0051B8  0D07               	mullw	7
 19732  0051BA  0E13               	movlw	19
 19733  0051BC  26F3               	addwf	243,f,c
 19734  0051BE  0E00               	movlw	0
 19735  0051C0  22F4               	addwfc	244,f,c
 19736  0051C2  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19737  0051C4  18F3               	xorwf	243,w,c
 19738  0051C6  E1D8               	bnz	l962
 19739  0051C8  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19740  0051CA  18F4               	xorwf	244,w,c
 19741  0051CC  A4D8               	btfss	status,2,c
 19742  0051CE  0012               	return	
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;mioNv.c: 154: setServoState(io, 1U);
 19746  0051D0  0E01               	movlw	1
 19747  0051D2  6F71               	movwf	setServoState@action& (0+255),b
 19748  0051D4  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19749  0051D6  ECEC  F035         	call	_setServoState
 19750                           
 19751                           ;mioNv.c: 155: startServoOutput(io, 1U);
 19752  0051DA  0E01               	movlw	1
 19753  0051DC  6F71               	movwf	startServoOutput@action& (0+255),b
 19754  0051DE  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19755  0051E0  EC0A  F03B         	call	_startServoOutput
 19756  0051E4  0012               	return	
 19757  0051E6                     l18985:
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;mioNv.c: 161: if (index == (16U + 7U*(io) + 3U)) {
 19761  0051E6  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19762  0051E8  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19763  0051EA  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19764  0051EC  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19765  0051EE  0D07               	mullw	7
 19766  0051F0  0E13               	movlw	19
 19767  0051F2  26F3               	addwf	243,f,c
 19768  0051F4  0E00               	movlw	0
 19769  0051F6  22F4               	addwfc	244,f,c
 19770  0051F8  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19771  0051FA  18F3               	xorwf	243,w,c
 19772  0051FC  E10F               	bnz	l18991
 19773  0051FE  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19774  005200  18F4               	xorwf	244,w,c
 19775  005202  A4D8               	btfss	status,2,c
 19776  005204  D00B               	goto	l18991
 19777                           
 19778                           ; BSR set to: 0
 19779                           ;mioNv.c: 162: setBounceState(io, 2U);
 19780  005206  0E02               	movlw	2
 19781  005208  6F71               	movwf	setBounceState@action& (0+255),b
 19782  00520A  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19783  00520C  EC7F  F036         	call	_setBounceState
 19784                           
 19785                           ; BSR set to: 0
 19786                           ;mioNv.c: 163: startBounceOutput(io, 2U);
 19787  005210  0E02               	movlw	2
 19788  005212  6F71               	movwf	startBounceOutput@action& (0+255),b
 19789  005214  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19790  005216  ECC3  F049         	call	_startBounceOutput
 19791                           
 19792                           ;mioNv.c: 164: } else if (index == (16U + 7U*(io) + 2U)) {
 19793  00521A  0012               	return	
 19794  00521C                     l18991:
 19795                           
 19796                           ; BSR set to: 0
 19797  00521C  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19798  00521E  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19799  005220  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19800  005222  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19801  005224  0D07               	mullw	7
 19802  005226  0E12               	movlw	18
 19803  005228  26F3               	addwf	243,f,c
 19804  00522A  0E00               	movlw	0
 19805  00522C  22F4               	addwfc	244,f,c
 19806  00522E  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19807  005230  18F3               	xorwf	243,w,c
 19808  005232  E1A2               	bnz	l962
 19809  005234  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19810  005236  18F4               	xorwf	244,w,c
 19811  005238  A4D8               	btfss	status,2,c
 19812  00523A  0012               	return	
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;mioNv.c: 165: setBounceState(io, 1U);
 19816  00523C  0E01               	movlw	1
 19817  00523E  6F71               	movwf	setBounceState@action& (0+255),b
 19818  005240  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19819  005242  EC7F  F036         	call	_setBounceState
 19820                           
 19821                           ; BSR set to: 0
 19822                           ;mioNv.c: 166: startBounceOutput(io, 1U);
 19823  005246  0E01               	movlw	1
 19824  005248  6F71               	movwf	startBounceOutput@action& (0+255),b
 19825  00524A  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19826  00524C  ECC3  F049         	call	_startBounceOutput
 19827  005250  0012               	return	
 19828  005252                     l18997:
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;mioNv.c: 172: if (index == (16U + 7U*(io) + 3U)) {
 19832  005252  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19833  005254  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19834  005256  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19835  005258  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19836  00525A  0D07               	mullw	7
 19837  00525C  0E13               	movlw	19
 19838  00525E  26F3               	addwf	243,f,c
 19839  005260  0E00               	movlw	0
 19840  005262  22F4               	addwfc	244,f,c
 19841  005264  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19842  005266  18F3               	xorwf	243,w,c
 19843  005268  E10F               	bnz	l19003
 19844  00526A  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19845  00526C  18F4               	xorwf	244,w,c
 19846  00526E  A4D8               	btfss	status,2,c
 19847  005270  D00B               	goto	l19003
 19848                           
 19849                           ; BSR set to: 0
 19850                           ;mioNv.c: 173: setMultiState(io, 0U);
 19851  005272  0E00               	movlw	0
 19852  005274  6F71               	movwf	setMultiState@action& (0+255),b
 19853  005276  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19854  005278  EC51  F035         	call	_setMultiState
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;mioNv.c: 174: startMultiOutput(io, 0U);
 19858  00527C  0E00               	movlw	0
 19859  00527E  6F71               	movwf	startMultiOutput@action& (0+255),b
 19860  005280  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19861  005282  ECB9  F042         	call	_startMultiOutput
 19862                           
 19863                           ;mioNv.c: 175: } else if (index == (16U + 7U*(io) + 4U)) {
 19864  005286  0012               	return	
 19865  005288                     l19003:
 19866                           
 19867                           ; BSR set to: 0
 19868  005288  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19869  00528A  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19870  00528C  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19871  00528E  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19872  005290  0D07               	mullw	7
 19873  005292  0E14               	movlw	20
 19874  005294  26F3               	addwf	243,f,c
 19875  005296  0E00               	movlw	0
 19876  005298  22F4               	addwfc	244,f,c
 19877  00529A  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19878  00529C  18F3               	xorwf	243,w,c
 19879  00529E  E10F               	bnz	l19009
 19880  0052A0  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19881  0052A2  18F4               	xorwf	244,w,c
 19882  0052A4  A4D8               	btfss	status,2,c
 19883  0052A6  D00B               	goto	l19009
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;mioNv.c: 176: setMultiState(io, 1U);
 19887  0052A8  0E01               	movlw	1
 19888  0052AA  6F71               	movwf	setMultiState@action& (0+255),b
 19889  0052AC  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19890  0052AE  EC51  F035         	call	_setMultiState
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;mioNv.c: 177: startMultiOutput(io, 1U);
 19894  0052B2  0E01               	movlw	1
 19895  0052B4  6F71               	movwf	startMultiOutput@action& (0+255),b
 19896  0052B6  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19897  0052B8  ECB9  F042         	call	_startMultiOutput
 19898                           
 19899                           ;mioNv.c: 178: } else if (index == (16U + 7U*(io) + 5U)) {
 19900  0052BC  0012               	return	
 19901  0052BE                     l19009:
 19902                           
 19903                           ; BSR set to: 0
 19904  0052BE  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19905  0052C0  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19906  0052C2  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19907  0052C4  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19908  0052C6  0D07               	mullw	7
 19909  0052C8  0E15               	movlw	21
 19910  0052CA  26F3               	addwf	243,f,c
 19911  0052CC  0E00               	movlw	0
 19912  0052CE  22F4               	addwfc	244,f,c
 19913  0052D0  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19914  0052D2  18F3               	xorwf	243,w,c
 19915  0052D4  E10F               	bnz	l19015
 19916  0052D6  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19917  0052D8  18F4               	xorwf	244,w,c
 19918  0052DA  A4D8               	btfss	status,2,c
 19919  0052DC  D00B               	goto	l19015
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;mioNv.c: 179: setMultiState(io, 2U);
 19923  0052DE  0E02               	movlw	2
 19924  0052E0  6F71               	movwf	setMultiState@action& (0+255),b
 19925  0052E2  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19926  0052E4  EC51  F035         	call	_setMultiState
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;mioNv.c: 180: startMultiOutput(io, 2U);
 19930  0052E8  0E02               	movlw	2
 19931  0052EA  6F71               	movwf	startMultiOutput@action& (0+255),b
 19932  0052EC  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19933  0052EE  ECB9  F042         	call	_startMultiOutput
 19934                           
 19935                           ;mioNv.c: 181: } else if (index == (16U + 7U*(io) + 6U)) {
 19936  0052F2  0012               	return	
 19937  0052F4                     l19015:
 19938                           
 19939                           ; BSR set to: 0
 19940  0052F4  51D8               	movf	actUponNVchange@index& (0+255),w,b
 19941  0052F6  6FD4               	movwf	??_actUponNVchange& (0+255),b
 19942  0052F8  6BD5               	clrf	(??_actUponNVchange+1)& (0+255),b
 19943  0052FA  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19944  0052FC  0D07               	mullw	7
 19945  0052FE  0E16               	movlw	22
 19946  005300  26F3               	addwf	243,f,c
 19947  005302  0E00               	movlw	0
 19948  005304  22F4               	addwfc	244,f,c
 19949  005306  51D4               	movf	??_actUponNVchange& (0+255),w,b
 19950  005308  18F3               	xorwf	243,w,c
 19951  00530A  E103               	bnz	u23581
 19952  00530C  51D5               	movf	(??_actUponNVchange+1)& (0+255),w,b
 19953  00530E  18F4               	xorwf	244,w,c
 19954  005310  A4D8               	btfss	status,2,c
 19955  005312                     u23581:
 19956  005312  0012               	return	
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;mioNv.c: 182: setMultiState(io, 3U);
 19960  005314  0E03               	movlw	3
 19961  005316  6F71               	movwf	setMultiState@action& (0+255),b
 19962  005318  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19963  00531A  EC51  F035         	call	_setMultiState
 19964                           
 19965                           ; BSR set to: 0
 19966                           ;mioNv.c: 183: startMultiOutput(io, 3U);
 19967  00531E  0E03               	movlw	3
 19968  005320  6F71               	movwf	startMultiOutput@action& (0+255),b
 19969  005322  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19970  005324  ECB9  F042         	call	_startMultiOutput
 19971  005328  0012               	return	
 19972  00532A                     l19023:
 19973                           
 19974                           ; BSR set to: 0
 19975  00532A  51D9               	movf	actUponNVchange@io& (0+255),w,b
 19976  00532C  0D07               	mullw	7
 19977  00532E  C0EC  F0D4         	movff	_NV,??_actUponNVchange
 19978  005332  C0ED  F0D5         	movff	_NV+1,??_actUponNVchange+1
 19979  005336  50F3               	movf	243,w,c
 19980  005338  27D4               	addwf	??_actUponNVchange& (0+255),f,b
 19981  00533A  50F4               	movf	244,w,c
 19982  00533C  23D5               	addwfc	(??_actUponNVchange+1)& (0+255),f,b
 19983  00533E  0E10               	movlw	16
 19984  005340  25D4               	addwf	??_actUponNVchange& (0+255),w,b
 19985  005342  6ED9               	movwf	fsr2l,c
 19986  005344  0E00               	movlw	0
 19987  005346  21D5               	addwfc	(??_actUponNVchange+1)& (0+255),w,b
 19988  005348  6EDA               	movwf	fsr2h,c
 19989  00534A  50DF               	movf	indf2,w,c
 19990                           
 19991                           ; Switch size 1, requested type "simple"
 19992                           ; Number of cases is 4, Range of values is 2 to 6
 19993                           ; switch strategies available:
 19994                           ; Name         Instructions Cycles
 19995                           ; simple_byte           13     7 (average)
 19996                           ;	Chosen strategy is simple_byte
 19997  00534C  0A02               	xorlw	2	; case 2
 19998  00534E  B4D8               	btfsc	status,2,c
 19999  005350  D714               	goto	l18977
 20000  005352  0A01               	xorlw	1	; case 3
 20001  005354  B4D8               	btfsc	status,2,c
 20002  005356  D747               	goto	l18985
 20003  005358  0A07               	xorlw	7	; case 4
 20004  00535A  B4D8               	btfsc	status,2,c
 20005  00535C  D77A               	goto	l18997
 20006  00535E  0A02               	xorlw	2	; case 6
 20007  005360  A4D8               	btfss	status,2,c
 20008  005362  0012               	return	
 20009  005364  D6EB               	goto	l18967
 20010  005366                     __end_of_actUponNVchange:
 20011                           	callstack 0
 20012                           
 20013 ;; *************** function _startServoOutput *****************
 20014 ;; Defined at:
 20015 ;;		line 472 in file "../../github/CANMIOfirmware/servo.c"
 20016 ;; Parameters:    Size  Location     Type
 20017 ;;  io              1    wreg     unsigned char 
 20018 ;;  action          1   17[BANK0 ] unsigned char 
 20019 ;; Auto vars:     Size  Location     Type
 20020 ;;  io              1   20[BANK0 ] unsigned char 
 20021 ;; Return value:  Size  Location     Type
 20022 ;;                  1    wreg      void 
 20023 ;; Registers used:
 20024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20025 ;; Tracked objects:
 20026 ;;		On entry : 3F/0
 20027 ;;		On exit  : 3F/0
 20028 ;;		Unchanged: 0/0
 20029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20030 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20033 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20034 ;;Total ram usage:        4 bytes
 20035 ;; Hardware stack levels used: 1
 20036 ;; Hardware stack levels required when called: 8
 20037 ;; This function calls:
 20038 ;;		Nothing
 20039 ;; This function is called by:
 20040 ;;		_actUponNVchange
 20041 ;;		_startOutput
 20042 ;; This function uses a non-reentrant model
 20043 ;;
 20044                           
 20045                           	psect	text81
 20046  007614                     __ptext81:
 20047                           	callstack 0
 20048  007614                     _startServoOutput:
 20049                           	callstack 20
 20050                           
 20051                           ; BSR set to: 0
 20052                           ;incstack = 0
 20053                           ;startServoOutput@io stored from wreg
 20054  007614  6F74               	movwf	startServoOutput@io& (0+255),b
 20055                           
 20056                           ;servo.c: 473: switch (action) {
 20057  007616  D025               	goto	l18691
 20058  007618                     l18685:
 20059                           
 20060                           ; BSR set to: 0
 20061                           ;servo.c: 475: stepsPerPollSpeed[io] = NV->io[io].nv_io.nv_servo.servo_es_speed;
 20062  007618  5174               	movf	startServoOutput@io& (0+255),w,b
 20063  00761A  0D07               	mullw	7
 20064  00761C  C0EC  F072         	movff	_NV,??_startServoOutput
 20065  007620  C0ED  F073         	movff	_NV+1,??_startServoOutput+1
 20066  007624  50F3               	movf	243,w,c
 20067  007626  2772               	addwf	??_startServoOutput& (0+255),f,b
 20068  007628  50F4               	movf	244,w,c
 20069  00762A  2373               	addwfc	(??_startServoOutput+1)& (0+255),f,b
 20070  00762C  0E15               	movlw	21
 20071  00762E  D00B               	goto	L15
 20072  007630                     l18687:
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;servo.c: 478: stepsPerPollSpeed[io] = NV->io[io].nv_io.nv_servo.servo_se_speed;
 20076  007630  5174               	movf	startServoOutput@io& (0+255),w,b
 20077  007632  0D07               	mullw	7
 20078  007634  C0EC  F072         	movff	_NV,??_startServoOutput
 20079  007638  C0ED  F073         	movff	_NV+1,??_startServoOutput+1
 20080  00763C  50F3               	movf	243,w,c
 20081  00763E  2772               	addwf	??_startServoOutput& (0+255),f,b
 20082  007640  50F4               	movf	244,w,c
 20083  007642  2373               	addwfc	(??_startServoOutput+1)& (0+255),f,b
 20084  007644  0E14               	movlw	20
 20085  007646                     L15:
 20086  007646  2572               	addwf	??_startServoOutput& (0+255),w,b
 20087  007648  6ED9               	movwf	fsr2l,c
 20088  00764A  0E00               	movlw	0
 20089  00764C  2173               	addwfc	(??_startServoOutput+1)& (0+255),w,b
 20090  00764E  6EDA               	movwf	fsr2h,c
 20091  007650  0E30               	movlw	low _stepsPerPollSpeed
 20092  007652  2574               	addwf	startServoOutput@io& (0+255),w,b
 20093  007654  6EE1               	movwf	fsr1l,c
 20094  007656  6AE2               	clrf	fsr1h,c
 20095  007658  0E01               	movlw	high _stepsPerPollSpeed
 20096  00765A  22E2               	addwfc	fsr1h,f,c
 20097  00765C  CFDF FFE7          	movff	indf2,indf1
 20098                           
 20099                           ;servo.c: 479: break;
 20100  007660  D008               	goto	l18693
 20101  007662                     l18691:
 20102  007662  0100               	movlb	0	; () banked
 20103  007664  5171               	movf	startServoOutput@action& (0+255),w,b
 20104                           
 20105                           ; Switch size 1, requested type "simple"
 20106                           ; Number of cases is 2, Range of values is 1 to 2
 20107                           ; switch strategies available:
 20108                           ; Name         Instructions Cycles
 20109                           ; simple_byte            7     4 (average)
 20110                           ;	Chosen strategy is simple_byte
 20111  007666  0A01               	xorlw	1	; case 1
 20112  007668  B4D8               	btfsc	status,2,c
 20113  00766A  D7E2               	goto	l18687
 20114  00766C  0A03               	xorlw	3	; case 2
 20115  00766E  B4D8               	btfsc	status,2,c
 20116  007670  D7D3               	goto	l18685
 20117  007672                     l18693:
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;servo.c: 481: if (stepsPerPollSpeed[io] > 234U) {
 20121  007672  0E30               	movlw	low _stepsPerPollSpeed
 20122  007674  2574               	addwf	startServoOutput@io& (0+255),w,b
 20123  007676  6ED9               	movwf	fsr2l,c
 20124  007678  6ADA               	clrf	fsr2h,c
 20125  00767A  0E01               	movlw	high _stepsPerPollSpeed
 20126  00767C  22DA               	addwfc	fsr2h,f,c
 20127  00767E  0EEA               	movlw	234
 20128  007680  64DF               	cpfsgt	indf2,c
 20129  007682  D00E               	goto	l18697
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;servo.c: 482: stepsPerPollSpeed[io] -= 234U;
 20133  007684  0E30               	movlw	low _stepsPerPollSpeed
 20134  007686  2574               	addwf	startServoOutput@io& (0+255),w,b
 20135  007688  6ED9               	movwf	fsr2l,c
 20136  00768A  6ADA               	clrf	fsr2h,c
 20137  00768C  0E01               	movlw	high _stepsPerPollSpeed
 20138  00768E  22DA               	addwfc	fsr2h,f,c
 20139  007690  0EEA               	movlw	234
 20140  007692  5EDF               	subwf	indf2,f,c
 20141                           
 20142                           ;servo.c: 483: pollsPerStepSpeed[io] = 0U;
 20143  007694  0E74               	movlw	low _pollsPerStepSpeed
 20144  007696  2574               	addwf	startServoOutput@io& (0+255),w,b
 20145  007698  6ED9               	movwf	fsr2l,c
 20146  00769A  6ADA               	clrf	fsr2h,c
 20147  00769C  0E02               	movlw	high _pollsPerStepSpeed
 20148  00769E  D01E               	goto	L16
 20149  0076A0                     l18697:
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;servo.c: 485: pollsPerStepSpeed[io] = 234U - stepsPerPollSpeed[io] +1U;
 20153  0076A0  0E74               	movlw	low _pollsPerStepSpeed
 20154  0076A2  2574               	addwf	startServoOutput@io& (0+255),w,b
 20155  0076A4  6ED9               	movwf	fsr2l,c
 20156  0076A6  6ADA               	clrf	fsr2h,c
 20157  0076A8  0E02               	movlw	high _pollsPerStepSpeed
 20158  0076AA  22DA               	addwfc	fsr2h,f,c
 20159  0076AC  0E30               	movlw	low _stepsPerPollSpeed
 20160  0076AE  2574               	addwf	startServoOutput@io& (0+255),w,b
 20161  0076B0  6EE1               	movwf	fsr1l,c
 20162  0076B2  6AE2               	clrf	fsr1h,c
 20163  0076B4  0E01               	movlw	high _stepsPerPollSpeed
 20164  0076B6  22E2               	addwfc	fsr1h,f,c
 20165  0076B8  50E7               	movf	indf1,w,c
 20166  0076BA  6F72               	movwf	??_startServoOutput& (0+255),b
 20167  0076BC  5172               	movf	??_startServoOutput& (0+255),w,b
 20168  0076BE  08EB               	sublw	235
 20169  0076C0  6EDF               	movwf	indf2,c
 20170                           
 20171                           ; BSR set to: 0
 20172                           ;servo.c: 486: pollCount[io] = 1;
 20173  0076C2  0E20               	movlw	low _pollCount
 20174  0076C4  2574               	addwf	startServoOutput@io& (0+255),w,b
 20175  0076C6  6ED9               	movwf	fsr2l,c
 20176  0076C8  6ADA               	clrf	fsr2h,c
 20177  0076CA  0E01               	movlw	high _pollCount
 20178  0076CC  22DA               	addwfc	fsr2h,f,c
 20179  0076CE  0E01               	movlw	1
 20180  0076D0  6EDF               	movwf	indf2,c
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;servo.c: 487: stepsPerPollSpeed[io] = 0U;
 20184  0076D2  0E30               	movlw	low _stepsPerPollSpeed
 20185  0076D4  2574               	addwf	startServoOutput@io& (0+255),w,b
 20186  0076D6  6ED9               	movwf	fsr2l,c
 20187  0076D8  6ADA               	clrf	fsr2h,c
 20188  0076DA  0E01               	movlw	high _stepsPerPollSpeed
 20189  0076DC                     L16:
 20190  0076DC  22DA               	addwfc	fsr2h,f,c
 20191  0076DE  0E00               	movlw	0
 20192  0076E0  6EDF               	movwf	indf2,c
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;servo.c: 488: };servo.c: 489: servoState[io] = STARTING;
 20196  0076E2  0E40               	movlw	low _servoState
 20197  0076E4  2574               	addwf	startServoOutput@io& (0+255),w,b
 20198  0076E6  6ED9               	movwf	fsr2l,c
 20199  0076E8  6ADA               	clrf	fsr2h,c
 20200  0076EA  0E01               	movlw	high _servoState
 20201  0076EC  22DA               	addwfc	fsr2h,f,c
 20202  0076EE  0E03               	movlw	3
 20203  0076F0  6EDF               	movwf	indf2,c
 20204                           
 20205                           ; BSR set to: 0
 20206  0076F2  0012               	return		;funcret
 20207  0076F4                     __end_of_startServoOutput:
 20208                           	callstack 0
 20209                           
 20210 ;; *************** function _startMultiOutput *****************
 20211 ;; Defined at:
 20212 ;;		line 518 in file "../../github/CANMIOfirmware/servo.c"
 20213 ;; Parameters:    Size  Location     Type
 20214 ;;  io              1    wreg     unsigned char 
 20215 ;;  action          1   17[BANK0 ] unsigned char 
 20216 ;; Auto vars:     Size  Location     Type
 20217 ;;  io              1   19[BANK0 ] unsigned char 
 20218 ;; Return value:  Size  Location     Type
 20219 ;;                  1    wreg      void 
 20220 ;; Registers used:
 20221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20222 ;; Tracked objects:
 20223 ;;		On entry : 3F/0
 20224 ;;		On exit  : 3F/0
 20225 ;;		Unchanged: 0/0
 20226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20227 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20231 ;;Total ram usage:        3 bytes
 20232 ;; Hardware stack levels used: 1
 20233 ;; Hardware stack levels required when called: 8
 20234 ;; This function calls:
 20235 ;;		Nothing
 20236 ;; This function is called by:
 20237 ;;		_actUponNVchange
 20238 ;;		_startOutput
 20239 ;; This function uses a non-reentrant model
 20240 ;;
 20241                           
 20242                           	psect	text82
 20243  008572                     __ptext82:
 20244                           	callstack 0
 20245  008572                     _startMultiOutput:
 20246                           	callstack 20
 20247                           
 20248                           ; BSR set to: 0
 20249                           ;incstack = 0
 20250                           ;startMultiOutput@io stored from wreg
 20251  008572  6F73               	movwf	startMultiOutput@io& (0+255),b
 20252                           
 20253                           ;servo.c: 520: stepsPerPollSpeed[io] = NV->servo_speed;
 20254  008574  0100               	movlb	0	; () banked
 20255  008576  EE20 F003          	lfsr	2,3
 20256  00857A  51EC               	movf	_NV& (0+255),w,b
 20257  00857C  26D9               	addwf	fsr2l,f,c
 20258  00857E  51ED               	movf	(_NV+1)& (0+255),w,b
 20259  008580  22DA               	addwfc	fsr2h,f,c
 20260  008582  0E30               	movlw	low _stepsPerPollSpeed
 20261  008584  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20262  008586  6EE1               	movwf	fsr1l,c
 20263  008588  6AE2               	clrf	fsr1h,c
 20264  00858A  0E01               	movlw	high _stepsPerPollSpeed
 20265  00858C  22E2               	addwfc	fsr1h,f,c
 20266  00858E  CFDF FFE7          	movff	indf2,indf1
 20267                           
 20268                           ; BSR set to: 0
 20269                           ;servo.c: 521: if (stepsPerPollSpeed[io] > 234U) {
 20270  008592  0E30               	movlw	low _stepsPerPollSpeed
 20271  008594  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20272  008596  6ED9               	movwf	fsr2l,c
 20273  008598  6ADA               	clrf	fsr2h,c
 20274  00859A  0E01               	movlw	high _stepsPerPollSpeed
 20275  00859C  22DA               	addwfc	fsr2h,f,c
 20276  00859E  0EEA               	movlw	234
 20277  0085A0  64DF               	cpfsgt	indf2,c
 20278  0085A2  D00E               	goto	l18759
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;servo.c: 522: stepsPerPollSpeed[io] -= 234U;
 20282  0085A4  0E30               	movlw	low _stepsPerPollSpeed
 20283  0085A6  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20284  0085A8  6ED9               	movwf	fsr2l,c
 20285  0085AA  6ADA               	clrf	fsr2h,c
 20286  0085AC  0E01               	movlw	high _stepsPerPollSpeed
 20287  0085AE  22DA               	addwfc	fsr2h,f,c
 20288  0085B0  0EEA               	movlw	234
 20289  0085B2  5EDF               	subwf	indf2,f,c
 20290                           
 20291                           ;servo.c: 523: pollsPerStepSpeed[io] = 0;
 20292  0085B4  0E74               	movlw	low _pollsPerStepSpeed
 20293  0085B6  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20294  0085B8  6ED9               	movwf	fsr2l,c
 20295  0085BA  6ADA               	clrf	fsr2h,c
 20296  0085BC  0E02               	movlw	high _pollsPerStepSpeed
 20297  0085BE  D01E               	goto	L17
 20298  0085C0                     l18759:
 20299                           
 20300                           ; BSR set to: 0
 20301                           ;servo.c: 525: pollsPerStepSpeed[io] = 234U - stepsPerPollSpeed[io] +1;
 20302  0085C0  0E74               	movlw	low _pollsPerStepSpeed
 20303  0085C2  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20304  0085C4  6ED9               	movwf	fsr2l,c
 20305  0085C6  6ADA               	clrf	fsr2h,c
 20306  0085C8  0E02               	movlw	high _pollsPerStepSpeed
 20307  0085CA  22DA               	addwfc	fsr2h,f,c
 20308  0085CC  0E30               	movlw	low _stepsPerPollSpeed
 20309  0085CE  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20310  0085D0  6EE1               	movwf	fsr1l,c
 20311  0085D2  6AE2               	clrf	fsr1h,c
 20312  0085D4  0E01               	movlw	high _stepsPerPollSpeed
 20313  0085D6  22E2               	addwfc	fsr1h,f,c
 20314  0085D8  50E7               	movf	indf1,w,c
 20315  0085DA  6F72               	movwf	??_startMultiOutput& (0+255),b
 20316  0085DC  5172               	movf	??_startMultiOutput& (0+255),w,b
 20317  0085DE  08EB               	sublw	235
 20318  0085E0  6EDF               	movwf	indf2,c
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;servo.c: 526: pollCount[io] = 1;
 20322  0085E2  0E20               	movlw	low _pollCount
 20323  0085E4  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20324  0085E6  6ED9               	movwf	fsr2l,c
 20325  0085E8  6ADA               	clrf	fsr2h,c
 20326  0085EA  0E01               	movlw	high _pollCount
 20327  0085EC  22DA               	addwfc	fsr2h,f,c
 20328  0085EE  0E01               	movlw	1
 20329  0085F0  6EDF               	movwf	indf2,c
 20330                           
 20331                           ; BSR set to: 0
 20332                           ;servo.c: 527: stepsPerPollSpeed[io] = 0;
 20333  0085F2  0E30               	movlw	low _stepsPerPollSpeed
 20334  0085F4  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20335  0085F6  6ED9               	movwf	fsr2l,c
 20336  0085F8  6ADA               	clrf	fsr2h,c
 20337  0085FA  0E01               	movlw	high _stepsPerPollSpeed
 20338  0085FC                     L17:
 20339  0085FC  22DA               	addwfc	fsr2h,f,c
 20340  0085FE  0E00               	movlw	0
 20341  008600  6EDF               	movwf	indf2,c
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;servo.c: 528: };servo.c: 529: servoState[io] = STARTING;
 20345  008602  0E40               	movlw	low _servoState
 20346  008604  2573               	addwf	startMultiOutput@io& (0+255),w,b
 20347  008606  6ED9               	movwf	fsr2l,c
 20348  008608  6ADA               	clrf	fsr2h,c
 20349  00860A  0E01               	movlw	high _servoState
 20350  00860C  22DA               	addwfc	fsr2h,f,c
 20351  00860E  0E03               	movlw	3
 20352  008610  6EDF               	movwf	indf2,c
 20353                           
 20354                           ; BSR set to: 0
 20355  008612  0012               	return		;funcret
 20356  008614                     __end_of_startMultiOutput:
 20357                           	callstack 0
 20358                           
 20359 ;; *************** function _startBounceOutput *****************
 20360 ;; Defined at:
 20361 ;;		line 500 in file "../../github/CANMIOfirmware/servo.c"
 20362 ;; Parameters:    Size  Location     Type
 20363 ;;  io              1    wreg     unsigned char 
 20364 ;;  action          1   17[BANK0 ] unsigned char 
 20365 ;; Auto vars:     Size  Location     Type
 20366 ;;  io              1   18[BANK0 ] unsigned char 
 20367 ;; Return value:  Size  Location     Type
 20368 ;;                  1    wreg      void 
 20369 ;; Registers used:
 20370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20371 ;; Tracked objects:
 20372 ;;		On entry : 3F/0
 20373 ;;		On exit  : 3F/0
 20374 ;;		Unchanged: 0/0
 20375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20376 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20380 ;;Total ram usage:        2 bytes
 20381 ;; Hardware stack levels used: 1
 20382 ;; Hardware stack levels required when called: 8
 20383 ;; This function calls:
 20384 ;;		Nothing
 20385 ;; This function is called by:
 20386 ;;		_actUponNVchange
 20387 ;;		_startOutput
 20388 ;; This function uses a non-reentrant model
 20389 ;;
 20390                           
 20391                           	psect	text83
 20392  009386                     __ptext83:
 20393                           	callstack 0
 20394  009386                     _startBounceOutput:
 20395                           	callstack 20
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;incstack = 0
 20399                           ;startBounceOutput@io stored from wreg
 20400  009386  6F72               	movwf	startBounceOutput@io& (0+255),b
 20401                           
 20402                           ;servo.c: 501: switch (action) {
 20403  009388  D017               	goto	l18731
 20404  00938A                     l18725:
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;servo.c: 503: speed[io] = 0;
 20408  00938A  5172               	movf	startBounceOutput@io& (0+255),w,b
 20409  00938C  0D02               	mullw	2
 20410  00938E  0E00               	movlw	low _speed
 20411  009390  24F3               	addwf	243,w,c
 20412  009392  6ED9               	movwf	fsr2l,c
 20413  009394  0E01               	movlw	high _speed
 20414  009396  20F4               	addwfc	prodh,w,c
 20415  009398  6EDA               	movwf	fsr2h,c
 20416  00939A  0E00               	movlw	0
 20417  00939C  D009               	goto	L18
 20418  00939E                     l18727:
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;servo.c: 506: speed[io] = 12;
 20422  00939E  5172               	movf	startBounceOutput@io& (0+255),w,b
 20423  0093A0  0D02               	mullw	2
 20424  0093A2  0E00               	movlw	low _speed
 20425  0093A4  24F3               	addwf	243,w,c
 20426  0093A6  6ED9               	movwf	fsr2l,c
 20427  0093A8  0E01               	movlw	high _speed
 20428  0093AA  20F4               	addwfc	prodh,w,c
 20429  0093AC  6EDA               	movwf	fsr2h,c
 20430  0093AE  0E0C               	movlw	12
 20431  0093B0                     L18:
 20432  0093B0  6EDE               	movwf	postinc2,c
 20433  0093B2  0E00               	movlw	0
 20434  0093B4  6EDD               	movwf	postdec2,c
 20435                           
 20436                           ;servo.c: 507: break;
 20437  0093B6  D008               	goto	l18733
 20438  0093B8                     l18731:
 20439  0093B8  0100               	movlb	0	; () banked
 20440  0093BA  5171               	movf	startBounceOutput@action& (0+255),w,b
 20441                           
 20442                           ; Switch size 1, requested type "simple"
 20443                           ; Number of cases is 2, Range of values is 1 to 2
 20444                           ; switch strategies available:
 20445                           ; Name         Instructions Cycles
 20446                           ; simple_byte            7     4 (average)
 20447                           ;	Chosen strategy is simple_byte
 20448  0093BC  0A01               	xorlw	1	; case 1
 20449  0093BE  B4D8               	btfsc	status,2,c
 20450  0093C0  D7EE               	goto	l18727
 20451  0093C2  0A03               	xorlw	3	; case 2
 20452  0093C4  B4D8               	btfsc	status,2,c
 20453  0093C6  D7E1               	goto	l18725
 20454  0093C8                     l18733:
 20455                           
 20456                           ; BSR set to: 0
 20457                           ;servo.c: 509: servoState[io] = STARTING;
 20458  0093C8  0E40               	movlw	low _servoState
 20459  0093CA  2572               	addwf	startBounceOutput@io& (0+255),w,b
 20460  0093CC  6ED9               	movwf	fsr2l,c
 20461  0093CE  6ADA               	clrf	fsr2h,c
 20462  0093D0  0E01               	movlw	high _servoState
 20463  0093D2  22DA               	addwfc	fsr2h,f,c
 20464  0093D4  0E03               	movlw	3
 20465  0093D6  6EDF               	movwf	indf2,c
 20466                           
 20467                           ;servo.c: 510: loopCount[io] = 0;
 20468  0093D8  0E64               	movlw	low _loopCount
 20469  0093DA  2572               	addwf	startBounceOutput@io& (0+255),w,b
 20470  0093DC  6ED9               	movwf	fsr2l,c
 20471  0093DE  6ADA               	clrf	fsr2h,c
 20472  0093E0  0E02               	movlw	high _loopCount
 20473  0093E2  22DA               	addwfc	fsr2h,f,c
 20474  0093E4  0E00               	movlw	0
 20475  0093E6  6EDF               	movwf	indf2,c
 20476                           
 20477                           ; BSR set to: 0
 20478  0093E8  0012               	return		;funcret
 20479  0093EA                     __end_of_startBounceOutput:
 20480                           	callstack 0
 20481                           
 20482 ;; *************** function _setServoState *****************
 20483 ;; Defined at:
 20484 ;;		line 540 in file "../../github/CANMIOfirmware/servo.c"
 20485 ;; Parameters:    Size  Location     Type
 20486 ;;  io              1    wreg     unsigned char 
 20487 ;;  action          1   17[BANK0 ] unsigned char 
 20488 ;; Auto vars:     Size  Location     Type
 20489 ;;  io              1   20[BANK0 ] unsigned char 
 20490 ;; Return value:  Size  Location     Type
 20491 ;;                  1    wreg      void 
 20492 ;; Registers used:
 20493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20494 ;; Tracked objects:
 20495 ;;		On entry : 3F/0
 20496 ;;		On exit  : 3F/0
 20497 ;;		Unchanged: 0/0
 20498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20499 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20503 ;;Total ram usage:        4 bytes
 20504 ;; Hardware stack levels used: 1
 20505 ;; Hardware stack levels required when called: 8
 20506 ;; This function calls:
 20507 ;;		Nothing
 20508 ;; This function is called by:
 20509 ;;		_actUponNVchange
 20510 ;;		_setOutputState
 20511 ;; This function uses a non-reentrant model
 20512 ;;
 20513                           
 20514                           	psect	text84
 20515  006BD8                     __ptext84:
 20516                           	callstack 0
 20517  006BD8                     _setServoState:
 20518                           	callstack 20
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;incstack = 0
 20522                           ;setServoState@io stored from wreg
 20523  006BD8  6F74               	movwf	setServoState@io& (0+255),b
 20524                           
 20525                           ;servo.c: 541: switch (action) {
 20526  006BDA  D088               	goto	l18681
 20527  006BDC                     l18667:
 20528                           
 20529                           ; BSR set to: 0
 20530                           ;servo.c: 543: if (NV->io[io].flags & 0x01U) {
 20531  006BDC  5174               	movf	setServoState@io& (0+255),w,b
 20532  006BDE  0D07               	mullw	7
 20533  006BE0  C0EC  F072         	movff	_NV,??_setServoState
 20534  006BE4  C0ED  F073         	movff	_NV+1,??_setServoState+1
 20535  006BE8  50F3               	movf	243,w,c
 20536  006BEA  2772               	addwf	??_setServoState& (0+255),f,b
 20537  006BEC  50F4               	movf	244,w,c
 20538  006BEE  2373               	addwfc	(??_setServoState+1)& (0+255),f,b
 20539  006BF0  0E11               	movlw	17
 20540  006BF2  2572               	addwf	??_setServoState& (0+255),w,b
 20541  006BF4  6ED9               	movwf	fsr2l,c
 20542  006BF6  0E00               	movlw	0
 20543  006BF8  2173               	addwfc	(??_setServoState+1)& (0+255),w,b
 20544  006BFA  6EDA               	movwf	fsr2h,c
 20545  006BFC  A0DF               	btfss	indf2,0,c
 20546  006BFE  D019               	goto	l18671
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;servo.c: 544: targetPos[io] = NV->io[io].nv_io.nv_servo.servo_end_pos;
 20550  006C00  5174               	movf	setServoState@io& (0+255),w,b
 20551  006C02  0D07               	mullw	7
 20552  006C04  C0EC  F072         	movff	_NV,??_setServoState
 20553  006C08  C0ED  F073         	movff	_NV+1,??_setServoState+1
 20554  006C0C  50F3               	movf	243,w,c
 20555  006C0E  2772               	addwf	??_setServoState& (0+255),f,b
 20556  006C10  50F4               	movf	244,w,c
 20557  006C12  2373               	addwfc	(??_setServoState+1)& (0+255),f,b
 20558  006C14  0E13               	movlw	19
 20559  006C16  2572               	addwf	??_setServoState& (0+255),w,b
 20560  006C18  6ED9               	movwf	fsr2l,c
 20561  006C1A  0E00               	movlw	0
 20562  006C1C  2173               	addwfc	(??_setServoState+1)& (0+255),w,b
 20563  006C1E  6EDA               	movwf	fsr2h,c
 20564  006C20  0E70               	movlw	low _targetPos
 20565  006C22  2574               	addwf	setServoState@io& (0+255),w,b
 20566  006C24  6EE1               	movwf	fsr1l,c
 20567  006C26  6AE2               	clrf	fsr1h,c
 20568  006C28  0E01               	movlw	high _targetPos
 20569  006C2A  22E2               	addwfc	fsr1h,f,c
 20570  006C2C  CFDF FFE7          	movff	indf2,indf1
 20571                           
 20572                           ;servo.c: 545: } else {
 20573  006C30  0012               	return	
 20574  006C32                     l18671:
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;servo.c: 546: targetPos[io] = NV->io[io].nv_io.nv_servo.servo_start_pos;
 20578  006C32  5174               	movf	setServoState@io& (0+255),w,b
 20579  006C34  0D07               	mullw	7
 20580  006C36  C0EC  F072         	movff	_NV,??_setServoState
 20581  006C3A  C0ED  F073         	movff	_NV+1,??_setServoState+1
 20582  006C3E  50F3               	movf	243,w,c
 20583  006C40  2772               	addwf	??_setServoState& (0+255),f,b
 20584  006C42  50F4               	movf	244,w,c
 20585  006C44  2373               	addwfc	(??_setServoState+1)& (0+255),f,b
 20586  006C46  0E12               	movlw	18
 20587  006C48  2572               	addwf	??_setServoState& (0+255),w,b
 20588  006C4A  6ED9               	movwf	fsr2l,c
 20589  006C4C  0E00               	movlw	0
 20590  006C4E  2173               	addwfc	(??_setServoState+1)& (0+255),w,b
 20591  006C50  6EDA               	movwf	fsr2h,c
 20592  006C52  0E70               	movlw	low _targetPos
 20593  006C54  2574               	addwf	setServoState@io& (0+255),w,b
 20594  006C56  6EE1               	movwf	fsr1l,c
 20595  006C58  6AE2               	clrf	fsr1h,c
 20596  006C5A  0E01               	movlw	high _targetPos
 20597  006C5C  22E2               	addwfc	fsr1h,f,c
 20598  006C5E  CFDF FFE7          	movff	indf2,indf1
 20599  006C62  0012               	return	
 20600  006C64                     l18673:
 20601                           
 20602                           ; BSR set to: 0
 20603                           ;servo.c: 550: if (NV->io[io].flags & 0x01U) {
 20604  006C64  5174               	movf	setServoState@io& (0+255),w,b
 20605  006C66  0D07               	mullw	7
 20606  006C68  C0EC  F072         	movff	_NV,??_setServoState
 20607  006C6C  C0ED  F073         	movff	_NV+1,??_setServoState+1
 20608  006C70  50F3               	movf	243,w,c
 20609  006C72  2772               	addwf	??_setServoState& (0+255),f,b
 20610  006C74  50F4               	movf	244,w,c
 20611  006C76  2373               	addwfc	(??_setServoState+1)& (0+255),f,b
 20612  006C78  0E11               	movlw	17
 20613  006C7A  2572               	addwf	??_setServoState& (0+255),w,b
 20614  006C7C  6ED9               	movwf	fsr2l,c
 20615  006C7E  0E00               	movlw	0
 20616  006C80  2173               	addwfc	(??_setServoState+1)& (0+255),w,b
 20617  006C82  6EDA               	movwf	fsr2h,c
 20618  006C84  A0DF               	btfss	indf2,0,c
 20619  006C86  D019               	goto	l18677
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;servo.c: 551: targetPos[io] = NV->io[io].nv_io.nv_servo.servo_start_pos;
 20623  006C88  5174               	movf	setServoState@io& (0+255),w,b
 20624  006C8A  0D07               	mullw	7
 20625  006C8C  C0EC  F072         	movff	_NV,??_setServoState
 20626  006C90  C0ED  F073         	movff	_NV+1,??_setServoState+1
 20627  006C94  50F3               	movf	243,w,c
 20628  006C96  2772               	addwf	??_setServoState& (0+255),f,b
 20629  006C98  50F4               	movf	244,w,c
 20630  006C9A  2373               	addwfc	(??_setServoState+1)& (0+255),f,b
 20631  006C9C  0E12               	movlw	18
 20632  006C9E  2572               	addwf	??_setServoState& (0+255),w,b
 20633  006CA0  6ED9               	movwf	fsr2l,c
 20634  006CA2  0E00               	movlw	0
 20635  006CA4  2173               	addwfc	(??_setServoState+1)& (0+255),w,b
 20636  006CA6  6EDA               	movwf	fsr2h,c
 20637  006CA8  0E70               	movlw	low _targetPos
 20638  006CAA  2574               	addwf	setServoState@io& (0+255),w,b
 20639  006CAC  6EE1               	movwf	fsr1l,c
 20640  006CAE  6AE2               	clrf	fsr1h,c
 20641  006CB0  0E01               	movlw	high _targetPos
 20642  006CB2  22E2               	addwfc	fsr1h,f,c
 20643  006CB4  CFDF FFE7          	movff	indf2,indf1
 20644                           
 20645                           ;servo.c: 552: } else {
 20646  006CB8  0012               	return	
 20647  006CBA                     l18677:
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;servo.c: 553: targetPos[io] = NV->io[io].nv_io.nv_servo.servo_end_pos;
 20651  006CBA  5174               	movf	setServoState@io& (0+255),w,b
 20652  006CBC  0D07               	mullw	7
 20653  006CBE  C0EC  F072         	movff	_NV,??_setServoState
 20654  006CC2  C0ED  F073         	movff	_NV+1,??_setServoState+1
 20655  006CC6  50F3               	movf	243,w,c
 20656  006CC8  2772               	addwf	??_setServoState& (0+255),f,b
 20657  006CCA  50F4               	movf	244,w,c
 20658  006CCC  2373               	addwfc	(??_setServoState+1)& (0+255),f,b
 20659  006CCE  0E13               	movlw	19
 20660  006CD0  2572               	addwf	??_setServoState& (0+255),w,b
 20661  006CD2  6ED9               	movwf	fsr2l,c
 20662  006CD4  0E00               	movlw	0
 20663  006CD6  2173               	addwfc	(??_setServoState+1)& (0+255),w,b
 20664  006CD8  6EDA               	movwf	fsr2h,c
 20665  006CDA  0E70               	movlw	low _targetPos
 20666  006CDC  2574               	addwf	setServoState@io& (0+255),w,b
 20667  006CDE  6EE1               	movwf	fsr1l,c
 20668  006CE0  6AE2               	clrf	fsr1h,c
 20669  006CE2  0E01               	movlw	high _targetPos
 20670  006CE4  22E2               	addwfc	fsr1h,f,c
 20671  006CE6  CFDF FFE7          	movff	indf2,indf1
 20672  006CEA  0012               	return	
 20673  006CEC                     l18681:
 20674  006CEC  0100               	movlb	0	; () banked
 20675  006CEE  5171               	movf	setServoState@action& (0+255),w,b
 20676                           
 20677                           ; Switch size 1, requested type "simple"
 20678                           ; Number of cases is 2, Range of values is 1 to 2
 20679                           ; switch strategies available:
 20680                           ; Name         Instructions Cycles
 20681                           ; simple_byte            7     4 (average)
 20682                           ;	Chosen strategy is simple_byte
 20683  006CF0  0A01               	xorlw	1	; case 1
 20684  006CF2  B4D8               	btfsc	status,2,c
 20685  006CF4  D7B7               	goto	l18673
 20686  006CF6  0A03               	xorlw	3	; case 2
 20687  006CF8  A4D8               	btfss	status,2,c
 20688  006CFA  0012               	return	
 20689  006CFC  D76F               	goto	l18667
 20690  006CFE                     __end_of_setServoState:
 20691                           	callstack 0
 20692                           
 20693 ;; *************** function _setMultiState *****************
 20694 ;; Defined at:
 20695 ;;		line 591 in file "../../github/CANMIOfirmware/servo.c"
 20696 ;; Parameters:    Size  Location     Type
 20697 ;;  io              1    wreg     unsigned char 
 20698 ;;  action          1   17[BANK0 ] unsigned char 
 20699 ;; Auto vars:     Size  Location     Type
 20700 ;;  io              1   21[BANK0 ] unsigned char 
 20701 ;; Return value:  Size  Location     Type
 20702 ;;                  1    wreg      void 
 20703 ;; Registers used:
 20704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20705 ;; Tracked objects:
 20706 ;;		On entry : 3F/0
 20707 ;;		On exit  : 3F/0
 20708 ;;		Unchanged: 0/0
 20709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20710 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20712 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20713 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20714 ;;Total ram usage:        5 bytes
 20715 ;; Hardware stack levels used: 1
 20716 ;; Hardware stack levels required when called: 8
 20717 ;; This function calls:
 20718 ;;		Nothing
 20719 ;; This function is called by:
 20720 ;;		_actUponNVchange
 20721 ;;		_setOutputState
 20722 ;; This function uses a non-reentrant model
 20723 ;;
 20724                           
 20725                           	psect	text85
 20726  006AA2                     __ptext85:
 20727                           	callstack 0
 20728  006AA2                     _setMultiState:
 20729                           	callstack 20
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;incstack = 0
 20733                           ;setMultiState@io stored from wreg
 20734  006AA2  6F75               	movwf	setMultiState@io& (0+255),b
 20735                           
 20736                           ;servo.c: 592: switch (action) {
 20737  006AA4  D08A               	goto	l18751
 20738  006AA6                     l18737:
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;servo.c: 594: targetPos[io] = NV->io[io].nv_io.nv_multi.multi_pos1;
 20742  006AA6  5175               	movf	setMultiState@io& (0+255),w,b
 20743  006AA8  0D07               	mullw	7
 20744  006AAA  C0EC  F072         	movff	_NV,??_setMultiState
 20745  006AAE  C0ED  F073         	movff	_NV+1,??_setMultiState+1
 20746  006AB2  50F3               	movf	243,w,c
 20747  006AB4  2772               	addwf	??_setMultiState& (0+255),f,b
 20748  006AB6  50F4               	movf	244,w,c
 20749  006AB8  2373               	addwfc	(??_setMultiState+1)& (0+255),f,b
 20750  006ABA  0E13               	movlw	19
 20751  006ABC  2572               	addwf	??_setMultiState& (0+255),w,b
 20752  006ABE  6ED9               	movwf	fsr2l,c
 20753  006AC0  0E00               	movlw	0
 20754  006AC2  2173               	addwfc	(??_setMultiState+1)& (0+255),w,b
 20755  006AC4  6EDA               	movwf	fsr2h,c
 20756  006AC6  0E70               	movlw	low _targetPos
 20757  006AC8  2575               	addwf	setMultiState@io& (0+255),w,b
 20758  006ACA  6EE1               	movwf	fsr1l,c
 20759  006ACC  6AE2               	clrf	fsr1h,c
 20760  006ACE  0E01               	movlw	high _targetPos
 20761  006AD0  22E2               	addwfc	fsr1h,f,c
 20762  006AD2  CFDF FFE7          	movff	indf2,indf1
 20763                           
 20764                           ;servo.c: 595: break;
 20765  006AD6  0012               	return	
 20766  006AD8                     l18739:
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;servo.c: 597: targetPos[io] = NV->io[io].nv_io.nv_multi.multi_pos2;
 20770  006AD8  5175               	movf	setMultiState@io& (0+255),w,b
 20771  006ADA  0D07               	mullw	7
 20772  006ADC  C0EC  F072         	movff	_NV,??_setMultiState
 20773  006AE0  C0ED  F073         	movff	_NV+1,??_setMultiState+1
 20774  006AE4  50F3               	movf	243,w,c
 20775  006AE6  2772               	addwf	??_setMultiState& (0+255),f,b
 20776  006AE8  50F4               	movf	244,w,c
 20777  006AEA  2373               	addwfc	(??_setMultiState+1)& (0+255),f,b
 20778  006AEC  0E14               	movlw	20
 20779  006AEE  2572               	addwf	??_setMultiState& (0+255),w,b
 20780  006AF0  6ED9               	movwf	fsr2l,c
 20781  006AF2  0E00               	movlw	0
 20782  006AF4  2173               	addwfc	(??_setMultiState+1)& (0+255),w,b
 20783  006AF6  6EDA               	movwf	fsr2h,c
 20784  006AF8  0E70               	movlw	low _targetPos
 20785  006AFA  2575               	addwf	setMultiState@io& (0+255),w,b
 20786  006AFC  6EE1               	movwf	fsr1l,c
 20787  006AFE  6AE2               	clrf	fsr1h,c
 20788  006B00  0E01               	movlw	high _targetPos
 20789  006B02  22E2               	addwfc	fsr1h,f,c
 20790  006B04  CFDF FFE7          	movff	indf2,indf1
 20791                           
 20792                           ;servo.c: 598: break;
 20793  006B08  0012               	return	
 20794  006B0A                     l18741:
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;servo.c: 600: if (NV->io[io].nv_io.nv_multi.multi_num_pos >= 3) {
 20798  006B0A  5175               	movf	setMultiState@io& (0+255),w,b
 20799  006B0C  0D07               	mullw	7
 20800  006B0E  C0EC  F072         	movff	_NV,??_setMultiState
 20801  006B12  C0ED  F073         	movff	_NV+1,??_setMultiState+1
 20802  006B16  50F3               	movf	243,w,c
 20803  006B18  2772               	addwf	??_setMultiState& (0+255),f,b
 20804  006B1A  50F4               	movf	244,w,c
 20805  006B1C  2373               	addwfc	(??_setMultiState+1)& (0+255),f,b
 20806  006B1E  0E12               	movlw	18
 20807  006B20  2572               	addwf	??_setMultiState& (0+255),w,b
 20808  006B22  6ED9               	movwf	fsr2l,c
 20809  006B24  0E00               	movlw	0
 20810  006B26  2173               	addwfc	(??_setMultiState+1)& (0+255),w,b
 20811  006B28  6EDA               	movwf	fsr2h,c
 20812  006B2A  0E02               	movlw	2
 20813  006B2C  64DF               	cpfsgt	indf2,c
 20814  006B2E  0012               	return	
 20815                           
 20816                           ; BSR set to: 0
 20817                           ;servo.c: 601: targetPos[io] = NV->io[io].nv_io.nv_multi.multi_pos3;
 20818  006B30  5175               	movf	setMultiState@io& (0+255),w,b
 20819  006B32  0D07               	mullw	7
 20820  006B34  C0EC  F072         	movff	_NV,??_setMultiState
 20821  006B38  C0ED  F073         	movff	_NV+1,??_setMultiState+1
 20822  006B3C  50F3               	movf	243,w,c
 20823  006B3E  2772               	addwf	??_setMultiState& (0+255),f,b
 20824  006B40  50F4               	movf	244,w,c
 20825  006B42  2373               	addwfc	(??_setMultiState+1)& (0+255),f,b
 20826  006B44  0E15               	movlw	21
 20827  006B46  2572               	addwf	??_setMultiState& (0+255),w,b
 20828  006B48  6ED9               	movwf	fsr2l,c
 20829  006B4A  0E00               	movlw	0
 20830  006B4C  2173               	addwfc	(??_setMultiState+1)& (0+255),w,b
 20831  006B4E  6EDA               	movwf	fsr2h,c
 20832  006B50  0E70               	movlw	low _targetPos
 20833  006B52  2575               	addwf	setMultiState@io& (0+255),w,b
 20834  006B54  6EE1               	movwf	fsr1l,c
 20835  006B56  6AE2               	clrf	fsr1h,c
 20836  006B58  0E01               	movlw	high _targetPos
 20837  006B5A  22E2               	addwfc	fsr1h,f,c
 20838  006B5C  CFDF FFE7          	movff	indf2,indf1
 20839  006B60  0012               	return	
 20840  006B62                     l18745:
 20841                           
 20842                           ; BSR set to: 0
 20843                           ;servo.c: 605: if (NV->io[io].nv_io.nv_multi.multi_num_pos >= 4) {
 20844  006B62  5175               	movf	setMultiState@io& (0+255),w,b
 20845  006B64  0D07               	mullw	7
 20846  006B66  C0EC  F072         	movff	_NV,??_setMultiState
 20847  006B6A  C0ED  F073         	movff	_NV+1,??_setMultiState+1
 20848  006B6E  50F3               	movf	243,w,c
 20849  006B70  2772               	addwf	??_setMultiState& (0+255),f,b
 20850  006B72  50F4               	movf	244,w,c
 20851  006B74  2373               	addwfc	(??_setMultiState+1)& (0+255),f,b
 20852  006B76  0E12               	movlw	18
 20853  006B78  2572               	addwf	??_setMultiState& (0+255),w,b
 20854  006B7A  6ED9               	movwf	fsr2l,c
 20855  006B7C  0E00               	movlw	0
 20856  006B7E  2173               	addwfc	(??_setMultiState+1)& (0+255),w,b
 20857  006B80  6EDA               	movwf	fsr2h,c
 20858  006B82  0E03               	movlw	3
 20859  006B84  64DF               	cpfsgt	indf2,c
 20860  006B86  0012               	return	
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;servo.c: 606: targetPos[io] = NV->io[io].nv_io.nv_multi.multi_pos4;
 20864  006B88  5175               	movf	setMultiState@io& (0+255),w,b
 20865  006B8A  0D07               	mullw	7
 20866  006B8C  C0EC  F072         	movff	_NV,??_setMultiState
 20867  006B90  C0ED  F073         	movff	_NV+1,??_setMultiState+1
 20868  006B94  50F3               	movf	243,w,c
 20869  006B96  2772               	addwf	??_setMultiState& (0+255),f,b
 20870  006B98  50F4               	movf	244,w,c
 20871  006B9A  2373               	addwfc	(??_setMultiState+1)& (0+255),f,b
 20872  006B9C  0E16               	movlw	22
 20873  006B9E  2572               	addwf	??_setMultiState& (0+255),w,b
 20874  006BA0  6ED9               	movwf	fsr2l,c
 20875  006BA2  0E00               	movlw	0
 20876  006BA4  2173               	addwfc	(??_setMultiState+1)& (0+255),w,b
 20877  006BA6  6EDA               	movwf	fsr2h,c
 20878  006BA8  0E70               	movlw	low _targetPos
 20879  006BAA  2575               	addwf	setMultiState@io& (0+255),w,b
 20880  006BAC  6EE1               	movwf	fsr1l,c
 20881  006BAE  6AE2               	clrf	fsr1h,c
 20882  006BB0  0E01               	movlw	high _targetPos
 20883  006BB2  22E2               	addwfc	fsr1h,f,c
 20884  006BB4  CFDF FFE7          	movff	indf2,indf1
 20885  006BB8  0012               	return	
 20886  006BBA                     l18751:
 20887  006BBA  0100               	movlb	0	; () banked
 20888  006BBC  5171               	movf	setMultiState@action& (0+255),w,b
 20889                           
 20890                           ; Switch size 1, requested type "simple"
 20891                           ; Number of cases is 4, Range of values is 0 to 3
 20892                           ; switch strategies available:
 20893                           ; Name         Instructions Cycles
 20894                           ; simple_byte           13     7 (average)
 20895                           ;	Chosen strategy is simple_byte
 20896  006BBE  0A00               	xorlw	0	; case 0
 20897  006BC0  B4D8               	btfsc	status,2,c
 20898  006BC2  D771               	goto	l18737
 20899  006BC4  0A01               	xorlw	1	; case 1
 20900  006BC6  B4D8               	btfsc	status,2,c
 20901  006BC8  D787               	goto	l18739
 20902  006BCA  0A03               	xorlw	3	; case 2
 20903  006BCC  B4D8               	btfsc	status,2,c
 20904  006BCE  D79D               	goto	l18741
 20905  006BD0  0A01               	xorlw	1	; case 3
 20906  006BD2  A4D8               	btfss	status,2,c
 20907  006BD4  0012               	return	
 20908  006BD6  D7C5               	goto	l18745
 20909  006BD8                     __end_of_setMultiState:
 20910                           	callstack 0
 20911                           
 20912 ;; *************** function _setBounceState *****************
 20913 ;; Defined at:
 20914 ;;		line 567 in file "../../github/CANMIOfirmware/servo.c"
 20915 ;; Parameters:    Size  Location     Type
 20916 ;;  io              1    wreg     unsigned char 
 20917 ;;  action          1   17[BANK0 ] unsigned char 
 20918 ;; Auto vars:     Size  Location     Type
 20919 ;;  io              1   20[BANK0 ] unsigned char 
 20920 ;; Return value:  Size  Location     Type
 20921 ;;                  1    wreg      void 
 20922 ;; Registers used:
 20923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20924 ;; Tracked objects:
 20925 ;;		On entry : 3F/0
 20926 ;;		On exit  : 3F/0
 20927 ;;		Unchanged: 0/0
 20928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20929 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20931 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20932 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20933 ;;Total ram usage:        4 bytes
 20934 ;; Hardware stack levels used: 1
 20935 ;; Hardware stack levels required when called: 8
 20936 ;; This function calls:
 20937 ;;		Nothing
 20938 ;; This function is called by:
 20939 ;;		_actUponNVchange
 20940 ;;		_setOutputState
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           	psect	text86
 20945  006CFE                     __ptext86:
 20946                           	callstack 0
 20947  006CFE                     _setBounceState:
 20948                           	callstack 20
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;incstack = 0
 20952                           ;setBounceState@io stored from wreg
 20953  006CFE  6F74               	movwf	setBounceState@io& (0+255),b
 20954                           
 20955                           ;servo.c: 568: switch (action) {
 20956  006D00  D088               	goto	l18721
 20957  006D02                     l18707:
 20958                           
 20959                           ; BSR set to: 0
 20960                           ;servo.c: 570: if (NV->io[io].flags & 0x01U) {
 20961  006D02  5174               	movf	setBounceState@io& (0+255),w,b
 20962  006D04  0D07               	mullw	7
 20963  006D06  C0EC  F072         	movff	_NV,??_setBounceState
 20964  006D0A  C0ED  F073         	movff	_NV+1,??_setBounceState+1
 20965  006D0E  50F3               	movf	243,w,c
 20966  006D10  2772               	addwf	??_setBounceState& (0+255),f,b
 20967  006D12  50F4               	movf	244,w,c
 20968  006D14  2373               	addwfc	(??_setBounceState+1)& (0+255),f,b
 20969  006D16  0E11               	movlw	17
 20970  006D18  2572               	addwf	??_setBounceState& (0+255),w,b
 20971  006D1A  6ED9               	movwf	fsr2l,c
 20972  006D1C  0E00               	movlw	0
 20973  006D1E  2173               	addwfc	(??_setBounceState+1)& (0+255),w,b
 20974  006D20  6EDA               	movwf	fsr2h,c
 20975  006D22  A0DF               	btfss	indf2,0,c
 20976  006D24  D019               	goto	l18711
 20977                           
 20978                           ; BSR set to: 0
 20979                           ;servo.c: 571: targetPos[io] = NV->io[io].nv_io.nv_bounce.bounce_upper_pos;
 20980  006D26  5174               	movf	setBounceState@io& (0+255),w,b
 20981  006D28  0D07               	mullw	7
 20982  006D2A  C0EC  F072         	movff	_NV,??_setBounceState
 20983  006D2E  C0ED  F073         	movff	_NV+1,??_setBounceState+1
 20984  006D32  50F3               	movf	243,w,c
 20985  006D34  2772               	addwf	??_setBounceState& (0+255),f,b
 20986  006D36  50F4               	movf	244,w,c
 20987  006D38  2373               	addwfc	(??_setBounceState+1)& (0+255),f,b
 20988  006D3A  0E12               	movlw	18
 20989  006D3C  2572               	addwf	??_setBounceState& (0+255),w,b
 20990  006D3E  6ED9               	movwf	fsr2l,c
 20991  006D40  0E00               	movlw	0
 20992  006D42  2173               	addwfc	(??_setBounceState+1)& (0+255),w,b
 20993  006D44  6EDA               	movwf	fsr2h,c
 20994  006D46  0E70               	movlw	low _targetPos
 20995  006D48  2574               	addwf	setBounceState@io& (0+255),w,b
 20996  006D4A  6EE1               	movwf	fsr1l,c
 20997  006D4C  6AE2               	clrf	fsr1h,c
 20998  006D4E  0E01               	movlw	high _targetPos
 20999  006D50  22E2               	addwfc	fsr1h,f,c
 21000  006D52  CFDF FFE7          	movff	indf2,indf1
 21001                           
 21002                           ;servo.c: 572: } else {
 21003  006D56  0012               	return	
 21004  006D58                     l18711:
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;servo.c: 573: targetPos[io] = NV->io[io].nv_io.nv_bounce.bounce_lower_pos;
 21008  006D58  5174               	movf	setBounceState@io& (0+255),w,b
 21009  006D5A  0D07               	mullw	7
 21010  006D5C  C0EC  F072         	movff	_NV,??_setBounceState
 21011  006D60  C0ED  F073         	movff	_NV+1,??_setBounceState+1
 21012  006D64  50F3               	movf	243,w,c
 21013  006D66  2772               	addwf	??_setBounceState& (0+255),f,b
 21014  006D68  50F4               	movf	244,w,c
 21015  006D6A  2373               	addwfc	(??_setBounceState+1)& (0+255),f,b
 21016  006D6C  0E13               	movlw	19
 21017  006D6E  2572               	addwf	??_setBounceState& (0+255),w,b
 21018  006D70  6ED9               	movwf	fsr2l,c
 21019  006D72  0E00               	movlw	0
 21020  006D74  2173               	addwfc	(??_setBounceState+1)& (0+255),w,b
 21021  006D76  6EDA               	movwf	fsr2h,c
 21022  006D78  0E70               	movlw	low _targetPos
 21023  006D7A  2574               	addwf	setBounceState@io& (0+255),w,b
 21024  006D7C  6EE1               	movwf	fsr1l,c
 21025  006D7E  6AE2               	clrf	fsr1h,c
 21026  006D80  0E01               	movlw	high _targetPos
 21027  006D82  22E2               	addwfc	fsr1h,f,c
 21028  006D84  CFDF FFE7          	movff	indf2,indf1
 21029  006D88  0012               	return	
 21030  006D8A                     l18713:
 21031                           
 21032                           ; BSR set to: 0
 21033                           ;servo.c: 577: if (NV->io[io].flags & 0x01U) {
 21034  006D8A  5174               	movf	setBounceState@io& (0+255),w,b
 21035  006D8C  0D07               	mullw	7
 21036  006D8E  C0EC  F072         	movff	_NV,??_setBounceState
 21037  006D92  C0ED  F073         	movff	_NV+1,??_setBounceState+1
 21038  006D96  50F3               	movf	243,w,c
 21039  006D98  2772               	addwf	??_setBounceState& (0+255),f,b
 21040  006D9A  50F4               	movf	244,w,c
 21041  006D9C  2373               	addwfc	(??_setBounceState+1)& (0+255),f,b
 21042  006D9E  0E11               	movlw	17
 21043  006DA0  2572               	addwf	??_setBounceState& (0+255),w,b
 21044  006DA2  6ED9               	movwf	fsr2l,c
 21045  006DA4  0E00               	movlw	0
 21046  006DA6  2173               	addwfc	(??_setBounceState+1)& (0+255),w,b
 21047  006DA8  6EDA               	movwf	fsr2h,c
 21048  006DAA  A0DF               	btfss	indf2,0,c
 21049  006DAC  D019               	goto	l18717
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;servo.c: 578: targetPos[io] = NV->io[io].nv_io.nv_bounce.bounce_lower_pos;
 21053  006DAE  5174               	movf	setBounceState@io& (0+255),w,b
 21054  006DB0  0D07               	mullw	7
 21055  006DB2  C0EC  F072         	movff	_NV,??_setBounceState
 21056  006DB6  C0ED  F073         	movff	_NV+1,??_setBounceState+1
 21057  006DBA  50F3               	movf	243,w,c
 21058  006DBC  2772               	addwf	??_setBounceState& (0+255),f,b
 21059  006DBE  50F4               	movf	244,w,c
 21060  006DC0  2373               	addwfc	(??_setBounceState+1)& (0+255),f,b
 21061  006DC2  0E13               	movlw	19
 21062  006DC4  2572               	addwf	??_setBounceState& (0+255),w,b
 21063  006DC6  6ED9               	movwf	fsr2l,c
 21064  006DC8  0E00               	movlw	0
 21065  006DCA  2173               	addwfc	(??_setBounceState+1)& (0+255),w,b
 21066  006DCC  6EDA               	movwf	fsr2h,c
 21067  006DCE  0E70               	movlw	low _targetPos
 21068  006DD0  2574               	addwf	setBounceState@io& (0+255),w,b
 21069  006DD2  6EE1               	movwf	fsr1l,c
 21070  006DD4  6AE2               	clrf	fsr1h,c
 21071  006DD6  0E01               	movlw	high _targetPos
 21072  006DD8  22E2               	addwfc	fsr1h,f,c
 21073  006DDA  CFDF FFE7          	movff	indf2,indf1
 21074                           
 21075                           ;servo.c: 579: } else {
 21076  006DDE  0012               	return	
 21077  006DE0                     l18717:
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;servo.c: 580: targetPos[io] = NV->io[io].nv_io.nv_bounce.bounce_upper_pos;
 21081  006DE0  5174               	movf	setBounceState@io& (0+255),w,b
 21082  006DE2  0D07               	mullw	7
 21083  006DE4  C0EC  F072         	movff	_NV,??_setBounceState
 21084  006DE8  C0ED  F073         	movff	_NV+1,??_setBounceState+1
 21085  006DEC  50F3               	movf	243,w,c
 21086  006DEE  2772               	addwf	??_setBounceState& (0+255),f,b
 21087  006DF0  50F4               	movf	244,w,c
 21088  006DF2  2373               	addwfc	(??_setBounceState+1)& (0+255),f,b
 21089  006DF4  0E12               	movlw	18
 21090  006DF6  2572               	addwf	??_setBounceState& (0+255),w,b
 21091  006DF8  6ED9               	movwf	fsr2l,c
 21092  006DFA  0E00               	movlw	0
 21093  006DFC  2173               	addwfc	(??_setBounceState+1)& (0+255),w,b
 21094  006DFE  6EDA               	movwf	fsr2h,c
 21095  006E00  0E70               	movlw	low _targetPos
 21096  006E02  2574               	addwf	setBounceState@io& (0+255),w,b
 21097  006E04  6EE1               	movwf	fsr1l,c
 21098  006E06  6AE2               	clrf	fsr1h,c
 21099  006E08  0E01               	movlw	high _targetPos
 21100  006E0A  22E2               	addwfc	fsr1h,f,c
 21101  006E0C  CFDF FFE7          	movff	indf2,indf1
 21102  006E10  0012               	return	
 21103  006E12                     l18721:
 21104  006E12  0100               	movlb	0	; () banked
 21105  006E14  5171               	movf	setBounceState@action& (0+255),w,b
 21106                           
 21107                           ; Switch size 1, requested type "simple"
 21108                           ; Number of cases is 2, Range of values is 1 to 2
 21109                           ; switch strategies available:
 21110                           ; Name         Instructions Cycles
 21111                           ; simple_byte            7     4 (average)
 21112                           ;	Chosen strategy is simple_byte
 21113  006E16  0A01               	xorlw	1	; case 1
 21114  006E18  B4D8               	btfsc	status,2,c
 21115  006E1A  D7B7               	goto	l18713
 21116  006E1C  0A03               	xorlw	3	; case 2
 21117  006E1E  A4D8               	btfss	status,2,c
 21118  006E20  0012               	return	
 21119  006E22  D76F               	goto	l18707
 21120  006E24                     __end_of_setBounceState:
 21121                           	callstack 0
 21122                           
 21123 ;; *************** function ___lbdiv *****************
 21124 ;; Defined at:
 21125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
 21126 ;; Parameters:    Size  Location     Type
 21127 ;;  dividend        1    wreg     unsigned char 
 21128 ;;  divisor         1   17[BANK0 ] unsigned char 
 21129 ;; Auto vars:     Size  Location     Type
 21130 ;;  dividend        1   18[BANK0 ] unsigned char 
 21131 ;;  quotient        1   20[BANK0 ] unsigned char 
 21132 ;;  counter         1   19[BANK0 ] unsigned char 
 21133 ;; Return value:  Size  Location     Type
 21134 ;;                  1    wreg      unsigned char 
 21135 ;; Registers used:
 21136 ;;		wreg, status,2, status,0
 21137 ;; Tracked objects:
 21138 ;;		On entry : 3F/0
 21139 ;;		On exit  : 3F/0
 21140 ;;		Unchanged: 0/0
 21141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21142 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21143 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21145 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21146 ;;Total ram usage:        4 bytes
 21147 ;; Hardware stack levels used: 1
 21148 ;; Hardware stack levels required when called: 8
 21149 ;; This function calls:
 21150 ;;		Nothing
 21151 ;; This function is called by:
 21152 ;;		_actUponNVchange
 21153 ;; This function uses a non-reentrant model
 21154 ;;
 21155                           
 21156                           	psect	text87
 21157  009ED6                     __ptext87:
 21158                           	callstack 0
 21159  009ED6                     ___lbdiv:
 21160                           	callstack 17
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;incstack = 0
 21164                           ;___lbdiv@dividend stored from wreg
 21165  009ED6  6F72               	movwf	___lbdiv@dividend& (0+255),b
 21166  009ED8  0E00               	movlw	0
 21167  009EDA  0100               	movlb	0	; () banked
 21168  009EDC  6F74               	movwf	___lbdiv@quotient& (0+255),b
 21169                           
 21170                           ; BSR set to: 0
 21171  009EDE  5171               	movf	___lbdiv@divisor& (0+255),w,b
 21172  009EE0  B4D8               	btfsc	status,2,c
 21173  009EE2  D015               	goto	l18799
 21174                           
 21175                           ; BSR set to: 0
 21176  009EE4  0E01               	movlw	1
 21177  009EE6  6F73               	movwf	___lbdiv@counter& (0+255),b
 21178  009EE8  D003               	goto	l18787
 21179  009EEA                     l18783:
 21180                           
 21181                           ; BSR set to: 0
 21182  009EEA  90D8               	bcf	status,0,c
 21183  009EEC  3771               	rlcf	___lbdiv@divisor& (0+255),f,b
 21184                           
 21185                           ; BSR set to: 0
 21186  009EEE  2B73               	incf	___lbdiv@counter& (0+255),f,b
 21187  009EF0                     l18787:
 21188                           
 21189                           ; BSR set to: 0
 21190  009EF0  AF71               	btfss	___lbdiv@divisor& (0+255),7,b
 21191  009EF2  D7FB               	goto	l18783
 21192  009EF4                     u23230:
 21193                           
 21194                           ; BSR set to: 0
 21195  009EF4  90D8               	bcf	status,0,c
 21196  009EF6  3774               	rlcf	___lbdiv@quotient& (0+255),f,b
 21197  009EF8  5171               	movf	___lbdiv@divisor& (0+255),w,b
 21198  009EFA  5D72               	subwf	___lbdiv@dividend& (0+255),w,b
 21199  009EFC  A0D8               	btfss	status,0,c
 21200  009EFE  D003               	goto	l18795
 21201                           
 21202                           ; BSR set to: 0
 21203  009F00  5171               	movf	___lbdiv@divisor& (0+255),w,b
 21204  009F02  5F72               	subwf	___lbdiv@dividend& (0+255),f,b
 21205                           
 21206                           ; BSR set to: 0
 21207  009F04  8174               	bsf	___lbdiv@quotient& (0+255),0,b
 21208  009F06                     l18795:
 21209                           
 21210                           ; BSR set to: 0
 21211  009F06  90D8               	bcf	status,0,c
 21212  009F08  3371               	rrcf	___lbdiv@divisor& (0+255),f,b
 21213                           
 21214                           ; BSR set to: 0
 21215  009F0A  2F73               	decfsz	___lbdiv@counter& (0+255),f,b
 21216  009F0C  D7F3               	goto	u23230
 21217  009F0E                     l18799:
 21218                           
 21219                           ; BSR set to: 0
 21220  009F0E  5174               	movf	___lbdiv@quotient& (0+255),w,b
 21221                           
 21222                           ; BSR set to: 0
 21223  009F10  0012               	return		;funcret
 21224  009F12                     __end_of___lbdiv:
 21225                           	callstack 0
 21226                           
 21227 ;; *************** function _doNvrd *****************
 21228 ;; Defined at:
 21229 ;;		line 590 in file "../../github/CBUSlib/FliM.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;  NVindex         1    wreg     unsigned char 
 21232 ;; Auto vars:     Size  Location     Type
 21233 ;;  NVindex         1   54[BANK0 ] unsigned char 
 21234 ;;  flashIndex      2   52[BANK0 ] unsigned int 
 21235 ;; Return value:  Size  Location     Type
 21236 ;;                  1    wreg      void 
 21237 ;; Registers used:
 21238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21239 ;; Tracked objects:
 21240 ;;		On entry : 3F/0
 21241 ;;		On exit  : 3F/0
 21242 ;;		Unchanged: 0/0
 21243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21245 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21248 ;;Total ram usage:        3 bytes
 21249 ;; Hardware stack levels used: 1
 21250 ;; Hardware stack levels required when called: 14
 21251 ;; This function calls:
 21252 ;;		_cbusSendMsgMyNN
 21253 ;;		_doError
 21254 ;;		_readFlashBlock
 21255 ;; This function is called by:
 21256 ;;		_parseFLiMCmd
 21257 ;; This function uses a non-reentrant model
 21258 ;;
 21259                           
 21260                           	psect	text88
 21261  009BAC                     __ptext88:
 21262                           	callstack 0
 21263  009BAC                     _doNvrd:
 21264                           	callstack 13
 21265                           
 21266                           ; BSR set to: 0
 21267                           ;incstack = 0
 21268                           ;doNvrd@NVindex stored from wreg
 21269  009BAC  6F96               	movwf	doNvrd@NVindex& (0+255),b
 21270                           
 21271                           ;FliM.c: 593: if ((NVindex == 0) || (NVindex >= sizeof(ModuleNvDefs)))
 21272  009BAE  0100               	movlb	0	; () banked
 21273  009BB0  5196               	movf	doNvrd@NVindex& (0+255),w,b
 21274  009BB2  B4D8               	btfsc	status,2,c
 21275  009BB4  D003               	goto	u24450
 21276                           
 21277                           ; BSR set to: 0
 21278  009BB6  0E7F               	movlw	127
 21279  009BB8  6596               	cpfsgt	doNvrd@NVindex& (0+255),b
 21280  009BBA  D004               	goto	l19725
 21281  009BBC                     u24450:
 21282                           
 21283                           ; BSR set to: 0
 21284                           ;FliM.c: 594: {;FliM.c: 595: doError(10);
 21285  009BBC  0E0A               	movlw	10
 21286  009BBE  EC56  F052         	call	_doError
 21287                           
 21288                           ;FliM.c: 596: }
 21289  009BC2  0012               	return	
 21290  009BC4                     l19725:
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;FliM.c: 597: else;FliM.c: 598: {;FliM.c: 599: WORD flashIndex;;FliM.c: 600: flashIndex 
      +                          = 0xFF80U;
 21294  009BC4  0EFF               	movlw	255
 21295  009BC6  6F95               	movwf	(doNvrd@flashIndex+1)& (0+255),b
 21296  009BC8  0E80               	movlw	128
 21297  009BCA  6F94               	movwf	doNvrd@flashIndex& (0+255),b
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;FliM.c: 601: flashIndex += NVindex;
 21301  009BCC  5196               	movf	doNvrd@NVindex& (0+255),w,b
 21302  009BCE  2794               	addwf	doNvrd@flashIndex& (0+255),f,b
 21303  009BD0  0E00               	movlw	0
 21304  009BD2  2395               	addwfc	(doNvrd@flashIndex+1)& (0+255),f,b
 21305                           
 21306                           ; BSR set to: 0
 21307                           ;FliM.c: 604: cbusMsg[d0] = 0x97;
 21308  009BD4  0E97               	movlw	151
 21309  009BD6  6E22               	movwf	(_cbusMsg+6)^0,c
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;FliM.c: 605: cbusMsg[d3] = NVindex;
 21313  009BD8  C096  F025         	movff	doNvrd@NVindex,_cbusMsg+9
 21314                           
 21315                           ; BSR set to: 0
 21316                           ;FliM.c: 606: cbusMsg[d4] = readFlashBlock(flashIndex);
 21317  009BDC  C094  F076         	movff	doNvrd@flashIndex,readFlashBlock@flashAddr
 21318  009BE0  C095  F077         	movff	doNvrd@flashIndex+1,readFlashBlock@flashAddr+1
 21319  009BE4  EC8D  F03D         	call	_readFlashBlock	;wreg free
 21320  009BE8  6E26               	movwf	(_cbusMsg+10)^0,c
 21321                           
 21322                           ; BSR set to: 0
 21323                           ;FliM.c: 607: cbusSendMsgMyNN( 0, cbusMsg );
 21324  009BEA  0E1C               	movlw	low _cbusMsg
 21325  009BEC  6F8F               	movwf	cbusSendMsgMyNN@msg& (0+255),b
 21326  009BEE  0E00               	movlw	0
 21327  009BF0  EC84  F051         	call	_cbusSendMsgMyNN
 21328                           
 21329                           ; BSR set to: 0
 21330  009BF4  0012               	return		;funcret
 21331  009BF6                     __end_of_doNvrd:
 21332                           	callstack 0
 21333                           
 21334 ;; *************** function _doNnevn *****************
 21335 ;; Defined at:
 21336 ;;		line 319 in file "../../github/CBUSlib/events.c"
 21337 ;; Parameters:    Size  Location     Type
 21338 ;;		None
 21339 ;; Auto vars:     Size  Location     Type
 21340 ;;  f               1   54[BANK0 ] struct .
 21341 ;;  i               1   56[BANK0 ] unsigned char 
 21342 ;;  count           1   55[BANK0 ] unsigned char 
 21343 ;; Return value:  Size  Location     Type
 21344 ;;                  1    wreg      void 
 21345 ;; Registers used:
 21346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21347 ;; Tracked objects:
 21348 ;;		On entry : 3F/0
 21349 ;;		On exit  : 3F/0
 21350 ;;		Unchanged: 0/0
 21351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21353 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21356 ;;Total ram usage:        5 bytes
 21357 ;; Hardware stack levels used: 1
 21358 ;; Hardware stack levels required when called: 14
 21359 ;; This function calls:
 21360 ;;		_cbusSendOpcMyNN
 21361 ;;		_readFlashBlock
 21362 ;; This function is called by:
 21363 ;;		_parseFLiMCmd
 21364 ;; This function uses a non-reentrant model
 21365 ;;
 21366                           
 21367                           	psect	text89
 21368  009C3E                     __ptext89:
 21369                           	callstack 0
 21370  009C3E                     _doNnevn:
 21371                           	callstack 13
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;events.c: 322: unsigned char count = 0;
 21375                           
 21376                           ; BSR set to: 0
 21377                           ;incstack = 0
 21378  009C3E  0E00               	movlw	0
 21379  009C40  6F97               	movwf	doNnevn@count& (0+255),b
 21380                           
 21381                           ;events.c: 323: unsigned char i;;events.c: 324: for (i=0; i<255U; i++) {
 21382  009C42  0E00               	movlw	0
 21383  009C44  6F98               	movwf	doNnevn@i& (0+255),b
 21384  009C46                     l19567:
 21385                           
 21386                           ; BSR set to: 0
 21387                           ;events.c: 325: EventTableFlags f;;events.c: 326: f.asByte = readFlashBlock((WORD)(& (ev
      +                          entTable[i].flags.asByte)));
 21388  009C46  5198               	movf	doNnevn@i& (0+255),w,b
 21389  009C48  0D10               	mullw	16
 21390  009C4A  CFF3 F094          	movff	prodl,??_doNnevn
 21391  009C4E  CFF4 F095          	movff	prodh,??_doNnevn+1
 21392  009C52  51E9               	movf	_eventTable& (0+255),w,b
 21393  009C54  2594               	addwf	??_doNnevn& (0+255),w,b
 21394  009C56  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 21395  009C58  51EA               	movf	(_eventTable+1)& (0+255),w,b
 21396  009C5A  2195               	addwfc	(??_doNnevn+1)& (0+255),w,b
 21397  009C5C  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 21398  009C5E  EC8D  F03D         	call	_readFlashBlock	;wreg free
 21399  009C62  6F96               	movwf	doNnevn@f& (0+255),b
 21400                           
 21401                           ; BSR set to: 0
 21402                           ;events.c: 327: if (f.freeEntry) {
 21403  009C64  BF96               	btfsc	doNnevn@f& (0+255),7,b
 21404                           
 21405                           ; BSR set to: 0
 21406                           ;events.c: 328: count++;
 21407  009C66  2B97               	incf	doNnevn@count& (0+255),f,b
 21408                           
 21409                           ; BSR set to: 0
 21410  009C68  2B98               	incf	doNnevn@i& (0+255),f,b
 21411                           
 21412                           ; BSR set to: 0
 21413  009C6A  2998               	incf	doNnevn@i& (0+255),w,b
 21414  009C6C  A4D8               	btfss	status,2,c
 21415  009C6E  D7EB               	goto	l19567
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;events.c: 329: };events.c: 330: };events.c: 331: cbusMsg[d3] = count;
 21419  009C70  C097  F025         	movff	doNnevn@count,_cbusMsg+9
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;events.c: 332: cbusSendOpcMyNN( 0, 0x70, cbusMsg );
 21423  009C74  0E70               	movlw	112
 21424  009C76  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21425  009C78  0E1C               	movlw	low _cbusMsg
 21426  009C7A  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21427  009C7C  0E00               	movlw	0
 21428  009C7E  EC65  F052         	call	_cbusSendOpcMyNN
 21429                           
 21430                           ; BSR set to: 0
 21431  009C82  0012               	return		;funcret
 21432  009C84                     __end_of_doNnevn:
 21433                           	callstack 0
 21434                           
 21435 ;; *************** function _doNnclr *****************
 21436 ;; Defined at:
 21437 ;;		line 780 in file "../../github/CBUSlib/FliM.c"
 21438 ;; Parameters:    Size  Location     Type
 21439 ;;		None
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;		None
 21442 ;; Return value:  Size  Location     Type
 21443 ;;                  1    wreg      void 
 21444 ;; Registers used:
 21445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21446 ;; Tracked objects:
 21447 ;;		On entry : 3F/0
 21448 ;;		On exit  : 3F/0
 21449 ;;		Unchanged: 0/0
 21450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21455 ;;Total ram usage:        0 bytes
 21456 ;; Hardware stack levels used: 1
 21457 ;; Hardware stack levels required when called: 17
 21458 ;; This function calls:
 21459 ;;		_cbusSendOpcMyNN
 21460 ;;		_clearAllEvents
 21461 ;; This function is called by:
 21462 ;;		_parseFLiMCmd
 21463 ;; This function uses a non-reentrant model
 21464 ;;
 21465                           
 21466                           	psect	text90
 21467  00A160                     __ptext90:
 21468                           	callstack 0
 21469  00A160                     _doNnclr:
 21470                           	callstack 10
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;FliM.c: 782: if (flimState == fsFLiMLearn) {
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;incstack = 0
 21477  00A160  0E07               	movlw	7
 21478  00A162  1816               	xorwf	_flimState^0,w,c
 21479  00A164  A4D8               	btfss	status,2,c
 21480  00A166  D00A               	goto	l19623
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;FliM.c: 783: clearAllEvents();
 21484  00A168  ECFB  F04D         	call	_clearAllEvents	;wreg free
 21485                           
 21486                           ;FliM.c: 784: cbusSendOpcMyNN( 0, 0x59, cbusMsg);
 21487  00A16C  0E59               	movlw	89
 21488  00A16E  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21489  00A170  0E1C               	movlw	low _cbusMsg
 21490  00A172  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21491  00A174  0E00               	movlw	0
 21492  00A176  EC65  F052         	call	_cbusSendOpcMyNN
 21493                           
 21494                           ;FliM.c: 785: }
 21495  00A17A  0012               	return	
 21496  00A17C                     l19623:
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;FliM.c: 786: else;FliM.c: 787: {;FliM.c: 788: cbusMsg[d3] = 2;
 21500  00A17C  0E02               	movlw	2
 21501  00A17E  6E25               	movwf	(_cbusMsg+9)^0,c
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;FliM.c: 789: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 21505  00A180  0E6F               	movlw	111
 21506  00A182  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21507  00A184  0E1C               	movlw	low _cbusMsg
 21508  00A186  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21509  00A188  0E00               	movlw	0
 21510  00A18A  EC65  F052         	call	_cbusSendOpcMyNN
 21511                           
 21512                           ; BSR set to: 0
 21513  00A18E  0012               	return		;funcret
 21514  00A190                     __end_of_doNnclr:
 21515                           	callstack 0
 21516                           
 21517 ;; *************** function _doNerd *****************
 21518 ;; Defined at:
 21519 ;;		line 340 in file "../../github/CBUSlib/events.c"
 21520 ;; Parameters:    Size  Location     Type
 21521 ;;		None
 21522 ;; Auto vars:     Size  Location     Type
 21523 ;;		None
 21524 ;; Return value:  Size  Location     Type
 21525 ;;                  1    wreg      void 
 21526 ;; Registers used:
 21527 ;;		wreg, status,2
 21528 ;; Tracked objects:
 21529 ;;		On entry : 3F/0
 21530 ;;		On exit  : 3F/0
 21531 ;;		Unchanged: 3F/0
 21532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21537 ;;Total ram usage:        0 bytes
 21538 ;; Hardware stack levels used: 1
 21539 ;; Hardware stack levels required when called: 8
 21540 ;; This function calls:
 21541 ;;		Nothing
 21542 ;; This function is called by:
 21543 ;;		_parseFLiMCmd
 21544 ;; This function uses a non-reentrant model
 21545 ;;
 21546                           
 21547                           	psect	text91
 21548  00A6BC                     __ptext91:
 21549                           	callstack 0
 21550  00A6BC                     _doNerd:
 21551                           	callstack 19
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;events.c: 341: timedResponse = 2;
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;incstack = 0
 21558  00A6BC  0E02               	movlw	2
 21559  00A6BE  6E14               	movwf	_timedResponse^0,c
 21560                           
 21561                           ;events.c: 342: timedResponseStep = 0;
 21562  00A6C0  0E00               	movlw	0
 21563  00A6C2  6E13               	movwf	_timedResponseStep^0,c
 21564                           
 21565                           ; BSR set to: 0
 21566  00A6C4  0012               	return		;funcret
 21567  00A6C6                     __end_of_doNerd:
 21568                           	callstack 0
 21569                           
 21570 ;; *************** function _doNenrd *****************
 21571 ;; Defined at:
 21572 ;;		line 375 in file "../../github/CBUSlib/events.c"
 21573 ;; Parameters:    Size  Location     Type
 21574 ;;  index           1    wreg     unsigned char 
 21575 ;; Auto vars:     Size  Location     Type
 21576 ;;  index           1   52[BANK0 ] unsigned char 
 21577 ;;  n               2   54[BANK0 ] unsigned int 
 21578 ;;  tableIndex      1   53[BANK0 ] unsigned char 
 21579 ;; Return value:  Size  Location     Type
 21580 ;;                  1    wreg      void 
 21581 ;; Registers used:
 21582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21583 ;; Tracked objects:
 21584 ;;		On entry : 3F/0
 21585 ;;		On exit  : 3F/0
 21586 ;;		Unchanged: 0/0
 21587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21589 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21591 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21592 ;;Total ram usage:        4 bytes
 21593 ;; Hardware stack levels used: 1
 21594 ;; Hardware stack levels required when called: 14
 21595 ;; This function calls:
 21596 ;;		_cbusSendOpcMyNN
 21597 ;;		_doError
 21598 ;;		_evtIdxToTableIndex
 21599 ;;		_getEN
 21600 ;;		_getNN
 21601 ;;		_validStart
 21602 ;; This function is called by:
 21603 ;;		_parseFLiMCmd
 21604 ;; This function uses a non-reentrant model
 21605 ;;
 21606                           
 21607                           	psect	text92
 21608  009510                     __ptext92:
 21609                           	callstack 0
 21610  009510                     _doNenrd:
 21611                           	callstack 13
 21612                           
 21613                           ; BSR set to: 0
 21614                           ;incstack = 0
 21615                           ;doNenrd@index stored from wreg
 21616  009510  6F94               	movwf	doNenrd@index& (0+255),b
 21617                           
 21618                           ;events.c: 376: unsigned char tableIndex;;events.c: 377: WORD n;;events.c: 379: tableInd
      +                          ex = evtIdxToTableIndex(index);
 21619  009512  0100               	movlb	0	; () banked
 21620  009514  5194               	movf	doNenrd@index& (0+255),w,b
 21621  009516  EC70  F053         	call	_evtIdxToTableIndex
 21622  00951A  6F95               	movwf	doNenrd@tableIndex& (0+255),b
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;events.c: 381: if ( ! validStart(tableIndex)) {
 21626  00951C  5195               	movf	doNenrd@tableIndex& (0+255),w,b
 21627  00951E  ECF8  F050         	call	_validStart
 21628  009522  0900               	iorlw	0
 21629  009524  A4D8               	btfss	status,2,c
 21630  009526  D004               	goto	l19587
 21631                           
 21632                           ; BSR set to: 0
 21633                           ;events.c: 382: doError(7);
 21634  009528  0E07               	movlw	7
 21635  00952A  EC56  F052         	call	_doError
 21636  00952E  0012               	return	
 21637  009530                     l19587:
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;events.c: 387: };events.c: 388: n = getNN(tableIndex);
 21641  009530  5195               	movf	doNenrd@tableIndex& (0+255),w,b
 21642  009532  ECA8  F043         	call	_getNN
 21643  009536  C07D  F096         	movff	?_getNN,doNenrd@n
 21644  00953A  C07E  F097         	movff	?_getNN+1,doNenrd@n+1
 21645                           
 21646                           ; BSR set to: 0
 21647                           ;events.c: 389: cbusMsg[d3] = n >> 8;
 21648  00953E  C097  F025         	movff	doNenrd@n+1,_cbusMsg+9
 21649                           
 21650                           ; BSR set to: 0
 21651                           ;events.c: 390: cbusMsg[d4] = n & 0xFF;
 21652  009542  C096  F026         	movff	doNenrd@n,_cbusMsg+10
 21653                           
 21654                           ;events.c: 392: n = getEN(tableIndex);
 21655  009546  5195               	movf	doNenrd@tableIndex& (0+255),w,b
 21656  009548  EC19  F048         	call	_getEN
 21657  00954C  C07D  F096         	movff	?_getEN,doNenrd@n
 21658  009550  C07E  F097         	movff	?_getEN+1,doNenrd@n+1
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;events.c: 393: cbusMsg[d5] = n >> 8;
 21662  009554  C097  F027         	movff	doNenrd@n+1,_cbusMsg+11
 21663                           
 21664                           ; BSR set to: 0
 21665                           ;events.c: 394: cbusMsg[d6] = n & 0xFF;
 21666  009558  C096  F028         	movff	doNenrd@n,_cbusMsg+12
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;events.c: 396: cbusMsg[d7] = index;
 21670  00955C  C094  F029         	movff	doNenrd@index,_cbusMsg+13
 21671                           
 21672                           ;events.c: 397: cbusSendOpcMyNN( 0, 0xF2, cbusMsg );
 21673  009560  0EF2               	movlw	242
 21674  009562  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21675  009564  0E1C               	movlw	low _cbusMsg
 21676  009566  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21677  009568  0E00               	movlw	0
 21678  00956A  EC65  F052         	call	_cbusSendOpcMyNN
 21679                           
 21680                           ; BSR set to: 0
 21681  00956E  0012               	return		;funcret
 21682  009570                     __end_of_doNenrd:
 21683                           	callstack 0
 21684                           
 21685 ;; *************** function _evtIdxToTableIndex *****************
 21686 ;; Defined at:
 21687 ;;		line 837 in file "../../github/CBUSlib/events.c"
 21688 ;; Parameters:    Size  Location     Type
 21689 ;;  evtIdx          1    wreg     unsigned char 
 21690 ;; Auto vars:     Size  Location     Type
 21691 ;;  evtIdx          1   17[BANK0 ] unsigned char 
 21692 ;; Return value:  Size  Location     Type
 21693 ;;                  1    wreg      unsigned char 
 21694 ;; Registers used:
 21695 ;;		wreg, status,2, status,0
 21696 ;; Tracked objects:
 21697 ;;		On entry : 3F/0
 21698 ;;		On exit  : 3F/0
 21699 ;;		Unchanged: 0/0
 21700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21705 ;;Total ram usage:        1 bytes
 21706 ;; Hardware stack levels used: 1
 21707 ;; Hardware stack levels required when called: 8
 21708 ;; This function calls:
 21709 ;;		Nothing
 21710 ;; This function is called by:
 21711 ;;		_doNenrd
 21712 ;;		_doReval
 21713 ;; This function uses a non-reentrant model
 21714 ;;
 21715                           
 21716                           	psect	text93
 21717  00A6E0                     __ptext93:
 21718                           	callstack 0
 21719  00A6E0                     _evtIdxToTableIndex:
 21720                           	callstack 18
 21721                           
 21722                           ; BSR set to: 0
 21723                           ;incstack = 0
 21724                           ;evtIdxToTableIndex@evtIdx stored from wreg
 21725  00A6E0  6F71               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 21726                           
 21727                           ;events.c: 838: return evtIdx-1U;
 21728  00A6E2  0100               	movlb	0	; () banked
 21729  00A6E4  0571               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 21730                           
 21731                           ; BSR set to: 0
 21732  00A6E6  0012               	return		;funcret
 21733  00A6E8                     __end_of_evtIdxToTableIndex:
 21734                           	callstack 0
 21735                           
 21736 ;; *************** function _doEvuln *****************
 21737 ;; Defined at:
 21738 ;;		line 877 in file "../../github/CBUSlib/FliM.c"
 21739 ;; Parameters:    Size  Location     Type
 21740 ;;  nodeNumber      2   68[BANK0 ] unsigned int 
 21741 ;;  eventNumber     2   70[BANK0 ] unsigned int 
 21742 ;; Auto vars:     Size  Location     Type
 21743 ;;		None
 21744 ;; Return value:  Size  Location     Type
 21745 ;;                  1    wreg      void 
 21746 ;; Registers used:
 21747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21748 ;; Tracked objects:
 21749 ;;		On entry : 3F/0
 21750 ;;		On exit  : 3F/0
 21751 ;;		Unchanged: 0/0
 21752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21756 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21757 ;;Total ram usage:        4 bytes
 21758 ;; Hardware stack levels used: 1
 21759 ;; Hardware stack levels required when called: 18
 21760 ;; This function calls:
 21761 ;;		_removeEvent
 21762 ;; This function is called by:
 21763 ;;		_parseFLiMCmd
 21764 ;; This function uses a non-reentrant model
 21765 ;;
 21766                           
 21767                           	psect	text94
 21768  00A5EE                     __ptext94:
 21769                           	callstack 0
 21770  00A5EE                     _doEvuln:
 21771                           	callstack 9
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;FliM.c: 879: removeEvent(nodeNumber, eventNumber);
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;incstack = 0
 21778  00A5EE  C0A4  F09F         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 21779  00A5F2  C0A5  F0A0         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 21780  00A5F6  C0A6  F0A1         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 21781  00A5FA  C0A7  F0A2         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 21782  00A5FE  EC22  F052         	call	_removeEvent	;wreg free
 21783                           
 21784                           ; BSR set to: 0
 21785  00A602  0012               	return		;funcret
 21786  00A604                     __end_of_doEvuln:
 21787                           	callstack 0
 21788                           
 21789 ;; *************** function _removeEvent *****************
 21790 ;; Defined at:
 21791 ;;		line 429 in file "../../github/CBUSlib/events.c"
 21792 ;; Parameters:    Size  Location     Type
 21793 ;;  nodeNumber      2   63[BANK0 ] unsigned int 
 21794 ;;  eventNumber     2   65[BANK0 ] unsigned int 
 21795 ;; Auto vars:     Size  Location     Type
 21796 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 21797 ;; Return value:  Size  Location     Type
 21798 ;;                  1    wreg      unsigned char 
 21799 ;; Registers used:
 21800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21801 ;; Tracked objects:
 21802 ;;		On entry : 3F/0
 21803 ;;		On exit  : 3F/0
 21804 ;;		Unchanged: 0/0
 21805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21809 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21810 ;;Total ram usage:        5 bytes
 21811 ;; Hardware stack levels used: 1
 21812 ;; Hardware stack levels required when called: 17
 21813 ;; This function calls:
 21814 ;;		_findEvent
 21815 ;;		_removeTableEntry
 21816 ;; This function is called by:
 21817 ;;		_doEvuln
 21818 ;; This function uses a non-reentrant model
 21819 ;;
 21820                           
 21821                           	psect	text95
 21822  00A444                     __ptext95:
 21823                           	callstack 0
 21824  00A444                     _removeEvent:
 21825                           	callstack 9
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;events.c: 431: unsigned char tableIndex = findEvent(nodeNumber, eventNumber);
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;incstack = 0
 21832  00A444  C09F  F08E         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 21833  00A448  C0A0  F08F         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 21834  00A44C  C0A1  F090         	movff	removeEvent@eventNumber,findEvent@eventNumber
 21835  00A450  C0A2  F091         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 21836  00A454  ECD6  F044         	call	_findEvent	;wreg free
 21837  00A458  6FA3               	movwf	removeEvent@tableIndex& (0+255),b
 21838                           
 21839                           ; BSR set to: 0
 21840                           ;events.c: 432: if (tableIndex == 0xff) return 6;
 21841  00A45A  29A3               	incf	removeEvent@tableIndex& (0+255),w,b
 21842  00A45C  B4D8               	btfsc	status,2,c
 21843  00A45E  0012               	return	
 21844                           
 21845                           ; BSR set to: 0
 21846                           ;events.c: 434: return removeTableEntry(tableIndex);;	Return value of _removeEvent is ne
      +                          ver used
 21847  00A460  51A3               	movf	removeEvent@tableIndex& (0+255),w,b
 21848  00A462  EC21  F03A         	call	_removeTableEntry
 21849                           
 21850                           ; BSR set to: 0
 21851  00A466  0012               	return		;funcret
 21852  00A468                     __end_of_removeEvent:
 21853                           	callstack 0
 21854                           
 21855 ;; *************** function _doEvlrn *****************
 21856 ;; Defined at:
 21857 ;;		line 802 in file "../../github/CBUSlib/FliM.c"
 21858 ;; Parameters:    Size  Location     Type
 21859 ;;  nodeNumber      2  112[BANK0 ] unsigned int 
 21860 ;;  eventNumber     2  114[BANK0 ] unsigned int 
 21861 ;;  evNum           1  116[BANK0 ] unsigned char 
 21862 ;;  evVal           1  117[BANK0 ] unsigned char 
 21863 ;; Auto vars:     Size  Location     Type
 21864 ;;  error           1  118[BANK0 ] unsigned char 
 21865 ;; Return value:  Size  Location     Type
 21866 ;;                  1    wreg      void 
 21867 ;; Registers used:
 21868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21869 ;; Tracked objects:
 21870 ;;		On entry : 3F/0
 21871 ;;		On exit  : 3F/0
 21872 ;;		Unchanged: 0/0
 21873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21877 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21878 ;;Total ram usage:        7 bytes
 21879 ;; Hardware stack levels used: 1
 21880 ;; Hardware stack levels required when called: 21
 21881 ;; This function calls:
 21882 ;;		_APP_addEvent
 21883 ;;		_cbusSendOpcMyNN
 21884 ;; This function is called by:
 21885 ;;		_parseFLiMCmd
 21886 ;; This function uses a non-reentrant model
 21887 ;;
 21888                           
 21889                           	psect	text96
 21890  0091E8                     __ptext96:
 21891                           	callstack 0
 21892  0091E8                     _doEvlrn:
 21893                           	callstack 6
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;FliM.c: 804: unsigned char error;;FliM.c: 806: if (evNum == 0)
 21897                           
 21898                           ; BSR set to: 0
 21899                           ;incstack = 0
 21900  0091E8  51D4               	movf	doEvlrn@evNum& (0+255),w,b
 21901  0091EA  A4D8               	btfss	status,2,c
 21902  0091EC  D00A               	goto	l19637
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;FliM.c: 807: {;FliM.c: 808: cbusMsg[d3] = 6;
 21906  0091EE  0E06               	movlw	6
 21907  0091F0  6E25               	movwf	(_cbusMsg+9)^0,c
 21908                           
 21909                           ; BSR set to: 0
 21910                           ;FliM.c: 809: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 21911  0091F2  0E6F               	movlw	111
 21912  0091F4  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21913  0091F6  0E1C               	movlw	low _cbusMsg
 21914  0091F8  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21915  0091FA  0E00               	movlw	0
 21916  0091FC  EC65  F052         	call	_cbusSendOpcMyNN
 21917  009200  0012               	return	
 21918  009202                     l19637:
 21919                           
 21920                           ; BSR set to: 0
 21921                           ;FliM.c: 811: };FliM.c: 812: evNum--;
 21922  009202  07D4               	decf	doEvlrn@evNum& (0+255),f,b
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;FliM.c: 813: error = APP_addEvent(nodeNumber, eventNumber, evNum, evVal, 0);
 21926  009204  C0D0  F0C8         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 21927  009208  C0D1  F0C9         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 21928  00920C  C0D2  F0CA         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 21929  009210  C0D3  F0CB         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 21930  009214  C0D4  F0CC         	movff	doEvlrn@evNum,APP_addEvent@evNum
 21931  009218  C0D5  F0CD         	movff	doEvlrn@evVal,APP_addEvent@evVal
 21932  00921C  0E00               	movlw	0
 21933  00921E  6FCE               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 21934  009220  EC43  F04B         	call	_APP_addEvent	;wreg free
 21935  009224  6FD6               	movwf	doEvlrn@error& (0+255),b
 21936                           
 21937                           ; BSR set to: 0
 21938                           ;FliM.c: 814: if (error)
 21939  009226  51D6               	movf	doEvlrn@error& (0+255),w,b
 21940  009228  B4D8               	btfsc	status,2,c
 21941  00922A  D00A               	goto	l19649
 21942                           
 21943                           ; BSR set to: 0
 21944                           ;FliM.c: 815: {;FliM.c: 817: cbusMsg[d3] = error;
 21945  00922C  C0D6  F025         	movff	doEvlrn@error,_cbusMsg+9
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;FliM.c: 818: cbusSendOpcMyNN( 0, 0x6F, cbusMsg);
 21949  009230  0E6F               	movlw	111
 21950  009232  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21951  009234  0E1C               	movlw	low _cbusMsg
 21952  009236  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21953  009238  0E00               	movlw	0
 21954  00923A  EC65  F052         	call	_cbusSendOpcMyNN
 21955  00923E  0012               	return	
 21956  009240                     l19649:
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;FliM.c: 820: };FliM.c: 821: cbusSendOpcMyNN( 0, 0x59, cbusMsg);
 21960  009240  0E59               	movlw	89
 21961  009242  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 21962  009244  0E1C               	movlw	low _cbusMsg
 21963  009246  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 21964  009248  0E00               	movlw	0
 21965  00924A  EC65  F052         	call	_cbusSendOpcMyNN
 21966                           
 21967                           ; BSR set to: 0
 21968  00924E  0012               	return		;funcret
 21969  009250                     __end_of_doEvlrn:
 21970                           	callstack 0
 21971                           
 21972 ;; *************** function _APP_addEvent *****************
 21973 ;; Defined at:
 21974 ;;		line 167 in file "../../github/CANMIOfirmware/mioEvents.c"
 21975 ;; Parameters:    Size  Location     Type
 21976 ;;  nodeNumber      2  104[BANK0 ] unsigned int 
 21977 ;;  eventNumber     2  106[BANK0 ] unsigned int 
 21978 ;;  evNum           1  108[BANK0 ] unsigned char 
 21979 ;;  evVal           1  109[BANK0 ] unsigned char 
 21980 ;;  forceOwnNN      1  110[BANK0 ] unsigned char 
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;  tableIndex      1  111[BANK0 ] unsigned char 
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1    wreg      unsigned char 
 21985 ;; Registers used:
 21986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21987 ;; Tracked objects:
 21988 ;;		On entry : 3F/0
 21989 ;;		On exit  : 3F/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21992 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21995 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21996 ;;Total ram usage:        8 bytes
 21997 ;; Hardware stack levels used: 1
 21998 ;; Hardware stack levels required when called: 20
 21999 ;; This function calls:
 22000 ;;		_addEvent
 22001 ;;		_checkRemoveTableEntry
 22002 ;;		_rebuildHashtable
 22003 ;;		_writeEv
 22004 ;; This function is called by:
 22005 ;;		_doEvlrn
 22006 ;; This function uses a non-reentrant model
 22007 ;;
 22008                           
 22009                           	psect	text97
 22010  009686                     __ptext97:
 22011                           	callstack 0
 22012  009686                     _APP_addEvent:
 22013                           	callstack 6
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;mioEvents.c: 168: if ((evNum == 0) && (evVal != 0)) {
 22017                           
 22018                           ; BSR set to: 0
 22019                           ;incstack = 0
 22020  009686  51CC               	movf	APP_addEvent@evNum& (0+255),w,b
 22021  009688  A4D8               	btfss	status,2,c
 22022  00968A  D01A               	goto	l742
 22023                           
 22024                           ; BSR set to: 0
 22025  00968C  51CD               	movf	APP_addEvent@evVal& (0+255),w,b
 22026  00968E  B4D8               	btfsc	status,2,c
 22027  009690  D017               	goto	l742
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;mioEvents.c: 170: unsigned char tableIndex = happening2Event[evVal-1U];
 22031  009692  0EFF               	movlw	low (_happening2Event+65535)
 22032  009694  25CD               	addwf	APP_addEvent@evVal& (0+255),w,b
 22033  009696  6ED9               	movwf	fsr2l,c
 22034  009698  6ADA               	clrf	fsr2h,c
 22035  00969A  0E02               	movlw	high (_happening2Event+65535)
 22036  00969C  22DA               	addwfc	fsr2h,f,c
 22037  00969E  50DF               	movf	indf2,w,c
 22038  0096A0  6FCF               	movwf	APP_addEvent@tableIndex& (0+255),b
 22039                           
 22040                           ; BSR set to: 0
 22041                           ;mioEvents.c: 171: if (tableIndex != 0xff) {
 22042  0096A2  29CF               	incf	APP_addEvent@tableIndex& (0+255),w,b
 22043  0096A4  B4D8               	btfsc	status,2,c
 22044  0096A6  D00C               	goto	l742
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;mioEvents.c: 174: writeEv(tableIndex, 0, 0);
 22048  0096A8  0E00               	movlw	0
 22049  0096AA  6FA1               	movwf	writeEv@evNum& (0+255),b
 22050  0096AC  0E00               	movlw	0
 22051  0096AE  6FA2               	movwf	writeEv@evVal& (0+255),b
 22052  0096B0  51CF               	movf	APP_addEvent@tableIndex& (0+255),w,b
 22053  0096B2  ECB3  F020         	call	_writeEv
 22054                           
 22055                           ;mioEvents.c: 175: checkRemoveTableEntry(tableIndex);
 22056  0096B6  51CF               	movf	APP_addEvent@tableIndex& (0+255),w,b
 22057  0096B8  ECEB  F04E         	call	_checkRemoveTableEntry
 22058                           
 22059                           ;mioEvents.c: 176: rebuildHashtable();
 22060  0096BC  ECB2  F034         	call	_rebuildHashtable	;wreg free
 22061  0096C0                     l742:
 22062                           
 22063                           ; BSR set to: 0
 22064                           ;mioEvents.c: 177: };mioEvents.c: 178: };mioEvents.c: 179: return addEvent(nodeNumber, e
      +                          ventNumber, evNum, evVal, forceOwnNN);
 22065  0096C0  C0C8  F0B3         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 22066  0096C4  C0C9  F0B4         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 22067  0096C8  C0CA  F0B5         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 22068  0096CC  C0CB  F0B6         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 22069  0096D0  C0CC  F0B7         	movff	APP_addEvent@evNum,addEvent@evNum
 22070  0096D4  C0CD  F0B8         	movff	APP_addEvent@evVal,addEvent@evVal
 22071  0096D8  C0CE  F0B9         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 22072  0096DC  EC0F  F02E         	call	_addEvent	;wreg free
 22073                           
 22074                           ; BSR set to: 0
 22075  0096E0  0012               	return		;funcret
 22076  0096E2                     __end_of_APP_addEvent:
 22077                           	callstack 0
 22078                           
 22079 ;; *************** function _doAreq *****************
 22080 ;; Defined at:
 22081 ;;		line 185 in file "../../github/CBUSlib/happeningsActions.c"
 22082 ;; Parameters:    Size  Location     Type
 22083 ;;  nodeNumber      2   59[BANK0 ] unsigned int 
 22084 ;;  eventNumber     2   61[BANK0 ] unsigned int 
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;  status          1   69[BANK0 ] unsigned char 
 22087 ;;  thisByte        1   68[BANK0 ] unsigned char 
 22088 ;;  thisBit         1   67[BANK0 ] unsigned char 
 22089 ;;  ev0             2   75[BANK0 ] int 
 22090 ;;  happening       1   77[BANK0 ] unsigned char 
 22091 ;;  tableIndex      1   74[BANK0 ] unsigned char 
 22092 ;; Return value:  Size  Location     Type
 22093 ;;                  1    wreg      void 
 22094 ;; Registers used:
 22095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22096 ;; Tracked objects:
 22097 ;;		On entry : 3F/0
 22098 ;;		On exit  : 3F/0
 22099 ;;		Unchanged: 0/0
 22100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22102 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22103 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22104 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22105 ;;Total ram usage:       19 bytes
 22106 ;; Hardware stack levels used: 1
 22107 ;; Hardware stack levels required when called: 15
 22108 ;; This function calls:
 22109 ;;		_cbusSendMsg
 22110 ;;		_doError
 22111 ;;		_ee_read
 22112 ;;		_findEvent
 22113 ;;		_getEv
 22114 ;; This function is called by:
 22115 ;;		_parseFLiMCmd
 22116 ;; This function uses a non-reentrant model
 22117 ;;
 22118                           
 22119                           	psect	text98
 22120  006F34                     __ptext98:
 22121                           	callstack 0
 22122  006F34                     _doAreq:
 22123                           	callstack 12
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;happeningsActions.c: 186: unsigned char happening;;happeningsActions.c: 187: int ev0;;h
      +                          appeningsActions.c: 189: unsigned char tableIndex = findEvent(nodeNumber, eventNumber);
 22127                           
 22128                           ; BSR set to: 0
 22129                           ;incstack = 0
 22130  006F34  C09B  F08E         	movff	doAreq@nodeNumber,findEvent@nodeNumber
 22131  006F38  C09C  F08F         	movff	doAreq@nodeNumber+1,findEvent@nodeNumber+1
 22132  006F3C  C09D  F090         	movff	doAreq@eventNumber,findEvent@eventNumber
 22133  006F40  C09E  F091         	movff	doAreq@eventNumber+1,findEvent@eventNumber+1
 22134  006F44  ECD6  F044         	call	_findEvent	;wreg free
 22135  006F48  6FAA               	movwf	doAreq@tableIndex& (0+255),b
 22136                           
 22137                           ; BSR set to: 0
 22138                           ;happeningsActions.c: 190: if (tableIndex == 0xff) return;
 22139  006F4A  29AA               	incf	doAreq@tableIndex& (0+255),w,b
 22140  006F4C  B4D8               	btfsc	status,2,c
 22141  006F4E  0012               	return	
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;happeningsActions.c: 192: ev0 = getEv(tableIndex, 0);
 22145  006F50  0E00               	movlw	0
 22146  006F52  6F81               	movwf	getEv@evNum& (0+255),b
 22147  006F54  51AA               	movf	doAreq@tableIndex& (0+255),w,b
 22148  006F56  EC22  F038         	call	_getEv
 22149  006F5A  C081  F0AB         	movff	?_getEv,doAreq@ev0
 22150  006F5E  C082  F0AC         	movff	?_getEv+1,doAreq@ev0+1
 22151                           
 22152                           ; BSR set to: 0
 22153                           ;happeningsActions.c: 193: if (ev0 < 0) {
 22154  006F62  AFAC               	btfss	(doAreq@ev0+1)& (0+255),7,b
 22155  006F64  D005               	goto	l2378
 22156                           
 22157                           ; BSR set to: 0
 22158                           ;happeningsActions.c: 194: doError((unsigned char)(-ev0));
 22159  006F66  51AB               	movf	doAreq@ev0& (0+255),w,b
 22160  006F68  0800               	sublw	0
 22161  006F6A  EC56  F052         	call	_doError
 22162  006F6E  0012               	return	
 22163  006F70                     l2378:
 22164                           
 22165                           ; BSR set to: 0
 22166                           ;happeningsActions.c: 196: };happeningsActions.c: 197: happening = (unsigned char)ev0;
 22167  006F70  C0AB  F0AD         	movff	doAreq@ev0,doAreq@happening
 22168                           
 22169                           ; BSR set to: 0
 22170                           ;happeningsActions.c: 198: if ((happening >= 1U) && (happening-1U< (8U + 16U * 4U))) {
 22171  006F74  51AD               	movf	doAreq@happening& (0+255),w,b
 22172  006F76  B4D8               	btfsc	status,2,c
 22173  006F78  0012               	return	
 22174                           
 22175                           ; BSR set to: 0
 22176  006F7A  0EFF               	movlw	255
 22177  006F7C  6F9F               	movwf	??_doAreq& (0+255),b
 22178  006F7E  0EFF               	movlw	255
 22179  006F80  6FA0               	movwf	(??_doAreq+1)& (0+255),b
 22180  006F82  51AD               	movf	doAreq@happening& (0+255),w,b
 22181  006F84  6FA1               	movwf	(??_doAreq+2)& (0+255),b
 22182  006F86  6BA2               	clrf	(??_doAreq+3)& (0+255),b
 22183  006F88  519F               	movf	??_doAreq& (0+255),w,b
 22184  006F8A  27A1               	addwf	(??_doAreq+2)& (0+255),f,b
 22185  006F8C  51A0               	movf	(??_doAreq+1)& (0+255),w,b
 22186  006F8E  23A2               	addwfc	(??_doAreq+3)& (0+255),f,b
 22187  006F90  51A2               	movf	(??_doAreq+3)& (0+255),w,b
 22188  006F92  E157               	bnz	l2377
 22189  006F94  0E48               	movlw	72
 22190  006F96  5DA1               	subwf	(??_doAreq+2)& (0+255),w,b
 22191  006F98  B0D8               	btfsc	status,0,c
 22192  006F9A  0012               	return	
 22193                           
 22194                           ; BSR set to: 0
 22195                           ;happeningsActions.c: 199: unsigned char thisBit = (unsigned char)(happening & 0x7);
 22196  006F9C  51AD               	movf	doAreq@happening& (0+255),w,b
 22197  006F9E  0B07               	andlw	7
 22198  006FA0  6FA3               	movwf	doAreq@thisBit& (0+255),b
 22199                           
 22200                           ;happeningsActions.c: 200: unsigned char thisByte = (unsigned char)(happening >> 3);
 22201  006FA2  39AD               	swapf	doAreq@happening& (0+255),w,b
 22202  006FA4  46E8               	rlncf	wreg,f,c
 22203  006FA6  0B1F               	andlw	31
 22204  006FA8  6FA4               	movwf	doAreq@thisByte& (0+255),b
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;happeningsActions.c: 201: BOOL status = (unsigned char)(ee_read((WORD)(((BYTE*)(0x3FF-3
      +                          9))+thisByte)) & (unsigned char)(1U<<thisBit));
 22208  006FAA  C0A3  F09F         	movff	doAreq@thisBit,??_doAreq
 22209  006FAE  0E01               	movlw	1
 22210  006FB0  6FA0               	movwf	(??_doAreq+1)& (0+255),b
 22211  006FB2  2B9F               	incf	??_doAreq& (0+255),f,b
 22212  006FB4  D002               	goto	u24584
 22213  006FB6                     u24585:
 22214  006FB6  90D8               	bcf	status,0,c
 22215  006FB8  37A0               	rlcf	(??_doAreq+1)& (0+255),f,b
 22216  006FBA                     u24584:
 22217  006FBA  2F9F               	decfsz	??_doAreq& (0+255),f,b
 22218  006FBC  D7FC               	goto	u24585
 22219  006FBE  0ED8               	movlw	216
 22220  006FC0  0100               	movlb	0	; () banked
 22221  006FC2  25A4               	addwf	doAreq@thisByte& (0+255),w,b
 22222  006FC4  6F71               	movwf	ee_read@addr& (0+255),b
 22223  006FC6  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 22224  006FC8  0E03               	movlw	3
 22225  006FCA  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 22226  006FCC  EC91  F052         	call	_ee_read	;wreg free
 22227  006FD0  0100               	movlb	0	; () banked
 22228  006FD2  15A0               	andwf	(??_doAreq+1)& (0+255),w,b
 22229  006FD4  6FA5               	movwf	doAreq@status& (0+255),b
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;happeningsActions.c: 202: if (nodeNumber == 0) {
 22233  006FD6  519B               	movf	doAreq@nodeNumber& (0+255),w,b
 22234  006FD8  119C               	iorwf	(doAreq@nodeNumber+1)& (0+255),w,b
 22235  006FDA  A4D8               	btfss	status,2,c
 22236  006FDC  D005               	goto	l2380
 22237                           
 22238                           ; BSR set to: 0
 22239                           ;happeningsActions.c: 203: cbusMsg[d1] = nodeID >> 8;
 22240  006FDE  C002  F023         	movff	_nodeID+1,_cbusMsg+7
 22241                           
 22242                           ;happeningsActions.c: 204: cbusMsg[d2] = nodeID & 0xFF;
 22243  006FE2  C001  F024         	movff	_nodeID,_cbusMsg+8
 22244                           
 22245                           ;happeningsActions.c: 205: } else {
 22246  006FE6  D004               	goto	l2381
 22247  006FE8                     l2380:
 22248                           
 22249                           ; BSR set to: 0
 22250                           ;happeningsActions.c: 206: cbusMsg[d1] = nodeNumber >> 8;
 22251  006FE8  C09C  F023         	movff	doAreq@nodeNumber+1,_cbusMsg+7
 22252                           
 22253                           ;happeningsActions.c: 207: cbusMsg[d2] = nodeNumber & 0xFF;
 22254  006FEC  C09B  F024         	movff	doAreq@nodeNumber,_cbusMsg+8
 22255  006FF0                     l2381:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;happeningsActions.c: 208: };happeningsActions.c: 209: cbusMsg[d3] = eventNumber >> 8;
 22259  006FF0  C09E  F025         	movff	doAreq@eventNumber+1,_cbusMsg+9
 22260                           
 22261                           ;happeningsActions.c: 210: cbusMsg[d4] = eventNumber & 0xFF;
 22262  006FF4  C09D  F026         	movff	doAreq@eventNumber,_cbusMsg+10
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;happeningsActions.c: 211: if (status) {
 22266  006FF8  51A5               	movf	doAreq@status& (0+255),w,b
 22267  006FFA  B4D8               	btfsc	status,2,c
 22268  006FFC  D00F               	goto	l19833
 22269                           
 22270                           ; BSR set to: 0
 22271                           ;happeningsActions.c: 212: cbusMsg[d0] = (unsigned char)(nodeNumber == 0 ? 0x9D : 0x93);
 22272  006FFE  519B               	movf	doAreq@nodeNumber& (0+255),w,b
 22273  007000  119C               	iorwf	(doAreq@nodeNumber+1)& (0+255),w,b
 22274  007002  B4D8               	btfsc	status,2,c
 22275  007004  D004               	goto	l19829
 22276                           
 22277                           ; BSR set to: 0
 22278  007006  0E00               	movlw	0
 22279  007008  6FA7               	movwf	(_doAreq$4586+1)& (0+255),b
 22280  00700A  0E93               	movlw	147
 22281  00700C  D003               	goto	L19
 22282  00700E                     l19829:
 22283                           
 22284                           ; BSR set to: 0
 22285  00700E  0E00               	movlw	0
 22286  007010  6FA7               	movwf	(_doAreq$4586+1)& (0+255),b
 22287  007012  0E9D               	movlw	157
 22288  007014                     L19:
 22289  007014  6FA6               	movwf	_doAreq$4586& (0+255),b
 22290                           
 22291                           ; BSR set to: 0
 22292  007016  C0A6  F022         	movff	_doAreq$4586,_cbusMsg+6
 22293                           
 22294                           ;happeningsActions.c: 213: } else {
 22295  00701A  D00E               	goto	l19841
 22296  00701C                     l19833:
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;happeningsActions.c: 214: cbusMsg[d0] = (unsigned char)(nodeNumber == 0 ? 0x9E : 0x94);
 22300  00701C  519B               	movf	doAreq@nodeNumber& (0+255),w,b
 22301  00701E  119C               	iorwf	(doAreq@nodeNumber+1)& (0+255),w,b
 22302  007020  B4D8               	btfsc	status,2,c
 22303  007022  D004               	goto	l19837
 22304                           
 22305                           ; BSR set to: 0
 22306  007024  0E00               	movlw	0
 22307  007026  6FA9               	movwf	(_doAreq$4587+1)& (0+255),b
 22308  007028  0E94               	movlw	148
 22309  00702A  D003               	goto	L20
 22310  00702C                     l19837:
 22311                           
 22312                           ; BSR set to: 0
 22313  00702C  0E00               	movlw	0
 22314  00702E  6FA9               	movwf	(_doAreq$4587+1)& (0+255),b
 22315  007030  0E9E               	movlw	158
 22316  007032                     L20:
 22317  007032  6FA8               	movwf	_doAreq$4587& (0+255),b
 22318                           
 22319                           ; BSR set to: 0
 22320  007034  C0A8  F022         	movff	_doAreq$4587,_cbusMsg+6
 22321  007038                     l19841:
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;happeningsActions.c: 215: };happeningsActions.c: 216: cbusSendMsg(0xFF, cbusMsg);
 22325  007038  0E1C               	movlw	low _cbusMsg
 22326  00703A  6F8B               	movwf	cbusSendMsg@msg& (0+255),b
 22327  00703C  0EFF               	movlw	255
 22328  00703E  ECA7  F04F         	call	_cbusSendMsg
 22329  007042                     l2377:
 22330                           
 22331                           ; BSR set to: 0
 22332  007042  0012               	return		;funcret
 22333  007044                     __end_of_doAreq:
 22334                           	callstack 0
 22335                           
 22336 ;; *************** function _QNNrespond *****************
 22337 ;; Defined at:
 22338 ;;		line 538 in file "../../github/CBUSlib/FliM.c"
 22339 ;; Parameters:    Size  Location     Type
 22340 ;;		None
 22341 ;; Auto vars:     Size  Location     Type
 22342 ;;  paramptr        3   51[BANK0 ] PTR struct .
 22343 ;;		 -> FLiMparams(20), 
 22344 ;; Return value:  Size  Location     Type
 22345 ;;                  1    wreg      void 
 22346 ;; Registers used:
 22347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22348 ;; Tracked objects:
 22349 ;;		On entry : 3F/0
 22350 ;;		On exit  : 3F/0
 22351 ;;		Unchanged: 0/0
 22352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22354 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22356 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22357 ;;Total ram usage:        3 bytes
 22358 ;; Hardware stack levels used: 1
 22359 ;; Hardware stack levels required when called: 13
 22360 ;; This function calls:
 22361 ;;		_cbusSendMsgNN
 22362 ;;		_getParFlags
 22363 ;; This function is called by:
 22364 ;;		_parseFLiMCmd
 22365 ;; This function uses a non-reentrant model
 22366 ;;
 22367                           
 22368                           	psect	text99
 22369  0098EA                     __ptext99:
 22370                           	callstack 0
 22371  0098EA                     _QNNrespond:
 22372                           	callstack 14
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;FliM.c: 540: FLiMprmptr paramptr;;FliM.c: 542: paramptr = (FLiMprmptr)&FLiMparams;
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;incstack = 0
 22379  0098EA  0E20               	movlw	32
 22380  0098EC  6F93               	movwf	QNNrespond@paramptr& (0+255),b
 22381  0098EE  0E08               	movlw	8
 22382  0098F0  6F94               	movwf	(QNNrespond@paramptr+1)& (0+255),b
 22383  0098F2  0E00               	movlw	0
 22384  0098F4  6F95               	movwf	(QNNrespond@paramptr+2)& (0+255),b
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;FliM.c: 544: cbusMsg[d0] = 0xB6;
 22388  0098F6  0EB6               	movlw	182
 22389  0098F8  6E22               	movwf	(_cbusMsg+6)^0,c
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;FliM.c: 545: cbusMsg[d3] = paramptr->params.manufacturer;
 22393  0098FA  C093  FFF6         	movff	QNNrespond@paramptr,tblptrl
 22394  0098FE  C094  FFF7         	movff	QNNrespond@paramptr+1,tblptrh
 22395  009902  C095  FFF8         	movff	QNNrespond@paramptr+2,tblptru
 22396  009906  0008               	tblrd		*
 22397  009908  CFF5 F025          	movff	tablat,_cbusMsg+9
 22398                           
 22399                           ; BSR set to: 0
 22400                           ;FliM.c: 546: cbusMsg[d4] = paramptr->params.module_id;
 22401  00990C  0E02               	movlw	2
 22402  00990E  2593               	addwf	QNNrespond@paramptr& (0+255),w,b
 22403  009910  6EF6               	movwf	tblptrl,c
 22404  009912  0E00               	movlw	0
 22405  009914  2194               	addwfc	(QNNrespond@paramptr+1)& (0+255),w,b
 22406  009916  6EF7               	movwf	tblptrh,c
 22407  009918  0E00               	movlw	0
 22408  00991A  2195               	addwfc	(QNNrespond@paramptr+2)& (0+255),w,b
 22409  00991C  6EF8               	movwf	tblptru,c
 22410  00991E  0008               	tblrd		*
 22411  009920  CFF5 F026          	movff	tablat,_cbusMsg+10
 22412                           
 22413                           ; BSR set to: 0
 22414                           ;FliM.c: 547: cbusMsg[d5] = getParFlags();
 22415  009924  EC9E  F04C         	call	_getParFlags	;wreg free
 22416  009928  6E27               	movwf	(_cbusMsg+11)^0,c
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;FliM.c: 548: cbusSendMsgNN(0xFF, -1, cbusMsg);
 22420  00992A  0EFF               	movlw	255
 22421  00992C  6F90               	movwf	(cbusSendMsgNN@eventNode+1)& (0+255),b
 22422  00992E  698F               	setf	cbusSendMsgNN@eventNode& (0+255),b
 22423  009930  0E1C               	movlw	low _cbusMsg
 22424  009932  6F91               	movwf	cbusSendMsgNN@msg& (0+255),b
 22425  009934  0EFF               	movlw	255
 22426  009936  EC4C  F04F         	call	_cbusSendMsgNN
 22427                           
 22428                           ; BSR set to: 0
 22429  00993A  0012               	return		;funcret
 22430  00993C                     __end_of_QNNrespond:
 22431                           	callstack 0
 22432                           
 22433 ;; *************** function _getParFlags *****************
 22434 ;; Defined at:
 22435 ;;		line 522 in file "../../github/CBUSlib/FliM.c"
 22436 ;; Parameters:    Size  Location     Type
 22437 ;;		None
 22438 ;; Auto vars:     Size  Location     Type
 22439 ;;  paramptr        3   17[BANK0 ] PTR struct .
 22440 ;;		 -> FLiMparams(20), 
 22441 ;; Return value:  Size  Location     Type
 22442 ;;                  1    wreg      unsigned char 
 22443 ;; Registers used:
 22444 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 22445 ;; Tracked objects:
 22446 ;;		On entry : 3F/0
 22447 ;;		On exit  : 3F/0
 22448 ;;		Unchanged: 0/0
 22449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22451 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22453 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22454 ;;Total ram usage:        3 bytes
 22455 ;; Hardware stack levels used: 1
 22456 ;; Hardware stack levels required when called: 8
 22457 ;; This function calls:
 22458 ;;		Nothing
 22459 ;; This function is called by:
 22460 ;;		_QNNrespond
 22461 ;;		_doRqnp
 22462 ;; This function uses a non-reentrant model
 22463 ;;
 22464                           
 22465                           	psect	text100
 22466  00993C                     __ptext100:
 22467                           	callstack 0
 22468  00993C                     _getParFlags:
 22469                           	callstack 18
 22470                           
 22471                           ; BSR set to: 0
 22472                           ;FliM.c: 523: FLiMprmptr paramptr = (FLiMprmptr)&FLiMparams;
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;incstack = 0
 22476  00993C  0E20               	movlw	32
 22477  00993E  6F71               	movwf	getParFlags@paramptr& (0+255),b
 22478  009940  0E08               	movlw	8
 22479  009942  6F72               	movwf	(getParFlags@paramptr+1)& (0+255),b
 22480  009944  0E00               	movlw	0
 22481  009946  6F73               	movwf	(getParFlags@paramptr+2)& (0+255),b
 22482                           
 22483                           ;FliM.c: 525: if (flimState == fsFLiMLearn) {
 22484  009948  0E07               	movlw	7
 22485  00994A  1816               	xorwf	_flimState^0,w,c
 22486  00994C  A4D8               	btfss	status,2,c
 22487  00994E  D00D               	goto	l19263
 22488                           
 22489                           ; BSR set to: 0
 22490                           ;FliM.c: 526: return(32U | 4U) | (paramptr->params.module_flags);
 22491  009950  0E07               	movlw	7
 22492  009952  2571               	addwf	getParFlags@paramptr& (0+255),w,b
 22493  009954  6EF6               	movwf	tblptrl,c
 22494  009956  0E00               	movlw	0
 22495  009958  2172               	addwfc	(getParFlags@paramptr+1)& (0+255),w,b
 22496  00995A  6EF7               	movwf	tblptrh,c
 22497  00995C  0E00               	movlw	0
 22498  00995E  2173               	addwfc	(getParFlags@paramptr+2)& (0+255),w,b
 22499  009960  6EF8               	movwf	tblptru,c
 22500  009962  0008               	tblrd		*
 22501  009964  50F5               	movf	tablat,w,c
 22502  009966  0924               	iorlw	36
 22503  009968  0012               	return	
 22504  00996A                     l19263:
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;FliM.c: 527: };FliM.c: 528: if (flimState == fsFLiM) {
 22508  00996A  0416               	decf	_flimState^0,w,c
 22509  00996C  A4D8               	btfss	status,2,c
 22510  00996E  D00D               	goto	l19269
 22511                           
 22512                           ; BSR set to: 0
 22513                           ;FliM.c: 529: return(4U)|(paramptr->params.module_flags);
 22514  009970  0E07               	movlw	7
 22515  009972  2571               	addwf	getParFlags@paramptr& (0+255),w,b
 22516  009974  6EF6               	movwf	tblptrl,c
 22517  009976  0E00               	movlw	0
 22518  009978  2172               	addwfc	(getParFlags@paramptr+1)& (0+255),w,b
 22519  00997A  6EF7               	movwf	tblptrh,c
 22520  00997C  0E00               	movlw	0
 22521  00997E  2173               	addwfc	(getParFlags@paramptr+2)& (0+255),w,b
 22522  009980  6EF8               	movwf	tblptru,c
 22523  009982  0008               	tblrd		*
 22524  009984  50F5               	movf	tablat,w,c
 22525  009986  0904               	iorlw	4
 22526  009988  0012               	return	
 22527  00998A                     l19269:
 22528                           
 22529                           ; BSR set to: 0
 22530                           ;FliM.c: 530: };FliM.c: 531: return 0;
 22531  00998A  0E00               	movlw	0
 22532                           
 22533                           ; BSR set to: 0
 22534  00998C  0012               	return		;funcret
 22535  00998E                     __end_of_getParFlags:
 22536                           	callstack 0
 22537                           
 22538 ;; *************** function _parseCbusEvent *****************
 22539 ;; Defined at:
 22540 ;;		line 800 in file "../../github/CBUSlib/events.c"
 22541 ;; Parameters:    Size  Location     Type
 22542 ;;  msg             2   59[BANK0 ] PTR unsigned char 
 22543 ;;		 -> checkCBUS@msg(20), 
 22544 ;; Auto vars:     Size  Location     Type
 22545 ;;  nodeNumber      2   65[BANK0 ] unsigned int 
 22546 ;;  eventNumber     2   63[BANK0 ] unsigned int 
 22547 ;;  tableIndex      1   62[BANK0 ] unsigned char 
 22548 ;; Return value:  Size  Location     Type
 22549 ;;                  1    wreg      unsigned char 
 22550 ;; Registers used:
 22551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22552 ;; Tracked objects:
 22553 ;;		On entry : 3F/0
 22554 ;;		On exit  : 3F/0
 22555 ;;		Unchanged: 0/0
 22556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22558 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22560 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22561 ;;Total ram usage:        8 bytes
 22562 ;; Hardware stack levels used: 1
 22563 ;; Hardware stack levels required when called: 16
 22564 ;; This function calls:
 22565 ;;		_findEvent
 22566 ;;		_processEvent
 22567 ;; This function is called by:
 22568 ;;		_parseCBUSMsg
 22569 ;; This function uses a non-reentrant model
 22570 ;;
 22571                           
 22572                           	psect	text101
 22573  008184                     __ptext101:
 22574                           	callstack 0
 22575  008184                     _parseCbusEvent:
 22576                           	callstack 12
 22577                           
 22578                           ; BSR set to: 0
 22579                           ;events.c: 801: WORD nodeNumber;;events.c: 802: WORD eventNumber;;events.c: 803: unsigne
      +                          d char tableIndex;;events.c: 805: if (msg[d0] & 0b00001000) {
 22580                           
 22581                           ; BSR set to: 0
 22582                           ;incstack = 0
 22583  008184  EE20 F006          	lfsr	2,6
 22584  008188  519B               	movf	parseCbusEvent@msg& (0+255),w,b
 22585  00818A  26D9               	addwf	fsr2l,f,c
 22586  00818C  519C               	movf	(parseCbusEvent@msg+1)& (0+255),w,b
 22587  00818E  22DA               	addwfc	fsr2h,f,c
 22588  008190  A6DF               	btfss	indf2,3,c
 22589  008192  D005               	goto	l20169
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;events.c: 806: nodeNumber = 0;
 22593  008194  0E00               	movlw	0
 22594  008196  6FA2               	movwf	(parseCbusEvent@nodeNumber+1)& (0+255),b
 22595  008198  0E00               	movlw	0
 22596  00819A  6FA1               	movwf	parseCbusEvent@nodeNumber& (0+255),b
 22597                           
 22598                           ;events.c: 807: } else {
 22599  00819C  D018               	goto	l20175
 22600  00819E                     l20169:
 22601                           
 22602                           ; BSR set to: 0
 22603                           ;events.c: 808: nodeNumber = msg[d1];
 22604  00819E  EE20 F007          	lfsr	2,7
 22605  0081A2  519B               	movf	parseCbusEvent@msg& (0+255),w,b
 22606  0081A4  26D9               	addwf	fsr2l,f,c
 22607  0081A6  519C               	movf	(parseCbusEvent@msg+1)& (0+255),w,b
 22608  0081A8  22DA               	addwfc	fsr2h,f,c
 22609  0081AA  50DF               	movf	indf2,w,c
 22610  0081AC  6F9D               	movwf	??_parseCbusEvent& (0+255),b
 22611  0081AE  519D               	movf	??_parseCbusEvent& (0+255),w,b
 22612  0081B0  6FA1               	movwf	parseCbusEvent@nodeNumber& (0+255),b
 22613  0081B2  6BA2               	clrf	(parseCbusEvent@nodeNumber+1)& (0+255),b
 22614                           
 22615                           ; BSR set to: 0
 22616                           ;events.c: 809: nodeNumber = nodeNumber << 8;
 22617  0081B4  51A1               	movf	parseCbusEvent@nodeNumber& (0+255),w,b
 22618  0081B6  6FA2               	movwf	(parseCbusEvent@nodeNumber+1)& (0+255),b
 22619  0081B8  6BA1               	clrf	parseCbusEvent@nodeNumber& (0+255),b
 22620                           
 22621                           ; BSR set to: 0
 22622                           ;events.c: 810: nodeNumber |= msg[d2];
 22623  0081BA  EE20 F008          	lfsr	2,8
 22624  0081BE  519B               	movf	parseCbusEvent@msg& (0+255),w,b
 22625  0081C0  26D9               	addwf	fsr2l,f,c
 22626  0081C2  519C               	movf	(parseCbusEvent@msg+1)& (0+255),w,b
 22627  0081C4  22DA               	addwfc	fsr2h,f,c
 22628  0081C6  50DF               	movf	indf2,w,c
 22629  0081C8  6F9D               	movwf	??_parseCbusEvent& (0+255),b
 22630  0081CA  519D               	movf	??_parseCbusEvent& (0+255),w,b
 22631  0081CC  13A1               	iorwf	parseCbusEvent@nodeNumber& (0+255),f,b
 22632  0081CE                     l20175:
 22633                           
 22634                           ; BSR set to: 0
 22635                           ;events.c: 811: };events.c: 813: eventNumber = msg[d3];
 22636  0081CE  EE20 F009          	lfsr	2,9
 22637  0081D2  519B               	movf	parseCbusEvent@msg& (0+255),w,b
 22638  0081D4  26D9               	addwf	fsr2l,f,c
 22639  0081D6  519C               	movf	(parseCbusEvent@msg+1)& (0+255),w,b
 22640  0081D8  22DA               	addwfc	fsr2h,f,c
 22641  0081DA  50DF               	movf	indf2,w,c
 22642  0081DC  6F9D               	movwf	??_parseCbusEvent& (0+255),b
 22643  0081DE  519D               	movf	??_parseCbusEvent& (0+255),w,b
 22644  0081E0  6F9F               	movwf	parseCbusEvent@eventNumber& (0+255),b
 22645  0081E2  6BA0               	clrf	(parseCbusEvent@eventNumber+1)& (0+255),b
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;events.c: 814: eventNumber = eventNumber << 8;
 22649  0081E4  519F               	movf	parseCbusEvent@eventNumber& (0+255),w,b
 22650  0081E6  6FA0               	movwf	(parseCbusEvent@eventNumber+1)& (0+255),b
 22651  0081E8  6B9F               	clrf	parseCbusEvent@eventNumber& (0+255),b
 22652                           
 22653                           ;events.c: 815: eventNumber |= msg[d4];
 22654  0081EA  EE20 F00A          	lfsr	2,10
 22655  0081EE  519B               	movf	parseCbusEvent@msg& (0+255),w,b
 22656  0081F0  26D9               	addwf	fsr2l,f,c
 22657  0081F2  519C               	movf	(parseCbusEvent@msg+1)& (0+255),w,b
 22658  0081F4  22DA               	addwfc	fsr2h,f,c
 22659  0081F6  50DF               	movf	indf2,w,c
 22660  0081F8  6F9D               	movwf	??_parseCbusEvent& (0+255),b
 22661  0081FA  519D               	movf	??_parseCbusEvent& (0+255),w,b
 22662  0081FC  139F               	iorwf	parseCbusEvent@eventNumber& (0+255),f,b
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;events.c: 816: tableIndex = findEvent(nodeNumber, eventNumber);
 22666  0081FE  C0A1  F08E         	movff	parseCbusEvent@nodeNumber,findEvent@nodeNumber
 22667  008202  C0A2  F08F         	movff	parseCbusEvent@nodeNumber+1,findEvent@nodeNumber+1
 22668  008206  C09F  F090         	movff	parseCbusEvent@eventNumber,findEvent@eventNumber
 22669  00820A  C0A0  F091         	movff	parseCbusEvent@eventNumber+1,findEvent@eventNumber+1
 22670  00820E  ECD6  F044         	call	_findEvent	;wreg free
 22671  008212  6F9E               	movwf	parseCbusEvent@tableIndex& (0+255),b
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;events.c: 817: if (tableIndex != 0xff) {
 22675  008214  299E               	incf	parseCbusEvent@tableIndex& (0+255),w,b
 22676  008216  B4D8               	btfsc	status,2,c
 22677  008218  D009               	goto	l20189
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;events.c: 818: processEvent(tableIndex, msg);
 22681  00821A  C09B  F088         	movff	parseCbusEvent@msg,processEvent@msg
 22682  00821E  C09C  F089         	movff	parseCbusEvent@msg+1,processEvent@msg+1
 22683  008222  519E               	movf	parseCbusEvent@tableIndex& (0+255),w,b
 22684  008224  ECB3  F029         	call	_processEvent
 22685                           
 22686                           ; BSR set to: 0
 22687                           ;events.c: 819: return 1;
 22688  008228  0E01               	movlw	1
 22689  00822A  0012               	return	
 22690  00822C                     l20189:
 22691                           
 22692                           ; BSR set to: 0
 22693                           ;events.c: 820: };events.c: 821: return 0;
 22694  00822C  0E00               	movlw	0
 22695                           
 22696                           ; BSR set to: 0
 22697  00822E  0012               	return		;funcret
 22698  008230                     __end_of_parseCbusEvent:
 22699                           	callstack 0
 22700                           
 22701 ;; *************** function _processEvent *****************
 22702 ;; Defined at:
 22703 ;;		line 223 in file "../../github/CANMIOfirmware/mioEvents.c"
 22704 ;; Parameters:    Size  Location     Type
 22705 ;;  tableIndex      1    wreg     unsigned char 
 22706 ;;  msg             2   40[BANK0 ] PTR unsigned char 
 22707 ;;		 -> checkCBUS@msg(20), 
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;  tableIndex      1   44[BANK0 ] unsigned char 
 22710 ;;  nextSimultan    1   48[BANK0 ] unsigned char 
 22711 ;;  firstAction     1    0        unsigned char 
 22712 ;;  nextAction      2   46[BANK0 ] int 
 22713 ;;  action          2   53[BANK0 ] int 
 22714 ;;  e               1   52[BANK0 ] unsigned char 
 22715 ;;  ca              1   51[BANK0 ] unsigned char 
 22716 ;;  masked_actio    1   50[BANK0 ] unsigned char 
 22717 ;;  io              1   49[BANK0 ] unsigned char 
 22718 ;;  opc             1   45[BANK0 ] unsigned char 
 22719 ;; Return value:  Size  Location     Type
 22720 ;;                  1    wreg      void 
 22721 ;; Registers used:
 22722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22723 ;; Tracked objects:
 22724 ;;		On entry : 3F/0
 22725 ;;		On exit  : 3F/0
 22726 ;;		Unchanged: 0/0
 22727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22729 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22731 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22732 ;;Total ram usage:       15 bytes
 22733 ;; Hardware stack levels used: 1
 22734 ;; Hardware stack levels required when called: 15
 22735 ;; This function calls:
 22736 ;;		___lwdiv
 22737 ;;		___lwmod
 22738 ;;		_getEVs
 22739 ;;		_pushAction
 22740 ;;		_setExpeditedActions
 22741 ;;		_setNormalActions
 22742 ;; This function is called by:
 22743 ;;		_parseCbusEvent
 22744 ;; This function uses a non-reentrant model
 22745 ;;
 22746                           
 22747                           	psect	text102
 22748  005366                     __ptext102:
 22749                           	callstack 0
 22750  005366                     _processEvent:
 22751                           	callstack 12
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;incstack = 0
 22755                           ;processEvent@tableIndex stored from wreg
 22756  005366  6F8C               	movwf	processEvent@tableIndex& (0+255),b
 22757  005368  0100               	movlb	0	; () banked
 22758  00536A  518C               	movf	processEvent@tableIndex& (0+255),w,b
 22759  00536C  EC7A  F03B         	call	_getEVs
 22760                           
 22761                           ; BSR set to: 0
 22762                           ;mioEvents.c: 236: opc=msg[d0];
 22763  005370  EE20 F006          	lfsr	2,6
 22764  005374  5188               	movf	processEvent@msg& (0+255),w,b
 22765  005376  26D9               	addwf	fsr2l,f,c
 22766  005378  5189               	movf	(processEvent@msg+1)& (0+255),w,b
 22767  00537A  22DA               	addwfc	fsr2h,f,c
 22768  00537C  50DF               	movf	indf2,w,c
 22769  00537E  6F8D               	movwf	processEvent@opc& (0+255),b
 22770                           
 22771                           ; BSR set to: 0
 22772                           ;mioEvents.c: 238: if ( ! (opc&0b00000001)) {
 22773  005380  B18D               	btfsc	processEvent@opc& (0+255),0,b
 22774  005382  D08B               	goto	l753
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;mioEvents.c: 242: for (e=1; e<20U ;e++) {
 22778  005384  0E01               	movlw	1
 22779  005386  6F94               	movwf	processEvent@e& (0+255),b
 22780  005388                     l19333:
 22781                           
 22782                           ; BSR set to: 0
 22783                           ;mioEvents.c: 243: action = evs[e];
 22784  005388  0E40               	movlw	low _evs
 22785  00538A  2594               	addwf	processEvent@e& (0+255),w,b
 22786  00538C  6ED9               	movwf	fsr2l,c
 22787  00538E  6ADA               	clrf	fsr2h,c
 22788  005390  0E02               	movlw	high _evs
 22789  005392  22DA               	addwfc	fsr2h,f,c
 22790  005394  50DF               	movf	indf2,w,c
 22791  005396  6F8A               	movwf	??_processEvent& (0+255),b
 22792  005398  518A               	movf	??_processEvent& (0+255),w,b
 22793  00539A  6F95               	movwf	processEvent@action& (0+255),b
 22794  00539C  6B96               	clrf	(processEvent@action+1)& (0+255),b
 22795                           
 22796                           ; BSR set to: 0
 22797                           ;mioEvents.c: 244: if (action != 0) {
 22798  00539E  5195               	movf	processEvent@action& (0+255),w,b
 22799  0053A0  1196               	iorwf	(processEvent@action+1)& (0+255),w,b
 22800  0053A2  B4D8               	btfsc	status,2,c
 22801  0053A4  D075               	goto	l757
 22802                           
 22803                           ; BSR set to: 0
 22804                           ;mioEvents.c: 246: masked_action = (unsigned char)action&0x7FU;
 22805  0053A6  5195               	movf	processEvent@action& (0+255),w,b
 22806  0053A8  0B7F               	andlw	127
 22807  0053AA  6F92               	movwf	processEvent@masked_action& (0+255),b
 22808                           
 22809                           ;mioEvents.c: 247: if ((masked_action) <= (8U + 16U * 5U)) {
 22810  0053AC  0E59               	movlw	89
 22811  0053AE  6192               	cpfslt	processEvent@masked_action& (0+255),b
 22812  0053B0  D06F               	goto	l757
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;mioEvents.c: 249: if ((masked_action) == 7U) {
 22816  0053B2  0E07               	movlw	7
 22817  0053B4  1992               	xorwf	processEvent@masked_action& (0+255),w,b
 22818  0053B6  B4D8               	btfsc	status,2,c
 22819  0053B8  0012               	return	
 22820                           
 22821                           ; BSR set to: 0
 22822                           ;mioEvents.c: 251: };mioEvents.c: 252: if ((masked_action) < 8U) {
 22823  0053BA  0E08               	movlw	8
 22824  0053BC  6192               	cpfslt	processEvent@masked_action& (0+255),b
 22825  0053BE  D004               	goto	l19347
 22826                           
 22827                           ; BSR set to: 0
 22828                           ;mioEvents.c: 253: pushAction((unsigned char)action);
 22829  0053C0  5195               	movf	processEvent@action& (0+255),w,b
 22830  0053C2  ECC8  F050         	call	_pushAction
 22831                           
 22832                           ;mioEvents.c: 254: } else {
 22833  0053C6  D064               	goto	l757
 22834  0053C8                     l19347:
 22835                           
 22836                           ; BSR set to: 0
 22837                           ;mioEvents.c: 255: io = (((masked_action)-8U)/5U);
 22838  0053C8  0EF8               	movlw	248
 22839  0053CA  2592               	addwf	processEvent@masked_action& (0+255),w,b
 22840  0053CC  6F71               	movwf	___lwdiv@dividend& (0+255),b
 22841  0053CE  6B72               	clrf	(___lwdiv@dividend+1)& (0+255),b
 22842  0053D0  0EFF               	movlw	255
 22843  0053D2  2372               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 22844  0053D4  0E00               	movlw	0
 22845  0053D6  6F74               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22846  0053D8  0E05               	movlw	5
 22847  0053DA  6F73               	movwf	___lwdiv@divisor& (0+255),b
 22848  0053DC  ECC7  F04C         	call	___lwdiv	;wreg free
 22849  0053E0  5171               	movf	?___lwdiv& (0+255),w,b
 22850  0053E2  6F91               	movwf	processEvent@io& (0+255),b
 22851                           
 22852                           ;mioEvents.c: 256: ca = (((masked_action)-8U)%5U);
 22853  0053E4  0EF8               	movlw	248
 22854  0053E6  2592               	addwf	processEvent@masked_action& (0+255),w,b
 22855  0053E8  6F71               	movwf	___lwmod@dividend& (0+255),b
 22856  0053EA  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
 22857  0053EC  0EFF               	movlw	255
 22858  0053EE  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
 22859  0053F0  0E00               	movlw	0
 22860  0053F2  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
 22861  0053F4  0E05               	movlw	5
 22862  0053F6  6F73               	movwf	___lwmod@divisor& (0+255),b
 22863  0053F8  ECCA  F04E         	call	___lwmod	;wreg free
 22864  0053FC  5171               	movf	?___lwmod& (0+255),w,b
 22865  0053FE  6F93               	movwf	processEvent@ca& (0+255),b
 22866                           
 22867                           ;mioEvents.c: 257: switch (NV->io[io].type) {
 22868  005400  D02A               	goto	l19369
 22869  005402                     l19349:
 22870                           
 22871                           ; BSR set to: 0
 22872                           ;mioEvents.c: 259: if (NV->io[io].flags & 0x80U) {
 22873  005402  5191               	movf	processEvent@io& (0+255),w,b
 22874  005404  0D07               	mullw	7
 22875  005406  C0EC  F08A         	movff	_NV,??_processEvent
 22876  00540A  C0ED  F08B         	movff	_NV+1,??_processEvent+1
 22877  00540E  50F3               	movf	243,w,c
 22878  005410  278A               	addwf	??_processEvent& (0+255),f,b
 22879  005412  50F4               	movf	244,w,c
 22880  005414  238B               	addwfc	(??_processEvent+1)& (0+255),f,b
 22881  005416  0E11               	movlw	17
 22882  005418  258A               	addwf	??_processEvent& (0+255),w,b
 22883  00541A  6ED9               	movwf	fsr2l,c
 22884  00541C  0E00               	movlw	0
 22885  00541E  218B               	addwfc	(??_processEvent+1)& (0+255),w,b
 22886  005420  6EDA               	movwf	fsr2h,c
 22887  005422  BEDF               	btfsc	indf2,7,c
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;mioEvents.c: 260: setExpeditedActions();
 22891  005424  EC83  F053         	call	_setExpeditedActions	;wreg free
 22892  005428                     l19353:
 22893                           
 22894                           ; BSR set to: 0
 22895                           ;mioEvents.c: 264: case 3U:;mioEvents.c: 265: if (ca == 0U) {
 22896  005428  5193               	movf	processEvent@ca& (0+255),w,b
 22897  00542A  A4D8               	btfss	status,2,c
 22898  00542C  D002               	goto	l19357
 22899                           
 22900                           ; BSR set to: 0
 22901                           ;mioEvents.c: 267: action++;
 22902  00542E  4B95               	infsnz	processEvent@action& (0+255),f,b
 22903  005430  2B96               	incf	(processEvent@action+1)& (0+255),f,b
 22904  005432                     l19357:
 22905                           
 22906                           ; BSR set to: 0
 22907                           ;mioEvents.c: 268: };mioEvents.c: 269: if (ca == 4U) {
 22908  005432  0E04               	movlw	4
 22909  005434  1993               	xorwf	processEvent@ca& (0+255),w,b
 22910  005436  A4D8               	btfss	status,2,c
 22911  005438  D004               	goto	l19361
 22912                           
 22913                           ; BSR set to: 0
 22914                           ;mioEvents.c: 271: action-=2;
 22915  00543A  0EFE               	movlw	254
 22916  00543C  2795               	addwf	processEvent@action& (0+255),f,b
 22917  00543E  0EFF               	movlw	255
 22918  005440  2396               	addwfc	(processEvent@action+1)& (0+255),f,b
 22919  005442                     l19361:
 22920                           
 22921                           ; BSR set to: 0
 22922                           ;mioEvents.c: 272: };mioEvents.c: 273: pushAction((unsigned char)action);
 22923  005442  5195               	movf	processEvent@action& (0+255),w,b
 22924  005444  ECC8  F050         	call	_pushAction
 22925                           
 22926                           ; BSR set to: 0
 22927                           ;mioEvents.c: 274: setNormalActions();
 22928  005448  EC80  F053         	call	_setNormalActions	;wreg free
 22929                           
 22930                           ;mioEvents.c: 275: break;
 22931  00544C  D021               	goto	l757
 22932  00544E                     l19365:
 22933                           
 22934                           ; BSR set to: 0
 22935                           ;mioEvents.c: 277: pushAction((unsigned char)action);
 22936  00544E  5195               	movf	processEvent@action& (0+255),w,b
 22937  005450  ECC8  F050         	call	_pushAction
 22938                           
 22939                           ;mioEvents.c: 278: break;
 22940  005454  D01D               	goto	l757
 22941  005456                     l19369:
 22942                           
 22943                           ; BSR set to: 0
 22944  005456  5191               	movf	processEvent@io& (0+255),w,b
 22945  005458  0D07               	mullw	7
 22946  00545A  C0EC  F08A         	movff	_NV,??_processEvent
 22947  00545E  C0ED  F08B         	movff	_NV+1,??_processEvent+1
 22948  005462  50F3               	movf	243,w,c
 22949  005464  278A               	addwf	??_processEvent& (0+255),f,b
 22950  005466  50F4               	movf	244,w,c
 22951  005468  238B               	addwfc	(??_processEvent+1)& (0+255),f,b
 22952  00546A  0E10               	movlw	16
 22953  00546C  258A               	addwf	??_processEvent& (0+255),w,b
 22954  00546E  6ED9               	movwf	fsr2l,c
 22955  005470  0E00               	movlw	0
 22956  005472  218B               	addwfc	(??_processEvent+1)& (0+255),w,b
 22957  005474  6EDA               	movwf	fsr2h,c
 22958  005476  50DF               	movf	indf2,w,c
 22959                           
 22960                           ; Switch size 1, requested type "simple"
 22961                           ; Number of cases is 4, Range of values is 1 to 4
 22962                           ; switch strategies available:
 22963                           ; Name         Instructions Cycles
 22964                           ; simple_byte           13     7 (average)
 22965                           ;	Chosen strategy is simple_byte
 22966  005478  0A01               	xorlw	1	; case 1
 22967  00547A  B4D8               	btfsc	status,2,c
 22968  00547C  D7C2               	goto	l19349
 22969  00547E  0A03               	xorlw	3	; case 2
 22970  005480  B4D8               	btfsc	status,2,c
 22971  005482  D7D2               	goto	l19353
 22972  005484  0A01               	xorlw	1	; case 3
 22973  005486  B4D8               	btfsc	status,2,c
 22974  005488  D7CF               	goto	l19353
 22975  00548A  0A07               	xorlw	7	; case 4
 22976  00548C  B4D8               	btfsc	status,2,c
 22977  00548E  D7DF               	goto	l19365
 22978  005490                     l757:
 22979                           
 22980                           ; BSR set to: 0
 22981                           
 22982                           ; BSR set to: 0
 22983  005490  2B94               	incf	processEvent@e& (0+255),f,b
 22984                           
 22985                           ; BSR set to: 0
 22986  005492  0E13               	movlw	19
 22987  005494  6594               	cpfsgt	processEvent@e& (0+255),b
 22988  005496  D778               	goto	l19333
 22989  005498  0012               	return	
 22990  00549A                     l753:
 22991                           
 22992                           ; BSR set to: 0
 22993                           ;mioEvents.c: 290: int nextAction = evs[20U-1];
 22994  00549A  C253  F08E         	movff	_evs+19,processEvent@nextAction
 22995  00549E  6B8F               	clrf	(processEvent@nextAction+1)& (0+255),b
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;mioEvents.c: 291: for (e=20U-1; e>=1 ;e--) {
 22999  0054A0  0E13               	movlw	19
 23000  0054A2  6F94               	movwf	processEvent@e& (0+255),b
 23001  0054A4                     l19379:
 23002                           
 23003                           ; BSR set to: 0
 23004                           ;mioEvents.c: 294: action = nextAction;
 23005                           
 23006                           ; BSR set to: 0
 23007  0054A4  C08E  F095         	movff	processEvent@nextAction,processEvent@action
 23008  0054A8  C08F  F096         	movff	processEvent@nextAction+1,processEvent@action+1
 23009                           
 23010                           ; BSR set to: 0
 23011                           ;mioEvents.c: 298: if (e > 1) {
 23012  0054AC  0E01               	movlw	1
 23013  0054AE  6594               	cpfsgt	processEvent@e& (0+255),b
 23014  0054B0  D00E               	goto	l19389
 23015                           
 23016                           ; BSR set to: 0
 23017                           ;mioEvents.c: 299: nextAction = evs[e-1U];
 23018  0054B2  0E3F               	movlw	low (_evs+65535)
 23019  0054B4  2594               	addwf	processEvent@e& (0+255),w,b
 23020  0054B6  6ED9               	movwf	fsr2l,c
 23021  0054B8  6ADA               	clrf	fsr2h,c
 23022  0054BA  0E02               	movlw	high (_evs+65535)
 23023  0054BC  22DA               	addwfc	fsr2h,f,c
 23024  0054BE  50DF               	movf	indf2,w,c
 23025  0054C0  6F8A               	movwf	??_processEvent& (0+255),b
 23026  0054C2  518A               	movf	??_processEvent& (0+255),w,b
 23027  0054C4  6F8E               	movwf	processEvent@nextAction& (0+255),b
 23028  0054C6  6B8F               	clrf	(processEvent@nextAction+1)& (0+255),b
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;mioEvents.c: 300: nextSimultaneous = (unsigned char)nextAction & 0x80U;
 23032  0054C8  518E               	movf	processEvent@nextAction& (0+255),w,b
 23033  0054CA  0B80               	andlw	128
 23034  0054CC  D001               	goto	L21
 23035  0054CE                     l19389:
 23036                           
 23037                           ; BSR set to: 0
 23038                           ;mioEvents.c: 302: nextSimultaneous = (unsigned char)firstAction & 0x80U;
 23039  0054CE  0E00               	movlw	0
 23040  0054D0                     L21:
 23041  0054D0  6F90               	movwf	processEvent@nextSimultaneous& (0+255),b
 23042                           
 23043                           ; BSR set to: 0
 23044                           ;mioEvents.c: 303: };mioEvents.c: 304: if (action != 0) {
 23045  0054D2  5195               	movf	processEvent@action& (0+255),w,b
 23046  0054D4  1196               	iorwf	(processEvent@action+1)& (0+255),w,b
 23047  0054D6  B4D8               	btfsc	status,2,c
 23048  0054D8  D085               	goto	l778
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;mioEvents.c: 308: };mioEvents.c: 309: action &= 0x7FU;
 23052                           
 23053                           ; BSR set to: 0
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;mioEvents.c: 306: if (firstAction == 0) {
 23057  0054DA  0E7F               	movlw	127
 23058  0054DC  1795               	andwf	processEvent@action& (0+255),f,b
 23059  0054DE  0E00               	movlw	0
 23060  0054E0  1796               	andwf	(processEvent@action+1)& (0+255),f,b
 23061                           
 23062                           ;mioEvents.c: 310: if ((unsigned char)action <= (8U + 16U * 5U)) {
 23063  0054E2  0E59               	movlw	89
 23064  0054E4  6195               	cpfslt	processEvent@action& (0+255),b
 23065  0054E6  D07E               	goto	l778
 23066                           
 23067                           ; BSR set to: 0
 23068                           ;mioEvents.c: 312: if ((unsigned char)action == 7U) {
 23069  0054E8  0E07               	movlw	7
 23070  0054EA  1995               	xorwf	processEvent@action& (0+255),w,b
 23071  0054EC  B4D8               	btfsc	status,2,c
 23072  0054EE  0012               	return	
 23073                           
 23074                           ; BSR set to: 0
 23075                           ;mioEvents.c: 314: };mioEvents.c: 315: if (((unsigned char)action < 8U) && ((unsigned ch
      +                          ar)action != 1U)) {
 23076  0054F0  0E08               	movlw	8
 23077  0054F2  6195               	cpfslt	processEvent@action& (0+255),b
 23078  0054F4  D008               	goto	l19407
 23079                           
 23080                           ; BSR set to: 0
 23081  0054F6  0595               	decf	processEvent@action& (0+255),w,b
 23082  0054F8  B4D8               	btfsc	status,2,c
 23083  0054FA  D005               	goto	l19407
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;mioEvents.c: 316: pushAction((unsigned char)((unsigned char)action|nextSimultaneous));
 23087  0054FC  5195               	movf	processEvent@action& (0+255),w,b
 23088  0054FE  1190               	iorwf	processEvent@nextSimultaneous& (0+255),w,b
 23089  005500  ECC8  F050         	call	_pushAction
 23090                           
 23091                           ;mioEvents.c: 317: } else {
 23092  005504  D06F               	goto	l778
 23093  005506                     l19407:
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;mioEvents.c: 318: io = ((((unsigned char)action)-8U)/5U);
 23097  005506  0EF8               	movlw	248
 23098  005508  2595               	addwf	processEvent@action& (0+255),w,b
 23099  00550A  6F71               	movwf	___lwdiv@dividend& (0+255),b
 23100  00550C  6B72               	clrf	(___lwdiv@dividend+1)& (0+255),b
 23101  00550E  0EFF               	movlw	255
 23102  005510  2372               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 23103  005512  0E00               	movlw	0
 23104  005514  6F74               	movwf	(___lwdiv@divisor+1)& (0+255),b
 23105  005516  0E05               	movlw	5
 23106  005518  6F73               	movwf	___lwdiv@divisor& (0+255),b
 23107  00551A  ECC7  F04C         	call	___lwdiv	;wreg free
 23108  00551E  5171               	movf	?___lwdiv& (0+255),w,b
 23109  005520  6F91               	movwf	processEvent@io& (0+255),b
 23110                           
 23111                           ;mioEvents.c: 319: ca = ((((unsigned char)action)-8U)%5U);
 23112  005522  0EF8               	movlw	248
 23113  005524  2595               	addwf	processEvent@action& (0+255),w,b
 23114  005526  6F71               	movwf	___lwmod@dividend& (0+255),b
 23115  005528  6B72               	clrf	(___lwmod@dividend+1)& (0+255),b
 23116  00552A  0EFF               	movlw	255
 23117  00552C  2372               	addwfc	(___lwmod@dividend+1)& (0+255),f,b
 23118  00552E  0E00               	movlw	0
 23119  005530  6F74               	movwf	(___lwmod@divisor+1)& (0+255),b
 23120  005532  0E05               	movlw	5
 23121  005534  6F73               	movwf	___lwmod@divisor& (0+255),b
 23122  005536  ECCA  F04E         	call	___lwmod	;wreg free
 23123  00553A  5171               	movf	?___lwmod& (0+255),w,b
 23124  00553C  6F93               	movwf	processEvent@ca& (0+255),b
 23125                           
 23126                           ;mioEvents.c: 320: switch (NV->io[io].type) {
 23127  00553E  D035               	goto	l19431
 23128  005540                     l19409:
 23129                           
 23130                           ; BSR set to: 0
 23131                           ;mioEvents.c: 322: if (NV->io[io].flags & 0x80U) {
 23132  005540  5191               	movf	processEvent@io& (0+255),w,b
 23133  005542  0D07               	mullw	7
 23134  005544  C0EC  F08A         	movff	_NV,??_processEvent
 23135  005548  C0ED  F08B         	movff	_NV+1,??_processEvent+1
 23136  00554C  50F3               	movf	243,w,c
 23137  00554E  278A               	addwf	??_processEvent& (0+255),f,b
 23138  005550  50F4               	movf	244,w,c
 23139  005552  238B               	addwfc	(??_processEvent+1)& (0+255),f,b
 23140  005554  0E11               	movlw	17
 23141  005556  258A               	addwf	??_processEvent& (0+255),w,b
 23142  005558  6ED9               	movwf	fsr2l,c
 23143  00555A  0E00               	movlw	0
 23144  00555C  218B               	addwfc	(??_processEvent+1)& (0+255),w,b
 23145  00555E  6EDA               	movwf	fsr2h,c
 23146  005560  BEDF               	btfsc	indf2,7,c
 23147                           
 23148                           ; BSR set to: 0
 23149                           ;mioEvents.c: 323: setExpeditedActions();
 23150  005562  EC83  F053         	call	_setExpeditedActions	;wreg free
 23151                           
 23152                           ; BSR set to: 0
 23153                           ;mioEvents.c: 324: };mioEvents.c: 325: if (ca == 3U) {
 23154  005566  0E03               	movlw	3
 23155  005568  1993               	xorwf	processEvent@ca& (0+255),w,b
 23156  00556A  A4D8               	btfss	status,2,c
 23157  00556C  D003               	goto	l19417
 23158                           
 23159                           ; BSR set to: 0
 23160                           ;mioEvents.c: 327: action--;
 23161  00556E  0795               	decf	processEvent@action& (0+255),f,b
 23162  005570  A0D8               	btfss	status,0,c
 23163  005572  0796               	decf	(processEvent@action+1)& (0+255),f,b
 23164  005574                     l19417:
 23165                           
 23166                           ; BSR set to: 0
 23167                           ;mioEvents.c: 331: case 3U:;mioEvents.c: 332: if (ca == 0U) {
 23168  005574  5193               	movf	processEvent@ca& (0+255),w,b
 23169  005576  A4D8               	btfss	status,2,c
 23170  005578  D004               	goto	l788
 23171                           
 23172                           ; BSR set to: 0
 23173                           ;mioEvents.c: 334: action += 2;
 23174  00557A  0E02               	movlw	2
 23175  00557C  2795               	addwf	processEvent@action& (0+255),f,b
 23176  00557E  0E00               	movlw	0
 23177  005580  2396               	addwfc	(processEvent@action+1)& (0+255),f,b
 23178  005582                     l788:
 23179                           
 23180                           ; BSR set to: 0
 23181                           ;mioEvents.c: 335: };mioEvents.c: 336: if (ca == 4U) {
 23182  005582  0E04               	movlw	4
 23183  005584  1993               	xorwf	processEvent@ca& (0+255),w,b
 23184  005586  A4D8               	btfss	status,2,c
 23185  005588  D004               	goto	l19423
 23186                           
 23187                           ; BSR set to: 0
 23188                           ;mioEvents.c: 338: action -= 3;
 23189  00558A  0EFD               	movlw	253
 23190  00558C  2795               	addwf	processEvent@action& (0+255),f,b
 23191  00558E  0EFF               	movlw	255
 23192  005590  2396               	addwfc	(processEvent@action+1)& (0+255),f,b
 23193  005592                     l19423:
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;mioEvents.c: 339: };mioEvents.c: 340: pushAction((unsigned char)((unsigned char)action|
      +                          nextSimultaneous));
 23197  005592  5195               	movf	processEvent@action& (0+255),w,b
 23198  005594  1190               	iorwf	processEvent@nextSimultaneous& (0+255),w,b
 23199  005596  ECC8  F050         	call	_pushAction
 23200                           
 23201                           ; BSR set to: 0
 23202                           ;mioEvents.c: 341: setNormalActions();
 23203  00559A  EC80  F053         	call	_setNormalActions	;wreg free
 23204                           
 23205                           ;mioEvents.c: 342: break;
 23206  00559E  D022               	goto	l778
 23207  0055A0                     l19427:
 23208                           
 23209                           ; BSR set to: 0
 23210                           ;mioEvents.c: 344: pushAction((unsigned char)((unsigned char)action|nextSimultaneous));
 23211  0055A0  5195               	movf	processEvent@action& (0+255),w,b
 23212  0055A2  1190               	iorwf	processEvent@nextSimultaneous& (0+255),w,b
 23213  0055A4  ECC8  F050         	call	_pushAction
 23214                           
 23215                           ;mioEvents.c: 345: break;
 23216  0055A8  D01D               	goto	l778
 23217  0055AA                     l19431:
 23218                           
 23219                           ; BSR set to: 0
 23220  0055AA  5191               	movf	processEvent@io& (0+255),w,b
 23221  0055AC  0D07               	mullw	7
 23222  0055AE  C0EC  F08A         	movff	_NV,??_processEvent
 23223  0055B2  C0ED  F08B         	movff	_NV+1,??_processEvent+1
 23224  0055B6  50F3               	movf	243,w,c
 23225  0055B8  278A               	addwf	??_processEvent& (0+255),f,b
 23226  0055BA  50F4               	movf	244,w,c
 23227  0055BC  238B               	addwfc	(??_processEvent+1)& (0+255),f,b
 23228  0055BE  0E10               	movlw	16
 23229  0055C0  258A               	addwf	??_processEvent& (0+255),w,b
 23230  0055C2  6ED9               	movwf	fsr2l,c
 23231  0055C4  0E00               	movlw	0
 23232  0055C6  218B               	addwfc	(??_processEvent+1)& (0+255),w,b
 23233  0055C8  6EDA               	movwf	fsr2h,c
 23234  0055CA  50DF               	movf	indf2,w,c
 23235                           
 23236                           ; Switch size 1, requested type "simple"
 23237                           ; Number of cases is 4, Range of values is 1 to 4
 23238                           ; switch strategies available:
 23239                           ; Name         Instructions Cycles
 23240                           ; simple_byte           13     7 (average)
 23241                           ;	Chosen strategy is simple_byte
 23242  0055CC  0A01               	xorlw	1	; case 1
 23243  0055CE  B4D8               	btfsc	status,2,c
 23244  0055D0  D7B7               	goto	l19409
 23245  0055D2  0A03               	xorlw	3	; case 2
 23246  0055D4  B4D8               	btfsc	status,2,c
 23247  0055D6  D7CE               	goto	l19417
 23248  0055D8  0A01               	xorlw	1	; case 3
 23249  0055DA  B4D8               	btfsc	status,2,c
 23250  0055DC  D7CB               	goto	l19417
 23251  0055DE  0A07               	xorlw	7	; case 4
 23252  0055E0  B4D8               	btfsc	status,2,c
 23253  0055E2  D7DE               	goto	l19427
 23254  0055E4                     l778:
 23255                           
 23256                           ; BSR set to: 0
 23257                           
 23258                           ; BSR set to: 0
 23259  0055E4  0794               	decf	processEvent@e& (0+255),f,b
 23260                           
 23261                           ; BSR set to: 0
 23262  0055E6  5194               	movf	processEvent@e& (0+255),w,b
 23263  0055E8  B4D8               	btfsc	status,2,c
 23264  0055EA  0012               	return	
 23265  0055EC  D75B               	goto	l19379
 23266  0055EE                     __end_of_processEvent:
 23267                           	callstack 0
 23268                           
 23269 ;; *************** function _setNormalActions *****************
 23270 ;; Defined at:
 23271 ;;		line 158 in file "../../github/CANMIOfirmware/actionQueue.c"
 23272 ;; Parameters:    Size  Location     Type
 23273 ;;		None
 23274 ;; Auto vars:     Size  Location     Type
 23275 ;;		None
 23276 ;; Return value:  Size  Location     Type
 23277 ;;                  1    wreg      void 
 23278 ;; Registers used:
 23279 ;;		wreg, status,2
 23280 ;; Tracked objects:
 23281 ;;		On entry : 3F/0
 23282 ;;		On exit  : 3F/0
 23283 ;;		Unchanged: 3F/0
 23284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23289 ;;Total ram usage:        0 bytes
 23290 ;; Hardware stack levels used: 1
 23291 ;; Hardware stack levels required when called: 8
 23292 ;; This function calls:
 23293 ;;		Nothing
 23294 ;; This function is called by:
 23295 ;;		_processEvent
 23296 ;; This function uses a non-reentrant model
 23297 ;;
 23298                           
 23299                           	psect	text103
 23300  00A700                     __ptext103:
 23301                           	callstack 0
 23302  00A700                     _setNormalActions:
 23303                           	callstack 18
 23304                           
 23305                           ; BSR set to: 0
 23306                           ;actionQueue.c: 159: expedited = 0;
 23307                           
 23308                           ; BSR set to: 0
 23309                           ;incstack = 0
 23310  00A700  0E00               	movlw	0
 23311  00A702  6E1B               	movwf	_expedited^0,c
 23312                           
 23313                           ; BSR set to: 0
 23314  00A704  0012               	return		;funcret
 23315  00A706                     __end_of_setNormalActions:
 23316                           	callstack 0
 23317                           
 23318 ;; *************** function _setExpeditedActions *****************
 23319 ;; Defined at:
 23320 ;;		line 151 in file "../../github/CANMIOfirmware/actionQueue.c"
 23321 ;; Parameters:    Size  Location     Type
 23322 ;;		None
 23323 ;; Auto vars:     Size  Location     Type
 23324 ;;		None
 23325 ;; Return value:  Size  Location     Type
 23326 ;;                  1    wreg      void 
 23327 ;; Registers used:
 23328 ;;		wreg, status,2
 23329 ;; Tracked objects:
 23330 ;;		On entry : 3F/0
 23331 ;;		On exit  : 3F/0
 23332 ;;		Unchanged: 3F/0
 23333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;Total ram usage:        0 bytes
 23339 ;; Hardware stack levels used: 1
 23340 ;; Hardware stack levels required when called: 8
 23341 ;; This function calls:
 23342 ;;		Nothing
 23343 ;; This function is called by:
 23344 ;;		_processEvent
 23345 ;; This function uses a non-reentrant model
 23346 ;;
 23347                           
 23348                           	psect	text104
 23349  00A706                     __ptext104:
 23350                           	callstack 0
 23351  00A706                     _setExpeditedActions:
 23352                           	callstack 18
 23353                           
 23354                           ; BSR set to: 0
 23355                           ;actionQueue.c: 152: expedited = 1;
 23356                           
 23357                           ; BSR set to: 0
 23358                           ;incstack = 0
 23359  00A706  0E01               	movlw	1
 23360  00A708  6E1B               	movwf	_expedited^0,c
 23361                           
 23362                           ; BSR set to: 0
 23363  00A70A  0012               	return		;funcret
 23364  00A70C                     __end_of_setExpeditedActions:
 23365                           	callstack 0
 23366                           
 23367 ;; *************** function _pushAction *****************
 23368 ;; Defined at:
 23369 ;;		line 77 in file "../../github/CANMIOfirmware/actionQueue.c"
 23370 ;; Parameters:    Size  Location     Type
 23371 ;;  a               1    wreg     unsigned char 
 23372 ;; Auto vars:     Size  Location     Type
 23373 ;;  a               1   28[BANK0 ] unsigned char 
 23374 ;; Return value:  Size  Location     Type
 23375 ;;                  1    wreg      unsigned char 
 23376 ;; Registers used:
 23377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23378 ;; Tracked objects:
 23379 ;;		On entry : 3F/0
 23380 ;;		On exit  : 3F/0
 23381 ;;		Unchanged: 0/0
 23382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23387 ;;Total ram usage:        1 bytes
 23388 ;; Hardware stack levels used: 1
 23389 ;; Hardware stack levels required when called: 9
 23390 ;; This function calls:
 23391 ;;		_push
 23392 ;; This function is called by:
 23393 ;;		_processEvent
 23394 ;; This function uses a non-reentrant model
 23395 ;;
 23396                           
 23397                           	psect	text105
 23398  00A190                     __ptext105:
 23399                           	callstack 0
 23400  00A190                     _pushAction:
 23401                           	callstack 17
 23402                           
 23403                           ; BSR set to: 0
 23404                           ;incstack = 0
 23405                           ;pushAction@a stored from wreg
 23406  00A190  6F7C               	movwf	pushAction@a& (0+255),b
 23407                           
 23408                           ;actionQueue.c: 78: if (expedited) {
 23409  00A192  501B               	movf	_expedited^0,w,c
 23410  00A194  B4D8               	btfsc	status,2,c
 23411  00A196  D00A               	goto	l18847
 23412                           
 23413                           ;actionQueue.c: 79: return push(&expeditedQueue, a);;	Return value of _pushAction is nev
      +                          er used
 23414  00A198  0EE3               	movlw	low _expeditedQueue
 23415  00A19A  0100               	movlb	0	; () banked
 23416  00A19C  6F71               	movwf	push@q& (0+255),b
 23417  00A19E  0E01               	movlw	high _expeditedQueue
 23418  00A1A0  6F72               	movwf	(push@q+1)& (0+255),b
 23419  00A1A2  C07C  F073         	movff	pushAction@a,push@a
 23420  00A1A6  ECBF  F03C         	call	_push	;wreg free
 23421  00A1AA  0012               	return	
 23422  00A1AC                     l18847:
 23423                           
 23424                           ;actionQueue.c: 80: };actionQueue.c: 81: return push(&normalQueue, a);;	Return value of 
      +                          _pushAction is never used
 23425  00A1AC  0EE8               	movlw	low _normalQueue
 23426  00A1AE  0100               	movlb	0	; () banked
 23427  00A1B0  6F71               	movwf	push@q& (0+255),b
 23428  00A1B2  0E01               	movlw	high _normalQueue
 23429  00A1B4  6F72               	movwf	(push@q+1)& (0+255),b
 23430  00A1B6  C07C  F073         	movff	pushAction@a,push@a
 23431  00A1BA  ECBF  F03C         	call	_push	;wreg free
 23432                           
 23433                           ; BSR set to: 0
 23434  00A1BE  0012               	return		;funcret
 23435  00A1C0                     __end_of_pushAction:
 23436                           	callstack 0
 23437                           
 23438 ;; *************** function _push *****************
 23439 ;; Defined at:
 23440 ;;		line 46 in file "../../github/CANMIOfirmware/queue.c"
 23441 ;; Parameters:    Size  Location     Type
 23442 ;;  q               2   17[BANK0 ] PTR struct Queue
 23443 ;;		 -> expeditedQueue(5), normalQueue(5), 
 23444 ;;  a               1   19[BANK0 ] unsigned char 
 23445 ;; Auto vars:     Size  Location     Type
 23446 ;;		None
 23447 ;; Return value:  Size  Location     Type
 23448 ;;                  1    wreg      unsigned char 
 23449 ;; Registers used:
 23450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23451 ;; Tracked objects:
 23452 ;;		On entry : 3F/0
 23453 ;;		On exit  : 3F/0
 23454 ;;		Unchanged: 0/0
 23455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23456 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23458 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23459 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23460 ;;Total ram usage:       11 bytes
 23461 ;; Hardware stack levels used: 1
 23462 ;; Hardware stack levels required when called: 8
 23463 ;; This function calls:
 23464 ;;		Nothing
 23465 ;; This function is called by:
 23466 ;;		_pushAction
 23467 ;; This function uses a non-reentrant model
 23468 ;;
 23469                           
 23470                           	psect	text106
 23471  00797E                     __ptext106:
 23472                           	callstack 0
 23473  00797E                     _push:
 23474                           	callstack 17
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;queue.c: 47: if (((q->writeIdx+1)&((q->size)-1)) == q->readIdx) return 0;
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;incstack = 0
 23481  00797E  EE20 F001          	lfsr	2,1
 23482  007982  5171               	movf	push@q& (0+255),w,b
 23483  007984  26D9               	addwf	fsr2l,f,c
 23484  007986  5172               	movf	(push@q+1)& (0+255),w,b
 23485  007988  22DA               	addwfc	fsr2h,f,c
 23486  00798A  50DF               	movf	indf2,w,c
 23487  00798C  6F74               	movwf	??_push& (0+255),b
 23488  00798E  6B75               	clrf	(??_push+1)& (0+255),b
 23489  007990  0EFF               	movlw	255
 23490  007992  6F76               	movwf	(??_push+2)& (0+255),b
 23491  007994  0EFF               	movlw	255
 23492  007996  6F77               	movwf	(??_push+3)& (0+255),b
 23493  007998  C071  FFD9         	movff	push@q,fsr2l
 23494  00799C  C072  FFDA         	movff	push@q+1,fsr2h
 23495  0079A0  50DF               	movf	indf2,w,c
 23496  0079A2  6F78               	movwf	(??_push+4)& (0+255),b
 23497  0079A4  6B79               	clrf	(??_push+5)& (0+255),b
 23498  0079A6  5176               	movf	(??_push+2)& (0+255),w,b
 23499  0079A8  2778               	addwf	(??_push+4)& (0+255),f,b
 23500  0079AA  5177               	movf	(??_push+3)& (0+255),w,b
 23501  0079AC  2379               	addwfc	(??_push+5)& (0+255),f,b
 23502  0079AE  EE20 F002          	lfsr	2,2
 23503  0079B2  5171               	movf	push@q& (0+255),w,b
 23504  0079B4  26D9               	addwf	fsr2l,f,c
 23505  0079B6  5172               	movf	(push@q+1)& (0+255),w,b
 23506  0079B8  22DA               	addwfc	fsr2h,f,c
 23507  0079BA  50DF               	movf	indf2,w,c
 23508  0079BC  6F7A               	movwf	(??_push+6)& (0+255),b
 23509  0079BE  6B7B               	clrf	(??_push+7)& (0+255),b
 23510  0079C0  0E01               	movlw	1
 23511  0079C2  277A               	addwf	(??_push+6)& (0+255),f,b
 23512  0079C4  0E00               	movlw	0
 23513  0079C6  237B               	addwfc	(??_push+7)& (0+255),f,b
 23514  0079C8  5178               	movf	(??_push+4)& (0+255),w,b
 23515  0079CA  177A               	andwf	(??_push+6)& (0+255),f,b
 23516  0079CC  5179               	movf	(??_push+5)& (0+255),w,b
 23517  0079CE  177B               	andwf	(??_push+7)& (0+255),f,b
 23518  0079D0  5174               	movf	??_push& (0+255),w,b
 23519  0079D2  197A               	xorwf	(??_push+6)& (0+255),w,b
 23520  0079D4  E106               	bnz	l18601
 23521  0079D6  5175               	movf	(??_push+1)& (0+255),w,b
 23522  0079D8  197B               	xorwf	(??_push+7)& (0+255),w,b
 23523  0079DA  A4D8               	btfss	status,2,c
 23524  0079DC  D002               	goto	l18601
 23525                           
 23526                           ; BSR set to: 0
 23527  0079DE  0E00               	movlw	0
 23528  0079E0  0012               	return	
 23529  0079E2                     l18601:
 23530                           
 23531                           ; BSR set to: 0
 23532                           ;queue.c: 48: q->queue[q->writeIdx++] = a;
 23533  0079E2  EE20 F002          	lfsr	2,2
 23534  0079E6  5171               	movf	push@q& (0+255),w,b
 23535  0079E8  26D9               	addwf	fsr2l,f,c
 23536  0079EA  5172               	movf	(push@q+1)& (0+255),w,b
 23537  0079EC  22DA               	addwfc	fsr2h,f,c
 23538  0079EE  50DF               	movf	indf2,w,c
 23539  0079F0  6F74               	movwf	??_push& (0+255),b
 23540  0079F2  EE20 F003          	lfsr	2,3
 23541  0079F6  5171               	movf	push@q& (0+255),w,b
 23542  0079F8  26D9               	addwf	fsr2l,f,c
 23543  0079FA  5172               	movf	(push@q+1)& (0+255),w,b
 23544  0079FC  22DA               	addwfc	fsr2h,f,c
 23545  0079FE  CFDE F075          	movff	postinc2,??_push+1
 23546  007A02  CFDD F076          	movff	postdec2,??_push+2
 23547  007A06  5174               	movf	??_push& (0+255),w,b
 23548  007A08  2575               	addwf	(??_push+1)& (0+255),w,b
 23549  007A0A  6ED9               	movwf	fsr2l,c
 23550  007A0C  0E00               	movlw	0
 23551  007A0E  2176               	addwfc	(??_push+2)& (0+255),w,b
 23552  007A10  6EDA               	movwf	fsr2h,c
 23553  007A12  C073  FFDF         	movff	push@a,indf2
 23554  007A16  EE20 F002          	lfsr	2,2
 23555  007A1A  5171               	movf	push@q& (0+255),w,b
 23556  007A1C  26D9               	addwf	fsr2l,f,c
 23557  007A1E  5172               	movf	(push@q+1)& (0+255),w,b
 23558  007A20  22DA               	addwfc	fsr2h,f,c
 23559  007A22  2ADF               	incf	indf2,f,c
 23560                           
 23561                           ; BSR set to: 0
 23562                           ;queue.c: 49: if (q->writeIdx >= q->size) q->writeIdx = 0;
 23563  007A24  C071  FFD9         	movff	push@q,fsr2l
 23564  007A28  C072  FFDA         	movff	push@q+1,fsr2h
 23565  007A2C  EE10 F002          	lfsr	1,2
 23566  007A30  5171               	movf	push@q& (0+255),w,b
 23567  007A32  26E1               	addwf	fsr1l,f,c
 23568  007A34  5172               	movf	(push@q+1)& (0+255),w,b
 23569  007A36  22E2               	addwfc	fsr1h,f,c
 23570  007A38  50DE               	movf	postinc2,w,c
 23571  007A3A  5CE6               	subwf	postinc1,w,c
 23572  007A3C  A0D8               	btfss	status,0,c
 23573  007A3E  D008               	goto	l18607
 23574                           
 23575                           ; BSR set to: 0
 23576  007A40  EE20 F002          	lfsr	2,2
 23577  007A44  5171               	movf	push@q& (0+255),w,b
 23578  007A46  26D9               	addwf	fsr2l,f,c
 23579  007A48  5172               	movf	(push@q+1)& (0+255),w,b
 23580  007A4A  22DA               	addwfc	fsr2h,f,c
 23581  007A4C  0E00               	movlw	0
 23582  007A4E  6EDF               	movwf	indf2,c
 23583  007A50                     l18607:
 23584                           
 23585                           ; BSR set to: 0
 23586                           ;queue.c: 50: return 1;
 23587  007A50  0E01               	movlw	1
 23588                           
 23589                           ; BSR set to: 0
 23590  007A52  0012               	return		;funcret
 23591  007A54                     __end_of_push:
 23592                           	callstack 0
 23593                           
 23594 ;; *************** function ___lwmod *****************
 23595 ;; Defined at:
 23596 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
 23597 ;; Parameters:    Size  Location     Type
 23598 ;;  dividend        2   17[BANK0 ] unsigned int 
 23599 ;;  divisor         2   19[BANK0 ] unsigned int 
 23600 ;; Auto vars:     Size  Location     Type
 23601 ;;  counter         1   21[BANK0 ] unsigned char 
 23602 ;; Return value:  Size  Location     Type
 23603 ;;                  2   17[BANK0 ] unsigned int 
 23604 ;; Registers used:
 23605 ;;		wreg, status,2, status,0
 23606 ;; Tracked objects:
 23607 ;;		On entry : 3F/0
 23608 ;;		On exit  : 3F/0
 23609 ;;		Unchanged: 0/0
 23610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23614 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23615 ;;Total ram usage:        5 bytes
 23616 ;; Hardware stack levels used: 1
 23617 ;; Hardware stack levels required when called: 8
 23618 ;; This function calls:
 23619 ;;		Nothing
 23620 ;; This function is called by:
 23621 ;;		_processEvent
 23622 ;;		_processActions
 23623 ;;		_validateNV
 23624 ;;		_actUponNVchange
 23625 ;; This function uses a non-reentrant model
 23626 ;;
 23627                           
 23628                           	psect	text107
 23629  009D94                     __ptext107:
 23630                           	callstack 0
 23631  009D94                     ___lwmod:
 23632                           	callstack 21
 23633                           
 23634                           ; BSR set to: 0
 23635                           
 23636                           ; BSR set to: 0
 23637                           ;incstack = 0
 23638  009D94  5173               	movf	___lwmod@divisor& (0+255),w,b
 23639  009D96  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 23640  009D98  B4D8               	btfsc	status,2,c
 23641  009D9A  D018               	goto	l3153
 23642                           
 23643                           ; BSR set to: 0
 23644  009D9C  0E01               	movlw	1
 23645  009D9E  6F75               	movwf	___lwmod@counter& (0+255),b
 23646  009DA0  D004               	goto	l18831
 23647  009DA2                     l18829:
 23648                           
 23649                           ; BSR set to: 0
 23650  009DA2  90D8               	bcf	status,0,c
 23651  009DA4  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 23652  009DA6  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 23653  009DA8  2B75               	incf	___lwmod@counter& (0+255),f,b
 23654  009DAA                     l18831:
 23655                           
 23656                           ; BSR set to: 0
 23657  009DAA  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 23658  009DAC  D7FA               	goto	l18829
 23659  009DAE                     u23290:
 23660                           
 23661                           ; BSR set to: 0
 23662  009DAE  5173               	movf	___lwmod@divisor& (0+255),w,b
 23663  009DB0  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 23664  009DB2  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23665  009DB4  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 23666  009DB6  A0D8               	btfss	status,0,c
 23667  009DB8  D004               	goto	l18837
 23668                           
 23669                           ; BSR set to: 0
 23670  009DBA  5173               	movf	___lwmod@divisor& (0+255),w,b
 23671  009DBC  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 23672  009DBE  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23673  009DC0  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 23674  009DC2                     l18837:
 23675                           
 23676                           ; BSR set to: 0
 23677  009DC2  90D8               	bcf	status,0,c
 23678  009DC4  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 23679  009DC6  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 23680                           
 23681                           ; BSR set to: 0
 23682  009DC8  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 23683  009DCA  D7F1               	goto	u23290
 23684  009DCC                     l3153:
 23685                           
 23686                           ; BSR set to: 0
 23687  009DCC  C071  F071         	movff	___lwmod@dividend,?___lwmod
 23688  009DD0  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 23689                           
 23690                           ; BSR set to: 0
 23691  009DD4  0012               	return		;funcret
 23692  009DD6                     __end_of___lwmod:
 23693                           	callstack 0
 23694                           
 23695 ;; *************** function ___lwdiv *****************
 23696 ;; Defined at:
 23697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
 23698 ;; Parameters:    Size  Location     Type
 23699 ;;  dividend        2   17[BANK0 ] unsigned int 
 23700 ;;  divisor         2   19[BANK0 ] unsigned int 
 23701 ;; Auto vars:     Size  Location     Type
 23702 ;;  quotient        2   22[BANK0 ] unsigned int 
 23703 ;;  counter         1   21[BANK0 ] unsigned char 
 23704 ;; Return value:  Size  Location     Type
 23705 ;;                  2   17[BANK0 ] unsigned int 
 23706 ;; Registers used:
 23707 ;;		wreg, status,2, status,0
 23708 ;; Tracked objects:
 23709 ;;		On entry : 3F/0
 23710 ;;		On exit  : 3F/0
 23711 ;;		Unchanged: 0/0
 23712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23714 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23716 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23717 ;;Total ram usage:        7 bytes
 23718 ;; Hardware stack levels used: 1
 23719 ;; Hardware stack levels required when called: 8
 23720 ;; This function calls:
 23721 ;;		Nothing
 23722 ;; This function is called by:
 23723 ;;		_processEvent
 23724 ;;		_processActions
 23725 ;;		_validateNV
 23726 ;;		_actUponNVchange
 23727 ;; This function uses a non-reentrant model
 23728 ;;
 23729                           
 23730                           	psect	text108
 23731  00998E                     __ptext108:
 23732                           	callstack 0
 23733  00998E                     ___lwdiv:
 23734                           	callstack 21
 23735                           
 23736                           ; BSR set to: 0
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;incstack = 0
 23740  00998E  0E00               	movlw	0
 23741  009990  6F77               	movwf	(___lwdiv@quotient+1)& (0+255),b
 23742  009992  0E00               	movlw	0
 23743  009994  6F76               	movwf	___lwdiv@quotient& (0+255),b
 23744                           
 23745                           ; BSR set to: 0
 23746  009996  5173               	movf	___lwdiv@divisor& (0+255),w,b
 23747  009998  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 23748  00999A  B4D8               	btfsc	status,2,c
 23749  00999C  D01C               	goto	l3143
 23750                           
 23751                           ; BSR set to: 0
 23752  00999E  0E01               	movlw	1
 23753  0099A0  6F75               	movwf	___lwdiv@counter& (0+255),b
 23754  0099A2  D004               	goto	l18811
 23755  0099A4                     l18809:
 23756                           
 23757                           ; BSR set to: 0
 23758  0099A4  90D8               	bcf	status,0,c
 23759  0099A6  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 23760  0099A8  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 23761  0099AA  2B75               	incf	___lwdiv@counter& (0+255),f,b
 23762  0099AC                     l18811:
 23763                           
 23764                           ; BSR set to: 0
 23765  0099AC  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 23766  0099AE  D7FA               	goto	l18809
 23767  0099B0                     u23260:
 23768                           
 23769                           ; BSR set to: 0
 23770  0099B0  90D8               	bcf	status,0,c
 23771  0099B2  3776               	rlcf	___lwdiv@quotient& (0+255),f,b
 23772  0099B4  3777               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 23773                           
 23774                           ; BSR set to: 0
 23775  0099B6  5173               	movf	___lwdiv@divisor& (0+255),w,b
 23776  0099B8  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 23777  0099BA  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23778  0099BC  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 23779  0099BE  A0D8               	btfss	status,0,c
 23780  0099C0  D005               	goto	l18821
 23781                           
 23782                           ; BSR set to: 0
 23783  0099C2  5173               	movf	___lwdiv@divisor& (0+255),w,b
 23784  0099C4  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 23785  0099C6  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23786  0099C8  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 23787                           
 23788                           ; BSR set to: 0
 23789  0099CA  8176               	bsf	___lwdiv@quotient& (0+255),0,b
 23790  0099CC                     l18821:
 23791                           
 23792                           ; BSR set to: 0
 23793  0099CC  90D8               	bcf	status,0,c
 23794  0099CE  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 23795  0099D0  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 23796                           
 23797                           ; BSR set to: 0
 23798  0099D2  2F75               	decfsz	___lwdiv@counter& (0+255),f,b
 23799  0099D4  D7ED               	goto	u23260
 23800  0099D6                     l3143:
 23801                           
 23802                           ; BSR set to: 0
 23803  0099D6  C076  F071         	movff	___lwdiv@quotient,?___lwdiv
 23804  0099DA  C077  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 23805                           
 23806                           ; BSR set to: 0
 23807  0099DE  0012               	return		;funcret
 23808  0099E0                     __end_of___lwdiv:
 23809                           	callstack 0
 23810                           
 23811 ;; *************** function _longFlicker *****************
 23812 ;; Defined at:
 23813 ;;		line 179 in file "../../github/CBUSlib/StatusLeds.c"
 23814 ;; Parameters:    Size  Location     Type
 23815 ;;		None
 23816 ;; Auto vars:     Size  Location     Type
 23817 ;;		None
 23818 ;; Return value:  Size  Location     Type
 23819 ;;                  1    wreg      void 
 23820 ;; Registers used:
 23821 ;;		wreg, status,2, status,0, cstack
 23822 ;; Tracked objects:
 23823 ;;		On entry : 3F/0
 23824 ;;		On exit  : 3F/1
 23825 ;;		Unchanged: 0/0
 23826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23831 ;;Total ram usage:        0 bytes
 23832 ;; Hardware stack levels used: 1
 23833 ;; Hardware stack levels required when called: 9
 23834 ;; This function calls:
 23835 ;;		_tickGet
 23836 ;; This function is called by:
 23837 ;;		_checkCBUS
 23838 ;; This function uses a non-reentrant model
 23839 ;;
 23840                           
 23841                           	psect	text109
 23842  00A1C0                     __ptext109:
 23843                           	callstack 0
 23844  00A1C0                     _longFlicker:
 23845                           	callstack 20
 23846                           
 23847                           ; BSR set to: 0
 23848                           ;StatusLeds.c: 180: flickerTime.Val = tickGet() + (62500/2);
 23849                           
 23850                           ; BSR set to: 0
 23851                           ;incstack = 0
 23852  00A1C0  EC9D  F04B         	call	_tickGet	;wreg free
 23853  00A1C4  0E12               	movlw	18
 23854  00A1C6  2571               	addwf	?_tickGet& (0+255),w,b
 23855  00A1C8  0101               	movlb	1	; () banked
 23856  00A1CA  6FA0               	movwf	_flickerTime& (0+255),b
 23857  00A1CC  0E7A               	movlw	122
 23858  00A1CE  0100               	movlb	0	; () banked
 23859  00A1D0  2172               	addwfc	(?_tickGet+1)& (0+255),w,b
 23860  00A1D2  0101               	movlb	1	; () banked
 23861  00A1D4  6FA1               	movwf	(_flickerTime+1)& (0+255),b
 23862  00A1D6  0E00               	movlw	0
 23863  00A1D8  0100               	movlb	0	; () banked
 23864  00A1DA  2173               	addwfc	(?_tickGet+2)& (0+255),w,b
 23865  00A1DC  0101               	movlb	1	; () banked
 23866  00A1DE  6FA2               	movwf	(_flickerTime+2)& (0+255),b
 23867  00A1E0  0E00               	movlw	0
 23868  00A1E2  0100               	movlb	0	; () banked
 23869  00A1E4  2174               	addwfc	(?_tickGet+3)& (0+255),w,b
 23870  00A1E6  0101               	movlb	1	; () banked
 23871  00A1E8  6FA3               	movwf	(_flickerTime+3)& (0+255),b
 23872                           
 23873                           ; BSR set to: 1
 23874                           ;StatusLeds.c: 181: flickerState = flickWaitingOn;
 23875  00A1EA  0E01               	movlw	1
 23876  00A1EC  6FD2               	movwf	_flickerState& (0+255),b
 23877                           
 23878                           ; BSR set to: 1
 23879  00A1EE  0012               	return		;funcret
 23880  00A1F0                     __end_of_longFlicker:
 23881                           	callstack 0
 23882                           
 23883 ;; *************** function _factoryReset *****************
 23884 ;; Defined at:
 23885 ;;		line 560 in file "../../github/CANMIOfirmware/main.c"
 23886 ;; Parameters:    Size  Location     Type
 23887 ;;		None
 23888 ;; Auto vars:     Size  Location     Type
 23889 ;;		None
 23890 ;; Return value:  Size  Location     Type
 23891 ;;                  1    wreg      void 
 23892 ;; Registers used:
 23893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23894 ;; Tracked objects:
 23895 ;;		On entry : 3C/2
 23896 ;;		On exit  : 3F/0
 23897 ;;		Unchanged: 0/0
 23898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23903 ;;Total ram usage:        0 bytes
 23904 ;; Hardware stack levels used: 1
 23905 ;; Hardware stack levels required when called: 24
 23906 ;; This function calls:
 23907 ;;		_factoryResetEE
 23908 ;;		_factoryResetFlash
 23909 ;; This function is called by:
 23910 ;;		_checkCBUS
 23911 ;; This function uses a non-reentrant model
 23912 ;;
 23913                           
 23914                           	psect	text110
 23915  00A6C6                     __ptext110:
 23916                           	callstack 0
 23917  00A6C6                     _factoryReset:
 23918                           	callstack 5
 23919                           
 23920                           ;main.c: 561: factoryResetEE();
 23921                           
 23922                           ; BSR set to: 1
 23923                           ;incstack = 0
 23924  00A6C6  EC42  F04E         	call	_factoryResetEE	;wreg free
 23925                           
 23926                           ; BSR set to: 0
 23927                           ;main.c: 562: factoryResetFlash();
 23928  00A6CA  EC56  F051         	call	_factoryResetFlash	;wreg free
 23929                           
 23930                           ; BSR set to: 0
 23931  00A6CE  0012               	return		;funcret
 23932  00A6D0                     __end_of_factoryReset:
 23933                           	callstack 0
 23934                           
 23935 ;; *************** function _factoryResetFlash *****************
 23936 ;; Defined at:
 23937 ;;		line 565 in file "../../github/CANMIOfirmware/main.c"
 23938 ;; Parameters:    Size  Location     Type
 23939 ;;		None
 23940 ;; Auto vars:     Size  Location     Type
 23941 ;;		None
 23942 ;; Return value:  Size  Location     Type
 23943 ;;                  1    wreg      void 
 23944 ;; Registers used:
 23945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23946 ;; Tracked objects:
 23947 ;;		On entry : 0/0
 23948 ;;		On exit  : 3F/0
 23949 ;;		Unchanged: 0/0
 23950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23955 ;;Total ram usage:        0 bytes
 23956 ;; Hardware stack levels used: 1
 23957 ;; Hardware stack levels required when called: 23
 23958 ;; This function calls:
 23959 ;;		_clearAllEvents
 23960 ;;		_factoryResetGlobalEvents
 23961 ;;		_factoryResetGlobalNv
 23962 ;;		_flushFlashImage
 23963 ;;		_setType
 23964 ;; This function is called by:
 23965 ;;		_initialise
 23966 ;;		_factoryReset
 23967 ;; This function uses a non-reentrant model
 23968 ;;
 23969                           
 23970                           	psect	text111
 23971  00A2AC                     __ptext111:
 23972                           	callstack 0
 23973  00A2AC                     _factoryResetFlash:
 23974                           	callstack 6
 23975                           
 23976                           ;main.c: 566: factoryResetGlobalNv();
 23977                           
 23978                           ; BSR set to: 0
 23979                           ;incstack = 0
 23980  00A2AC  EC62  F045         	call	_factoryResetGlobalNv	;wreg free
 23981                           
 23982                           ; BSR set to: 0
 23983                           ;main.c: 567: clearAllEvents();
 23984  00A2B0  ECFB  F04D         	call	_clearAllEvents	;wreg free
 23985                           
 23986                           ; BSR set to: 0
 23987                           ;main.c: 568: factoryResetGlobalEvents();
 23988  00A2B4  EC8F  F053         	call	_factoryResetGlobalEvents	;wreg free
 23989                           
 23990                           ; BSR set to: 0
 23991                           ;main.c: 570: for (io=0; io<16U; io++) {
 23992  00A2B8  0E00               	movlw	0
 23993  00A2BA  6FE6               	movwf	_io@main$F1444& (0+255),b
 23994  00A2BC                     l20039:
 23995                           
 23996                           ; BSR set to: 0
 23997  00A2BC  0E0F               	movlw	15
 23998  00A2BE  65E6               	cpfsgt	_io@main$F1444& (0+255),b
 23999  00A2C0  D001               	goto	l20043
 24000  00A2C2  D008               	goto	l20055
 24001  00A2C4                     l20043:
 24002                           
 24003                           ; BSR set to: 0
 24004                           
 24005                           ; BSR set to: 0
 24006                           
 24007                           ; BSR set to: 0
 24008  00A2C4  0E00               	movlw	0
 24009  00A2C6  6FCC               	movwf	setType@type& (0+255),b
 24010  00A2C8  51E6               	movf	_io@main$F1444& (0+255),w,b
 24011  00A2CA  EC08  F03F         	call	_setType
 24012  00A2CE  0100               	movlb	0	; () banked
 24013  00A2D0  2BE6               	incf	_io@main$F1444& (0+255),f,b
 24014  00A2D2  D7F4               	goto	l20039
 24015  00A2D4                     l20055:
 24016                           
 24017                           ; BSR set to: 0
 24018                           ;main.c: 572: };main.c: 573: flushFlashImage();
 24019  00A2D4  EC0D  F053         	call	_flushFlashImage	;wreg free
 24020                           
 24021                           ; BSR set to: 0
 24022  00A2D8  0012               	return		;funcret
 24023  00A2DA                     __end_of_factoryResetFlash:
 24024                           	callstack 0
 24025                           
 24026 ;; *************** function _setType *****************
 24027 ;; Defined at:
 24028 ;;		line 593 in file "../../github/CANMIOfirmware/main.c"
 24029 ;; Parameters:    Size  Location     Type
 24030 ;;  io              1    wreg     unsigned char 
 24031 ;;  type            1  108[BANK0 ] unsigned char 
 24032 ;; Auto vars:     Size  Location     Type
 24033 ;;  io              1  113[BANK0 ] unsigned char 
 24034 ;;  addr            2  111[BANK0 ] unsigned int 
 24035 ;; Return value:  Size  Location     Type
 24036 ;;                  1    wreg      void 
 24037 ;; Registers used:
 24038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24039 ;; Tracked objects:
 24040 ;;		On entry : 3F/0
 24041 ;;		On exit  : 3E/0
 24042 ;;		Unchanged: 0/0
 24043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24044 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24045 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24047 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24048 ;;Total ram usage:        6 bytes
 24049 ;; Hardware stack levels used: 1
 24050 ;; Hardware stack levels required when called: 22
 24051 ;; This function calls:
 24052 ;;		_configIO
 24053 ;;		_defaultEvents
 24054 ;;		_defaultNVs
 24055 ;;		_initAnaloguePort
 24056 ;;		_writeFlashByte
 24057 ;; This function is called by:
 24058 ;;		_factoryResetFlash
 24059 ;;		_actUponNVchange
 24060 ;; This function uses a non-reentrant model
 24061 ;;
 24062                           
 24063                           	psect	text112
 24064  007E10                     __ptext112:
 24065                           	callstack 0
 24066  007E10                     _setType:
 24067                           	callstack 6
 24068                           
 24069                           ; BSR set to: 0
 24070                           ;incstack = 0
 24071                           ;setType@io stored from wreg
 24072  007E10  6FD1               	movwf	setType@io& (0+255),b
 24073                           
 24074                           ;main.c: 594: WORD addr;;main.c: 595: addr = 0xFF80U+(16U + 7U*(io) + 0U);
 24075  007E12  0100               	movlb	0	; () banked
 24076  007E14  51D1               	movf	setType@io& (0+255),w,b
 24077  007E16  0D07               	mullw	7
 24078  007E18  CFF3 F0CD          	movff	prodl,??_setType
 24079  007E1C  CFF4 F0CE          	movff	prodh,??_setType+1
 24080  007E20  0E90               	movlw	144
 24081  007E22  25CD               	addwf	??_setType& (0+255),w,b
 24082  007E24  6FCF               	movwf	setType@addr& (0+255),b
 24083  007E26  0EFF               	movlw	255
 24084  007E28  21CE               	addwfc	(??_setType+1)& (0+255),w,b
 24085  007E2A  6FD0               	movwf	(setType@addr+1)& (0+255),b
 24086                           
 24087                           ; BSR set to: 0
 24088                           ;main.c: 596: writeFlashByte((BYTE*)addr, type);
 24089  007E2C  C0CF  F087         	movff	setType@addr,writeFlashByte@flashAddr
 24090  007E30  C0D0  F088         	movff	setType@addr+1,writeFlashByte@flashAddr+1
 24091  007E34  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24092  007E36  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24093  007E38  A4D8               	btfss	status,2,c
 24094  007E3A  0E20               	movlw	32
 24095  007E3C  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24096  007E3E  C0CC  F08A         	movff	setType@type,writeFlashByte@flashData
 24097  007E42  ECBA  F052         	call	_writeFlashByte	;wreg free
 24098                           
 24099                           ; BSR set to: 0
 24100                           ;main.c: 598: NV->io[io].type = type;
 24101  007E46  51D1               	movf	setType@io& (0+255),w,b
 24102  007E48  0D07               	mullw	7
 24103  007E4A  C0EC  F0CD         	movff	_NV,??_setType
 24104  007E4E  C0ED  F0CE         	movff	_NV+1,??_setType+1
 24105  007E52  50F3               	movf	243,w,c
 24106  007E54  27CD               	addwf	??_setType& (0+255),f,b
 24107  007E56  50F4               	movf	244,w,c
 24108  007E58  23CE               	addwfc	(??_setType+1)& (0+255),f,b
 24109  007E5A  0E10               	movlw	16
 24110  007E5C  25CD               	addwf	??_setType& (0+255),w,b
 24111  007E5E  6ED9               	movwf	fsr2l,c
 24112  007E60  0E00               	movlw	0
 24113  007E62  21CE               	addwfc	(??_setType+1)& (0+255),w,b
 24114  007E64  6EDA               	movwf	fsr2h,c
 24115  007E66  C0CC  FFDF         	movff	setType@type,indf2
 24116                           
 24117                           ; BSR set to: 0
 24118                           ;main.c: 601: defaultNVs(io, type);
 24119  007E6A  C0CC  F08B         	movff	setType@type,defaultNVs@type
 24120  007E6E  51D1               	movf	setType@io& (0+255),w,b
 24121  007E70  EC27  F00F         	call	_defaultNVs
 24122                           
 24123                           ; BSR set to: 0
 24124                           ;main.c: 603: configIO(io);
 24125  007E74  51D1               	movf	setType@io& (0+255),w,b
 24126  007E76  EC31  F015         	call	_configIO
 24127                           
 24128                           ;main.c: 605: if ((type == 2U) || (type== 3U) || (type == 4U)) {
 24129  007E7A  0E02               	movlw	2
 24130  007E7C  0100               	movlb	0	; () banked
 24131  007E7E  19CC               	xorwf	setType@type& (0+255),w,b
 24132  007E80  B4D8               	btfsc	status,2,c
 24133  007E82  D008               	goto	u23110
 24134                           
 24135                           ; BSR set to: 0
 24136  007E84  0E03               	movlw	3
 24137  007E86  19CC               	xorwf	setType@type& (0+255),w,b
 24138  007E88  B4D8               	btfsc	status,2,c
 24139  007E8A  D004               	goto	u23110
 24140                           
 24141                           ; BSR set to: 0
 24142  007E8C  0E04               	movlw	4
 24143  007E8E  19CC               	xorwf	setType@type& (0+255),w,b
 24144  007E90  A4D8               	btfss	status,2,c
 24145  007E92  D008               	goto	l18657
 24146  007E94                     u23110:
 24147                           
 24148                           ; BSR set to: 0
 24149                           ;main.c: 606: currentPos[io] = 128;
 24150  007E94  0E80               	movlw	low _currentPos
 24151  007E96  25D1               	addwf	setType@io& (0+255),w,b
 24152  007E98  6ED9               	movwf	fsr2l,c
 24153  007E9A  6ADA               	clrf	fsr2h,c
 24154  007E9C  0E01               	movlw	high _currentPos
 24155  007E9E  22DA               	addwfc	fsr2h,f,c
 24156  007EA0  0E80               	movlw	128
 24157  007EA2  6EDF               	movwf	indf2,c
 24158  007EA4                     l18657:
 24159                           
 24160                           ; BSR set to: 0
 24161                           ;main.c: 607: };main.c: 610: defaultEvents(io, type);
 24162  007EA4  C0CC  F0C8         	movff	setType@type,defaultEvents@type
 24163  007EA8  51D1               	movf	setType@io& (0+255),w,b
 24164  007EAA  ECDC  F02F         	call	_defaultEvents
 24165                           
 24166                           ; BSR set to: 0
 24167                           ;main.c: 612: if ((type == 5U) || (type == 6U)) {
 24168  007EAE  0E05               	movlw	5
 24169  007EB0  19CC               	xorwf	setType@type& (0+255),w,b
 24170  007EB2  B4D8               	btfsc	status,2,c
 24171  007EB4  D004               	goto	u23130
 24172                           
 24173                           ; BSR set to: 0
 24174  007EB6  0E06               	movlw	6
 24175  007EB8  19CC               	xorwf	setType@type& (0+255),w,b
 24176  007EBA  A4D8               	btfss	status,2,c
 24177  007EBC  0012               	return	
 24178  007EBE                     u23130:
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;main.c: 613: initAnaloguePort(io);
 24182  007EBE  51D1               	movf	setType@io& (0+255),w,b
 24183  007EC0  ECD7  F051         	call	_initAnaloguePort
 24184  007EC4  0012               	return		;funcret
 24185  007EC6                     __end_of_setType:
 24186                           	callstack 0
 24187                           
 24188 ;; *************** function _initAnaloguePort *****************
 24189 ;; Defined at:
 24190 ;;		line 67 in file "../../github/CANMIOfirmware/analogue.c"
 24191 ;; Parameters:    Size  Location     Type
 24192 ;;  io              1    wreg     unsigned char 
 24193 ;; Auto vars:     Size  Location     Type
 24194 ;;  io              1   17[BANK0 ] unsigned char 
 24195 ;; Return value:  Size  Location     Type
 24196 ;;                  1    wreg      void 
 24197 ;; Registers used:
 24198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24199 ;; Tracked objects:
 24200 ;;		On entry : 3F/0
 24201 ;;		On exit  : 3F/1
 24202 ;;		Unchanged: 0/0
 24203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24207 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24208 ;;Total ram usage:        1 bytes
 24209 ;; Hardware stack levels used: 1
 24210 ;; Hardware stack levels required when called: 8
 24211 ;; This function calls:
 24212 ;;		Nothing
 24213 ;; This function is called by:
 24214 ;;		_setType
 24215 ;; This function uses a non-reentrant model
 24216 ;;
 24217                           
 24218                           	psect	text113
 24219  00A3AE                     __ptext113:
 24220                           	callstack 0
 24221  00A3AE                     _initAnaloguePort:
 24222                           	callstack 19
 24223                           
 24224                           ;incstack = 0
 24225                           ;initAnaloguePort@io stored from wreg
 24226  00A3AE  6F71               	movwf	initAnaloguePort@io& (0+255),b
 24227                           
 24228                           ;analogue.c: 68: analogueState[io].eventState = 0U;
 24229  00A3B0  0E90               	movlw	low _analogueState
 24230  00A3B2  0100               	movlb	0	; () banked
 24231  00A3B4  2571               	addwf	initAnaloguePort@io& (0+255),w,b
 24232  00A3B6  6ED9               	movwf	fsr2l,c
 24233  00A3B8  6ADA               	clrf	fsr2h,c
 24234  00A3BA  0E01               	movlw	high _analogueState
 24235  00A3BC  22DA               	addwfc	fsr2h,f,c
 24236  00A3BE  0EFC               	movlw	-4
 24237  00A3C0  16DF               	andwf	223,f,c
 24238                           
 24239                           ;analogue.c: 69: analogueState[io].portState = 0U;
 24240  00A3C2  0E90               	movlw	low _analogueState
 24241  00A3C4  2571               	addwf	initAnaloguePort@io& (0+255),w,b
 24242  00A3C6  6ED9               	movwf	fsr2l,c
 24243  00A3C8  6ADA               	clrf	fsr2h,c
 24244  00A3CA  0E01               	movlw	high _analogueState
 24245  00A3CC  22DA               	addwfc	fsr2h,f,c
 24246  00A3CE  0101               	movlb	1	; () banked
 24247  00A3D0  94DF               	bcf	indf2,2,c
 24248                           
 24249                           ; BSR set to: 1
 24250  00A3D2  0012               	return		;funcret
 24251  00A3D4                     __end_of_initAnaloguePort:
 24252                           	callstack 0
 24253                           
 24254 ;; *************** function _defaultNVs *****************
 24255 ;; Defined at:
 24256 ;;		line 210 in file "../../github/CANMIOfirmware/mioNv.c"
 24257 ;; Parameters:    Size  Location     Type
 24258 ;;  i               1    wreg     unsigned char 
 24259 ;;  type            1   43[BANK0 ] unsigned char 
 24260 ;; Auto vars:     Size  Location     Type
 24261 ;;  i               1   46[BANK0 ] unsigned char 
 24262 ;; Return value:  Size  Location     Type
 24263 ;;                  1    wreg      void 
 24264 ;; Registers used:
 24265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24266 ;; Tracked objects:
 24267 ;;		On entry : 3F/0
 24268 ;;		On exit  : 3F/0
 24269 ;;		Unchanged: 0/0
 24270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24275 ;;Total ram usage:        4 bytes
 24276 ;; Hardware stack levels used: 1
 24277 ;; Hardware stack levels required when called: 15
 24278 ;; This function calls:
 24279 ;;		___wmul
 24280 ;;		_loadNvCache
 24281 ;;		_writeFlashByte
 24282 ;; This function is called by:
 24283 ;;		_setType
 24284 ;; This function uses a non-reentrant model
 24285 ;;
 24286                           
 24287                           	psect	text114
 24288  001E4E                     __ptext114:
 24289                           	callstack 0
 24290  001E4E                     _defaultNVs:
 24291                           	callstack 12
 24292                           
 24293                           ; BSR set to: 1
 24294                           ;incstack = 0
 24295                           ;defaultNVs@i stored from wreg
 24296  001E4E  6F8E               	movwf	defaultNVs@i& (0+255),b
 24297                           
 24298                           ;mioNv.c: 212: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 1U)), (BYTE)(0x02U | 0x04U
      +                          ));
 24299  001E50  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24300  001E54  0100               	movlb	0	; () banked
 24301  001E56  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24302  001E58  0E00               	movlw	0
 24303  001E5A  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24304  001E5C  0E07               	movlw	7
 24305  001E5E  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24306  001E60  ECEA  F051         	call	___wmul	;wreg free
 24307  001E64  0E91               	movlw	145
 24308  001E66  6F8C               	movwf	??_defaultNVs& (0+255),b
 24309  001E68  0EFF               	movlw	255
 24310  001E6A  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24311  001E6C  5171               	movf	?___wmul& (0+255),w,b
 24312  001E6E  278C               	addwf	??_defaultNVs& (0+255),f,b
 24313  001E70  5172               	movf	(?___wmul+1)& (0+255),w,b
 24314  001E72  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24315  001E74  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24316  001E78  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24317  001E7C  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24318  001E7E  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24319  001E80  A4D8               	btfss	status,2,c
 24320  001E82  0E20               	movlw	32
 24321  001E84  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24322  001E86  0E06               	movlw	6
 24323  001E88  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24324  001E8A  ECBA  F052         	call	_writeFlashByte	;wreg free
 24325                           
 24326                           ;mioNv.c: 213: switch(type) {
 24327  001E8E  D2D7               	goto	l18545
 24328  001E90                     l18529:
 24329                           
 24330                           ; BSR set to: 0
 24331                           ;mioNv.c: 215: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 2U)), (BYTE)4);
 24332  001E90  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24333  001E94  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24334  001E96  0E00               	movlw	0
 24335  001E98  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24336  001E9A  0E07               	movlw	7
 24337  001E9C  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24338  001E9E  ECEA  F051         	call	___wmul	;wreg free
 24339  001EA2  0E92               	movlw	146
 24340  001EA4  6F8C               	movwf	??_defaultNVs& (0+255),b
 24341  001EA6  0EFF               	movlw	255
 24342  001EA8  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24343  001EAA  5171               	movf	?___wmul& (0+255),w,b
 24344  001EAC  278C               	addwf	??_defaultNVs& (0+255),f,b
 24345  001EAE  5172               	movf	(?___wmul+1)& (0+255),w,b
 24346  001EB0  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24347  001EB2  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24348  001EB6  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24349  001EBA  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24350  001EBC  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24351  001EBE  A4D8               	btfss	status,2,c
 24352  001EC0  0E20               	movlw	32
 24353  001EC2  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24354  001EC4  0E04               	movlw	4
 24355  001EC6  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24356  001EC8  ECBA  F052         	call	_writeFlashByte	;wreg free
 24357                           
 24358                           ;mioNv.c: 216: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)4);
 24359  001ECC  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24360  001ED0  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24361  001ED2  0E00               	movlw	0
 24362  001ED4  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24363  001ED6  0E07               	movlw	7
 24364  001ED8  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24365  001EDA  ECEA  F051         	call	___wmul	;wreg free
 24366  001EDE  0E93               	movlw	147
 24367  001EE0  6F8C               	movwf	??_defaultNVs& (0+255),b
 24368  001EE2  0EFF               	movlw	255
 24369  001EE4  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24370  001EE6  5171               	movf	?___wmul& (0+255),w,b
 24371  001EE8  278C               	addwf	??_defaultNVs& (0+255),f,b
 24372  001EEA  5172               	movf	(?___wmul+1)& (0+255),w,b
 24373  001EEC  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24374  001EEE  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24375  001EF2  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24376  001EF6  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24377  001EF8  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24378  001EFA  A4D8               	btfss	status,2,c
 24379  001EFC  0E20               	movlw	32
 24380  001EFE  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24381  001F00  0E04               	movlw	4
 24382  001F02  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24383  001F04  ECBA  F052         	call	_writeFlashByte	;wreg free
 24384                           
 24385                           ;mioNv.c: 217: break;
 24386  001F08  D2B0               	goto	l18547
 24387  001F0A                     l18531:
 24388                           
 24389                           ; BSR set to: 0
 24390                           ;mioNv.c: 219: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 2U)), (BYTE)0);
 24391  001F0A  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24392  001F0E  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24393  001F10  0E00               	movlw	0
 24394  001F12  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24395  001F14  0E07               	movlw	7
 24396  001F16  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24397  001F18  ECEA  F051         	call	___wmul	;wreg free
 24398  001F1C  0E92               	movlw	146
 24399  001F1E  6F8C               	movwf	??_defaultNVs& (0+255),b
 24400  001F20  0EFF               	movlw	255
 24401  001F22  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24402  001F24  5171               	movf	?___wmul& (0+255),w,b
 24403  001F26  278C               	addwf	??_defaultNVs& (0+255),f,b
 24404  001F28  5172               	movf	(?___wmul+1)& (0+255),w,b
 24405  001F2A  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24406  001F2C  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24407  001F30  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24408  001F34  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24409  001F36  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24410  001F38  A4D8               	btfss	status,2,c
 24411  001F3A  0E20               	movlw	32
 24412  001F3C  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24413  001F3E  0E00               	movlw	0
 24414  001F40  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24415  001F42  ECBA  F052         	call	_writeFlashByte	;wreg free
 24416                           
 24417                           ;mioNv.c: 220: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)0);
 24418  001F46  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24419  001F4A  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24420  001F4C  0E00               	movlw	0
 24421  001F4E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24422  001F50  0E07               	movlw	7
 24423  001F52  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24424  001F54  ECEA  F051         	call	___wmul	;wreg free
 24425  001F58  0E93               	movlw	147
 24426  001F5A  6F8C               	movwf	??_defaultNVs& (0+255),b
 24427  001F5C  0EFF               	movlw	255
 24428  001F5E  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24429  001F60  5171               	movf	?___wmul& (0+255),w,b
 24430  001F62  278C               	addwf	??_defaultNVs& (0+255),f,b
 24431  001F64  5172               	movf	(?___wmul+1)& (0+255),w,b
 24432  001F66  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24433  001F68  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24434  001F6C  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24435  001F70  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24436  001F72  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24437  001F74  A4D8               	btfss	status,2,c
 24438  001F76  0E20               	movlw	32
 24439  001F78  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24440  001F7A  0E00               	movlw	0
 24441  001F7C  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24442  001F7E  ECBA  F052         	call	_writeFlashByte	;wreg free
 24443                           
 24444                           ;mioNv.c: 221: break;
 24445  001F82  D273               	goto	l18547
 24446  001F84                     l18533:
 24447                           
 24448                           ; BSR set to: 0
 24449                           ;mioNv.c: 228: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 2U)), (BYTE)128);
 24450  001F84  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24451  001F88  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24452  001F8A  0E00               	movlw	0
 24453  001F8C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24454  001F8E  0E07               	movlw	7
 24455  001F90  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24456  001F92  ECEA  F051         	call	___wmul	;wreg free
 24457  001F96  0E92               	movlw	146
 24458  001F98  6F8C               	movwf	??_defaultNVs& (0+255),b
 24459  001F9A  0EFF               	movlw	255
 24460  001F9C  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24461  001F9E  5171               	movf	?___wmul& (0+255),w,b
 24462  001FA0  278C               	addwf	??_defaultNVs& (0+255),f,b
 24463  001FA2  5172               	movf	(?___wmul+1)& (0+255),w,b
 24464  001FA4  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24465  001FA6  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24466  001FAA  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24467  001FAE  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24468  001FB0  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24469  001FB2  A4D8               	btfss	status,2,c
 24470  001FB4  0E20               	movlw	32
 24471  001FB6  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24472  001FB8  0E80               	movlw	128
 24473  001FBA  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24474  001FBC  ECBA  F052         	call	_writeFlashByte	;wreg free
 24475                           
 24476                           ;mioNv.c: 229: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)128);
 24477  001FC0  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24478  001FC4  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24479  001FC6  0E00               	movlw	0
 24480  001FC8  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24481  001FCA  0E07               	movlw	7
 24482  001FCC  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24483  001FCE  ECEA  F051         	call	___wmul	;wreg free
 24484  001FD2  0E93               	movlw	147
 24485  001FD4  6F8C               	movwf	??_defaultNVs& (0+255),b
 24486  001FD6  0EFF               	movlw	255
 24487  001FD8  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24488  001FDA  5171               	movf	?___wmul& (0+255),w,b
 24489  001FDC  278C               	addwf	??_defaultNVs& (0+255),f,b
 24490  001FDE  5172               	movf	(?___wmul+1)& (0+255),w,b
 24491  001FE0  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24492  001FE2  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24493  001FE6  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24494  001FEA  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24495  001FEC  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24496  001FEE  A4D8               	btfss	status,2,c
 24497  001FF0  0E20               	movlw	32
 24498  001FF2  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24499  001FF4  0E80               	movlw	128
 24500  001FF6  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24501  001FF8  ECBA  F052         	call	_writeFlashByte	;wreg free
 24502                           
 24503                           ;mioNv.c: 231: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 4U)), (BYTE)234U+1);
 24504  001FFC  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24505  002000  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24506  002002  0E00               	movlw	0
 24507  002004  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24508  002006  0E07               	movlw	7
 24509  002008  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24510  00200A  ECEA  F051         	call	___wmul	;wreg free
 24511  00200E  0E94               	movlw	148
 24512  002010  6F8C               	movwf	??_defaultNVs& (0+255),b
 24513  002012  0EFF               	movlw	255
 24514  002014  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24515  002016  5171               	movf	?___wmul& (0+255),w,b
 24516  002018  278C               	addwf	??_defaultNVs& (0+255),f,b
 24517  00201A  5172               	movf	(?___wmul+1)& (0+255),w,b
 24518  00201C  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24519  00201E  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24520  002022  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24521  002026  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24522  002028  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24523  00202A  A4D8               	btfss	status,2,c
 24524  00202C  0E20               	movlw	32
 24525  00202E  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24526  002030  0EEB               	movlw	235
 24527  002032  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24528  002034  ECBA  F052         	call	_writeFlashByte	;wreg free
 24529                           
 24530                           ;mioNv.c: 232: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 5U)), (BYTE)234U+1);
 24531  002038  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24532  00203C  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24533  00203E  0E00               	movlw	0
 24534  002040  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24535  002042  0E07               	movlw	7
 24536  002044  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24537  002046  ECEA  F051         	call	___wmul	;wreg free
 24538  00204A  0E95               	movlw	149
 24539  00204C  6F8C               	movwf	??_defaultNVs& (0+255),b
 24540  00204E  0EFF               	movlw	255
 24541  002050  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24542  002052  5171               	movf	?___wmul& (0+255),w,b
 24543  002054  278C               	addwf	??_defaultNVs& (0+255),f,b
 24544  002056  5172               	movf	(?___wmul+1)& (0+255),w,b
 24545  002058  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24546  00205A  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24547  00205E  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24548  002062  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24549  002064  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24550  002066  A4D8               	btfss	status,2,c
 24551  002068  0E20               	movlw	32
 24552  00206A  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24553  00206C  0EEB               	movlw	235
 24554  00206E  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24555  002070  ECBA  F052         	call	_writeFlashByte	;wreg free
 24556                           
 24557                           ;mioNv.c: 233: break;
 24558  002074  D1FA               	goto	l18547
 24559  002076                     l18535:
 24560                           
 24561                           ; BSR set to: 0
 24562                           ;mioNv.c: 241: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 2U)), (BYTE)128);
 24563  002076  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24564  00207A  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24565  00207C  0E00               	movlw	0
 24566  00207E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24567  002080  0E07               	movlw	7
 24568  002082  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24569  002084  ECEA  F051         	call	___wmul	;wreg free
 24570  002088  0E92               	movlw	146
 24571  00208A  6F8C               	movwf	??_defaultNVs& (0+255),b
 24572  00208C  0EFF               	movlw	255
 24573  00208E  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24574  002090  5171               	movf	?___wmul& (0+255),w,b
 24575  002092  278C               	addwf	??_defaultNVs& (0+255),f,b
 24576  002094  5172               	movf	(?___wmul+1)& (0+255),w,b
 24577  002096  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24578  002098  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24579  00209C  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24580  0020A0  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24581  0020A2  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24582  0020A4  A4D8               	btfss	status,2,c
 24583  0020A6  0E20               	movlw	32
 24584  0020A8  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24585  0020AA  0E80               	movlw	128
 24586  0020AC  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24587  0020AE  ECBA  F052         	call	_writeFlashByte	;wreg free
 24588                           
 24589                           ;mioNv.c: 242: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)127);
 24590  0020B2  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24591  0020B6  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24592  0020B8  0E00               	movlw	0
 24593  0020BA  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24594  0020BC  0E07               	movlw	7
 24595  0020BE  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24596  0020C0  ECEA  F051         	call	___wmul	;wreg free
 24597  0020C4  0E93               	movlw	147
 24598  0020C6  6F8C               	movwf	??_defaultNVs& (0+255),b
 24599  0020C8  0EFF               	movlw	255
 24600  0020CA  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24601  0020CC  5171               	movf	?___wmul& (0+255),w,b
 24602  0020CE  278C               	addwf	??_defaultNVs& (0+255),f,b
 24603  0020D0  5172               	movf	(?___wmul+1)& (0+255),w,b
 24604  0020D2  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24605  0020D4  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24606  0020D8  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24607  0020DC  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24608  0020DE  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24609  0020E0  A4D8               	btfss	status,2,c
 24610  0020E2  0E20               	movlw	32
 24611  0020E4  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24612  0020E6  0E7F               	movlw	127
 24613  0020E8  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24614  0020EA  ECBA  F052         	call	_writeFlashByte	;wreg free
 24615                           
 24616                           ;mioNv.c: 244: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 4U)), (BYTE)64);
 24617  0020EE  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24618  0020F2  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24619  0020F4  0E00               	movlw	0
 24620  0020F6  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24621  0020F8  0E07               	movlw	7
 24622  0020FA  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24623  0020FC  ECEA  F051         	call	___wmul	;wreg free
 24624  002100  0E94               	movlw	148
 24625  002102  6F8C               	movwf	??_defaultNVs& (0+255),b
 24626  002104  0EFF               	movlw	255
 24627  002106  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24628  002108  5171               	movf	?___wmul& (0+255),w,b
 24629  00210A  278C               	addwf	??_defaultNVs& (0+255),f,b
 24630  00210C  5172               	movf	(?___wmul+1)& (0+255),w,b
 24631  00210E  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24632  002110  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24633  002114  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24634  002118  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24635  00211A  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24636  00211C  A4D8               	btfss	status,2,c
 24637  00211E  0E20               	movlw	32
 24638  002120  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24639  002122  0E40               	movlw	64
 24640  002124  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24641  002126  ECBA  F052         	call	_writeFlashByte	;wreg free
 24642                           
 24643                           ;mioNv.c: 245: writeFlashByte((BYTE*)(0xFF80U + (16U + 7U*(i) + 5U)), (BYTE)3);
 24644  00212A  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24645  00212E  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24646  002130  0E00               	movlw	0
 24647  002132  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24648  002134  0E07               	movlw	7
 24649  002136  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24650  002138  ECEA  F051         	call	___wmul	;wreg free
 24651  00213C  0E95               	movlw	149
 24652  00213E  6F8C               	movwf	??_defaultNVs& (0+255),b
 24653  002140  0EFF               	movlw	255
 24654  002142  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24655  002144  5171               	movf	?___wmul& (0+255),w,b
 24656  002146  278C               	addwf	??_defaultNVs& (0+255),f,b
 24657  002148  5172               	movf	(?___wmul+1)& (0+255),w,b
 24658  00214A  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24659  00214C  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24660  002150  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24661  002154  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24662  002156  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24663  002158  A4D8               	btfss	status,2,c
 24664  00215A  0E20               	movlw	32
 24665  00215C  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24666  00215E  0E03               	movlw	3
 24667  002160  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24668  002162  ECBA  F052         	call	_writeFlashByte	;wreg free
 24669                           
 24670                           ;mioNv.c: 246: writeFlashByte((BYTE*)(0xFF80U + (16U + 7U*(i) + 6U)), (BYTE)60);
 24671  002166  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24672  00216A  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24673  00216C  0E00               	movlw	0
 24674  00216E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24675  002170  0E07               	movlw	7
 24676  002172  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24677  002174  ECEA  F051         	call	___wmul	;wreg free
 24678  002178  0E96               	movlw	150
 24679  00217A  6F8C               	movwf	??_defaultNVs& (0+255),b
 24680  00217C  0EFF               	movlw	255
 24681  00217E  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24682  002180  5171               	movf	?___wmul& (0+255),w,b
 24683  002182  278C               	addwf	??_defaultNVs& (0+255),f,b
 24684  002184  5172               	movf	(?___wmul+1)& (0+255),w,b
 24685  002186  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24686  002188  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24687  00218C  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24688  002190  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24689  002192  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24690  002194  A4D8               	btfss	status,2,c
 24691  002196  0E20               	movlw	32
 24692  002198  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24693  00219A  0E3C               	movlw	60
 24694  00219C  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24695  00219E  ECBA  F052         	call	_writeFlashByte	;wreg free
 24696                           
 24697                           ;mioNv.c: 247: break;
 24698  0021A2  D163               	goto	l18547
 24699  0021A4                     l18537:
 24700                           
 24701                           ; BSR set to: 0
 24702                           ;mioNv.c: 251: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 2U)), (BYTE)3);
 24703  0021A4  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24704  0021A8  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24705  0021AA  0E00               	movlw	0
 24706  0021AC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24707  0021AE  0E07               	movlw	7
 24708  0021B0  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24709  0021B2  ECEA  F051         	call	___wmul	;wreg free
 24710  0021B6  0E92               	movlw	146
 24711  0021B8  6F8C               	movwf	??_defaultNVs& (0+255),b
 24712  0021BA  0EFF               	movlw	255
 24713  0021BC  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24714  0021BE  5171               	movf	?___wmul& (0+255),w,b
 24715  0021C0  278C               	addwf	??_defaultNVs& (0+255),f,b
 24716  0021C2  5172               	movf	(?___wmul+1)& (0+255),w,b
 24717  0021C4  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24718  0021C6  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24719  0021CA  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24720  0021CE  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24721  0021D0  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24722  0021D2  A4D8               	btfss	status,2,c
 24723  0021D4  0E20               	movlw	32
 24724  0021D6  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24725  0021D8  0E03               	movlw	3
 24726  0021DA  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24727  0021DC  ECBA  F052         	call	_writeFlashByte	;wreg free
 24728                           
 24729                           ;mioNv.c: 257: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)128);
 24730  0021E0  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24731  0021E4  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24732  0021E6  0E00               	movlw	0
 24733  0021E8  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24734  0021EA  0E07               	movlw	7
 24735  0021EC  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24736  0021EE  ECEA  F051         	call	___wmul	;wreg free
 24737  0021F2  0E93               	movlw	147
 24738  0021F4  6F8C               	movwf	??_defaultNVs& (0+255),b
 24739  0021F6  0EFF               	movlw	255
 24740  0021F8  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24741  0021FA  5171               	movf	?___wmul& (0+255),w,b
 24742  0021FC  278C               	addwf	??_defaultNVs& (0+255),f,b
 24743  0021FE  5172               	movf	(?___wmul+1)& (0+255),w,b
 24744  002200  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24745  002202  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24746  002206  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24747  00220A  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24748  00220C  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24749  00220E  A4D8               	btfss	status,2,c
 24750  002210  0E20               	movlw	32
 24751  002212  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24752  002214  0E80               	movlw	128
 24753  002216  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24754  002218  ECBA  F052         	call	_writeFlashByte	;wreg free
 24755                           
 24756                           ;mioNv.c: 258: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 4U)), (BYTE)128);
 24757  00221C  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24758  002220  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24759  002222  0E00               	movlw	0
 24760  002224  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24761  002226  0E07               	movlw	7
 24762  002228  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24763  00222A  ECEA  F051         	call	___wmul	;wreg free
 24764  00222E  0E94               	movlw	148
 24765  002230  6F8C               	movwf	??_defaultNVs& (0+255),b
 24766  002232  0EFF               	movlw	255
 24767  002234  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24768  002236  5171               	movf	?___wmul& (0+255),w,b
 24769  002238  278C               	addwf	??_defaultNVs& (0+255),f,b
 24770  00223A  5172               	movf	(?___wmul+1)& (0+255),w,b
 24771  00223C  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24772  00223E  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24773  002242  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24774  002246  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24775  002248  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24776  00224A  A4D8               	btfss	status,2,c
 24777  00224C  0E20               	movlw	32
 24778  00224E  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24779  002250  0E80               	movlw	128
 24780  002252  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24781  002254  ECBA  F052         	call	_writeFlashByte	;wreg free
 24782                           
 24783                           ;mioNv.c: 259: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 5U)), (BYTE)128);
 24784  002258  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24785  00225C  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24786  00225E  0E00               	movlw	0
 24787  002260  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24788  002262  0E07               	movlw	7
 24789  002264  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24790  002266  ECEA  F051         	call	___wmul	;wreg free
 24791  00226A  0E95               	movlw	149
 24792  00226C  6F8C               	movwf	??_defaultNVs& (0+255),b
 24793  00226E  0EFF               	movlw	255
 24794  002270  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24795  002272  5171               	movf	?___wmul& (0+255),w,b
 24796  002274  278C               	addwf	??_defaultNVs& (0+255),f,b
 24797  002276  5172               	movf	(?___wmul+1)& (0+255),w,b
 24798  002278  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24799  00227A  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24800  00227E  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24801  002282  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24802  002284  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24803  002286  A4D8               	btfss	status,2,c
 24804  002288  0E20               	movlw	32
 24805  00228A  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24806  00228C  0E80               	movlw	128
 24807  00228E  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24808  002290  ECBA  F052         	call	_writeFlashByte	;wreg free
 24809                           
 24810                           ;mioNv.c: 261: break;
 24811  002294  D0EA               	goto	l18547
 24812  002296                     l18539:
 24813                           
 24814                           ; BSR set to: 0
 24815                           ;mioNv.c: 265: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)0x80);
 24816  002296  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24817  00229A  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24818  00229C  0E00               	movlw	0
 24819  00229E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24820  0022A0  0E07               	movlw	7
 24821  0022A2  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24822  0022A4  ECEA  F051         	call	___wmul	;wreg free
 24823  0022A8  0E93               	movlw	147
 24824  0022AA  6F8C               	movwf	??_defaultNVs& (0+255),b
 24825  0022AC  0EFF               	movlw	255
 24826  0022AE  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24827  0022B0  5171               	movf	?___wmul& (0+255),w,b
 24828  0022B2  278C               	addwf	??_defaultNVs& (0+255),f,b
 24829  0022B4  5172               	movf	(?___wmul+1)& (0+255),w,b
 24830  0022B6  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24831  0022B8  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24832  0022BC  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24833  0022C0  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24834  0022C2  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24835  0022C4  A4D8               	btfss	status,2,c
 24836  0022C6  0E20               	movlw	32
 24837  0022C8  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24838  0022CA  0E80               	movlw	128
 24839  0022CC  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24840  0022CE  ECBA  F052         	call	_writeFlashByte	;wreg free
 24841                           
 24842                           ;mioNv.c: 266: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 4U)), (BYTE)0x10);
 24843  0022D2  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24844  0022D6  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24845  0022D8  0E00               	movlw	0
 24846  0022DA  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24847  0022DC  0E07               	movlw	7
 24848  0022DE  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24849  0022E0  ECEA  F051         	call	___wmul	;wreg free
 24850  0022E4  0E94               	movlw	148
 24851  0022E6  6F8C               	movwf	??_defaultNVs& (0+255),b
 24852  0022E8  0EFF               	movlw	255
 24853  0022EA  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24854  0022EC  5171               	movf	?___wmul& (0+255),w,b
 24855  0022EE  278C               	addwf	??_defaultNVs& (0+255),f,b
 24856  0022F0  5172               	movf	(?___wmul+1)& (0+255),w,b
 24857  0022F2  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24858  0022F4  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24859  0022F8  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24860  0022FC  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24861  0022FE  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24862  002300  A4D8               	btfss	status,2,c
 24863  002302  0E20               	movlw	32
 24864  002304  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24865  002306  0E10               	movlw	16
 24866  002308  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24867  00230A  ECBA  F052         	call	_writeFlashByte	;wreg free
 24868                           
 24869                           ;mioNv.c: 267: break;
 24870  00230E  D0AD               	goto	l18547
 24871  002310                     l18541:
 24872                           
 24873                           ; BSR set to: 0
 24874                           ;mioNv.c: 269: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 2U)), (BYTE)0);
 24875  002310  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24876  002314  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24877  002316  0E00               	movlw	0
 24878  002318  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24879  00231A  0E07               	movlw	7
 24880  00231C  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24881  00231E  ECEA  F051         	call	___wmul	;wreg free
 24882  002322  0E92               	movlw	146
 24883  002324  6F8C               	movwf	??_defaultNVs& (0+255),b
 24884  002326  0EFF               	movlw	255
 24885  002328  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24886  00232A  5171               	movf	?___wmul& (0+255),w,b
 24887  00232C  278C               	addwf	??_defaultNVs& (0+255),f,b
 24888  00232E  5172               	movf	(?___wmul+1)& (0+255),w,b
 24889  002330  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24890  002332  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24891  002336  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24892  00233A  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24893  00233C  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24894  00233E  A4D8               	btfss	status,2,c
 24895  002340  0E20               	movlw	32
 24896  002342  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24897  002344  0E00               	movlw	0
 24898  002346  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24899  002348  ECBA  F052         	call	_writeFlashByte	;wreg free
 24900                           
 24901                           ;mioNv.c: 270: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 3U)), (BYTE)123);
 24902  00234C  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24903  002350  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24904  002352  0E00               	movlw	0
 24905  002354  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24906  002356  0E07               	movlw	7
 24907  002358  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24908  00235A  ECEA  F051         	call	___wmul	;wreg free
 24909  00235E  0E93               	movlw	147
 24910  002360  6F8C               	movwf	??_defaultNVs& (0+255),b
 24911  002362  0EFF               	movlw	255
 24912  002364  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24913  002366  5171               	movf	?___wmul& (0+255),w,b
 24914  002368  278C               	addwf	??_defaultNVs& (0+255),f,b
 24915  00236A  5172               	movf	(?___wmul+1)& (0+255),w,b
 24916  00236C  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24917  00236E  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24918  002372  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24919  002376  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24920  002378  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24921  00237A  A4D8               	btfss	status,2,c
 24922  00237C  0E20               	movlw	32
 24923  00237E  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24924  002380  0E7B               	movlw	123
 24925  002382  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24926  002384  ECBA  F052         	call	_writeFlashByte	;wreg free
 24927                           
 24928                           ;mioNv.c: 271: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 4U)), (BYTE)32);
 24929  002388  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24930  00238C  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24931  00238E  0E00               	movlw	0
 24932  002390  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24933  002392  0E07               	movlw	7
 24934  002394  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24935  002396  ECEA  F051         	call	___wmul	;wreg free
 24936  00239A  0E94               	movlw	148
 24937  00239C  6F8C               	movwf	??_defaultNVs& (0+255),b
 24938  00239E  0EFF               	movlw	255
 24939  0023A0  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24940  0023A2  5171               	movf	?___wmul& (0+255),w,b
 24941  0023A4  278C               	addwf	??_defaultNVs& (0+255),f,b
 24942  0023A6  5172               	movf	(?___wmul+1)& (0+255),w,b
 24943  0023A8  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24944  0023AA  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24945  0023AE  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24946  0023B2  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24947  0023B4  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24948  0023B6  A4D8               	btfss	status,2,c
 24949  0023B8  0E20               	movlw	32
 24950  0023BA  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24951  0023BC  0E20               	movlw	32
 24952  0023BE  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24953  0023C0  ECBA  F052         	call	_writeFlashByte	;wreg free
 24954                           
 24955                           ;mioNv.c: 272: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 5U)), (BYTE)0x07);
 24956  0023C4  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24957  0023C8  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24958  0023CA  0E00               	movlw	0
 24959  0023CC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24960  0023CE  0E07               	movlw	7
 24961  0023D0  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24962  0023D2  ECEA  F051         	call	___wmul	;wreg free
 24963  0023D6  0E95               	movlw	149
 24964  0023D8  6F8C               	movwf	??_defaultNVs& (0+255),b
 24965  0023DA  0EFF               	movlw	255
 24966  0023DC  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24967  0023DE  5171               	movf	?___wmul& (0+255),w,b
 24968  0023E0  278C               	addwf	??_defaultNVs& (0+255),f,b
 24969  0023E2  5172               	movf	(?___wmul+1)& (0+255),w,b
 24970  0023E4  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24971  0023E6  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24972  0023EA  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 24973  0023EE  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 24974  0023F0  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 24975  0023F2  A4D8               	btfss	status,2,c
 24976  0023F4  0E20               	movlw	32
 24977  0023F6  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 24978  0023F8  0E07               	movlw	7
 24979  0023FA  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 24980  0023FC  ECBA  F052         	call	_writeFlashByte	;wreg free
 24981                           
 24982                           ;mioNv.c: 273: writeFlashByte((BYTE*)(0xFF80U+(16U + 7U*(i) + 6U)), (BYTE)0xFF);
 24983  002400  C08E  F071         	movff	defaultNVs@i,___wmul@multiplier
 24984  002404  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 24985  002406  0E00               	movlw	0
 24986  002408  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24987  00240A  0E07               	movlw	7
 24988  00240C  6F73               	movwf	___wmul@multiplicand& (0+255),b
 24989  00240E  ECEA  F051         	call	___wmul	;wreg free
 24990  002412  0E96               	movlw	150
 24991  002414  6F8C               	movwf	??_defaultNVs& (0+255),b
 24992  002416  0EFF               	movlw	255
 24993  002418  6F8D               	movwf	(??_defaultNVs+1)& (0+255),b
 24994  00241A  5171               	movf	?___wmul& (0+255),w,b
 24995  00241C  278C               	addwf	??_defaultNVs& (0+255),f,b
 24996  00241E  5172               	movf	(?___wmul+1)& (0+255),w,b
 24997  002420  238D               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 24998  002422  C08C  F087         	movff	??_defaultNVs,writeFlashByte@flashAddr
 24999  002426  C08D  F088         	movff	??_defaultNVs+1,writeFlashByte@flashAddr+1
 25000  00242A  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 25001  00242C  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 25002  00242E  A4D8               	btfss	status,2,c
 25003  002430  0E20               	movlw	32
 25004  002432  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 25005  002434  0EFF               	movlw	255
 25006  002436  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 25007  002438  ECBA  F052         	call	_writeFlashByte	;wreg free
 25008                           
 25009                           ;mioNv.c: 274: break;
 25010  00243C  D016               	goto	l18547
 25011  00243E                     l18545:
 25012                           
 25013                           ; BSR set to: 0
 25014  00243E  518B               	movf	defaultNVs@type& (0+255),w,b
 25015                           
 25016                           ; Switch size 1, requested type "simple"
 25017                           ; Number of cases is 7, Range of values is 0 to 6
 25018                           ; switch strategies available:
 25019                           ; Name         Instructions Cycles
 25020                           ; simple_byte           22    12 (average)
 25021                           ;	Chosen strategy is simple_byte
 25022  002440  0A00               	xorlw	0	; case 0
 25023  002442  B4D8               	btfsc	status,2,c
 25024  002444  D525               	goto	l18529
 25025  002446  0A01               	xorlw	1	; case 1
 25026  002448  B4D8               	btfsc	status,2,c
 25027  00244A  D55F               	goto	l18531
 25028  00244C  0A03               	xorlw	3	; case 2
 25029  00244E  B4D8               	btfsc	status,2,c
 25030  002450  D599               	goto	l18533
 25031  002452  0A01               	xorlw	1	; case 3
 25032  002454  B4D8               	btfsc	status,2,c
 25033  002456  D60F               	goto	l18535
 25034  002458  0A07               	xorlw	7	; case 4
 25035  00245A  B4D8               	btfsc	status,2,c
 25036  00245C  D6A3               	goto	l18537
 25037  00245E  0A01               	xorlw	1	; case 5
 25038  002460  B4D8               	btfsc	status,2,c
 25039  002462  D719               	goto	l18539
 25040  002464  0A03               	xorlw	3	; case 6
 25041  002466  B4D8               	btfsc	status,2,c
 25042  002468  D753               	goto	l18541
 25043  00246A                     l18547:
 25044                           
 25045                           ; BSR set to: 0
 25046                           ;mioNv.c: 278: loadNvCache();
 25047  00246A  EC0C  F04F         	call	_loadNvCache	;wreg free
 25048                           
 25049                           ; BSR set to: 0
 25050  00246E  0012               	return		;funcret
 25051  002470                     __end_of_defaultNVs:
 25052                           	callstack 0
 25053                           
 25054 ;; *************** function ___wmul *****************
 25055 ;; Defined at:
 25056 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
 25057 ;; Parameters:    Size  Location     Type
 25058 ;;  multiplier      2   17[BANK0 ] unsigned int 
 25059 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 25060 ;; Auto vars:     Size  Location     Type
 25061 ;;  product         2   21[BANK0 ] unsigned int 
 25062 ;; Return value:  Size  Location     Type
 25063 ;;                  2   17[BANK0 ] unsigned int 
 25064 ;; Registers used:
 25065 ;;		wreg, status,2, status,0, prodl, prodh
 25066 ;; Tracked objects:
 25067 ;;		On entry : 3F/0
 25068 ;;		On exit  : 3F/0
 25069 ;;		Unchanged: 0/0
 25070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25071 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25072 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25074 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25075 ;;Total ram usage:        6 bytes
 25076 ;; Hardware stack levels used: 1
 25077 ;; Hardware stack levels required when called: 8
 25078 ;; This function calls:
 25079 ;;		Nothing
 25080 ;; This function is called by:
 25081 ;;		_pollAnalogue
 25082 ;;		_bounceDown
 25083 ;;		_defaultNVs
 25084 ;;		_setupTimer1
 25085 ;;		_setupTimer3
 25086 ;; This function uses a non-reentrant model
 25087 ;;
 25088                           
 25089                           	psect	text115
 25090  00A3D4                     __ptext115:
 25091                           	callstack 0
 25092  00A3D4                     ___wmul:
 25093                           	callstack 20
 25094                           
 25095                           ; BSR set to: 0
 25096                           
 25097                           ; BSR set to: 0
 25098                           ;incstack = 0
 25099  00A3D4  5171               	movf	___wmul@multiplier& (0+255),w,b
 25100  00A3D6  0373               	mulwf	___wmul@multiplicand& (0+255),b
 25101  00A3D8  CFF3 F075          	movff	prodl,___wmul@product
 25102  00A3DC  CFF4 F076          	movff	prodh,___wmul@product+1
 25103  00A3E0  5171               	movf	___wmul@multiplier& (0+255),w,b
 25104  00A3E2  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 25105  00A3E4  50F3               	movf	243,w,c
 25106  00A3E6  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 25107  00A3E8  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 25108  00A3EA  0373               	mulwf	___wmul@multiplicand& (0+255),b
 25109  00A3EC  50F3               	movf	243,w,c
 25110  00A3EE  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 25111                           
 25112                           ; BSR set to: 0
 25113  00A3F0  C075  F071         	movff	___wmul@product,?___wmul
 25114  00A3F4  C076  F072         	movff	___wmul@product+1,?___wmul+1
 25115                           
 25116                           ; BSR set to: 0
 25117  00A3F8  0012               	return		;funcret
 25118  00A3FA                     __end_of___wmul:
 25119                           	callstack 0
 25120                           
 25121 ;; *************** function _defaultEvents *****************
 25122 ;; Defined at:
 25123 ;;		line 104 in file "../../github/CANMIOfirmware/mioEvents.c"
 25124 ;; Parameters:    Size  Location     Type
 25125 ;;  io              1    wreg     unsigned char 
 25126 ;;  type            1  104[BANK0 ] unsigned char 
 25127 ;; Auto vars:     Size  Location     Type
 25128 ;;  io              1  107[BANK0 ] unsigned char 
 25129 ;;  en              2  105[BANK0 ] unsigned int 
 25130 ;; Return value:  Size  Location     Type
 25131 ;;                  1    wreg      void 
 25132 ;; Registers used:
 25133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25134 ;; Tracked objects:
 25135 ;;		On entry : 3F/0
 25136 ;;		On exit  : 3F/0
 25137 ;;		Unchanged: 0/0
 25138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25139 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25140 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25142 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25143 ;;Total ram usage:        4 bytes
 25144 ;; Hardware stack levels used: 1
 25145 ;; Hardware stack levels required when called: 21
 25146 ;; This function calls:
 25147 ;;		_addEvent
 25148 ;;		_clearEvents
 25149 ;; This function is called by:
 25150 ;;		_setType
 25151 ;; This function uses a non-reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text116
 25155  005FB8                     __ptext116:
 25156                           	callstack 0
 25157  005FB8                     _defaultEvents:
 25158                           	callstack 6
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;incstack = 0
 25162                           ;defaultEvents@io stored from wreg
 25163  005FB8  6FCB               	movwf	defaultEvents@io& (0+255),b
 25164                           
 25165                           ;mioEvents.c: 105: WORD en = io+1U;
 25166  005FBA  0E01               	movlw	1
 25167  005FBC  0100               	movlb	0	; () banked
 25168  005FBE  25CB               	addwf	defaultEvents@io& (0+255),w,b
 25169  005FC0  6FC9               	movwf	defaultEvents@en& (0+255),b
 25170  005FC2  6BCA               	clrf	(defaultEvents@en+1)& (0+255),b
 25171  005FC4  0E00               	movlw	0
 25172  005FC6  23CA               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 25173                           
 25174                           ; BSR set to: 0
 25175                           ;mioEvents.c: 106: clearEvents(io);
 25176  005FC8  51CB               	movf	defaultEvents@io& (0+255),w,b
 25177  005FCA  ECE1  F04F         	call	_clearEvents
 25178                           
 25179                           ;mioEvents.c: 109: switch(type) {
 25180  005FCE  D0B9               	goto	l18565
 25181  005FD0                     l18553:
 25182                           
 25183                           ; BSR set to: 0
 25184                           ;mioEvents.c: 113: addEvent(nodeID, 100+en, 0, ((8U + 4U*(io))+0U), 1);
 25185  005FD0  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25186  005FD4  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25187  005FD8  0E64               	movlw	100
 25188  005FDA  25C9               	addwf	defaultEvents@en& (0+255),w,b
 25189  005FDC  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 25190  005FDE  0E00               	movlw	0
 25191  005FE0  21CA               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 25192  005FE2  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 25193  005FE4  0E00               	movlw	0
 25194  005FE6  6FB7               	movwf	addEvent@evNum& (0+255),b
 25195  005FE8  51CB               	movf	defaultEvents@io& (0+255),w,b
 25196  005FEA  0D04               	mullw	4
 25197  005FEC  50F3               	movf	243,w,c
 25198  005FEE  0F08               	addlw	8
 25199  005FF0  6FB8               	movwf	addEvent@evVal& (0+255),b
 25200  005FF2  0E01               	movlw	1
 25201  005FF4  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25202  005FF6  EC0F  F02E         	call	_addEvent	;wreg free
 25203  005FFA                     l732:
 25204                           
 25205                           ; BSR set to: 0
 25206                           ;mioEvents.c: 118: addEvent(nodeID, en, 1, ((8U + 5U*(io))+0U), 1);
 25207  005FFA  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25208  005FFE  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25209  006002  C0C9  F0B5         	movff	defaultEvents@en,addEvent@eventNumber
 25210  006006  C0CA  F0B6         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 25211  00600A  0E01               	movlw	1
 25212  00600C  6FB7               	movwf	addEvent@evNum& (0+255),b
 25213  00600E  51CB               	movf	defaultEvents@io& (0+255),w,b
 25214  006010  0D05               	mullw	5
 25215  006012  50F3               	movf	243,w,c
 25216  006014  0F08               	addlw	8
 25217  006016  6FB8               	movwf	addEvent@evVal& (0+255),b
 25218  006018  0E01               	movlw	1
 25219  00601A  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25220  00601C  EC0F  F02E         	call	_addEvent	;wreg free
 25221                           
 25222                           ;mioEvents.c: 121: break;
 25223  006020  0012               	return	
 25224  006022                     l18555:
 25225                           
 25226                           ; BSR set to: 0
 25227                           ;mioEvents.c: 124: addEvent(nodeID, en, 0, ((8U + 4U*(io))+0U), 1);
 25228  006022  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25229  006026  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25230  00602A  C0C9  F0B5         	movff	defaultEvents@en,addEvent@eventNumber
 25231  00602E  C0CA  F0B6         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 25232  006032  0E00               	movlw	0
 25233  006034  6FB7               	movwf	addEvent@evNum& (0+255),b
 25234  006036  51CB               	movf	defaultEvents@io& (0+255),w,b
 25235  006038  0D04               	mullw	4
 25236  00603A  50F3               	movf	243,w,c
 25237  00603C  0F08               	addlw	8
 25238  00603E  6FB8               	movwf	addEvent@evVal& (0+255),b
 25239  006040  0E01               	movlw	1
 25240  006042  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25241  006044  EC0F  F02E         	call	_addEvent	;wreg free
 25242                           
 25243                           ;mioEvents.c: 125: break;
 25244  006048  0012               	return	
 25245  00604A                     l18557:
 25246                           
 25247                           ; BSR set to: 0
 25248                           ;mioEvents.c: 129: addEvent(nodeID, 100+en, 0, ((8U + 4U*(io))+0U), 1);
 25249  00604A  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25250  00604E  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25251  006052  0E64               	movlw	100
 25252  006054  25C9               	addwf	defaultEvents@en& (0+255),w,b
 25253  006056  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 25254  006058  0E00               	movlw	0
 25255  00605A  21CA               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 25256  00605C  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 25257  00605E  0E00               	movlw	0
 25258  006060  6FB7               	movwf	addEvent@evNum& (0+255),b
 25259  006062  51CB               	movf	defaultEvents@io& (0+255),w,b
 25260  006064  0D04               	mullw	4
 25261  006066  50F3               	movf	243,w,c
 25262  006068  0F08               	addlw	8
 25263  00606A  6FB8               	movwf	addEvent@evVal& (0+255),b
 25264  00606C  0E01               	movlw	1
 25265  00606E  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25266  006070  EC0F  F02E         	call	_addEvent	;wreg free
 25267                           
 25268                           ;mioEvents.c: 130: addEvent(nodeID, 300+en, 0, ((8U + 4U*(io))+1U), 1);
 25269  006074  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25270  006078  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25271  00607C  0E2C               	movlw	44
 25272  00607E  25C9               	addwf	defaultEvents@en& (0+255),w,b
 25273  006080  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 25274  006082  0E01               	movlw	1
 25275  006084  21CA               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 25276  006086  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 25277  006088  0E00               	movlw	0
 25278  00608A  6FB7               	movwf	addEvent@evNum& (0+255),b
 25279  00608C  51CB               	movf	defaultEvents@io& (0+255),w,b
 25280  00608E  0D04               	mullw	4
 25281  006090  50F3               	movf	243,w,c
 25282  006092  0F09               	addlw	9
 25283  006094  6FB8               	movwf	addEvent@evVal& (0+255),b
 25284  006096  0E01               	movlw	1
 25285  006098  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25286  00609A  EC0F  F02E         	call	_addEvent	;wreg free
 25287                           
 25288                           ;mioEvents.c: 131: addEvent(nodeID, 200+en, 0, ((8U + 4U*(io))+2U), 1);
 25289  00609E  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25290  0060A2  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25291  0060A6  0EC8               	movlw	200
 25292  0060A8  25C9               	addwf	defaultEvents@en& (0+255),w,b
 25293  0060AA  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 25294  0060AC  0E00               	movlw	0
 25295  0060AE  21CA               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 25296  0060B0  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 25297  0060B2  0E00               	movlw	0
 25298  0060B4  6FB7               	movwf	addEvent@evNum& (0+255),b
 25299  0060B6  51CB               	movf	defaultEvents@io& (0+255),w,b
 25300  0060B8  0D04               	mullw	4
 25301  0060BA  50F3               	movf	243,w,c
 25302  0060BC  0F0A               	addlw	10
 25303  0060BE  6FB8               	movwf	addEvent@evVal& (0+255),b
 25304  0060C0  0E01               	movlw	1
 25305  0060C2  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25306  0060C4  EC0F  F02E         	call	_addEvent	;wreg free
 25307                           
 25308                           ;mioEvents.c: 133: addEvent(nodeID, en, 1, ((8U + 5U*(io))+0U), 1);
 25309  0060C8  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25310  0060CC  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25311  0060D0  C0C9  F0B5         	movff	defaultEvents@en,addEvent@eventNumber
 25312  0060D4  C0CA  F0B6         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 25313  0060D8  0E01               	movlw	1
 25314  0060DA  6FB7               	movwf	addEvent@evNum& (0+255),b
 25315  0060DC  51CB               	movf	defaultEvents@io& (0+255),w,b
 25316  0060DE  0D05               	mullw	5
 25317  0060E0  50F3               	movf	243,w,c
 25318  0060E2  0F08               	addlw	8
 25319  0060E4  6FB8               	movwf	addEvent@evVal& (0+255),b
 25320  0060E6  0E01               	movlw	1
 25321  0060E8  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25322  0060EA  EC0F  F02E         	call	_addEvent	;wreg free
 25323                           
 25324                           ;mioEvents.c: 134: break;
 25325  0060EE  0012               	return	
 25326  0060F0                     l18561:
 25327                           
 25328                           ; BSR set to: 0
 25329                           ;mioEvents.c: 148: addEvent(nodeID, en, 0, ((8U + 4U*(io))+1U), 1);
 25330  0060F0  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25331  0060F4  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25332  0060F8  C0C9  F0B5         	movff	defaultEvents@en,addEvent@eventNumber
 25333  0060FC  C0CA  F0B6         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 25334  006100  0E00               	movlw	0
 25335  006102  6FB7               	movwf	addEvent@evNum& (0+255),b
 25336  006104  51CB               	movf	defaultEvents@io& (0+255),w,b
 25337  006106  0D04               	mullw	4
 25338  006108  50F3               	movf	243,w,c
 25339  00610A  0F09               	addlw	9
 25340  00610C  6FB8               	movwf	addEvent@evVal& (0+255),b
 25341  00610E  0E01               	movlw	1
 25342  006110  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25343  006112  EC0F  F02E         	call	_addEvent	;wreg free
 25344                           
 25345                           ;mioEvents.c: 149: addEvent(nodeID, 100+en, 0, ((8U + 4U*(io))+0U), 1);
 25346  006116  C001  F0B3         	movff	_nodeID,addEvent@nodeNumber
 25347  00611A  C002  F0B4         	movff	_nodeID+1,addEvent@nodeNumber+1
 25348  00611E  0E64               	movlw	100
 25349  006120  25C9               	addwf	defaultEvents@en& (0+255),w,b
 25350  006122  6FB5               	movwf	addEvent@eventNumber& (0+255),b
 25351  006124  0E00               	movlw	0
 25352  006126  21CA               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 25353  006128  6FB6               	movwf	(addEvent@eventNumber+1)& (0+255),b
 25354  00612A  0E00               	movlw	0
 25355  00612C  6FB7               	movwf	addEvent@evNum& (0+255),b
 25356  00612E  51CB               	movf	defaultEvents@io& (0+255),w,b
 25357  006130  0D04               	mullw	4
 25358  006132  50F3               	movf	243,w,c
 25359  006134  0F08               	addlw	8
 25360  006136  6FB8               	movwf	addEvent@evVal& (0+255),b
 25361  006138  0E01               	movlw	1
 25362  00613A  6FB9               	movwf	addEvent@forceOwnNN& (0+255),b
 25363  00613C  EC0F  F02E         	call	_addEvent	;wreg free
 25364                           
 25365                           ;mioEvents.c: 150: break;
 25366  006140  0012               	return	
 25367  006142                     l18565:
 25368                           
 25369                           ; BSR set to: 0
 25370  006142  51C8               	movf	defaultEvents@type& (0+255),w,b
 25371                           
 25372                           ; Switch size 1, requested type "simple"
 25373                           ; Number of cases is 7, Range of values is 0 to 6
 25374                           ; switch strategies available:
 25375                           ; Name         Instructions Cycles
 25376                           ; simple_byte           22    12 (average)
 25377                           ;	Chosen strategy is simple_byte
 25378  006144  0A00               	xorlw	0	; case 0
 25379  006146  B4D8               	btfsc	status,2,c
 25380  006148  D76C               	goto	l18555
 25381  00614A  0A01               	xorlw	1	; case 1
 25382  00614C  B4D8               	btfsc	status,2,c
 25383  00614E  D755               	goto	l732
 25384  006150  0A03               	xorlw	3	; case 2
 25385  006152  B4D8               	btfsc	status,2,c
 25386  006154  D77A               	goto	l18557
 25387  006156  0A01               	xorlw	1	; case 3
 25388  006158  B4D8               	btfsc	status,2,c
 25389  00615A  D73A               	goto	l18553
 25390  00615C  0A07               	xorlw	7	; case 4
 25391  00615E  B4D8               	btfsc	status,2,c
 25392  006160  0012               	return	
 25393  006162  0A01               	xorlw	1	; case 5
 25394  006164  B4D8               	btfsc	status,2,c
 25395  006166  D75D               	goto	l18555
 25396  006168  0A03               	xorlw	3	; case 6
 25397  00616A  A4D8               	btfss	status,2,c
 25398  00616C  0012               	return	
 25399  00616E  D7C0               	goto	l18561
 25400  006170                     __end_of_defaultEvents:
 25401                           	callstack 0
 25402                           
 25403 ;; *************** function _clearEvents *****************
 25404 ;; Defined at:
 25405 ;;		line 198 in file "../../github/CANMIOfirmware/mioEvents.c"
 25406 ;; Parameters:    Size  Location     Type
 25407 ;;  io              1    wreg     unsigned char 
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;  io              1   93[BANK0 ] unsigned char 
 25410 ;; Return value:  Size  Location     Type
 25411 ;;                  1    wreg      void 
 25412 ;; Registers used:
 25413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25414 ;; Tracked objects:
 25415 ;;		On entry : 3F/0
 25416 ;;		On exit  : 3F/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25423 ;;Total ram usage:        1 bytes
 25424 ;; Hardware stack levels used: 1
 25425 ;; Hardware stack levels required when called: 20
 25426 ;; This function calls:
 25427 ;;		_deleteActionRange
 25428 ;;		_deleteHappeningRange
 25429 ;; This function is called by:
 25430 ;;		_defaultEvents
 25431 ;; This function uses a non-reentrant model
 25432 ;;
 25433                           
 25434                           	psect	text117
 25435  009FC2                     __ptext117:
 25436                           	callstack 0
 25437  009FC2                     _clearEvents:
 25438                           	callstack 6
 25439                           
 25440                           ; BSR set to: 0
 25441                           ;incstack = 0
 25442                           ;clearEvents@io stored from wreg
 25443  009FC2  6FBD               	movwf	clearEvents@io& (0+255),b
 25444                           
 25445                           ;mioEvents.c: 199: deleteActionRange((8U + 5U*(io)), 5U);
 25446  009FC4  0E05               	movlw	5
 25447  009FC6  0100               	movlb	0	; () banked
 25448  009FC8  6FB3               	movwf	deleteActionRange@number& (0+255),b
 25449  009FCA  51BD               	movf	clearEvents@io& (0+255),w,b
 25450  009FCC  0D05               	mullw	5
 25451  009FCE  50F3               	movf	243,w,c
 25452  009FD0  0F08               	addlw	8
 25453  009FD2  EC6E  F041         	call	_deleteActionRange
 25454                           
 25455                           ;mioEvents.c: 200: deleteActionRange((8U + 5U*(io)) | 0x80U, 5U);
 25456  009FD6  0E05               	movlw	5
 25457  009FD8  6FB3               	movwf	deleteActionRange@number& (0+255),b
 25458  009FDA  51BD               	movf	clearEvents@io& (0+255),w,b
 25459  009FDC  0D05               	mullw	5
 25460  009FDE  50F3               	movf	243,w,c
 25461  009FE0  0F08               	addlw	8
 25462  009FE2  0980               	iorlw	128
 25463  009FE4  EC6E  F041         	call	_deleteActionRange
 25464                           
 25465                           ;mioEvents.c: 201: deleteHappeningRange((8U + 4U*(io)), 4U);
 25466  009FE8  0E04               	movlw	4
 25467  009FEA  6FB3               	movwf	deleteHappeningRange@number& (0+255),b
 25468  009FEC  51BD               	movf	clearEvents@io& (0+255),w,b
 25469  009FEE  0D04               	mullw	4
 25470  009FF0  50F3               	movf	243,w,c
 25471  009FF2  0F08               	addlw	8
 25472  009FF4  EC18  F041         	call	_deleteHappeningRange
 25473                           
 25474                           ; BSR set to: 0
 25475  009FF8  0012               	return		;funcret
 25476  009FFA                     __end_of_clearEvents:
 25477                           	callstack 0
 25478                           
 25479 ;; *************** function _deleteHappeningRange *****************
 25480 ;; Defined at:
 25481 ;;		line 152 in file "../../github/CBUSlib/happeningsActions.c"
 25482 ;; Parameters:    Size  Location     Type
 25483 ;;  action          1    wreg     unsigned char 
 25484 ;;  number          1   83[BANK0 ] unsigned char 
 25485 ;; Auto vars:     Size  Location     Type
 25486 ;;  action          1   89[BANK0 ] unsigned char 
 25487 ;;  pa              1   90[BANK0 ] unsigned char 
 25488 ;;  f               1    0        struct .
 25489 ;;  tableIndex      1   91[BANK0 ] unsigned char 
 25490 ;; Return value:  Size  Location     Type
 25491 ;;                  1    wreg      void 
 25492 ;; Registers used:
 25493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25494 ;; Tracked objects:
 25495 ;;		On entry : 3F/0
 25496 ;;		On exit  : 3F/0
 25497 ;;		Unchanged: 0/0
 25498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25499 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25500 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25501 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25502 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25503 ;;Total ram usage:        9 bytes
 25504 ;; Hardware stack levels used: 1
 25505 ;; Hardware stack levels required when called: 19
 25506 ;; This function calls:
 25507 ;;		_checkRemoveTableEntry
 25508 ;;		_flushFlashImage
 25509 ;;		_readFlashBlock
 25510 ;;		_rebuildHashtable
 25511 ;;		_validStart
 25512 ;;		_writeEv
 25513 ;; This function is called by:
 25514 ;;		_clearEvents
 25515 ;; This function uses a non-reentrant model
 25516 ;;
 25517                           
 25518                           	psect	text118
 25519  008230                     __ptext118:
 25520                           	callstack 0
 25521  008230                     _deleteHappeningRange:
 25522                           	callstack 6
 25523                           
 25524                           ; BSR set to: 0
 25525                           ;incstack = 0
 25526                           ;deleteHappeningRange@action stored from wreg
 25527  008230  6FB9               	movwf	deleteHappeningRange@action& (0+255),b
 25528                           
 25529                           ;happeningsActions.c: 153: unsigned char tableIndex;;happeningsActions.c: 154: for (tabl
      +                          eIndex=0; tableIndex < 255U; tableIndex++) {
 25530  008232  0E00               	movlw	0
 25531  008234  0100               	movlb	0	; () banked
 25532  008236  6FBB               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 25533  008238                     l18203:
 25534                           
 25535                           ; BSR set to: 0
 25536                           ;happeningsActions.c: 155: if ( validStart(tableIndex)) {
 25537  008238  51BB               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 25538  00823A  ECF8  F050         	call	_validStart
 25539  00823E  0900               	iorlw	0
 25540  008240  B4D8               	btfsc	status,2,c
 25541  008242  D043               	goto	l18213
 25542                           
 25543                           ; BSR set to: 0
 25544  008244  51BB               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 25545  008246  0D10               	mullw	16
 25546  008248  CFF3 F0B4          	movff	prodl,??_deleteHappeningRange
 25547  00824C  CFF4 F0B5          	movff	prodh,??_deleteHappeningRange+1
 25548  008250  51E9               	movf	_eventTable& (0+255),w,b
 25549  008252  25B4               	addwf	??_deleteHappeningRange& (0+255),w,b
 25550  008254  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 25551  008256  51EA               	movf	(_eventTable+1)& (0+255),w,b
 25552  008258  21B5               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 25553  00825A  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 25554  00825C  EC8D  F03D         	call	_readFlashBlock	;wreg free
 25555                           
 25556                           ;happeningsActions.c: 159: pa = readFlashBlock((WORD)(&(eventTable[tableIndex].evs[0])))
      +                          ;
 25557  008260  51BB               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 25558  008262  0D10               	mullw	16
 25559  008264  CFF3 F0B4          	movff	prodl,??_deleteHappeningRange
 25560  008268  CFF4 F0B5          	movff	prodh,??_deleteHappeningRange+1
 25561  00826C  51E9               	movf	_eventTable& (0+255),w,b
 25562  00826E  27B4               	addwf	??_deleteHappeningRange& (0+255),f,b
 25563  008270  51EA               	movf	(_eventTable+1)& (0+255),w,b
 25564  008272  23B5               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 25565  008274  0E06               	movlw	6
 25566  008276  25B4               	addwf	??_deleteHappeningRange& (0+255),w,b
 25567  008278  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 25568  00827A  0E00               	movlw	0
 25569  00827C  21B5               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 25570  00827E  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 25571  008280  EC8D  F03D         	call	_readFlashBlock	;wreg free
 25572  008284  6FBA               	movwf	deleteHappeningRange@pa& (0+255),b
 25573                           
 25574                           ; BSR set to: 0
 25575                           ;happeningsActions.c: 160: if ((pa >= action) && (pa < action+number)) {
 25576  008286  51B9               	movf	deleteHappeningRange@action& (0+255),w,b
 25577  008288  5DBA               	subwf	deleteHappeningRange@pa& (0+255),w,b
 25578  00828A  A0D8               	btfss	status,0,c
 25579  00828C  D01E               	goto	l18213
 25580                           
 25581                           ; BSR set to: 0
 25582  00828E  51B3               	movf	deleteHappeningRange@number& (0+255),w,b
 25583  008290  C0B9  F0B4         	movff	deleteHappeningRange@action,??_deleteHappeningRange
 25584  008294  6BB5               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 25585  008296  27B4               	addwf	??_deleteHappeningRange& (0+255),f,b
 25586  008298  0E00               	movlw	0
 25587  00829A  23B5               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 25588  00829C  51BA               	movf	deleteHappeningRange@pa& (0+255),w,b
 25589  00829E  6FB6               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 25590  0082A0  6BB7               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 25591  0082A2  51B4               	movf	??_deleteHappeningRange& (0+255),w,b
 25592  0082A4  5DB6               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 25593  0082A6  51B7               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 25594  0082A8  0A80               	xorlw	128
 25595  0082AA  6FB8               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 25596  0082AC  51B5               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 25597  0082AE  0A80               	xorlw	128
 25598  0082B0  59B8               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 25599  0082B2  B0D8               	btfsc	status,0,c
 25600  0082B4  D00A               	goto	l18213
 25601                           
 25602                           ; BSR set to: 0
 25603                           ;happeningsActions.c: 161: writeEv(tableIndex, 0, 0);
 25604  0082B6  0E00               	movlw	0
 25605  0082B8  6FA1               	movwf	writeEv@evNum& (0+255),b
 25606  0082BA  0E00               	movlw	0
 25607  0082BC  6FA2               	movwf	writeEv@evVal& (0+255),b
 25608  0082BE  51BB               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 25609  0082C0  ECB3  F020         	call	_writeEv
 25610                           
 25611                           ;happeningsActions.c: 162: checkRemoveTableEntry(tableIndex);
 25612  0082C4  51BB               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 25613  0082C6  ECEB  F04E         	call	_checkRemoveTableEntry
 25614  0082CA                     l18213:
 25615                           
 25616                           ; BSR set to: 0
 25617  0082CA  2BBB               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 25618                           
 25619                           ; BSR set to: 0
 25620  0082CC  29BB               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 25621  0082CE  A4D8               	btfss	status,2,c
 25622  0082D0  D7B3               	goto	l18203
 25623                           
 25624                           ; BSR set to: 0
 25625                           ;happeningsActions.c: 163: };happeningsActions.c: 164: };happeningsActions.c: 165: };hap
      +                          peningsActions.c: 166: flushFlashImage();
 25626  0082D2  EC0D  F053         	call	_flushFlashImage	;wreg free
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;happeningsActions.c: 168: rebuildHashtable();
 25630  0082D6  ECB2  F034         	call	_rebuildHashtable	;wreg free
 25631                           
 25632                           ; BSR set to: 0
 25633  0082DA  0012               	return		;funcret
 25634  0082DC                     __end_of_deleteHappeningRange:
 25635                           	callstack 0
 25636                           
 25637 ;; *************** function _deleteActionRange *****************
 25638 ;; Defined at:
 25639 ;;		line 226 in file "../../github/CBUSlib/happeningsActions.c"
 25640 ;; Parameters:    Size  Location     Type
 25641 ;;  action          1    wreg     unsigned char 
 25642 ;;  number          1   83[BANK0 ] unsigned char 
 25643 ;; Auto vars:     Size  Location     Type
 25644 ;;  action          1   90[BANK0 ] unsigned char 
 25645 ;;  e               1   91[BANK0 ] unsigned char 
 25646 ;;  updated         1   89[BANK0 ] unsigned char 
 25647 ;;  tableIndex      1   92[BANK0 ] unsigned char 
 25648 ;; Return value:  Size  Location     Type
 25649 ;;                  1    wreg      void 
 25650 ;; Registers used:
 25651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25652 ;; Tracked objects:
 25653 ;;		On entry : 3F/0
 25654 ;;		On exit  : 3F/0
 25655 ;;		Unchanged: 0/0
 25656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25657 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25658 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25659 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;Total ram usage:       10 bytes
 25662 ;; Hardware stack levels used: 1
 25663 ;; Hardware stack levels required when called: 19
 25664 ;; This function calls:
 25665 ;;		_checkRemoveTableEntry
 25666 ;;		_flushFlashImage
 25667 ;;		_getEVs
 25668 ;;		_rebuildHashtable
 25669 ;;		_validStart
 25670 ;;		_writeEv
 25671 ;; This function is called by:
 25672 ;;		_clearEvents
 25673 ;; This function uses a non-reentrant model
 25674 ;;
 25675                           
 25676                           	psect	text119
 25677  0082DC                     __ptext119:
 25678                           	callstack 0
 25679  0082DC                     _deleteActionRange:
 25680                           	callstack 6
 25681                           
 25682                           ; BSR set to: 0
 25683                           ;incstack = 0
 25684                           ;deleteActionRange@action stored from wreg
 25685  0082DC  6FBA               	movwf	deleteActionRange@action& (0+255),b
 25686                           
 25687                           ;happeningsActions.c: 227: unsigned char tableIndex;;happeningsActions.c: 228: for (tabl
      +                          eIndex=0; tableIndex < 255U; tableIndex++) {
 25688  0082DE  0E00               	movlw	0
 25689  0082E0  0100               	movlb	0	; () banked
 25690  0082E2  6FBC               	movwf	deleteActionRange@tableIndex& (0+255),b
 25691  0082E4                     l18159:
 25692                           
 25693                           ; BSR set to: 0
 25694                           ;happeningsActions.c: 229: if (validStart(tableIndex)) {
 25695  0082E4  51BC               	movf	deleteActionRange@tableIndex& (0+255),w,b
 25696  0082E6  ECF8  F050         	call	_validStart
 25697  0082EA  0900               	iorlw	0
 25698  0082EC  B4D8               	btfsc	status,2,c
 25699  0082EE  D041               	goto	l18189
 25700                           
 25701                           ; BSR set to: 0
 25702                           ;happeningsActions.c: 230: BOOL updated = 0;
 25703  0082F0  0E00               	movlw	0
 25704  0082F2  6FB9               	movwf	deleteActionRange@updated& (0+255),b
 25705                           
 25706                           ; BSR set to: 0
 25707                           ;happeningsActions.c: 231: unsigned char e;;happeningsActions.c: 232: if (getEVs(tableIn
      +                          dex)) {
 25708  0082F4  51BC               	movf	deleteActionRange@tableIndex& (0+255),w,b
 25709  0082F6  EC7A  F03B         	call	_getEVs
 25710  0082FA  0900               	iorlw	0
 25711  0082FC  A4D8               	btfss	status,2,c
 25712  0082FE  0012               	return	
 25713                           
 25714                           ; BSR set to: 0
 25715                           ;happeningsActions.c: 234: };happeningsActions.c: 236: for (e=1; e<20U; e++) {
 25716  008300  0E01               	movlw	1
 25717  008302  6FBB               	movwf	deleteActionRange@e& (0+255),b
 25718  008304                     l18173:
 25719                           
 25720                           ; BSR set to: 0
 25721                           ;happeningsActions.c: 237: if ((evs[e] >= action) && (evs[e] < action+number)) {
 25722  008304  0E40               	movlw	low _evs
 25723  008306  25BB               	addwf	deleteActionRange@e& (0+255),w,b
 25724  008308  6ED9               	movwf	fsr2l,c
 25725  00830A  6ADA               	clrf	fsr2h,c
 25726  00830C  0E02               	movlw	high _evs
 25727  00830E  22DA               	addwfc	fsr2h,f,c
 25728  008310  51BA               	movf	deleteActionRange@action& (0+255),w,b
 25729  008312  5CDE               	subwf	postinc2,w,c
 25730  008314  A0D8               	btfss	status,0,c
 25731  008316  D023               	goto	l18181
 25732                           
 25733                           ; BSR set to: 0
 25734  008318  51B3               	movf	deleteActionRange@number& (0+255),w,b
 25735  00831A  C0BA  F0B4         	movff	deleteActionRange@action,??_deleteActionRange
 25736  00831E  6BB5               	clrf	(??_deleteActionRange+1)& (0+255),b
 25737  008320  27B4               	addwf	??_deleteActionRange& (0+255),f,b
 25738  008322  0E00               	movlw	0
 25739  008324  23B5               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 25740  008326  0E40               	movlw	low _evs
 25741  008328  25BB               	addwf	deleteActionRange@e& (0+255),w,b
 25742  00832A  6ED9               	movwf	fsr2l,c
 25743  00832C  6ADA               	clrf	fsr2h,c
 25744  00832E  0E02               	movlw	high _evs
 25745  008330  22DA               	addwfc	fsr2h,f,c
 25746  008332  50DF               	movf	indf2,w,c
 25747  008334  6FB6               	movwf	(??_deleteActionRange+2)& (0+255),b
 25748  008336  6BB7               	clrf	(??_deleteActionRange+3)& (0+255),b
 25749  008338  51B4               	movf	??_deleteActionRange& (0+255),w,b
 25750  00833A  5DB6               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 25751  00833C  51B7               	movf	(??_deleteActionRange+3)& (0+255),w,b
 25752  00833E  0A80               	xorlw	128
 25753  008340  6FB8               	movwf	(??_deleteActionRange+4)& (0+255),b
 25754  008342  51B5               	movf	(??_deleteActionRange+1)& (0+255),w,b
 25755  008344  0A80               	xorlw	128
 25756  008346  59B8               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 25757  008348  B0D8               	btfsc	status,0,c
 25758  00834A  D009               	goto	l18181
 25759                           
 25760                           ; BSR set to: 0
 25761                           ;happeningsActions.c: 238: writeEv(tableIndex, e, 0);
 25762  00834C  C0BB  F0A1         	movff	deleteActionRange@e,writeEv@evNum
 25763  008350  0E00               	movlw	0
 25764  008352  6FA2               	movwf	writeEv@evVal& (0+255),b
 25765  008354  51BC               	movf	deleteActionRange@tableIndex& (0+255),w,b
 25766  008356  ECB3  F020         	call	_writeEv
 25767                           
 25768                           ; BSR set to: 0
 25769                           ;happeningsActions.c: 239: updated = 1;
 25770  00835A  0E01               	movlw	1
 25771  00835C  6FB9               	movwf	deleteActionRange@updated& (0+255),b
 25772  00835E                     l18181:
 25773                           
 25774                           ; BSR set to: 0
 25775  00835E  2BBB               	incf	deleteActionRange@e& (0+255),f,b
 25776                           
 25777                           ; BSR set to: 0
 25778  008360  0E13               	movlw	19
 25779  008362  65BB               	cpfsgt	deleteActionRange@e& (0+255),b
 25780  008364  D7CF               	goto	l18173
 25781                           
 25782                           ; BSR set to: 0
 25783                           ;happeningsActions.c: 240: };happeningsActions.c: 241: };happeningsActions.c: 242: if (u
      +                          pdated) {
 25784  008366  51B9               	movf	deleteActionRange@updated& (0+255),w,b
 25785  008368  B4D8               	btfsc	status,2,c
 25786  00836A  D003               	goto	l18189
 25787                           
 25788                           ; BSR set to: 0
 25789                           ;happeningsActions.c: 243: checkRemoveTableEntry(tableIndex);
 25790  00836C  51BC               	movf	deleteActionRange@tableIndex& (0+255),w,b
 25791  00836E  ECEB  F04E         	call	_checkRemoveTableEntry
 25792  008372                     l18189:
 25793                           
 25794                           ; BSR set to: 0
 25795  008372  2BBC               	incf	deleteActionRange@tableIndex& (0+255),f,b
 25796                           
 25797                           ; BSR set to: 0
 25798  008374  29BC               	incf	deleteActionRange@tableIndex& (0+255),w,b
 25799  008376  A4D8               	btfss	status,2,c
 25800  008378  D7B5               	goto	l18159
 25801                           
 25802                           ; BSR set to: 0
 25803                           ;happeningsActions.c: 244: };happeningsActions.c: 245: };happeningsActions.c: 246: };hap
      +                          peningsActions.c: 247: flushFlashImage();
 25804  00837A  EC0D  F053         	call	_flushFlashImage	;wreg free
 25805                           
 25806                           ; BSR set to: 0
 25807                           ;happeningsActions.c: 249: rebuildHashtable();
 25808  00837E  ECB2  F034         	call	_rebuildHashtable	;wreg free
 25809                           
 25810                           ; BSR set to: 0
 25811  008382  0012               	return		;funcret
 25812  008384                     __end_of_deleteActionRange:
 25813                           	callstack 0
 25814                           
 25815 ;; *************** function _addEvent *****************
 25816 ;; Defined at:
 25817 ;;		line 483 in file "../../github/CBUSlib/events.c"
 25818 ;; Parameters:    Size  Location     Type
 25819 ;;  nodeNumber      2   83[BANK0 ] unsigned int 
 25820 ;;  eventNumber     2   85[BANK0 ] unsigned int 
 25821 ;;  evNum           1   87[BANK0 ] unsigned char 
 25822 ;;  evVal           1   88[BANK0 ] unsigned char 
 25823 ;;  forceOwnNN      1   89[BANK0 ] unsigned char 
 25824 ;; Auto vars:     Size  Location     Type
 25825 ;;  e               1  102[BANK0 ] unsigned char 
 25826 ;;  f               1  101[BANK0 ] struct .
 25827 ;;  tableIndex      1  103[BANK0 ] unsigned char 
 25828 ;;  error           1  100[BANK0 ] unsigned char 
 25829 ;; Return value:  Size  Location     Type
 25830 ;;                  1    wreg      unsigned char 
 25831 ;; Registers used:
 25832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25833 ;; Tracked objects:
 25834 ;;		On entry : 3F/0
 25835 ;;		On exit  : 3F/0
 25836 ;;		Unchanged: 0/0
 25837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25838 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25841 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25842 ;;Total ram usage:       21 bytes
 25843 ;; Hardware stack levels used: 1
 25844 ;; Hardware stack levels required when called: 19
 25845 ;; This function calls:
 25846 ;;		_findEvent
 25847 ;;		_flushFlashImage
 25848 ;;		_readFlashBlock
 25849 ;;		_rebuildHashtable
 25850 ;;		_setFlashWord
 25851 ;;		_writeEv
 25852 ;;		_writeFlashByte
 25853 ;; This function is called by:
 25854 ;;		_initialise
 25855 ;;		_defaultEvents
 25856 ;;		_APP_addEvent
 25857 ;; This function uses a non-reentrant model
 25858 ;;
 25859                           
 25860                           	psect	text120
 25861  005C1E                     __ptext120:
 25862                           	callstack 0
 25863  005C1E                     _addEvent:
 25864                           	callstack 7
 25865                           
 25866                           ; BSR set to: 0
 25867                           ;events.c: 484: unsigned char tableIndex;;events.c: 485: unsigned char error;;events.c: 
      +                          487: tableIndex = findEvent(nodeNumber, eventNumber);
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;incstack = 0
 25871  005C1E  C0B3  F08E         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 25872  005C22  C0B4  F08F         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 25873  005C26  C0B5  F090         	movff	addEvent@eventNumber,findEvent@eventNumber
 25874  005C2A  C0B6  F091         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 25875  005C2E  ECD6  F044         	call	_findEvent	;wreg free
 25876  005C32  6FC7               	movwf	addEvent@tableIndex& (0+255),b
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;events.c: 488: if (tableIndex == 0xff) {
 25880  005C34  29C7               	incf	addEvent@tableIndex& (0+255),w,b
 25881  005C36  A4D8               	btfss	status,2,c
 25882  005C38  D0CA               	goto	l18407
 25883                           
 25884                           ; BSR set to: 0
 25885                           ;events.c: 494: if (evVal == 0) {
 25886  005C3A  51B8               	movf	addEvent@evVal& (0+255),w,b
 25887  005C3C  A4D8               	btfss	status,2,c
 25888  005C3E  D002               	goto	l18363
 25889  005C40                     u22620:
 25890                           
 25891                           ; BSR set to: 0
 25892                           ;events.c: 495: return 0;
 25893  005C40  0E00               	movlw	0
 25894  005C42  0012               	return	
 25895  005C44                     l18363:
 25896                           
 25897                           ; BSR set to: 0
 25898                           ;events.c: 496: };events.c: 497: error = 1;
 25899  005C44  0E01               	movlw	1
 25900  005C46  6FC4               	movwf	addEvent@error& (0+255),b
 25901                           
 25902                           ;events.c: 499: for (tableIndex=0; tableIndex<255U; tableIndex++) {
 25903  005C48  0E00               	movlw	0
 25904  005C4A  6FC7               	movwf	addEvent@tableIndex& (0+255),b
 25905  005C4C                     l18369:
 25906                           
 25907                           ; BSR set to: 0
 25908                           ;events.c: 500: EventTableFlags f;;events.c: 501: f.asByte = readFlashBlock((WORD)(&(eve
      +                          ntTable[tableIndex].flags.asByte)));
 25909  005C4C  51C7               	movf	addEvent@tableIndex& (0+255),w,b
 25910  005C4E  0D10               	mullw	16
 25911  005C50  CFF3 F0BA          	movff	prodl,??_addEvent
 25912  005C54  CFF4 F0BB          	movff	prodh,??_addEvent+1
 25913  005C58  51E9               	movf	_eventTable& (0+255),w,b
 25914  005C5A  25BA               	addwf	??_addEvent& (0+255),w,b
 25915  005C5C  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 25916  005C5E  51EA               	movf	(_eventTable+1)& (0+255),w,b
 25917  005C60  21BB               	addwfc	(??_addEvent+1)& (0+255),w,b
 25918  005C62  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 25919  005C64  EC8D  F03D         	call	_readFlashBlock	;wreg free
 25920  005C68  6FC5               	movwf	addEvent@f& (0+255),b
 25921                           
 25922                           ; BSR set to: 0
 25923                           ;events.c: 502: if (f.freeEntry) {
 25924  005C6A  AFC5               	btfss	addEvent@f& (0+255),7,b
 25925  005C6C  D0A7               	goto	l18397
 25926                           
 25927                           ; BSR set to: 0
 25928                           ;events.c: 503: unsigned char e;;events.c: 505: setFlashWord((WORD*)&(eventTable[tableIn
      +                          dex].event.NN), nodeNumber);
 25929  005C6E  0E02               	movlw	2
 25930  005C70  6FBA               	movwf	??_addEvent& (0+255),b
 25931  005C72  0E00               	movlw	0
 25932  005C74  6FBB               	movwf	(??_addEvent+1)& (0+255),b
 25933  005C76  51C7               	movf	addEvent@tableIndex& (0+255),w,b
 25934  005C78  0D10               	mullw	16
 25935  005C7A  CFF3 F0BC          	movff	prodl,??_addEvent+2
 25936  005C7E  CFF4 F0BD          	movff	prodh,??_addEvent+3
 25937  005C82  51BC               	movf	(??_addEvent+2)& (0+255),w,b
 25938  005C84  25E9               	addwf	_eventTable& (0+255),w,b
 25939  005C86  6FBE               	movwf	(??_addEvent+4)& (0+255),b
 25940  005C88  51BD               	movf	(??_addEvent+3)& (0+255),w,b
 25941  005C8A  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 25942  005C8C  6FBF               	movwf	(??_addEvent+5)& (0+255),b
 25943  005C8E  0E00               	movlw	0
 25944  005C90  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 25945  005C92  6FC0               	movwf	(??_addEvent+6)& (0+255),b
 25946  005C94  51BA               	movf	??_addEvent& (0+255),w,b
 25947  005C96  25BE               	addwf	(??_addEvent+4)& (0+255),w,b
 25948  005C98  6FC1               	movwf	(??_addEvent+7)& (0+255),b
 25949  005C9A  51BB               	movf	(??_addEvent+1)& (0+255),w,b
 25950  005C9C  21BF               	addwfc	(??_addEvent+5)& (0+255),w,b
 25951  005C9E  6FC2               	movwf	(??_addEvent+8)& (0+255),b
 25952  005CA0  0E00               	movlw	0
 25953  005CA2  21C0               	addwfc	(??_addEvent+6)& (0+255),w,b
 25954  005CA4  6FC3               	movwf	(??_addEvent+9)& (0+255),b
 25955  005CA6  C0C1  F087         	movff	??_addEvent+7,setFlashWord@flashAddr
 25956  005CAA  C0C2  F088         	movff	??_addEvent+8,setFlashWord@flashAddr+1
 25957  005CAE  C0C3  F089         	movff	??_addEvent+9,setFlashWord@flashAddr+2
 25958  005CB2  C0B3  F08A         	movff	addEvent@nodeNumber,setFlashWord@flashData
 25959  005CB6  C0B4  F08B         	movff	addEvent@nodeNumber+1,setFlashWord@flashData+1
 25960  005CBA  EC89  F04F         	call	_setFlashWord	;wreg free
 25961                           
 25962                           ;events.c: 506: setFlashWord((WORD*)&(eventTable[tableIndex].event.EN), eventNumber);
 25963  005CBE  0E04               	movlw	4
 25964  005CC0  6FBA               	movwf	??_addEvent& (0+255),b
 25965  005CC2  0E00               	movlw	0
 25966  005CC4  6FBB               	movwf	(??_addEvent+1)& (0+255),b
 25967  005CC6  51C7               	movf	addEvent@tableIndex& (0+255),w,b
 25968  005CC8  0D10               	mullw	16
 25969  005CCA  CFF3 F0BC          	movff	prodl,??_addEvent+2
 25970  005CCE  CFF4 F0BD          	movff	prodh,??_addEvent+3
 25971  005CD2  51BC               	movf	(??_addEvent+2)& (0+255),w,b
 25972  005CD4  25E9               	addwf	_eventTable& (0+255),w,b
 25973  005CD6  6FBE               	movwf	(??_addEvent+4)& (0+255),b
 25974  005CD8  51BD               	movf	(??_addEvent+3)& (0+255),w,b
 25975  005CDA  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 25976  005CDC  6FBF               	movwf	(??_addEvent+5)& (0+255),b
 25977  005CDE  0E00               	movlw	0
 25978  005CE0  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 25979  005CE2  6FC0               	movwf	(??_addEvent+6)& (0+255),b
 25980  005CE4  51BA               	movf	??_addEvent& (0+255),w,b
 25981  005CE6  25BE               	addwf	(??_addEvent+4)& (0+255),w,b
 25982  005CE8  6FC1               	movwf	(??_addEvent+7)& (0+255),b
 25983  005CEA  51BB               	movf	(??_addEvent+1)& (0+255),w,b
 25984  005CEC  21BF               	addwfc	(??_addEvent+5)& (0+255),w,b
 25985  005CEE  6FC2               	movwf	(??_addEvent+8)& (0+255),b
 25986  005CF0  0E00               	movlw	0
 25987  005CF2  21C0               	addwfc	(??_addEvent+6)& (0+255),w,b
 25988  005CF4  6FC3               	movwf	(??_addEvent+9)& (0+255),b
 25989  005CF6  C0C1  F087         	movff	??_addEvent+7,setFlashWord@flashAddr
 25990  005CFA  C0C2  F088         	movff	??_addEvent+8,setFlashWord@flashAddr+1
 25991  005CFE  C0C3  F089         	movff	??_addEvent+9,setFlashWord@flashAddr+2
 25992  005D02  C0B5  F08A         	movff	addEvent@eventNumber,setFlashWord@flashData
 25993  005D06  C0B6  F08B         	movff	addEvent@eventNumber+1,setFlashWord@flashData+1
 25994  005D0A  EC89  F04F         	call	_setFlashWord	;wreg free
 25995                           
 25996                           ; BSR set to: 0
 25997                           ;events.c: 508: f.asByte = 0;
 25998  005D0E  0E00               	movlw	0
 25999  005D10  6FC5               	movwf	addEvent@f& (0+255),b
 26000                           
 26001                           ; BSR set to: 0
 26002                           ;events.c: 509: f.forceOwnNN = forceOwnNN;
 26003  005D12  B1B9               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 26004  005D14  D002               	bra	u22645
 26005  005D16  9DC5               	bcf	addEvent@f& (0+255),6,b
 26006  005D18  D002               	bra	u22646
 26007  005D1A                     u22645:
 26008  005D1A  0100               	movlb	0	; () banked
 26009  005D1C  8DC5               	bsf	addEvent@f& (0+255),6,b
 26010  005D1E                     u22646:
 26011                           
 26012                           ; BSR set to: 0
 26013                           ;events.c: 510: writeFlashByte((BYTE*)&(eventTable[tableIndex].flags.asByte), f.asByte);
 26014  005D1E  51C7               	movf	addEvent@tableIndex& (0+255),w,b
 26015  005D20  0D10               	mullw	16
 26016  005D22  CFF3 F0BA          	movff	prodl,??_addEvent
 26017  005D26  CFF4 F0BB          	movff	prodh,??_addEvent+1
 26018  005D2A  51BA               	movf	??_addEvent& (0+255),w,b
 26019  005D2C  25E9               	addwf	_eventTable& (0+255),w,b
 26020  005D2E  6FBC               	movwf	(??_addEvent+2)& (0+255),b
 26021  005D30  51BB               	movf	(??_addEvent+1)& (0+255),w,b
 26022  005D32  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26023  005D34  6FBD               	movwf	(??_addEvent+3)& (0+255),b
 26024  005D36  0E00               	movlw	0
 26025  005D38  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26026  005D3A  6FBE               	movwf	(??_addEvent+4)& (0+255),b
 26027  005D3C  C0BC  F087         	movff	??_addEvent+2,writeFlashByte@flashAddr
 26028  005D40  C0BD  F088         	movff	??_addEvent+3,writeFlashByte@flashAddr+1
 26029  005D44  C0BE  F089         	movff	??_addEvent+4,writeFlashByte@flashAddr+2
 26030  005D48  C0C5  F08A         	movff	addEvent@f,writeFlashByte@flashData
 26031  005D4C  ECBA  F052         	call	_writeFlashByte	;wreg free
 26032                           
 26033                           ;events.c: 512: for (e = 0; e < 10U; e++) {
 26034  005D50  0E00               	movlw	0
 26035  005D52  6FC6               	movwf	addEvent@e& (0+255),b
 26036  005D54                     l18385:
 26037                           
 26038                           ; BSR set to: 0
 26039                           ;events.c: 513: writeFlashByte((BYTE*)&(eventTable[tableIndex].evs[e]), 0);
 26040  005D54  51C7               	movf	addEvent@tableIndex& (0+255),w,b
 26041  005D56  0D10               	mullw	16
 26042  005D58  CFF3 F0BA          	movff	prodl,??_addEvent
 26043  005D5C  CFF4 F0BB          	movff	prodh,??_addEvent+1
 26044  005D60  51C6               	movf	addEvent@e& (0+255),w,b
 26045  005D62  6FBC               	movwf	(??_addEvent+2)& (0+255),b
 26046  005D64  6BBD               	clrf	(??_addEvent+3)& (0+255),b
 26047  005D66  0E06               	movlw	6
 26048  005D68  27BC               	addwf	(??_addEvent+2)& (0+255),f,b
 26049  005D6A  0E00               	movlw	0
 26050  005D6C  23BD               	addwfc	(??_addEvent+3)& (0+255),f,b
 26051  005D6E  51BC               	movf	(??_addEvent+2)& (0+255),w,b
 26052  005D70  25E9               	addwf	_eventTable& (0+255),w,b
 26053  005D72  6FBE               	movwf	(??_addEvent+4)& (0+255),b
 26054  005D74  51BD               	movf	(??_addEvent+3)& (0+255),w,b
 26055  005D76  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26056  005D78  6FBF               	movwf	(??_addEvent+5)& (0+255),b
 26057  005D7A  0E00               	movlw	0
 26058  005D7C  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26059  005D7E  6FC0               	movwf	(??_addEvent+6)& (0+255),b
 26060  005D80  51BA               	movf	??_addEvent& (0+255),w,b
 26061  005D82  25BE               	addwf	(??_addEvent+4)& (0+255),w,b
 26062  005D84  6FC1               	movwf	(??_addEvent+7)& (0+255),b
 26063  005D86  51BB               	movf	(??_addEvent+1)& (0+255),w,b
 26064  005D88  21BF               	addwfc	(??_addEvent+5)& (0+255),w,b
 26065  005D8A  6FC2               	movwf	(??_addEvent+8)& (0+255),b
 26066  005D8C  0E00               	movlw	0
 26067  005D8E  21C0               	addwfc	(??_addEvent+6)& (0+255),w,b
 26068  005D90  6FC3               	movwf	(??_addEvent+9)& (0+255),b
 26069  005D92  C0C1  F087         	movff	??_addEvent+7,writeFlashByte@flashAddr
 26070  005D96  C0C2  F088         	movff	??_addEvent+8,writeFlashByte@flashAddr+1
 26071  005D9A  C0C3  F089         	movff	??_addEvent+9,writeFlashByte@flashAddr+2
 26072  005D9E  0E00               	movlw	0
 26073  005DA0  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 26074  005DA2  ECBA  F052         	call	_writeFlashByte	;wreg free
 26075                           
 26076                           ; BSR set to: 0
 26077  005DA6  2BC6               	incf	addEvent@e& (0+255),f,b
 26078                           
 26079                           ; BSR set to: 0
 26080  005DA8  0E09               	movlw	9
 26081  005DAA  65C6               	cpfsgt	addEvent@e& (0+255),b
 26082  005DAC  D7D3               	goto	l18385
 26083                           
 26084                           ; BSR set to: 0
 26085                           ;events.c: 514: };events.c: 515: flushFlashImage();
 26086  005DAE  EC0D  F053         	call	_flushFlashImage	;wreg free
 26087                           
 26088                           ; BSR set to: 0
 26089                           ;events.c: 517: rebuildHashtable();
 26090  005DB2  ECB2  F034         	call	_rebuildHashtable	;wreg free
 26091                           
 26092                           ; BSR set to: 0
 26093                           ;events.c: 519: error = 0;
 26094  005DB6  0E00               	movlw	0
 26095  005DB8  6FC4               	movwf	addEvent@error& (0+255),b
 26096                           
 26097                           ;events.c: 520: break;
 26098  005DBA  D004               	goto	u22660
 26099  005DBC                     l18397:
 26100                           
 26101                           ; BSR set to: 0
 26102  005DBC  2BC7               	incf	addEvent@tableIndex& (0+255),f,b
 26103                           
 26104                           ; BSR set to: 0
 26105  005DBE  29C7               	incf	addEvent@tableIndex& (0+255),w,b
 26106  005DC0  A4D8               	btfss	status,2,c
 26107  005DC2  D744               	goto	l18369
 26108  005DC4                     u22660:
 26109                           
 26110                           ; BSR set to: 0
 26111                           ;events.c: 521: };events.c: 522: };events.c: 523: if (error) {
 26112  005DC4  51C4               	movf	addEvent@error& (0+255),w,b
 26113  005DC6  B4D8               	btfsc	status,2,c
 26114  005DC8  D002               	goto	l18407
 26115                           
 26116                           ; BSR set to: 0
 26117                           ;events.c: 524: return 4;
 26118  005DCA  0E04               	movlw	4
 26119  005DCC  0012               	return	
 26120  005DCE                     l18407:
 26121                           
 26122                           ; BSR set to: 0
 26123                           ;events.c: 525: };events.c: 526: };events.c: 528: if (writeEv(tableIndex, evNum, evVal))
      +                           {
 26124  005DCE  C0B7  F0A1         	movff	addEvent@evNum,writeEv@evNum
 26125  005DD2  C0B8  F0A2         	movff	addEvent@evVal,writeEv@evVal
 26126  005DD6  51C7               	movf	addEvent@tableIndex& (0+255),w,b
 26127  005DD8  ECB3  F020         	call	_writeEv
 26128  005DDC  0900               	iorlw	0
 26129  005DDE  B4D8               	btfsc	status,2,c
 26130  005DE0  D002               	goto	l18413
 26131                           
 26132                           ; BSR set to: 0
 26133                           ;events.c: 530: return 6;
 26134  005DE2  0E06               	movlw	6
 26135  005DE4  0012               	return	
 26136  005DE6                     l18413:
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;events.c: 531: };events.c: 533: flushFlashImage();
 26140  005DE6  EC0D  F053         	call	_flushFlashImage	;wreg free
 26141                           
 26142                           ; BSR set to: 0
 26143                           ;events.c: 535: rebuildHashtable();
 26144  005DEA  ECB2  F034         	call	_rebuildHashtable	;wreg free
 26145  005DEE  D728               	goto	u22620
 26146  005DF0                     __end_of_addEvent:
 26147                           	callstack 0
 26148                           
 26149 ;; *************** function _writeEv *****************
 26150 ;; Defined at:
 26151 ;;		line 587 in file "../../github/CBUSlib/events.c"
 26152 ;; Parameters:    Size  Location     Type
 26153 ;;  tableIndex      1    wreg     unsigned char 
 26154 ;;  evNum           1   65[BANK0 ] unsigned char 
 26155 ;;  evVal           1   66[BANK0 ] unsigned char 
 26156 ;; Auto vars:     Size  Location     Type
 26157 ;;  tableIndex      1   81[BANK0 ] unsigned char 
 26158 ;;  e               1   79[BANK0 ] unsigned char 
 26159 ;;  nextF           1   78[BANK0 ] struct .
 26160 ;;  nextIdx         1   82[BANK0 ] unsigned char 
 26161 ;;  f               1   80[BANK0 ] struct .
 26162 ;;  startIndex      1   77[BANK0 ] unsigned char 
 26163 ;; Return value:  Size  Location     Type
 26164 ;;                  1    wreg      unsigned char 
 26165 ;; Registers used:
 26166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26167 ;; Tracked objects:
 26168 ;;		On entry : 3F/0
 26169 ;;		On exit  : 3F/0
 26170 ;;		Unchanged: 0/0
 26171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26173 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26174 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26175 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26176 ;;Total ram usage:       18 bytes
 26177 ;; Hardware stack levels used: 1
 26178 ;; Hardware stack levels required when called: 18
 26179 ;; This function calls:
 26180 ;;		_checkRemoveTableEntry
 26181 ;;		_readFlashBlock
 26182 ;;		_setFlashWord
 26183 ;;		_writeFlashByte
 26184 ;; This function is called by:
 26185 ;;		_initialise
 26186 ;;		_APP_addEvent
 26187 ;;		_addEvent
 26188 ;;		_deleteHappeningRange
 26189 ;;		_deleteActionRange
 26190 ;; This function uses a non-reentrant model
 26191 ;;
 26192                           
 26193                           	psect	text121
 26194  004166                     __ptext121:
 26195                           	callstack 0
 26196  004166                     _writeEv:
 26197                           	callstack 11
 26198                           
 26199                           ; BSR set to: 0
 26200                           ;incstack = 0
 26201                           ;writeEv@tableIndex stored from wreg
 26202  004166  6FB1               	movwf	writeEv@tableIndex& (0+255),b
 26203                           
 26204                           ;events.c: 588: EventTableFlags f;;events.c: 589: unsigned char startIndex = tableIndex;
 26205  004168  C0B1  F0AD         	movff	writeEv@tableIndex,writeEv@startIndex
 26206                           
 26207                           ;events.c: 590: if (evNum >= 20U) {
 26208  00416C  0E13               	movlw	19
 26209  00416E  0100               	movlb	0	; () banked
 26210  004170  65A1               	cpfsgt	writeEv@evNum& (0+255),b
 26211  004172  D128               	goto	l18097
 26212                           
 26213                           ; BSR set to: 0
 26214                           ;events.c: 591: return 6;
 26215  004174  0E06               	movlw	6
 26216  004176  0012               	return	
 26217  004178                     l18039:
 26218                           
 26219                           ; BSR set to: 0
 26220                           ;events.c: 594: unsigned char nextIdx;;events.c: 597: evNum -= 10U;
 26221  004178  0E0A               	movlw	10
 26222  00417A  5FA1               	subwf	writeEv@evNum& (0+255),f,b
 26223                           
 26224                           ; BSR set to: 0
 26225                           ;events.c: 598: f.asByte = readFlashBlock((WORD)(&(eventTable[tableIndex].flags.asByte))
      +                          );
 26226  00417C  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26227  00417E  0D10               	mullw	16
 26228  004180  CFF3 F0A3          	movff	prodl,??_writeEv
 26229  004184  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26230  004188  51E9               	movf	_eventTable& (0+255),w,b
 26231  00418A  25A3               	addwf	??_writeEv& (0+255),w,b
 26232  00418C  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26233  00418E  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26234  004190  21A4               	addwfc	(??_writeEv+1)& (0+255),w,b
 26235  004192  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26236  004194  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26237  004198  6FB0               	movwf	writeEv@f& (0+255),b
 26238                           
 26239                           ; BSR set to: 0
 26240                           ;events.c: 600: if (f.continued) {
 26241  00419A  A9B0               	btfss	writeEv@f& (0+255),4,b
 26242  00419C  D018               	goto	l18053
 26243                           
 26244                           ; BSR set to: 0
 26245                           ;events.c: 601: tableIndex = readFlashBlock((WORD)(&(eventTable[tableIndex].next)));
 26246  00419E  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26247  0041A0  0D10               	mullw	16
 26248  0041A2  CFF3 F0A3          	movff	prodl,??_writeEv
 26249  0041A6  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26250  0041AA  51E9               	movf	_eventTable& (0+255),w,b
 26251  0041AC  27A3               	addwf	??_writeEv& (0+255),f,b
 26252  0041AE  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26253  0041B0  23A4               	addwfc	(??_writeEv+1)& (0+255),f,b
 26254  0041B2  0E01               	movlw	1
 26255  0041B4  25A3               	addwf	??_writeEv& (0+255),w,b
 26256  0041B6  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26257  0041B8  0E00               	movlw	0
 26258  0041BA  21A4               	addwfc	(??_writeEv+1)& (0+255),w,b
 26259  0041BC  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26260  0041BE  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26261  0041C2  6FB1               	movwf	writeEv@tableIndex& (0+255),b
 26262                           
 26263                           ; BSR set to: 0
 26264                           ;events.c: 602: if (tableIndex == 0xff) {
 26265  0041C4  29B1               	incf	writeEv@tableIndex& (0+255),w,b
 26266  0041C6  A4D8               	btfss	status,2,c
 26267  0041C8  D0FD               	goto	l18097
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;events.c: 603: return 7;
 26271  0041CA  0E07               	movlw	7
 26272  0041CC  0012               	return	
 26273  0041CE                     l18053:
 26274                           
 26275                           ; BSR set to: 0
 26276                           ;events.c: 612: if (evVal == 0) {
 26277  0041CE  51A2               	movf	writeEv@evVal& (0+255),w,b
 26278  0041D0  A4D8               	btfss	status,2,c
 26279  0041D2  D002               	goto	l18059
 26280  0041D4                     u22100:
 26281                           
 26282                           ; BSR set to: 0
 26283                           ;events.c: 613: return 0;
 26284  0041D4  0E00               	movlw	0
 26285  0041D6  0012               	return	
 26286  0041D8                     l18059:
 26287                           
 26288                           ; BSR set to: 0
 26289                           ;events.c: 614: };events.c: 616: for (nextIdx = tableIndex+1U ; nextIdx < 255U; nextIdx+
      +                          +) {
 26290  0041D8  29B1               	incf	writeEv@tableIndex& (0+255),w,b
 26291  0041DA  6FB2               	movwf	writeEv@nextIdx& (0+255),b
 26292  0041DC  D0EB               	goto	l18089
 26293  0041DE                     l18063:
 26294                           
 26295                           ; BSR set to: 0
 26296                           ;events.c: 617: EventTableFlags nextF;;events.c: 618: nextF.asByte = readFlashBlock((WOR
      +                          D)(&(eventTable[nextIdx].flags.asByte)));
 26297  0041DE  51B2               	movf	writeEv@nextIdx& (0+255),w,b
 26298  0041E0  0D10               	mullw	16
 26299  0041E2  CFF3 F0A3          	movff	prodl,??_writeEv
 26300  0041E6  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26301  0041EA  51E9               	movf	_eventTable& (0+255),w,b
 26302  0041EC  25A3               	addwf	??_writeEv& (0+255),w,b
 26303  0041EE  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26304  0041F0  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26305  0041F2  21A4               	addwfc	(??_writeEv+1)& (0+255),w,b
 26306  0041F4  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26307  0041F6  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26308  0041FA  6FAE               	movwf	writeEv@nextF& (0+255),b
 26309                           
 26310                           ; BSR set to: 0
 26311                           ;events.c: 619: if (nextF.freeEntry) {
 26312  0041FC  AFAE               	btfss	writeEv@nextF& (0+255),7,b
 26313  0041FE  D0D9               	goto	l18087
 26314                           
 26315                           ; BSR set to: 0
 26316                           ;events.c: 620: unsigned char e;;events.c: 622: setFlashWord((WORD*)&(eventTable[nextIdx
      +                          ].event.NN), 0xffff);
 26317  004200  0E02               	movlw	2
 26318  004202  6FA3               	movwf	??_writeEv& (0+255),b
 26319  004204  0E00               	movlw	0
 26320  004206  6FA4               	movwf	(??_writeEv+1)& (0+255),b
 26321  004208  51B2               	movf	writeEv@nextIdx& (0+255),w,b
 26322  00420A  0D10               	mullw	16
 26323  00420C  CFF3 F0A5          	movff	prodl,??_writeEv+2
 26324  004210  CFF4 F0A6          	movff	prodh,??_writeEv+3
 26325  004214  51A5               	movf	(??_writeEv+2)& (0+255),w,b
 26326  004216  25E9               	addwf	_eventTable& (0+255),w,b
 26327  004218  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26328  00421A  51A6               	movf	(??_writeEv+3)& (0+255),w,b
 26329  00421C  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26330  00421E  6FA8               	movwf	(??_writeEv+5)& (0+255),b
 26331  004220  0E00               	movlw	0
 26332  004222  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26333  004224  6FA9               	movwf	(??_writeEv+6)& (0+255),b
 26334  004226  51A3               	movf	??_writeEv& (0+255),w,b
 26335  004228  25A7               	addwf	(??_writeEv+4)& (0+255),w,b
 26336  00422A  6FAA               	movwf	(??_writeEv+7)& (0+255),b
 26337  00422C  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26338  00422E  21A8               	addwfc	(??_writeEv+5)& (0+255),w,b
 26339  004230  6FAB               	movwf	(??_writeEv+8)& (0+255),b
 26340  004232  0E00               	movlw	0
 26341  004234  21A9               	addwfc	(??_writeEv+6)& (0+255),w,b
 26342  004236  6FAC               	movwf	(??_writeEv+9)& (0+255),b
 26343  004238  C0AA  F087         	movff	??_writeEv+7,setFlashWord@flashAddr
 26344  00423C  C0AB  F088         	movff	??_writeEv+8,setFlashWord@flashAddr+1
 26345  004240  C0AC  F089         	movff	??_writeEv+9,setFlashWord@flashAddr+2
 26346  004244  0EFF               	movlw	255
 26347  004246  6F8B               	movwf	(setFlashWord@flashData+1)& (0+255),b
 26348  004248  698A               	setf	setFlashWord@flashData& (0+255),b
 26349  00424A  EC89  F04F         	call	_setFlashWord	;wreg free
 26350                           
 26351                           ;events.c: 623: setFlashWord((WORD*)&(eventTable[nextIdx].event.EN), 0xffff);
 26352  00424E  0E04               	movlw	4
 26353  004250  6FA3               	movwf	??_writeEv& (0+255),b
 26354  004252  0E00               	movlw	0
 26355  004254  6FA4               	movwf	(??_writeEv+1)& (0+255),b
 26356  004256  51B2               	movf	writeEv@nextIdx& (0+255),w,b
 26357  004258  0D10               	mullw	16
 26358  00425A  CFF3 F0A5          	movff	prodl,??_writeEv+2
 26359  00425E  CFF4 F0A6          	movff	prodh,??_writeEv+3
 26360  004262  51A5               	movf	(??_writeEv+2)& (0+255),w,b
 26361  004264  25E9               	addwf	_eventTable& (0+255),w,b
 26362  004266  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26363  004268  51A6               	movf	(??_writeEv+3)& (0+255),w,b
 26364  00426A  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26365  00426C  6FA8               	movwf	(??_writeEv+5)& (0+255),b
 26366  00426E  0E00               	movlw	0
 26367  004270  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26368  004272  6FA9               	movwf	(??_writeEv+6)& (0+255),b
 26369  004274  51A3               	movf	??_writeEv& (0+255),w,b
 26370  004276  25A7               	addwf	(??_writeEv+4)& (0+255),w,b
 26371  004278  6FAA               	movwf	(??_writeEv+7)& (0+255),b
 26372  00427A  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26373  00427C  21A8               	addwfc	(??_writeEv+5)& (0+255),w,b
 26374  00427E  6FAB               	movwf	(??_writeEv+8)& (0+255),b
 26375  004280  0E00               	movlw	0
 26376  004282  21A9               	addwfc	(??_writeEv+6)& (0+255),w,b
 26377  004284  6FAC               	movwf	(??_writeEv+9)& (0+255),b
 26378  004286  C0AA  F087         	movff	??_writeEv+7,setFlashWord@flashAddr
 26379  00428A  C0AB  F088         	movff	??_writeEv+8,setFlashWord@flashAddr+1
 26380  00428E  C0AC  F089         	movff	??_writeEv+9,setFlashWord@flashAddr+2
 26381  004292  0EFF               	movlw	255
 26382  004294  6F8B               	movwf	(setFlashWord@flashData+1)& (0+255),b
 26383  004296  698A               	setf	setFlashWord@flashData& (0+255),b
 26384  004298  EC89  F04F         	call	_setFlashWord	;wreg free
 26385                           
 26386                           ;events.c: 624: writeFlashByte((BYTE*)&(eventTable[nextIdx].flags.asByte), 0x20);
 26387  00429C  51B2               	movf	writeEv@nextIdx& (0+255),w,b
 26388  00429E  0D10               	mullw	16
 26389  0042A0  CFF3 F0A3          	movff	prodl,??_writeEv
 26390  0042A4  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26391  0042A8  51A3               	movf	??_writeEv& (0+255),w,b
 26392  0042AA  25E9               	addwf	_eventTable& (0+255),w,b
 26393  0042AC  6FA5               	movwf	(??_writeEv+2)& (0+255),b
 26394  0042AE  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26395  0042B0  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26396  0042B2  6FA6               	movwf	(??_writeEv+3)& (0+255),b
 26397  0042B4  0E00               	movlw	0
 26398  0042B6  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26399  0042B8  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26400  0042BA  C0A5  F087         	movff	??_writeEv+2,writeFlashByte@flashAddr
 26401  0042BE  C0A6  F088         	movff	??_writeEv+3,writeFlashByte@flashAddr+1
 26402  0042C2  C0A7  F089         	movff	??_writeEv+4,writeFlashByte@flashAddr+2
 26403  0042C6  0E20               	movlw	32
 26404  0042C8  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 26405  0042CA  ECBA  F052         	call	_writeFlashByte	;wreg free
 26406                           
 26407                           ; BSR set to: 0
 26408                           ;events.c: 625: for (e = 0; e < 10U; e++) {
 26409  0042CE  0E00               	movlw	0
 26410  0042D0  6FAF               	movwf	writeEv@e& (0+255),b
 26411  0042D2                     l18075:
 26412                           
 26413                           ; BSR set to: 0
 26414                           ;events.c: 626: writeFlashByte((BYTE*)&(eventTable[nextIdx].evs[e]), 0);
 26415  0042D2  51B2               	movf	writeEv@nextIdx& (0+255),w,b
 26416  0042D4  0D10               	mullw	16
 26417  0042D6  CFF3 F0A3          	movff	prodl,??_writeEv
 26418  0042DA  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26419  0042DE  51AF               	movf	writeEv@e& (0+255),w,b
 26420  0042E0  6FA5               	movwf	(??_writeEv+2)& (0+255),b
 26421  0042E2  6BA6               	clrf	(??_writeEv+3)& (0+255),b
 26422  0042E4  0E06               	movlw	6
 26423  0042E6  27A5               	addwf	(??_writeEv+2)& (0+255),f,b
 26424  0042E8  0E00               	movlw	0
 26425  0042EA  23A6               	addwfc	(??_writeEv+3)& (0+255),f,b
 26426  0042EC  51A5               	movf	(??_writeEv+2)& (0+255),w,b
 26427  0042EE  25E9               	addwf	_eventTable& (0+255),w,b
 26428  0042F0  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26429  0042F2  51A6               	movf	(??_writeEv+3)& (0+255),w,b
 26430  0042F4  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26431  0042F6  6FA8               	movwf	(??_writeEv+5)& (0+255),b
 26432  0042F8  0E00               	movlw	0
 26433  0042FA  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26434  0042FC  6FA9               	movwf	(??_writeEv+6)& (0+255),b
 26435  0042FE  51A3               	movf	??_writeEv& (0+255),w,b
 26436  004300  25A7               	addwf	(??_writeEv+4)& (0+255),w,b
 26437  004302  6FAA               	movwf	(??_writeEv+7)& (0+255),b
 26438  004304  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26439  004306  21A8               	addwfc	(??_writeEv+5)& (0+255),w,b
 26440  004308  6FAB               	movwf	(??_writeEv+8)& (0+255),b
 26441  00430A  0E00               	movlw	0
 26442  00430C  21A9               	addwfc	(??_writeEv+6)& (0+255),w,b
 26443  00430E  6FAC               	movwf	(??_writeEv+9)& (0+255),b
 26444  004310  C0AA  F087         	movff	??_writeEv+7,writeFlashByte@flashAddr
 26445  004314  C0AB  F088         	movff	??_writeEv+8,writeFlashByte@flashAddr+1
 26446  004318  C0AC  F089         	movff	??_writeEv+9,writeFlashByte@flashAddr+2
 26447  00431C  0E00               	movlw	0
 26448  00431E  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 26449  004320  ECBA  F052         	call	_writeFlashByte	;wreg free
 26450                           
 26451                           ; BSR set to: 0
 26452  004324  2BAF               	incf	writeEv@e& (0+255),f,b
 26453                           
 26454                           ; BSR set to: 0
 26455  004326  0E09               	movlw	9
 26456  004328  65AF               	cpfsgt	writeEv@e& (0+255),b
 26457  00432A  D7D3               	goto	l18075
 26458                           
 26459                           ; BSR set to: 0
 26460                           ;events.c: 627: };events.c: 629: writeFlashByte((BYTE*)&(eventTable[tableIndex].next), n
      +                          extIdx);
 26461  00432C  0E01               	movlw	1
 26462  00432E  6FA3               	movwf	??_writeEv& (0+255),b
 26463  004330  0E00               	movlw	0
 26464  004332  6FA4               	movwf	(??_writeEv+1)& (0+255),b
 26465  004334  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26466  004336  0D10               	mullw	16
 26467  004338  CFF3 F0A5          	movff	prodl,??_writeEv+2
 26468  00433C  CFF4 F0A6          	movff	prodh,??_writeEv+3
 26469  004340  51A5               	movf	(??_writeEv+2)& (0+255),w,b
 26470  004342  25E9               	addwf	_eventTable& (0+255),w,b
 26471  004344  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26472  004346  51A6               	movf	(??_writeEv+3)& (0+255),w,b
 26473  004348  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26474  00434A  6FA8               	movwf	(??_writeEv+5)& (0+255),b
 26475  00434C  0E00               	movlw	0
 26476  00434E  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26477  004350  6FA9               	movwf	(??_writeEv+6)& (0+255),b
 26478  004352  51A3               	movf	??_writeEv& (0+255),w,b
 26479  004354  25A7               	addwf	(??_writeEv+4)& (0+255),w,b
 26480  004356  6FAA               	movwf	(??_writeEv+7)& (0+255),b
 26481  004358  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26482  00435A  21A8               	addwfc	(??_writeEv+5)& (0+255),w,b
 26483  00435C  6FAB               	movwf	(??_writeEv+8)& (0+255),b
 26484  00435E  0E00               	movlw	0
 26485  004360  21A9               	addwfc	(??_writeEv+6)& (0+255),w,b
 26486  004362  6FAC               	movwf	(??_writeEv+9)& (0+255),b
 26487  004364  C0AA  F087         	movff	??_writeEv+7,writeFlashByte@flashAddr
 26488  004368  C0AB  F088         	movff	??_writeEv+8,writeFlashByte@flashAddr+1
 26489  00436C  C0AC  F089         	movff	??_writeEv+9,writeFlashByte@flashAddr+2
 26490  004370  C0B2  F08A         	movff	writeEv@nextIdx,writeFlashByte@flashData
 26491  004374  ECBA  F052         	call	_writeFlashByte	;wreg free
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;events.c: 631: f.continued = 1;
 26495  004378  89B0               	bsf	writeEv@f& (0+255),4,b
 26496                           
 26497                           ;events.c: 632: writeFlashByte((BYTE*)&(eventTable[tableIndex].flags.asByte), f.asByte);
 26498  00437A  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26499  00437C  0D10               	mullw	16
 26500  00437E  CFF3 F0A3          	movff	prodl,??_writeEv
 26501  004382  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26502  004386  51A3               	movf	??_writeEv& (0+255),w,b
 26503  004388  25E9               	addwf	_eventTable& (0+255),w,b
 26504  00438A  6FA5               	movwf	(??_writeEv+2)& (0+255),b
 26505  00438C  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26506  00438E  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26507  004390  6FA6               	movwf	(??_writeEv+3)& (0+255),b
 26508  004392  0E00               	movlw	0
 26509  004394  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26510  004396  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26511  004398  C0A5  F087         	movff	??_writeEv+2,writeFlashByte@flashAddr
 26512  00439C  C0A6  F088         	movff	??_writeEv+3,writeFlashByte@flashAddr+1
 26513  0043A0  C0A7  F089         	movff	??_writeEv+4,writeFlashByte@flashAddr+2
 26514  0043A4  C0B0  F08A         	movff	writeEv@f,writeFlashByte@flashData
 26515  0043A8  ECBA  F052         	call	_writeFlashByte	;wreg free
 26516                           
 26517                           ; BSR set to: 0
 26518                           ;events.c: 633: tableIndex = nextIdx;
 26519  0043AC  C0B2  F0B1         	movff	writeEv@nextIdx,writeEv@tableIndex
 26520                           
 26521                           ;events.c: 634: break;
 26522  0043B0  D004               	goto	u22140
 26523  0043B2                     l18087:
 26524                           
 26525                           ; BSR set to: 0
 26526  0043B2  2BB2               	incf	writeEv@nextIdx& (0+255),f,b
 26527  0043B4                     l18089:
 26528                           
 26529                           ; BSR set to: 0
 26530  0043B4  29B2               	incf	writeEv@nextIdx& (0+255),w,b
 26531  0043B6  A4D8               	btfss	status,2,c
 26532  0043B8  D712               	goto	l18063
 26533  0043BA                     u22140:
 26534                           
 26535                           ; BSR set to: 0
 26536                           ;events.c: 635: };events.c: 636: };events.c: 637: if (nextIdx >= 255U) {
 26537  0043BA  29B2               	incf	writeEv@nextIdx& (0+255),w,b
 26538  0043BC  A4D8               	btfss	status,2,c
 26539  0043BE  D002               	goto	l18097
 26540                           
 26541                           ; BSR set to: 0
 26542                           ;events.c: 639: return 4;
 26543  0043C0  0E04               	movlw	4
 26544  0043C2  0012               	return	
 26545  0043C4                     l18097:
 26546                           
 26547                           ; BSR set to: 0
 26548  0043C4  0E0A               	movlw	10
 26549  0043C6  61A1               	cpfslt	writeEv@evNum& (0+255),b
 26550  0043C8  D6D7               	goto	l18039
 26551                           
 26552                           ; BSR set to: 0
 26553                           ;events.c: 640: };events.c: 641: };events.c: 642: };events.c: 644: writeFlashByte((BYTE*
      +                          )&(eventTable[tableIndex].evs[evNum]), evVal);
 26554  0043CA  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26555  0043CC  0D10               	mullw	16
 26556  0043CE  CFF3 F0A3          	movff	prodl,??_writeEv
 26557  0043D2  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26558  0043D6  51A1               	movf	writeEv@evNum& (0+255),w,b
 26559  0043D8  6FA5               	movwf	(??_writeEv+2)& (0+255),b
 26560  0043DA  6BA6               	clrf	(??_writeEv+3)& (0+255),b
 26561  0043DC  0E06               	movlw	6
 26562  0043DE  27A5               	addwf	(??_writeEv+2)& (0+255),f,b
 26563  0043E0  0E00               	movlw	0
 26564  0043E2  23A6               	addwfc	(??_writeEv+3)& (0+255),f,b
 26565  0043E4  51A5               	movf	(??_writeEv+2)& (0+255),w,b
 26566  0043E6  25E9               	addwf	_eventTable& (0+255),w,b
 26567  0043E8  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26568  0043EA  51A6               	movf	(??_writeEv+3)& (0+255),w,b
 26569  0043EC  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26570  0043EE  6FA8               	movwf	(??_writeEv+5)& (0+255),b
 26571  0043F0  0E00               	movlw	0
 26572  0043F2  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26573  0043F4  6FA9               	movwf	(??_writeEv+6)& (0+255),b
 26574  0043F6  51A3               	movf	??_writeEv& (0+255),w,b
 26575  0043F8  25A7               	addwf	(??_writeEv+4)& (0+255),w,b
 26576  0043FA  6FAA               	movwf	(??_writeEv+7)& (0+255),b
 26577  0043FC  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26578  0043FE  21A8               	addwfc	(??_writeEv+5)& (0+255),w,b
 26579  004400  6FAB               	movwf	(??_writeEv+8)& (0+255),b
 26580  004402  0E00               	movlw	0
 26581  004404  21A9               	addwfc	(??_writeEv+6)& (0+255),w,b
 26582  004406  6FAC               	movwf	(??_writeEv+9)& (0+255),b
 26583  004408  C0AA  F087         	movff	??_writeEv+7,writeFlashByte@flashAddr
 26584  00440C  C0AB  F088         	movff	??_writeEv+8,writeFlashByte@flashAddr+1
 26585  004410  C0AC  F089         	movff	??_writeEv+9,writeFlashByte@flashAddr+2
 26586  004414  C0A2  F08A         	movff	writeEv@evVal,writeFlashByte@flashData
 26587  004418  ECBA  F052         	call	_writeFlashByte	;wreg free
 26588                           
 26589                           ;events.c: 646: f.asByte = readFlashBlock((WORD)(&(eventTable[tableIndex].flags.asByte))
      +                          );
 26590  00441C  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26591  00441E  0D10               	mullw	16
 26592  004420  CFF3 F0A3          	movff	prodl,??_writeEv
 26593  004424  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26594  004428  51E9               	movf	_eventTable& (0+255),w,b
 26595  00442A  25A3               	addwf	??_writeEv& (0+255),w,b
 26596  00442C  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26597  00442E  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26598  004430  21A4               	addwfc	(??_writeEv+1)& (0+255),w,b
 26599  004432  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26600  004434  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26601  004438  6FB0               	movwf	writeEv@f& (0+255),b
 26602                           
 26603                           ; BSR set to: 0
 26604                           ;events.c: 647: if (f.eVsUsed <= evNum) {
 26605  00443A  51B0               	movf	writeEv@f& (0+255),w,b
 26606  00443C  0B0F               	andlw	15
 26607  00443E  6FA3               	movwf	??_writeEv& (0+255),b
 26608  004440  51A3               	movf	??_writeEv& (0+255),w,b
 26609  004442  5DA1               	subwf	writeEv@evNum& (0+255),w,b
 26610  004444  A0D8               	btfss	status,0,c
 26611  004446  D022               	goto	l18107
 26612                           
 26613                           ; BSR set to: 0
 26614                           ;events.c: 648: f.eVsUsed = evNum+1U;
 26615  004448  C0A1  F0A3         	movff	writeEv@evNum,??_writeEv
 26616  00444C  0E01               	movlw	1
 26617  00444E  27A3               	addwf	??_writeEv& (0+255),f,b
 26618  004450  51B0               	movf	writeEv@f& (0+255),w,b
 26619  004452  19A3               	xorwf	??_writeEv& (0+255),w,b
 26620  004454  0BF0               	andlw	-16
 26621  004456  19A3               	xorwf	??_writeEv& (0+255),w,b
 26622  004458  6FB0               	movwf	writeEv@f& (0+255),b
 26623                           
 26624                           ; BSR set to: 0
 26625                           ;events.c: 649: writeFlashByte((BYTE*)&(eventTable[tableIndex].flags.asByte), f.asByte);
 26626  00445A  51B1               	movf	writeEv@tableIndex& (0+255),w,b
 26627  00445C  0D10               	mullw	16
 26628  00445E  CFF3 F0A3          	movff	prodl,??_writeEv
 26629  004462  CFF4 F0A4          	movff	prodh,??_writeEv+1
 26630  004466  51A3               	movf	??_writeEv& (0+255),w,b
 26631  004468  25E9               	addwf	_eventTable& (0+255),w,b
 26632  00446A  6FA5               	movwf	(??_writeEv+2)& (0+255),b
 26633  00446C  51A4               	movf	(??_writeEv+1)& (0+255),w,b
 26634  00446E  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26635  004470  6FA6               	movwf	(??_writeEv+3)& (0+255),b
 26636  004472  0E00               	movlw	0
 26637  004474  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26638  004476  6FA7               	movwf	(??_writeEv+4)& (0+255),b
 26639  004478  C0A5  F087         	movff	??_writeEv+2,writeFlashByte@flashAddr
 26640  00447C  C0A6  F088         	movff	??_writeEv+3,writeFlashByte@flashAddr+1
 26641  004480  C0A7  F089         	movff	??_writeEv+4,writeFlashByte@flashAddr+2
 26642  004484  C0B0  F08A         	movff	writeEv@f,writeFlashByte@flashData
 26643  004488  ECBA  F052         	call	_writeFlashByte	;wreg free
 26644  00448C                     l18107:
 26645                           
 26646                           ; BSR set to: 0
 26647                           ;events.c: 650: };events.c: 652: if (evVal == 0) {
 26648  00448C  51A2               	movf	writeEv@evVal& (0+255),w,b
 26649  00448E  A4D8               	btfss	status,2,c
 26650  004490  D6A1               	goto	u22100
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;events.c: 653: checkRemoveTableEntry(startIndex);
 26654  004492  51AD               	movf	writeEv@startIndex& (0+255),w,b
 26655  004494  ECEB  F04E         	call	_checkRemoveTableEntry
 26656  004498  D69D               	goto	u22100
 26657  00449A                     __end_of_writeEv:
 26658                           	callstack 0
 26659                           
 26660 ;; *************** function _setFlashWord *****************
 26661 ;; Defined at:
 26662 ;;		line 354 in file "../../github/CBUSlib/romops.c"
 26663 ;; Parameters:    Size  Location     Type
 26664 ;;  flashAddr       3   39[BANK0 ] PTR unsigned int 
 26665 ;;		 -> ROM(65535), NULL(0), 
 26666 ;;  flashData       2   42[BANK0 ] unsigned int 
 26667 ;; Auto vars:     Size  Location     Type
 26668 ;;		None
 26669 ;; Return value:  Size  Location     Type
 26670 ;;                  1    wreg      void 
 26671 ;; Registers used:
 26672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26673 ;; Tracked objects:
 26674 ;;		On entry : 3F/0
 26675 ;;		On exit  : 3F/0
 26676 ;;		Unchanged: 0/0
 26677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26678 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26680 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26681 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26682 ;;Total ram usage:        7 bytes
 26683 ;; Hardware stack levels used: 1
 26684 ;; Hardware stack levels required when called: 14
 26685 ;; This function calls:
 26686 ;;		_writeFlashImage
 26687 ;; This function is called by:
 26688 ;;		_addEvent
 26689 ;;		_writeEv
 26690 ;; This function uses a non-reentrant model
 26691 ;;
 26692                           
 26693                           	psect	text122
 26694  009F12                     __ptext122:
 26695                           	callstack 0
 26696  009F12                     _setFlashWord:
 26697                           	callstack 14
 26698                           
 26699                           ; BSR set to: 0
 26700                           ;romops.c: 358: writeFlashImage( (BYTE*)flashAddr, (BYTE)(flashData & 0x00FF) );
 26701                           
 26702                           ; BSR set to: 0
 26703                           ;incstack = 0
 26704  009F12  C087  F07D         	movff	setFlashWord@flashAddr,writeFlashImage@addr
 26705  009F16  C088  F07E         	movff	setFlashWord@flashAddr+1,writeFlashImage@addr+1
 26706  009F1A  C089  F07F         	movff	setFlashWord@flashAddr+2,writeFlashImage@addr+2
 26707  009F1E  C08A  F080         	movff	setFlashWord@flashData,writeFlashImage@data
 26708  009F22  ECC2  F041         	call	_writeFlashImage	;wreg free
 26709                           
 26710                           ;romops.c: 359: writeFlashImage( ((BYTE*)flashAddr)+1, (BYTE)(flashData >> 8) );
 26711  009F26  0E01               	movlw	1
 26712  009F28  6F8C               	movwf	??_setFlashWord& (0+255),b
 26713  009F2A  0E00               	movlw	0
 26714  009F2C  6F8D               	movwf	(??_setFlashWord+1)& (0+255),b
 26715  009F2E  518C               	movf	??_setFlashWord& (0+255),w,b
 26716  009F30  2587               	addwf	setFlashWord@flashAddr& (0+255),w,b
 26717  009F32  6F7D               	movwf	writeFlashImage@addr& (0+255),b
 26718  009F34  518D               	movf	(??_setFlashWord+1)& (0+255),w,b
 26719  009F36  2188               	addwfc	(setFlashWord@flashAddr+1)& (0+255),w,b
 26720  009F38  6F7E               	movwf	(writeFlashImage@addr+1)& (0+255),b
 26721  009F3A  0E00               	movlw	0
 26722  009F3C  BF8D               	btfsc	(??_setFlashWord+1)& (0+255),7,b
 26723  009F3E  0EFF               	movlw	255
 26724  009F40  2189               	addwfc	(setFlashWord@flashAddr+2)& (0+255),w,b
 26725  009F42  6F7F               	movwf	(writeFlashImage@addr+2)& (0+255),b
 26726  009F44  C08B  F080         	movff	setFlashWord@flashData+1,writeFlashImage@data
 26727  009F48  ECC2  F041         	call	_writeFlashImage	;wreg free
 26728                           
 26729                           ; BSR set to: 0
 26730  009F4C  0012               	return		;funcret
 26731  009F4E                     __end_of_setFlashWord:
 26732                           	callstack 0
 26733                           
 26734 ;; *************** function _checkRemoveTableEntry *****************
 26735 ;; Defined at:
 26736 ;;		line 857 in file "../../github/CBUSlib/events.c"
 26737 ;; Parameters:    Size  Location     Type
 26738 ;;  tableIndex      1    wreg     unsigned char 
 26739 ;; Auto vars:     Size  Location     Type
 26740 ;;  tableIndex      1   63[BANK0 ] unsigned char 
 26741 ;;  e               1   64[BANK0 ] unsigned char 
 26742 ;; Return value:  Size  Location     Type
 26743 ;;                  1    wreg      void 
 26744 ;; Registers used:
 26745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26746 ;; Tracked objects:
 26747 ;;		On entry : 3F/0
 26748 ;;		On exit  : 3F/0
 26749 ;;		Unchanged: 0/0
 26750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26752 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26755 ;;Total ram usage:        2 bytes
 26756 ;; Hardware stack levels used: 1
 26757 ;; Hardware stack levels required when called: 17
 26758 ;; This function calls:
 26759 ;;		_getEVs
 26760 ;;		_removeTableEntry
 26761 ;;		_validStart
 26762 ;; This function is called by:
 26763 ;;		_APP_addEvent
 26764 ;;		_writeEv
 26765 ;;		_deleteHappeningRange
 26766 ;;		_deleteActionRange
 26767 ;; This function uses a non-reentrant model
 26768 ;;
 26769                           
 26770                           	psect	text123
 26771  009DD6                     __ptext123:
 26772                           	callstack 0
 26773  009DD6                     _checkRemoveTableEntry:
 26774                           	callstack 11
 26775                           
 26776                           ; BSR set to: 0
 26777                           ;incstack = 0
 26778                           ;checkRemoveTableEntry@tableIndex stored from wreg
 26779  009DD6  6F9F               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 26780                           
 26781                           ;events.c: 858: unsigned char e;;events.c: 860: if ( validStart(tableIndex)) {
 26782  009DD8  0100               	movlb	0	; () banked
 26783  009DDA  519F               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 26784  009DDC  ECF8  F050         	call	_validStart
 26785  009DE0  0900               	iorlw	0
 26786  009DE2  B4D8               	btfsc	status,2,c
 26787  009DE4  0012               	return	
 26788                           
 26789                           ; BSR set to: 0
 26790                           ;events.c: 861: if (getEVs(tableIndex)) {
 26791  009DE6  519F               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 26792  009DE8  EC7A  F03B         	call	_getEVs
 26793  009DEC  0900               	iorlw	0
 26794  009DEE  A4D8               	btfss	status,2,c
 26795  009DF0  0012               	return	
 26796                           
 26797                           ; BSR set to: 0
 26798                           ;events.c: 863: };events.c: 864: for (e=0; e<20U; e++) {
 26799  009DF2  0E00               	movlw	0
 26800  009DF4  6FA0               	movwf	checkRemoveTableEntry@e& (0+255),b
 26801  009DF6                     l17957:
 26802                           
 26803                           ; BSR set to: 0
 26804                           ;events.c: 865: if (evs[e] != 0) {
 26805  009DF6  0E40               	movlw	low _evs
 26806  009DF8  25A0               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 26807  009DFA  6ED9               	movwf	fsr2l,c
 26808  009DFC  6ADA               	clrf	fsr2h,c
 26809  009DFE  0E02               	movlw	high _evs
 26810  009E00  22DA               	addwfc	fsr2h,f,c
 26811  009E02  50DF               	movf	indf2,w,c
 26812  009E04  A4D8               	btfss	status,2,c
 26813  009E06  0012               	return	
 26814                           
 26815                           ; BSR set to: 0
 26816  009E08  2BA0               	incf	checkRemoveTableEntry@e& (0+255),f,b
 26817                           
 26818                           ; BSR set to: 0
 26819  009E0A  0E13               	movlw	19
 26820  009E0C  65A0               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 26821  009E0E  D7F3               	goto	l17957
 26822                           
 26823                           ; BSR set to: 0
 26824                           ;events.c: 867: };events.c: 868: };events.c: 869: removeTableEntry(tableIndex);
 26825  009E10  519F               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 26826  009E12  EC21  F03A         	call	_removeTableEntry
 26827                           
 26828                           ; BSR set to: 0
 26829  009E16  0012               	return		;funcret
 26830  009E18                     __end_of_checkRemoveTableEntry:
 26831                           	callstack 0
 26832                           
 26833 ;; *************** function _removeTableEntry *****************
 26834 ;; Defined at:
 26835 ;;		line 437 in file "../../github/CBUSlib/events.c"
 26836 ;; Parameters:    Size  Location     Type
 26837 ;;  tableIndex      1    wreg     unsigned char 
 26838 ;; Auto vars:     Size  Location     Type
 26839 ;;  tableIndex      1   62[BANK0 ] unsigned char 
 26840 ;;  f               1   61[BANK0 ] struct .
 26841 ;; Return value:  Size  Location     Type
 26842 ;;                  1    wreg      unsigned char 
 26843 ;; Registers used:
 26844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26845 ;; Tracked objects:
 26846 ;;		On entry : 3F/0
 26847 ;;		On exit  : 3F/0
 26848 ;;		Unchanged: 0/0
 26849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26852 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26853 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26854 ;;Total ram usage:        7 bytes
 26855 ;; Hardware stack levels used: 1
 26856 ;; Hardware stack levels required when called: 16
 26857 ;; This function calls:
 26858 ;;		_flushFlashImage
 26859 ;;		_readFlashBlock
 26860 ;;		_rebuildHashtable
 26861 ;;		_validStart
 26862 ;;		_writeFlashByte
 26863 ;; This function is called by:
 26864 ;;		_removeEvent
 26865 ;;		_checkRemoveTableEntry
 26866 ;; This function uses a non-reentrant model
 26867 ;;
 26868                           
 26869                           	psect	text124
 26870  007442                     __ptext124:
 26871                           	callstack 0
 26872  007442                     _removeTableEntry:
 26873                           	callstack 11
 26874                           
 26875                           ; BSR set to: 0
 26876                           ;incstack = 0
 26877                           ;removeTableEntry@tableIndex stored from wreg
 26878  007442  6F9E               	movwf	removeTableEntry@tableIndex& (0+255),b
 26879                           
 26880                           ;events.c: 438: EventTableFlags f;;events.c: 443: if (validStart(tableIndex)) {
 26881  007444  0100               	movlb	0	; () banked
 26882  007446  519E               	movf	removeTableEntry@tableIndex& (0+255),w,b
 26883  007448  ECF8  F050         	call	_validStart
 26884  00744C  0900               	iorlw	0
 26885  00744E  B4D8               	btfsc	status,2,c
 26886  007450  D06F               	goto	l17941
 26887                           
 26888                           ; BSR set to: 0
 26889                           ;events.c: 445: writeFlashByte((BYTE*)&(eventTable[tableIndex].flags.asByte), 0xff);
 26890  007452  519E               	movf	removeTableEntry@tableIndex& (0+255),w,b
 26891  007454  0D10               	mullw	16
 26892  007456  CFF3 F098          	movff	prodl,??_removeTableEntry
 26893  00745A  CFF4 F099          	movff	prodh,??_removeTableEntry+1
 26894  00745E  5198               	movf	??_removeTableEntry& (0+255),w,b
 26895  007460  25E9               	addwf	_eventTable& (0+255),w,b
 26896  007462  6F9A               	movwf	(??_removeTableEntry+2)& (0+255),b
 26897  007464  5199               	movf	(??_removeTableEntry+1)& (0+255),w,b
 26898  007466  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26899  007468  6F9B               	movwf	(??_removeTableEntry+3)& (0+255),b
 26900  00746A  0E00               	movlw	0
 26901  00746C  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26902  00746E  6F9C               	movwf	(??_removeTableEntry+4)& (0+255),b
 26903  007470  C09A  F087         	movff	??_removeTableEntry+2,writeFlashByte@flashAddr
 26904  007474  C09B  F088         	movff	??_removeTableEntry+3,writeFlashByte@flashAddr+1
 26905  007478  C09C  F089         	movff	??_removeTableEntry+4,writeFlashByte@flashAddr+2
 26906  00747C  0EFF               	movlw	255
 26907  00747E  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 26908  007480  ECBA  F052         	call	_writeFlashByte	;wreg free
 26909                           
 26910                           ;events.c: 447: f.asByte = readFlashBlock((WORD)(&(eventTable[tableIndex].flags.asByte))
      +                          );
 26911  007484  519E               	movf	removeTableEntry@tableIndex& (0+255),w,b
 26912  007486  0D10               	mullw	16
 26913  007488  CFF3 F098          	movff	prodl,??_removeTableEntry
 26914  00748C  CFF4 F099          	movff	prodh,??_removeTableEntry+1
 26915  007490  51E9               	movf	_eventTable& (0+255),w,b
 26916  007492  2598               	addwf	??_removeTableEntry& (0+255),w,b
 26917  007494  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26918  007496  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26919  007498  2199               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 26920  00749A  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26921  00749C  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26922  0074A0  6F9D               	movwf	removeTableEntry@f& (0+255),b
 26923                           
 26924                           ;events.c: 448: while (f.continued) {
 26925  0074A2  D040               	goto	l17935
 26926  0074A4                     l17925:
 26927                           
 26928                           ; BSR set to: 0
 26929                           ;events.c: 449: tableIndex = readFlashBlock((WORD)(& eventTable[tableIndex].next));
 26930  0074A4  519E               	movf	removeTableEntry@tableIndex& (0+255),w,b
 26931  0074A6  0D10               	mullw	16
 26932  0074A8  CFF3 F098          	movff	prodl,??_removeTableEntry
 26933  0074AC  CFF4 F099          	movff	prodh,??_removeTableEntry+1
 26934  0074B0  51E9               	movf	_eventTable& (0+255),w,b
 26935  0074B2  2798               	addwf	??_removeTableEntry& (0+255),f,b
 26936  0074B4  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26937  0074B6  2399               	addwfc	(??_removeTableEntry+1)& (0+255),f,b
 26938  0074B8  0E01               	movlw	1
 26939  0074BA  2598               	addwf	??_removeTableEntry& (0+255),w,b
 26940  0074BC  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26941  0074BE  0E00               	movlw	0
 26942  0074C0  2199               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 26943  0074C2  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26944  0074C4  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26945  0074C8  6F9E               	movwf	removeTableEntry@tableIndex& (0+255),b
 26946                           
 26947                           ;events.c: 450: f.asByte = readFlashBlock((WORD)(&(eventTable[tableIndex].flags.asByte))
      +                          );
 26948  0074CA  519E               	movf	removeTableEntry@tableIndex& (0+255),w,b
 26949  0074CC  0D10               	mullw	16
 26950  0074CE  CFF3 F098          	movff	prodl,??_removeTableEntry
 26951  0074D2  CFF4 F099          	movff	prodh,??_removeTableEntry+1
 26952  0074D6  51E9               	movf	_eventTable& (0+255),w,b
 26953  0074D8  2598               	addwf	??_removeTableEntry& (0+255),w,b
 26954  0074DA  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 26955  0074DC  51EA               	movf	(_eventTable+1)& (0+255),w,b
 26956  0074DE  2199               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 26957  0074E0  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 26958  0074E2  EC8D  F03D         	call	_readFlashBlock	;wreg free
 26959  0074E6  6F9D               	movwf	removeTableEntry@f& (0+255),b
 26960                           
 26961                           ; BSR set to: 0
 26962                           ;events.c: 452: if (tableIndex >= 255U) return 6;
 26963  0074E8  299E               	incf	removeTableEntry@tableIndex& (0+255),w,b
 26964  0074EA  A4D8               	btfss	status,2,c
 26965  0074EC  D002               	goto	l17933
 26966                           
 26967                           ; BSR set to: 0
 26968  0074EE  0E06               	movlw	6
 26969  0074F0  0012               	return	
 26970  0074F2                     l17933:
 26971                           
 26972                           ; BSR set to: 0
 26973                           ;events.c: 458: writeFlashByte((BYTE*)&(eventTable[tableIndex].flags.asByte), 0xff);
 26974  0074F2  519E               	movf	removeTableEntry@tableIndex& (0+255),w,b
 26975  0074F4  0D10               	mullw	16
 26976  0074F6  CFF3 F098          	movff	prodl,??_removeTableEntry
 26977  0074FA  CFF4 F099          	movff	prodh,??_removeTableEntry+1
 26978  0074FE  5198               	movf	??_removeTableEntry& (0+255),w,b
 26979  007500  25E9               	addwf	_eventTable& (0+255),w,b
 26980  007502  6F9A               	movwf	(??_removeTableEntry+2)& (0+255),b
 26981  007504  5199               	movf	(??_removeTableEntry+1)& (0+255),w,b
 26982  007506  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 26983  007508  6F9B               	movwf	(??_removeTableEntry+3)& (0+255),b
 26984  00750A  0E00               	movlw	0
 26985  00750C  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 26986  00750E  6F9C               	movwf	(??_removeTableEntry+4)& (0+255),b
 26987  007510  C09A  F087         	movff	??_removeTableEntry+2,writeFlashByte@flashAddr
 26988  007514  C09B  F088         	movff	??_removeTableEntry+3,writeFlashByte@flashAddr+1
 26989  007518  C09C  F089         	movff	??_removeTableEntry+4,writeFlashByte@flashAddr+2
 26990  00751C  0EFF               	movlw	255
 26991  00751E  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 26992  007520  ECBA  F052         	call	_writeFlashByte	;wreg free
 26993  007524                     l17935:
 26994                           
 26995                           ; BSR set to: 0
 26996  007524  B99D               	btfsc	removeTableEntry@f& (0+255),4,b
 26997  007526  D7BE               	goto	l17925
 26998                           
 26999                           ; BSR set to: 0
 27000                           ;events.c: 460: };events.c: 461: flushFlashImage();
 27001  007528  EC0D  F053         	call	_flushFlashImage	;wreg free
 27002                           
 27003                           ; BSR set to: 0
 27004                           ;events.c: 464: rebuildHashtable();
 27005  00752C  ECB2  F034         	call	_rebuildHashtable	;wreg free
 27006  007530                     l17941:
 27007                           
 27008                           ; BSR set to: 0
 27009                           ;events.c: 466: };events.c: 467: return 0;
 27010  007530  0E00               	movlw	0
 27011                           
 27012                           ; BSR set to: 0
 27013  007532  0012               	return		;funcret
 27014  007534                     __end_of_removeTableEntry:
 27015                           	callstack 0
 27016                           
 27017 ;; *************** function _getEVs *****************
 27018 ;; Defined at:
 27019 ;;		line 727 in file "../../github/CBUSlib/events.c"
 27020 ;; Parameters:    Size  Location     Type
 27021 ;;  tableIndex      1    wreg     unsigned char 
 27022 ;; Auto vars:     Size  Location     Type
 27023 ;;  tableIndex      1   38[BANK0 ] unsigned char 
 27024 ;;  evIdx           1   37[BANK0 ] unsigned char 
 27025 ;;  evNum           1   39[BANK0 ] unsigned char 
 27026 ;;  f               1   36[BANK0 ] struct .
 27027 ;; Return value:  Size  Location     Type
 27028 ;;                  1    wreg      unsigned char 
 27029 ;; Registers used:
 27030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27031 ;; Tracked objects:
 27032 ;;		On entry : 3F/0
 27033 ;;		On exit  : 3F/0
 27034 ;;		Unchanged: 0/0
 27035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27037 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27038 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27039 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27040 ;;Total ram usage:        7 bytes
 27041 ;; Hardware stack levels used: 1
 27042 ;; Hardware stack levels required when called: 14
 27043 ;; This function calls:
 27044 ;;		_readFlashBlock
 27045 ;;		_validStart
 27046 ;; This function is called by:
 27047 ;;		_processEvent
 27048 ;;		_checkRemoveTableEntry
 27049 ;;		_deleteActionRange
 27050 ;; This function uses a non-reentrant model
 27051 ;;
 27052                           
 27053                           	psect	text125
 27054  0076F4                     __ptext125:
 27055                           	callstack 0
 27056  0076F4                     _getEVs:
 27057                           	callstack 13
 27058                           
 27059                           ; BSR set to: 0
 27060                           ;incstack = 0
 27061                           ;getEVs@tableIndex stored from wreg
 27062  0076F4  6F86               	movwf	getEVs@tableIndex& (0+255),b
 27063                           
 27064                           ;events.c: 728: EventTableFlags f;;events.c: 729: unsigned char evNum;;events.c: 731: if
      +                           ( ! validStart(tableIndex)) {
 27065  0076F6  0100               	movlb	0	; () banked
 27066  0076F8  5186               	movf	getEVs@tableIndex& (0+255),w,b
 27067  0076FA  ECF8  F050         	call	_validStart
 27068  0076FE  0900               	iorlw	0
 27069  007700  A4D8               	btfss	status,2,c
 27070  007702  D002               	goto	l17857
 27071  007704                     u21790:
 27072                           
 27073                           ; BSR set to: 0
 27074                           ;events.c: 733: return 7;
 27075  007704  0E07               	movlw	7
 27076  007706  0012               	return	
 27077  007708                     l17857:
 27078                           
 27079                           ; BSR set to: 0
 27080                           ;events.c: 734: };events.c: 735: for (evNum=0; evNum < 20U; ) {
 27081  007708  0E00               	movlw	0
 27082  00770A  6F87               	movwf	getEVs@evNum& (0+255),b
 27083  00770C                     l17863:
 27084                           
 27085                           ; BSR set to: 0
 27086                           ;events.c: 736: unsigned char evIdx;;events.c: 737: for (evIdx=0; evIdx < 10U; evIdx++) 
      +                          {
 27087  00770C  0E00               	movlw	0
 27088  00770E  6F85               	movwf	getEVs@evIdx& (0+255),b
 27089  007710                     l17869:
 27090                           
 27091                           ; BSR set to: 0
 27092                           ;events.c: 738: evs[evNum] = readFlashBlock((WORD)(&(eventTable[tableIndex].evs[evIdx]))
      +                          );
 27093  007710  5186               	movf	getEVs@tableIndex& (0+255),w,b
 27094  007712  0D10               	mullw	16
 27095  007714  CFF3 F081          	movff	prodl,??_getEVs
 27096  007718  CFF4 F082          	movff	prodh,??_getEVs+1
 27097  00771C  5185               	movf	getEVs@evIdx& (0+255),w,b
 27098  00771E  2781               	addwf	??_getEVs& (0+255),f,b
 27099  007720  0E00               	movlw	0
 27100  007722  2382               	addwfc	(??_getEVs+1)& (0+255),f,b
 27101  007724  51E9               	movf	_eventTable& (0+255),w,b
 27102  007726  2781               	addwf	??_getEVs& (0+255),f,b
 27103  007728  51EA               	movf	(_eventTable+1)& (0+255),w,b
 27104  00772A  2382               	addwfc	(??_getEVs+1)& (0+255),f,b
 27105  00772C  0E06               	movlw	6
 27106  00772E  2581               	addwf	??_getEVs& (0+255),w,b
 27107  007730  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 27108  007732  0E00               	movlw	0
 27109  007734  2182               	addwfc	(??_getEVs+1)& (0+255),w,b
 27110  007736  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 27111  007738  EC8D  F03D         	call	_readFlashBlock	;wreg free
 27112  00773C  6F83               	movwf	(??_getEVs+2)& (0+255),b
 27113  00773E  0E40               	movlw	low _evs
 27114  007740  2587               	addwf	getEVs@evNum& (0+255),w,b
 27115  007742  6ED9               	movwf	fsr2l,c
 27116  007744  6ADA               	clrf	fsr2h,c
 27117  007746  0E02               	movlw	high _evs
 27118  007748  22DA               	addwfc	fsr2h,f,c
 27119  00774A  C083  FFDF         	movff	??_getEVs+2,indf2
 27120                           
 27121                           ; BSR set to: 0
 27122                           ;events.c: 739: evNum++;
 27123  00774E  2B87               	incf	getEVs@evNum& (0+255),f,b
 27124                           
 27125                           ; BSR set to: 0
 27126  007750  2B85               	incf	getEVs@evIdx& (0+255),f,b
 27127                           
 27128                           ; BSR set to: 0
 27129  007752  0E09               	movlw	9
 27130  007754  6585               	cpfsgt	getEVs@evIdx& (0+255),b
 27131  007756  D7DC               	goto	l17869
 27132                           
 27133                           ; BSR set to: 0
 27134                           ;events.c: 740: };events.c: 741: f.asByte = readFlashBlock((WORD)(&(eventTable[tableInde
      +                          x].flags.asByte)));
 27135  007758  5186               	movf	getEVs@tableIndex& (0+255),w,b
 27136  00775A  0D10               	mullw	16
 27137  00775C  CFF3 F081          	movff	prodl,??_getEVs
 27138  007760  CFF4 F082          	movff	prodh,??_getEVs+1
 27139  007764  51E9               	movf	_eventTable& (0+255),w,b
 27140  007766  2581               	addwf	??_getEVs& (0+255),w,b
 27141  007768  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 27142  00776A  51EA               	movf	(_eventTable+1)& (0+255),w,b
 27143  00776C  2182               	addwfc	(??_getEVs+1)& (0+255),w,b
 27144  00776E  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 27145  007770  EC8D  F03D         	call	_readFlashBlock	;wreg free
 27146  007774  6F84               	movwf	getEVs@f& (0+255),b
 27147                           
 27148                           ; BSR set to: 0
 27149                           ;events.c: 742: if (! f.continued) {
 27150  007776  B984               	btfsc	getEVs@f& (0+255),4,b
 27151  007778  D010               	goto	l17895
 27152  00777A                     u21810:
 27153                           
 27154                           ; BSR set to: 0
 27155                           ;events.c: 743: for (; evNum < 20U; evNum++) {
 27156  00777A  0E13               	movlw	19
 27157  00777C  6587               	cpfsgt	getEVs@evNum& (0+255),b
 27158  00777E  D001               	goto	l17885
 27159  007780  D00A               	goto	l17891
 27160  007782                     l17885:
 27161                           
 27162                           ; BSR set to: 0
 27163                           ;events.c: 744: evs[evNum] = 0;
 27164  007782  0E40               	movlw	low _evs
 27165  007784  2587               	addwf	getEVs@evNum& (0+255),w,b
 27166  007786  6ED9               	movwf	fsr2l,c
 27167  007788  6ADA               	clrf	fsr2h,c
 27168  00778A  0E02               	movlw	high _evs
 27169  00778C  22DA               	addwfc	fsr2h,f,c
 27170  00778E  0E00               	movlw	0
 27171  007790  6EDF               	movwf	indf2,c
 27172                           
 27173                           ; BSR set to: 0
 27174  007792  2B87               	incf	getEVs@evNum& (0+255),f,b
 27175  007794  D7F2               	goto	u21810
 27176  007796                     l17891:
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;events.c: 745: };events.c: 746: return 0;
 27180  007796  0E00               	movlw	0
 27181  007798  0012               	return	
 27182  00779A                     l17895:
 27183                           
 27184                           ; BSR set to: 0
 27185                           ;events.c: 747: };events.c: 748: tableIndex = readFlashBlock((WORD)(&(eventTable[tableIn
      +                          dex].next)));
 27186  00779A  5186               	movf	getEVs@tableIndex& (0+255),w,b
 27187  00779C  0D10               	mullw	16
 27188  00779E  CFF3 F081          	movff	prodl,??_getEVs
 27189  0077A2  CFF4 F082          	movff	prodh,??_getEVs+1
 27190  0077A6  51E9               	movf	_eventTable& (0+255),w,b
 27191  0077A8  2781               	addwf	??_getEVs& (0+255),f,b
 27192  0077AA  51EA               	movf	(_eventTable+1)& (0+255),w,b
 27193  0077AC  2382               	addwfc	(??_getEVs+1)& (0+255),f,b
 27194  0077AE  0E01               	movlw	1
 27195  0077B0  2581               	addwf	??_getEVs& (0+255),w,b
 27196  0077B2  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 27197  0077B4  0E00               	movlw	0
 27198  0077B6  2182               	addwfc	(??_getEVs+1)& (0+255),w,b
 27199  0077B8  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 27200  0077BA  EC8D  F03D         	call	_readFlashBlock	;wreg free
 27201  0077BE  6F86               	movwf	getEVs@tableIndex& (0+255),b
 27202                           
 27203                           ; BSR set to: 0
 27204                           ;events.c: 749: if (tableIndex == 0xff) {
 27205  0077C0  2986               	incf	getEVs@tableIndex& (0+255),w,b
 27206  0077C2  B4D8               	btfsc	status,2,c
 27207  0077C4  D79F               	goto	u21790
 27208                           
 27209                           ; BSR set to: 0
 27210  0077C6  0E13               	movlw	19
 27211  0077C8  6587               	cpfsgt	getEVs@evNum& (0+255),b
 27212  0077CA  D7A0               	goto	l17863
 27213  0077CC  D7E4               	goto	l17891
 27214  0077CE                     __end_of_getEVs:
 27215                           	callstack 0
 27216                           
 27217 ;; *************** function _findEvent *****************
 27218 ;; Defined at:
 27219 ;;		line 547 in file "../../github/CBUSlib/events.c"
 27220 ;; Parameters:    Size  Location     Type
 27221 ;;  nodeNumber      2   46[BANK0 ] unsigned int 
 27222 ;;  eventNumber     2   48[BANK0 ] unsigned int 
 27223 ;; Auto vars:     Size  Location     Type
 27224 ;;  en              2   54[BANK0 ] unsigned int 
 27225 ;;  nn              2   52[BANK0 ] unsigned int 
 27226 ;;  tableIndex      1   58[BANK0 ] unsigned char 
 27227 ;;  chainIdx        1   57[BANK0 ] unsigned char 
 27228 ;;  hash            1   56[BANK0 ] unsigned char 
 27229 ;; Return value:  Size  Location     Type
 27230 ;;                  1    wreg      unsigned char 
 27231 ;; Registers used:
 27232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27233 ;; Tracked objects:
 27234 ;;		On entry : 3F/0
 27235 ;;		On exit  : 3F/0
 27236 ;;		Unchanged: 0/0
 27237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27238 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27239 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27240 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27241 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27242 ;;Total ram usage:       13 bytes
 27243 ;; Hardware stack levels used: 1
 27244 ;; Hardware stack levels required when called: 14
 27245 ;; This function calls:
 27246 ;;		_getEN
 27247 ;;		_getHash
 27248 ;;		_getNN
 27249 ;; This function is called by:
 27250 ;;		_removeEvent
 27251 ;;		_addEvent
 27252 ;;		_parseCbusEvent
 27253 ;;		_doReqev
 27254 ;;		_doAreq
 27255 ;; This function uses a non-reentrant model
 27256 ;;
 27257                           
 27258                           	psect	text126
 27259  0089AC                     __ptext126:
 27260                           	callstack 0
 27261  0089AC                     _findEvent:
 27262                           	callstack 11
 27263                           
 27264                           ; BSR set to: 0
 27265                           ;events.c: 549: unsigned char hash = getHash(nodeNumber, eventNumber);
 27266                           
 27267                           ; BSR set to: 0
 27268                           ;incstack = 0
 27269  0089AC  C08E  F088         	movff	findEvent@nodeNumber,getHash@nn
 27270  0089B0  C08F  F089         	movff	findEvent@nodeNumber+1,getHash@nn+1
 27271  0089B4  C090  F08A         	movff	findEvent@eventNumber,getHash@en
 27272  0089B8  C091  F08B         	movff	findEvent@eventNumber+1,getHash@en+1
 27273  0089BC  EC74  F052         	call	_getHash	;wreg free
 27274  0089C0  6F98               	movwf	findEvent@hash& (0+255),b
 27275                           
 27276                           ; BSR set to: 0
 27277                           ;events.c: 550: unsigned char chainIdx;;events.c: 551: for (chainIdx=0; chainIdx<20U; ch
      +                          ainIdx++) {
 27278  0089C2  0E00               	movlw	0
 27279  0089C4  6F99               	movwf	findEvent@chainIdx& (0+255),b
 27280  0089C6                     l18261:
 27281                           
 27282                           ; BSR set to: 0
 27283                           ;events.c: 552: unsigned char tableIndex = eventChains[hash][chainIdx];
 27284  0089C6  5198               	movf	findEvent@hash& (0+255),w,b
 27285  0089C8  0D14               	mullw	20
 27286  0089CA  0E00               	movlw	low _eventChains
 27287  0089CC  6F92               	movwf	??_findEvent& (0+255),b
 27288  0089CE  0E07               	movlw	high _eventChains
 27289  0089D0  6F93               	movwf	(??_findEvent+1)& (0+255),b
 27290  0089D2  50F3               	movf	243,w,c
 27291  0089D4  2792               	addwf	??_findEvent& (0+255),f,b
 27292  0089D6  50F4               	movf	244,w,c
 27293  0089D8  2393               	addwfc	(??_findEvent+1)& (0+255),f,b
 27294  0089DA  5199               	movf	findEvent@chainIdx& (0+255),w,b
 27295  0089DC  2592               	addwf	??_findEvent& (0+255),w,b
 27296  0089DE  6ED9               	movwf	fsr2l,c
 27297  0089E0  0E00               	movlw	0
 27298  0089E2  2193               	addwfc	(??_findEvent+1)& (0+255),w,b
 27299  0089E4  6EDA               	movwf	fsr2h,c
 27300  0089E6  50DF               	movf	indf2,w,c
 27301  0089E8  6F9A               	movwf	findEvent@tableIndex& (0+255),b
 27302                           
 27303                           ; BSR set to: 0
 27304                           ;events.c: 553: WORD nn, en;;events.c: 554: if (tableIndex == 0xff) return 0xff;
 27305  0089EA  299A               	incf	findEvent@tableIndex& (0+255),w,b
 27306  0089EC  A4D8               	btfss	status,2,c
 27307  0089EE  D002               	goto	l18269
 27308  0089F0                     u22470:
 27309                           
 27310                           ; BSR set to: 0
 27311  0089F0  0EFF               	movlw	255
 27312  0089F2  0012               	return	
 27313  0089F4                     l18269:
 27314                           
 27315                           ; BSR set to: 0
 27316                           ;events.c: 555: nn = getNN(tableIndex);
 27317  0089F4  519A               	movf	findEvent@tableIndex& (0+255),w,b
 27318  0089F6  ECA8  F043         	call	_getNN
 27319  0089FA  C07D  F094         	movff	?_getNN,findEvent@nn
 27320  0089FE  C07E  F095         	movff	?_getNN+1,findEvent@nn+1
 27321                           
 27322                           ;events.c: 556: en = getEN(tableIndex);
 27323  008A02  519A               	movf	findEvent@tableIndex& (0+255),w,b
 27324  008A04  EC19  F048         	call	_getEN
 27325  008A08  C07D  F096         	movff	?_getEN,findEvent@en
 27326  008A0C  C07E  F097         	movff	?_getEN+1,findEvent@en+1
 27327                           
 27328                           ; BSR set to: 0
 27329                           ;events.c: 557: if ((nn == nodeNumber) && (en == eventNumber)) {
 27330  008A10  518E               	movf	findEvent@nodeNumber& (0+255),w,b
 27331  008A12  1994               	xorwf	findEvent@nn& (0+255),w,b
 27332  008A14  E10D               	bnz	l18279
 27333  008A16  518F               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 27334  008A18  1995               	xorwf	(findEvent@nn+1)& (0+255),w,b
 27335  008A1A  A4D8               	btfss	status,2,c
 27336  008A1C  D009               	goto	l18279
 27337                           
 27338                           ; BSR set to: 0
 27339  008A1E  5190               	movf	findEvent@eventNumber& (0+255),w,b
 27340  008A20  1996               	xorwf	findEvent@en& (0+255),w,b
 27341  008A22  E106               	bnz	l18279
 27342  008A24  5191               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 27343  008A26  1997               	xorwf	(findEvent@en+1)& (0+255),w,b
 27344  008A28  A4D8               	btfss	status,2,c
 27345  008A2A  D002               	goto	l18279
 27346                           
 27347                           ; BSR set to: 0
 27348                           ;events.c: 558: return tableIndex;
 27349  008A2C  519A               	movf	findEvent@tableIndex& (0+255),w,b
 27350  008A2E  0012               	return	
 27351  008A30                     l18279:
 27352                           
 27353                           ; BSR set to: 0
 27354  008A30  2B99               	incf	findEvent@chainIdx& (0+255),f,b
 27355                           
 27356                           ; BSR set to: 0
 27357  008A32  0E13               	movlw	19
 27358  008A34  6599               	cpfsgt	findEvent@chainIdx& (0+255),b
 27359  008A36  D7C7               	goto	l18261
 27360  008A38  D7DB               	goto	u22470
 27361  008A3A                     __end_of_findEvent:
 27362                           	callstack 0
 27363                           
 27364 ;; *************** function _configIO *****************
 27365 ;; Defined at:
 27366 ;;		line 661 in file "../../github/CANMIOfirmware/main.c"
 27367 ;; Parameters:    Size  Location     Type
 27368 ;;  i               1    wreg     unsigned char 
 27369 ;; Auto vars:     Size  Location     Type
 27370 ;;  i               1   35[BANK0 ] unsigned char 
 27371 ;;  action          1   34[BANK0 ] unsigned char 
 27372 ;; Return value:  Size  Location     Type
 27373 ;;                  1    wreg      void 
 27374 ;; Registers used:
 27375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27376 ;; Tracked objects:
 27377 ;;		On entry : 3F/0
 27378 ;;		On exit  : 30/0
 27379 ;;		Unchanged: 0/0
 27380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27382 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27383 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27384 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27385 ;;Total ram usage:        8 bytes
 27386 ;; Hardware stack levels used: 1
 27387 ;; Hardware stack levels required when called: 10
 27388 ;; This function calls:
 27389 ;;		_ee_read
 27390 ;;		_ee_write
 27391 ;;		_setDigitalOutput
 27392 ;; This function is called by:
 27393 ;;		_initialise
 27394 ;;		_setType
 27395 ;; This function uses a non-reentrant model
 27396 ;;
 27397                           
 27398                           	psect	text127
 27399  002A62                     __ptext127:
 27400                           	callstack 0
 27401  002A62                     _configIO:
 27402                           	callstack 17
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;incstack = 0
 27406                           ;configIO@i stored from wreg
 27407  002A62  6F83               	movwf	configIO@i& (0+255),b
 27408                           
 27409                           ;main.c: 662: unsigned char action;;main.c: 663: if (i >= 16U) return;
 27410  002A64  0E0F               	movlw	15
 27411  002A66  0100               	movlb	0	; () banked
 27412  002A68  6583               	cpfsgt	configIO@i& (0+255),b
 27413  002A6A  D064               	goto	l18471
 27414  002A6C  0012               	return	
 27415  002A6E                     l18453:
 27416                           
 27417                           ; BSR set to: 0
 27418                           ;main.c: 668: if (NV->io[i].flags & 0x04U) {
 27419  002A6E  5183               	movf	configIO@i& (0+255),w,b
 27420  002A70  0D07               	mullw	7
 27421  002A72  C0EC  F07C         	movff	_NV,??_configIO
 27422  002A76  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27423  002A7A  50F3               	movf	243,w,c
 27424  002A7C  277C               	addwf	??_configIO& (0+255),f,b
 27425  002A7E  50F4               	movf	244,w,c
 27426  002A80  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27427  002A82  0E11               	movlw	17
 27428  002A84  257C               	addwf	??_configIO& (0+255),w,b
 27429  002A86  6ED9               	movwf	fsr2l,c
 27430  002A88  0E00               	movlw	0
 27431  002A8A  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27432  002A8C  6EDA               	movwf	fsr2h,c
 27433  002A8E  A4DF               	btfss	indf2,2,c
 27434  002A90  D00E               	goto	l18457
 27435                           
 27436                           ; BSR set to: 0
 27437                           ;main.c: 669: setDigitalOutput(i, ee_read((WORD)((WORD)(((BYTE*)(0x3FF-40)))-17)+i));
 27438  002A92  0EC6               	movlw	198
 27439  002A94  2583               	addwf	configIO@i& (0+255),w,b
 27440  002A96  6F71               	movwf	ee_read@addr& (0+255),b
 27441  002A98  6B72               	clrf	(ee_read@addr+1)& (0+255),b
 27442  002A9A  0E03               	movlw	3
 27443  002A9C  2372               	addwfc	(ee_read@addr+1)& (0+255),f,b
 27444  002A9E  EC91  F052         	call	_ee_read	;wreg free
 27445  002AA2  0100               	movlb	0	; () banked
 27446  002AA4  6F77               	movwf	setDigitalOutput@state& (0+255),b
 27447  002AA6  5183               	movf	configIO@i& (0+255),w,b
 27448  002AA8  ECBC  F03F         	call	_setDigitalOutput
 27449                           
 27450                           ;main.c: 670: } else {
 27451  002AAC  D1C0               	goto	l18505
 27452  002AAE                     l18457:
 27453                           
 27454                           ; BSR set to: 0
 27455                           ;main.c: 671: action = (NV->io[i].flags & 0x20U) ? 1U : 2U;
 27456  002AAE  5183               	movf	configIO@i& (0+255),w,b
 27457  002AB0  0D07               	mullw	7
 27458  002AB2  C0EC  F07C         	movff	_NV,??_configIO
 27459  002AB6  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27460  002ABA  50F3               	movf	243,w,c
 27461  002ABC  277C               	addwf	??_configIO& (0+255),f,b
 27462  002ABE  50F4               	movf	244,w,c
 27463  002AC0  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27464  002AC2  0E11               	movlw	17
 27465  002AC4  257C               	addwf	??_configIO& (0+255),w,b
 27466  002AC6  6ED9               	movwf	fsr2l,c
 27467  002AC8  0E00               	movlw	0
 27468  002ACA  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27469  002ACC  6EDA               	movwf	fsr2h,c
 27470  002ACE  BADF               	btfsc	indf2,5,c
 27471  002AD0  D004               	goto	l18461
 27472                           
 27473                           ; BSR set to: 0
 27474  002AD2  0E00               	movlw	0
 27475  002AD4  6F81               	movwf	(_configIO$1531+1)& (0+255),b
 27476  002AD6  0E02               	movlw	2
 27477  002AD8  D003               	goto	L22
 27478  002ADA                     l18461:
 27479                           
 27480                           ; BSR set to: 0
 27481  002ADA  0E00               	movlw	0
 27482  002ADC  6F81               	movwf	(_configIO$1531+1)& (0+255),b
 27483  002ADE  0E01               	movlw	1
 27484  002AE0                     L22:
 27485  002AE0  6F80               	movwf	_configIO$1531& (0+255),b
 27486                           
 27487                           ; BSR set to: 0
 27488  002AE2  C080  F082         	movff	_configIO$1531,configIO@action
 27489                           
 27490                           ; BSR set to: 0
 27491                           ;main.c: 672: setDigitalOutput(i, action);
 27492  002AE6  C082  F077         	movff	configIO@action,setDigitalOutput@state
 27493  002AEA  5183               	movf	configIO@i& (0+255),w,b
 27494  002AEC  ECBC  F03F         	call	_setDigitalOutput
 27495                           
 27496                           ; BSR set to: 0
 27497                           ;main.c: 674: ee_write(((WORD)(((BYTE*)(0x3FF-40)))-17)+i, action);
 27498  002AF0  0EC6               	movlw	198
 27499  002AF2  2583               	addwf	configIO@i& (0+255),w,b
 27500  002AF4  6F73               	movwf	ee_write@addr& (0+255),b
 27501  002AF6  6B74               	clrf	(ee_write@addr+1)& (0+255),b
 27502  002AF8  0E03               	movlw	3
 27503  002AFA  2374               	addwfc	(ee_write@addr+1)& (0+255),f,b
 27504  002AFC  C082  F075         	movff	configIO@action,ee_write@data
 27505  002B00  EC17  F04D         	call	_ee_write	;wreg free
 27506  002B04  D194               	goto	l18505
 27507  002B06                     l18469:
 27508                           
 27509                           ; BSR set to: 0
 27510                           ;main.c: 680: case 3U:;main.c: 683: setDigitalOutput(i, NV->io[i].flags & 0x10U);
 27511  002B06  5183               	movf	configIO@i& (0+255),w,b
 27512  002B08  0D07               	mullw	7
 27513  002B0A  C0EC  F07C         	movff	_NV,??_configIO
 27514  002B0E  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27515  002B12  50F3               	movf	243,w,c
 27516  002B14  277C               	addwf	??_configIO& (0+255),f,b
 27517  002B16  50F4               	movf	244,w,c
 27518  002B18  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27519  002B1A  0E11               	movlw	17
 27520  002B1C  257C               	addwf	??_configIO& (0+255),w,b
 27521  002B1E  6ED9               	movwf	fsr2l,c
 27522  002B20  0E00               	movlw	0
 27523  002B22  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27524  002B24  6EDA               	movwf	fsr2h,c
 27525  002B26  50DF               	movf	indf2,w,c
 27526  002B28  0B10               	andlw	16
 27527  002B2A  6F77               	movwf	setDigitalOutput@state& (0+255),b
 27528  002B2C  5183               	movf	configIO@i& (0+255),w,b
 27529  002B2E  ECBC  F03F         	call	_setDigitalOutput
 27530                           
 27531                           ;main.c: 685: }
 27532  002B32  D17D               	goto	l18505
 27533  002B34                     l18471:
 27534                           
 27535                           ; BSR set to: 0
 27536  002B34  5183               	movf	configIO@i& (0+255),w,b
 27537  002B36  0D07               	mullw	7
 27538  002B38  C0EC  F07C         	movff	_NV,??_configIO
 27539  002B3C  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27540  002B40  50F3               	movf	243,w,c
 27541  002B42  277C               	addwf	??_configIO& (0+255),f,b
 27542  002B44  50F4               	movf	244,w,c
 27543  002B46  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27544  002B48  0E10               	movlw	16
 27545  002B4A  257C               	addwf	??_configIO& (0+255),w,b
 27546  002B4C  6ED9               	movwf	fsr2l,c
 27547  002B4E  0E00               	movlw	0
 27548  002B50  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27549  002B52  6EDA               	movwf	fsr2h,c
 27550  002B54  50DF               	movf	indf2,w,c
 27551                           
 27552                           ; Switch size 1, requested type "simple"
 27553                           ; Number of cases is 3, Range of values is 1 to 3
 27554                           ; switch strategies available:
 27555                           ; Name         Instructions Cycles
 27556                           ; simple_byte           10     6 (average)
 27557                           ;	Chosen strategy is simple_byte
 27558  002B56  0A01               	xorlw	1	; case 1
 27559  002B58  B4D8               	btfsc	status,2,c
 27560  002B5A  D789               	goto	l18453
 27561  002B5C  0A03               	xorlw	3	; case 2
 27562  002B5E  B4D8               	btfsc	status,2,c
 27563  002B60  D7D2               	goto	l18469
 27564  002B62  0A01               	xorlw	1	; case 3
 27565  002B64  B4D8               	btfsc	status,2,c
 27566  002B66  D7CF               	goto	l18469
 27567  002B68  D162               	goto	l18505
 27568  002B6A                     l18473:
 27569                           
 27570                           ; BSR set to: 0
 27571                           ;main.c: 690: if ((NV->io[i].type == 0U) || (NV->io[i].type == 5U) || (NV->io[i].type ==
      +                           6U)) {
 27572  002B6A  5183               	movf	configIO@i& (0+255),w,b
 27573  002B6C  0D07               	mullw	7
 27574  002B6E  C0EC  F07C         	movff	_NV,??_configIO
 27575  002B72  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27576  002B76  50F3               	movf	243,w,c
 27577  002B78  277C               	addwf	??_configIO& (0+255),f,b
 27578  002B7A  50F4               	movf	244,w,c
 27579  002B7C  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27580  002B7E  0E10               	movlw	16
 27581  002B80  257C               	addwf	??_configIO& (0+255),w,b
 27582  002B82  6ED9               	movwf	fsr2l,c
 27583  002B84  0E00               	movlw	0
 27584  002B86  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27585  002B88  6EDA               	movwf	fsr2h,c
 27586  002B8A  50DF               	movf	indf2,w,c
 27587  002B8C  B4D8               	btfsc	status,2,c
 27588  002B8E  D028               	goto	u22750
 27589                           
 27590                           ; BSR set to: 0
 27591  002B90  5183               	movf	configIO@i& (0+255),w,b
 27592  002B92  0D07               	mullw	7
 27593  002B94  C0EC  F07C         	movff	_NV,??_configIO
 27594  002B98  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27595  002B9C  50F3               	movf	243,w,c
 27596  002B9E  277C               	addwf	??_configIO& (0+255),f,b
 27597  002BA0  50F4               	movf	244,w,c
 27598  002BA2  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27599  002BA4  0E10               	movlw	16
 27600  002BA6  257C               	addwf	??_configIO& (0+255),w,b
 27601  002BA8  6ED9               	movwf	fsr2l,c
 27602  002BAA  0E00               	movlw	0
 27603  002BAC  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27604  002BAE  6EDA               	movwf	fsr2h,c
 27605  002BB0  0E05               	movlw	5
 27606  002BB2  18DE               	xorwf	postinc2,w,c
 27607  002BB4  B4D8               	btfsc	status,2,c
 27608  002BB6  D014               	goto	u22750
 27609                           
 27610                           ; BSR set to: 0
 27611  002BB8  5183               	movf	configIO@i& (0+255),w,b
 27612  002BBA  0D07               	mullw	7
 27613  002BBC  C0EC  F07C         	movff	_NV,??_configIO
 27614  002BC0  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27615  002BC4  50F3               	movf	243,w,c
 27616  002BC6  277C               	addwf	??_configIO& (0+255),f,b
 27617  002BC8  50F4               	movf	244,w,c
 27618  002BCA  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27619  002BCC  0E10               	movlw	16
 27620  002BCE  257C               	addwf	??_configIO& (0+255),w,b
 27621  002BD0  6ED9               	movwf	fsr2l,c
 27622  002BD2  0E00               	movlw	0
 27623  002BD4  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27624  002BD6  6EDA               	movwf	fsr2h,c
 27625  002BD8  0E06               	movlw	6
 27626  002BDA  18DE               	xorwf	postinc2,w,c
 27627  002BDC  A4D8               	btfss	status,2,c
 27628  002BDE  D01D               	goto	l18481
 27629  002BE0                     u22750:
 27630                           
 27631                           ; BSR set to: 0
 27632                           ;main.c: 691: TRISA |= (1U << configs[i].no);
 27633  002BE0  5183               	movf	configIO@i& (0+255),w,b
 27634  002BE2  0D04               	mullw	4
 27635  002BE4  CFF3 F07C          	movff	prodl,??_configIO
 27636  002BE8  0E02               	movlw	2
 27637  002BEA  277C               	addwf	??_configIO& (0+255),f,b
 27638  002BEC  517C               	movf	??_configIO& (0+255),w,b
 27639  002BEE  0F01               	addlw	low _configs
 27640  002BF0  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27641  002BF2  C07D  FFF6         	movff	??_configIO+1,tblptrl
 27642  002BF6                     	if	1	;There is more than 1 active tblptr byte
 27643  002BF6  0E0F               	movlw	high __smallconst
 27644  002BF8  6EF7               	movwf	tblptrh,c
 27645  002BFA                     	endif
 27646  002BFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27647  002BFA  6AF8               	clrf	tblptru,c
 27648  002BFC                     	endif
 27649  002BFC                     	if	0	;tblptru may be non-zero
 27650  002BFC                     	endif
 27651  002BFC  0008               	tblrd		*
 27652  002BFE  CFF5 F07E          	movff	tablat,??_configIO+2
 27653  002C02  0E01               	movlw	1
 27654  002C04  6F7F               	movwf	(??_configIO+3)& (0+255),b
 27655  002C06  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 27656  002C08  D002               	goto	u22764
 27657  002C0A                     u22765:
 27658  002C0A  90D8               	bcf	status,0,c
 27659  002C0C  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 27660  002C0E                     u22764:
 27661  002C0E  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 27662  002C10  D7FC               	goto	u22765
 27663  002C12  0100               	movlb	0	; () banked
 27664  002C14  517F               	movf	(??_configIO+3)& (0+255),w,b
 27665  002C16  1292               	iorwf	146,f,c	;volatile
 27666                           
 27667                           ;main.c: 692: } else {
 27668  002C18  D123               	goto	l18507
 27669  002C1A                     l18481:
 27670                           
 27671                           ; BSR set to: 0
 27672                           ;main.c: 693: TRISA &= ~(1U << configs[i].no);
 27673  002C1A  5183               	movf	configIO@i& (0+255),w,b
 27674  002C1C  0D04               	mullw	4
 27675  002C1E  CFF3 F07C          	movff	prodl,??_configIO
 27676  002C22  0E02               	movlw	2
 27677  002C24  277C               	addwf	??_configIO& (0+255),f,b
 27678  002C26  517C               	movf	??_configIO& (0+255),w,b
 27679  002C28  0F01               	addlw	low _configs
 27680  002C2A  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27681  002C2C  C07D  FFF6         	movff	??_configIO+1,tblptrl
 27682  002C30                     	if	1	;There is more than 1 active tblptr byte
 27683  002C30  0E0F               	movlw	high __smallconst
 27684  002C32  6EF7               	movwf	tblptrh,c
 27685  002C34                     	endif
 27686  002C34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27687  002C34  6AF8               	clrf	tblptru,c
 27688  002C36                     	endif
 27689  002C36                     	if	0	;tblptru may be non-zero
 27690  002C36                     	endif
 27691  002C36  0008               	tblrd		*
 27692  002C38  CFF5 F07E          	movff	tablat,??_configIO+2
 27693  002C3C  0E01               	movlw	1
 27694  002C3E  6F7F               	movwf	(??_configIO+3)& (0+255),b
 27695  002C40  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 27696  002C42  D002               	goto	u22774
 27697  002C44                     u22775:
 27698  002C44  90D8               	bcf	status,0,c
 27699  002C46  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 27700  002C48                     u22774:
 27701  002C48  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 27702  002C4A  D7FC               	goto	u22775
 27703  002C4C  0100               	movlb	0	; () banked
 27704  002C4E  517F               	movf	(??_configIO+3)& (0+255),w,b
 27705  002C50  0AFF               	xorlw	255
 27706  002C52  1692               	andwf	146,f,c	;volatile
 27707  002C54  D105               	goto	l18507
 27708  002C56                     l18483:
 27709                           
 27710                           ; BSR set to: 0
 27711                           ;main.c: 697: if ((NV->io[i].type == 0U) || (NV->io[i].type == 5U) || (NV->io[i].type ==
      +                           6U)) {
 27712  002C56  5183               	movf	configIO@i& (0+255),w,b
 27713  002C58  0D07               	mullw	7
 27714  002C5A  C0EC  F07C         	movff	_NV,??_configIO
 27715  002C5E  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27716  002C62  50F3               	movf	243,w,c
 27717  002C64  277C               	addwf	??_configIO& (0+255),f,b
 27718  002C66  50F4               	movf	244,w,c
 27719  002C68  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27720  002C6A  0E10               	movlw	16
 27721  002C6C  257C               	addwf	??_configIO& (0+255),w,b
 27722  002C6E  6ED9               	movwf	fsr2l,c
 27723  002C70  0E00               	movlw	0
 27724  002C72  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27725  002C74  6EDA               	movwf	fsr2h,c
 27726  002C76  50DF               	movf	indf2,w,c
 27727  002C78  B4D8               	btfsc	status,2,c
 27728  002C7A  D028               	goto	u22800
 27729                           
 27730                           ; BSR set to: 0
 27731  002C7C  5183               	movf	configIO@i& (0+255),w,b
 27732  002C7E  0D07               	mullw	7
 27733  002C80  C0EC  F07C         	movff	_NV,??_configIO
 27734  002C84  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27735  002C88  50F3               	movf	243,w,c
 27736  002C8A  277C               	addwf	??_configIO& (0+255),f,b
 27737  002C8C  50F4               	movf	244,w,c
 27738  002C8E  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27739  002C90  0E10               	movlw	16
 27740  002C92  257C               	addwf	??_configIO& (0+255),w,b
 27741  002C94  6ED9               	movwf	fsr2l,c
 27742  002C96  0E00               	movlw	0
 27743  002C98  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27744  002C9A  6EDA               	movwf	fsr2h,c
 27745  002C9C  0E05               	movlw	5
 27746  002C9E  18DE               	xorwf	postinc2,w,c
 27747  002CA0  B4D8               	btfsc	status,2,c
 27748  002CA2  D014               	goto	u22800
 27749                           
 27750                           ; BSR set to: 0
 27751  002CA4  5183               	movf	configIO@i& (0+255),w,b
 27752  002CA6  0D07               	mullw	7
 27753  002CA8  C0EC  F07C         	movff	_NV,??_configIO
 27754  002CAC  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27755  002CB0  50F3               	movf	243,w,c
 27756  002CB2  277C               	addwf	??_configIO& (0+255),f,b
 27757  002CB4  50F4               	movf	244,w,c
 27758  002CB6  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27759  002CB8  0E10               	movlw	16
 27760  002CBA  257C               	addwf	??_configIO& (0+255),w,b
 27761  002CBC  6ED9               	movwf	fsr2l,c
 27762  002CBE  0E00               	movlw	0
 27763  002CC0  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27764  002CC2  6EDA               	movwf	fsr2h,c
 27765  002CC4  0E06               	movlw	6
 27766  002CC6  18DE               	xorwf	postinc2,w,c
 27767  002CC8  A4D8               	btfss	status,2,c
 27768  002CCA  D01D               	goto	l18491
 27769  002CCC                     u22800:
 27770                           
 27771                           ; BSR set to: 0
 27772                           ;main.c: 698: TRISB |= (1U << configs[i].no);
 27773  002CCC  5183               	movf	configIO@i& (0+255),w,b
 27774  002CCE  0D04               	mullw	4
 27775  002CD0  CFF3 F07C          	movff	prodl,??_configIO
 27776  002CD4  0E02               	movlw	2
 27777  002CD6  277C               	addwf	??_configIO& (0+255),f,b
 27778  002CD8  517C               	movf	??_configIO& (0+255),w,b
 27779  002CDA  0F01               	addlw	low _configs
 27780  002CDC  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27781  002CDE  C07D  FFF6         	movff	??_configIO+1,tblptrl
 27782  002CE2                     	if	1	;There is more than 1 active tblptr byte
 27783  002CE2  0E0F               	movlw	high __smallconst
 27784  002CE4  6EF7               	movwf	tblptrh,c
 27785  002CE6                     	endif
 27786  002CE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27787  002CE6  6AF8               	clrf	tblptru,c
 27788  002CE8                     	endif
 27789  002CE8                     	if	0	;tblptru may be non-zero
 27790  002CE8                     	endif
 27791  002CE8  0008               	tblrd		*
 27792  002CEA  CFF5 F07E          	movff	tablat,??_configIO+2
 27793  002CEE  0E01               	movlw	1
 27794  002CF0  6F7F               	movwf	(??_configIO+3)& (0+255),b
 27795  002CF2  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 27796  002CF4  D002               	goto	u22814
 27797  002CF6                     u22815:
 27798  002CF6  90D8               	bcf	status,0,c
 27799  002CF8  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 27800  002CFA                     u22814:
 27801  002CFA  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 27802  002CFC  D7FC               	goto	u22815
 27803  002CFE  0100               	movlb	0	; () banked
 27804  002D00  517F               	movf	(??_configIO+3)& (0+255),w,b
 27805  002D02  1293               	iorwf	147,f,c	;volatile
 27806                           
 27807                           ;main.c: 699: } else {
 27808  002D04  D0AD               	goto	l18507
 27809  002D06                     l18491:
 27810                           
 27811                           ; BSR set to: 0
 27812                           ;main.c: 700: TRISB &= ~(1U << configs[i].no);
 27813  002D06  5183               	movf	configIO@i& (0+255),w,b
 27814  002D08  0D04               	mullw	4
 27815  002D0A  CFF3 F07C          	movff	prodl,??_configIO
 27816  002D0E  0E02               	movlw	2
 27817  002D10  277C               	addwf	??_configIO& (0+255),f,b
 27818  002D12  517C               	movf	??_configIO& (0+255),w,b
 27819  002D14  0F01               	addlw	low _configs
 27820  002D16  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27821  002D18  C07D  FFF6         	movff	??_configIO+1,tblptrl
 27822  002D1C                     	if	1	;There is more than 1 active tblptr byte
 27823  002D1C  0E0F               	movlw	high __smallconst
 27824  002D1E  6EF7               	movwf	tblptrh,c
 27825  002D20                     	endif
 27826  002D20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27827  002D20  6AF8               	clrf	tblptru,c
 27828  002D22                     	endif
 27829  002D22                     	if	0	;tblptru may be non-zero
 27830  002D22                     	endif
 27831  002D22  0008               	tblrd		*
 27832  002D24  CFF5 F07E          	movff	tablat,??_configIO+2
 27833  002D28  0E01               	movlw	1
 27834  002D2A  6F7F               	movwf	(??_configIO+3)& (0+255),b
 27835  002D2C  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 27836  002D2E  D002               	goto	u22824
 27837  002D30                     u22825:
 27838  002D30  90D8               	bcf	status,0,c
 27839  002D32  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 27840  002D34                     u22824:
 27841  002D34  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 27842  002D36  D7FC               	goto	u22825
 27843  002D38  0100               	movlb	0	; () banked
 27844  002D3A  517F               	movf	(??_configIO+3)& (0+255),w,b
 27845  002D3C  0AFF               	xorlw	255
 27846  002D3E  1693               	andwf	147,f,c	;volatile
 27847  002D40  D08F               	goto	l18507
 27848  002D42                     l18493:
 27849                           
 27850                           ; BSR set to: 0
 27851                           ;main.c: 704: if ((NV->io[i].type == 0U) || (NV->io[i].type == 5U) || (NV->io[i].type ==
      +                           6U)) {
 27852  002D42  5183               	movf	configIO@i& (0+255),w,b
 27853  002D44  0D07               	mullw	7
 27854  002D46  C0EC  F07C         	movff	_NV,??_configIO
 27855  002D4A  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27856  002D4E  50F3               	movf	243,w,c
 27857  002D50  277C               	addwf	??_configIO& (0+255),f,b
 27858  002D52  50F4               	movf	244,w,c
 27859  002D54  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27860  002D56  0E10               	movlw	16
 27861  002D58  257C               	addwf	??_configIO& (0+255),w,b
 27862  002D5A  6ED9               	movwf	fsr2l,c
 27863  002D5C  0E00               	movlw	0
 27864  002D5E  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27865  002D60  6EDA               	movwf	fsr2h,c
 27866  002D62  50DF               	movf	indf2,w,c
 27867  002D64  B4D8               	btfsc	status,2,c
 27868  002D66  D028               	goto	u22850
 27869                           
 27870                           ; BSR set to: 0
 27871  002D68  5183               	movf	configIO@i& (0+255),w,b
 27872  002D6A  0D07               	mullw	7
 27873  002D6C  C0EC  F07C         	movff	_NV,??_configIO
 27874  002D70  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27875  002D74  50F3               	movf	243,w,c
 27876  002D76  277C               	addwf	??_configIO& (0+255),f,b
 27877  002D78  50F4               	movf	244,w,c
 27878  002D7A  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27879  002D7C  0E10               	movlw	16
 27880  002D7E  257C               	addwf	??_configIO& (0+255),w,b
 27881  002D80  6ED9               	movwf	fsr2l,c
 27882  002D82  0E00               	movlw	0
 27883  002D84  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27884  002D86  6EDA               	movwf	fsr2h,c
 27885  002D88  0E05               	movlw	5
 27886  002D8A  18DE               	xorwf	postinc2,w,c
 27887  002D8C  B4D8               	btfsc	status,2,c
 27888  002D8E  D014               	goto	u22850
 27889                           
 27890                           ; BSR set to: 0
 27891  002D90  5183               	movf	configIO@i& (0+255),w,b
 27892  002D92  0D07               	mullw	7
 27893  002D94  C0EC  F07C         	movff	_NV,??_configIO
 27894  002D98  C0ED  F07D         	movff	_NV+1,??_configIO+1
 27895  002D9C  50F3               	movf	243,w,c
 27896  002D9E  277C               	addwf	??_configIO& (0+255),f,b
 27897  002DA0  50F4               	movf	244,w,c
 27898  002DA2  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 27899  002DA4  0E10               	movlw	16
 27900  002DA6  257C               	addwf	??_configIO& (0+255),w,b
 27901  002DA8  6ED9               	movwf	fsr2l,c
 27902  002DAA  0E00               	movlw	0
 27903  002DAC  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 27904  002DAE  6EDA               	movwf	fsr2h,c
 27905  002DB0  0E06               	movlw	6
 27906  002DB2  18DE               	xorwf	postinc2,w,c
 27907  002DB4  A4D8               	btfss	status,2,c
 27908  002DB6  D01D               	goto	l18501
 27909  002DB8                     u22850:
 27910                           
 27911                           ; BSR set to: 0
 27912                           ;main.c: 705: TRISC |= (1U << configs[i].no);
 27913  002DB8  5183               	movf	configIO@i& (0+255),w,b
 27914  002DBA  0D04               	mullw	4
 27915  002DBC  CFF3 F07C          	movff	prodl,??_configIO
 27916  002DC0  0E02               	movlw	2
 27917  002DC2  277C               	addwf	??_configIO& (0+255),f,b
 27918  002DC4  517C               	movf	??_configIO& (0+255),w,b
 27919  002DC6  0F01               	addlw	low _configs
 27920  002DC8  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27921  002DCA  C07D  FFF6         	movff	??_configIO+1,tblptrl
 27922  002DCE                     	if	1	;There is more than 1 active tblptr byte
 27923  002DCE  0E0F               	movlw	high __smallconst
 27924  002DD0  6EF7               	movwf	tblptrh,c
 27925  002DD2                     	endif
 27926  002DD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27927  002DD2  6AF8               	clrf	tblptru,c
 27928  002DD4                     	endif
 27929  002DD4                     	if	0	;tblptru may be non-zero
 27930  002DD4                     	endif
 27931  002DD4  0008               	tblrd		*
 27932  002DD6  CFF5 F07E          	movff	tablat,??_configIO+2
 27933  002DDA  0E01               	movlw	1
 27934  002DDC  6F7F               	movwf	(??_configIO+3)& (0+255),b
 27935  002DDE  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 27936  002DE0  D002               	goto	u22864
 27937  002DE2                     u22865:
 27938  002DE2  90D8               	bcf	status,0,c
 27939  002DE4  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 27940  002DE6                     u22864:
 27941  002DE6  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 27942  002DE8  D7FC               	goto	u22865
 27943  002DEA  0100               	movlb	0	; () banked
 27944  002DEC  517F               	movf	(??_configIO+3)& (0+255),w,b
 27945  002DEE  1294               	iorwf	148,f,c	;volatile
 27946                           
 27947                           ;main.c: 706: } else {
 27948  002DF0  D037               	goto	l18507
 27949  002DF2                     l18501:
 27950                           
 27951                           ; BSR set to: 0
 27952                           ;main.c: 707: TRISC &= ~(1U << configs[i].no);
 27953  002DF2  5183               	movf	configIO@i& (0+255),w,b
 27954  002DF4  0D04               	mullw	4
 27955  002DF6  CFF3 F07C          	movff	prodl,??_configIO
 27956  002DFA  0E02               	movlw	2
 27957  002DFC  277C               	addwf	??_configIO& (0+255),f,b
 27958  002DFE  517C               	movf	??_configIO& (0+255),w,b
 27959  002E00  0F01               	addlw	low _configs
 27960  002E02  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27961  002E04  C07D  FFF6         	movff	??_configIO+1,tblptrl
 27962  002E08                     	if	1	;There is more than 1 active tblptr byte
 27963  002E08  0E0F               	movlw	high __smallconst
 27964  002E0A  6EF7               	movwf	tblptrh,c
 27965  002E0C                     	endif
 27966  002E0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27967  002E0C  6AF8               	clrf	tblptru,c
 27968  002E0E                     	endif
 27969  002E0E                     	if	0	;tblptru may be non-zero
 27970  002E0E                     	endif
 27971  002E0E  0008               	tblrd		*
 27972  002E10  CFF5 F07E          	movff	tablat,??_configIO+2
 27973  002E14  0E01               	movlw	1
 27974  002E16  6F7F               	movwf	(??_configIO+3)& (0+255),b
 27975  002E18  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 27976  002E1A  D002               	goto	u22874
 27977  002E1C                     u22875:
 27978  002E1C  90D8               	bcf	status,0,c
 27979  002E1E  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 27980  002E20                     u22874:
 27981  002E20  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 27982  002E22  D7FC               	goto	u22875
 27983  002E24  0100               	movlb	0	; () banked
 27984  002E26  517F               	movf	(??_configIO+3)& (0+255),w,b
 27985  002E28  0AFF               	xorlw	255
 27986  002E2A  1694               	andwf	148,f,c	;volatile
 27987  002E2C  D019               	goto	l18507
 27988  002E2E                     l18505:
 27989                           
 27990                           ; BSR set to: 0
 27991  002E2E  5183               	movf	configIO@i& (0+255),w,b
 27992  002E30  0D04               	mullw	4
 27993  002E32  CFF3 F07C          	movff	prodl,??_configIO
 27994  002E36  0E01               	movlw	1
 27995  002E38  277C               	addwf	??_configIO& (0+255),f,b
 27996  002E3A  517C               	movf	??_configIO& (0+255),w,b
 27997  002E3C  0F01               	addlw	low _configs
 27998  002E3E  6F7D               	movwf	(??_configIO+1)& (0+255),b
 27999  002E40  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28000  002E44                     	if	1	;There is more than 1 active tblptr byte
 28001  002E44  0E0F               	movlw	high __smallconst
 28002  002E46  6EF7               	movwf	tblptrh,c
 28003  002E48                     	endif
 28004  002E48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28005  002E48  6AF8               	clrf	tblptru,c
 28006  002E4A                     	endif
 28007  002E4A                     	if	0	;tblptru may be non-zero
 28008  002E4A                     	endif
 28009  002E4A  0008               	tblrd		*
 28010  002E4C  50F5               	movf	tablat,w,c
 28011                           
 28012                           ; Switch size 1, requested type "simple"
 28013                           ; Number of cases is 3, Range of values is 65 to 67
 28014                           ; switch strategies available:
 28015                           ; Name         Instructions Cycles
 28016                           ; simple_byte           10     6 (average)
 28017                           ;	Chosen strategy is simple_byte
 28018  002E4E  0A41               	xorlw	65	; case 65
 28019  002E50  B4D8               	btfsc	status,2,c
 28020  002E52  D68B               	goto	l18473
 28021  002E54  0A03               	xorlw	3	; case 66
 28022  002E56  B4D8               	btfsc	status,2,c
 28023  002E58  D6FE               	goto	l18483
 28024  002E5A  0A01               	xorlw	1	; case 67
 28025  002E5C  B4D8               	btfsc	status,2,c
 28026  002E5E  D771               	goto	l18493
 28027  002E60                     l18507:
 28028                           
 28029                           ; BSR set to: 0
 28030                           ;main.c: 712: if ((NV->io[i].type == 5U) || (NV->io[i].type == 6U)) {
 28031  002E60  5183               	movf	configIO@i& (0+255),w,b
 28032  002E62  0D07               	mullw	7
 28033  002E64  C0EC  F07C         	movff	_NV,??_configIO
 28034  002E68  C0ED  F07D         	movff	_NV+1,??_configIO+1
 28035  002E6C  50F3               	movf	243,w,c
 28036  002E6E  277C               	addwf	??_configIO& (0+255),f,b
 28037  002E70  50F4               	movf	244,w,c
 28038  002E72  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 28039  002E74  0E10               	movlw	16
 28040  002E76  257C               	addwf	??_configIO& (0+255),w,b
 28041  002E78  6ED9               	movwf	fsr2l,c
 28042  002E7A  0E00               	movlw	0
 28043  002E7C  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 28044  002E7E  6EDA               	movwf	fsr2h,c
 28045  002E80  0E05               	movlw	5
 28046  002E82  18DE               	xorwf	postinc2,w,c
 28047  002E84  B4D8               	btfsc	status,2,c
 28048  002E86  D014               	goto	u22890
 28049                           
 28050                           ; BSR set to: 0
 28051  002E88  5183               	movf	configIO@i& (0+255),w,b
 28052  002E8A  0D07               	mullw	7
 28053  002E8C  C0EC  F07C         	movff	_NV,??_configIO
 28054  002E90  C0ED  F07D         	movff	_NV+1,??_configIO+1
 28055  002E94  50F3               	movf	243,w,c
 28056  002E96  277C               	addwf	??_configIO& (0+255),f,b
 28057  002E98  50F4               	movf	244,w,c
 28058  002E9A  237D               	addwfc	(??_configIO+1)& (0+255),f,b
 28059  002E9C  0E10               	movlw	16
 28060  002E9E  257C               	addwf	??_configIO& (0+255),w,b
 28061  002EA0  6ED9               	movwf	fsr2l,c
 28062  002EA2  0E00               	movlw	0
 28063  002EA4  217D               	addwfc	(??_configIO+1)& (0+255),w,b
 28064  002EA6  6EDA               	movwf	fsr2h,c
 28065  002EA8  0E06               	movlw	6
 28066  002EAA  18DE               	xorwf	postinc2,w,c
 28067  002EAC  A4D8               	btfss	status,2,c
 28068  002EAE  D062               	goto	l18519
 28069  002EB0                     u22890:
 28070                           
 28071                           ; BSR set to: 0
 28072                           ;main.c: 714: if (configs[i].an < 8U) {
 28073  002EB0  5183               	movf	configIO@i& (0+255),w,b
 28074  002EB2  0D04               	mullw	4
 28075  002EB4  CFF3 F07C          	movff	prodl,??_configIO
 28076  002EB8  0E03               	movlw	3
 28077  002EBA  277C               	addwf	??_configIO& (0+255),f,b
 28078  002EBC  517C               	movf	??_configIO& (0+255),w,b
 28079  002EBE  0F01               	addlw	low _configs
 28080  002EC0  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28081  002EC2  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28082  002EC6                     	if	1	;There is more than 1 active tblptr byte
 28083  002EC6  0E0F               	movlw	high __smallconst
 28084  002EC8  6EF7               	movwf	tblptrh,c
 28085  002ECA                     	endif
 28086  002ECA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28087  002ECA  6AF8               	clrf	tblptru,c
 28088  002ECC                     	endif
 28089  002ECC                     	if	0	;tblptru may be non-zero
 28090  002ECC                     	endif
 28091  002ECC  0E08               	movlw	8
 28092  002ECE  0008               	tblrd		*
 28093  002ED0  60F5               	cpfslt	tablat,c
 28094  002ED2  D01E               	goto	l18515
 28095                           
 28096                           ; BSR set to: 0
 28097                           ;main.c: 715: ANCON0 |= (1U << configs[i].an);
 28098  002ED4  5183               	movf	configIO@i& (0+255),w,b
 28099  002ED6  0D04               	mullw	4
 28100  002ED8  CFF3 F07C          	movff	prodl,??_configIO
 28101  002EDC  0E03               	movlw	3
 28102  002EDE  277C               	addwf	??_configIO& (0+255),f,b
 28103  002EE0  517C               	movf	??_configIO& (0+255),w,b
 28104  002EE2  0F01               	addlw	low _configs
 28105  002EE4  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28106  002EE6  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28107  002EEA                     	if	1	;There is more than 1 active tblptr byte
 28108  002EEA  0E0F               	movlw	high __smallconst
 28109  002EEC  6EF7               	movwf	tblptrh,c
 28110  002EEE                     	endif
 28111  002EEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28112  002EEE  6AF8               	clrf	tblptru,c
 28113  002EF0                     	endif
 28114  002EF0                     	if	0	;tblptru may be non-zero
 28115  002EF0                     	endif
 28116  002EF0  0008               	tblrd		*
 28117  002EF2  CFF5 F07E          	movff	tablat,??_configIO+2
 28118  002EF6  0E01               	movlw	1
 28119  002EF8  6F7F               	movwf	(??_configIO+3)& (0+255),b
 28120  002EFA  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 28121  002EFC  D002               	goto	u22914
 28122  002EFE                     u22915:
 28123  002EFE  90D8               	bcf	status,0,c
 28124  002F00  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 28125  002F02                     u22914:
 28126  002F02  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 28127  002F04  D7FC               	goto	u22915
 28128  002F06  0100               	movlb	0	; () banked
 28129  002F08  517F               	movf	(??_configIO+3)& (0+255),w,b
 28130  002F0A  010F               	movlb	15	; () banked
 28131  002F0C  135D               	iorwf	93,f,b	;volatile
 28132                           
 28133                           ;main.c: 716: } else if (configs[i].an < 16U) {
 28134  002F0E  0012               	return	
 28135  002F10                     l18515:
 28136                           
 28137                           ; BSR set to: 0
 28138  002F10  5183               	movf	configIO@i& (0+255),w,b
 28139  002F12  0D04               	mullw	4
 28140  002F14  CFF3 F07C          	movff	prodl,??_configIO
 28141  002F18  0E03               	movlw	3
 28142  002F1A  277C               	addwf	??_configIO& (0+255),f,b
 28143  002F1C  517C               	movf	??_configIO& (0+255),w,b
 28144  002F1E  0F01               	addlw	low _configs
 28145  002F20  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28146  002F22  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28147  002F26                     	if	1	;There is more than 1 active tblptr byte
 28148  002F26  0E0F               	movlw	high __smallconst
 28149  002F28  6EF7               	movwf	tblptrh,c
 28150  002F2A                     	endif
 28151  002F2A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28152  002F2A  6AF8               	clrf	tblptru,c
 28153  002F2C                     	endif
 28154  002F2C                     	if	0	;tblptru may be non-zero
 28155  002F2C                     	endif
 28156  002F2C  0E10               	movlw	16
 28157  002F2E  0008               	tblrd		*
 28158  002F30  60F5               	cpfslt	tablat,c
 28159  002F32  0012               	return	
 28160                           
 28161                           ; BSR set to: 0
 28162                           ;main.c: 717: ANCON1 |= (1U << (configs[i].an - 8U));
 28163  002F34  5183               	movf	configIO@i& (0+255),w,b
 28164  002F36  0D04               	mullw	4
 28165  002F38  CFF3 F07C          	movff	prodl,??_configIO
 28166  002F3C  0E03               	movlw	3
 28167  002F3E  277C               	addwf	??_configIO& (0+255),f,b
 28168  002F40  517C               	movf	??_configIO& (0+255),w,b
 28169  002F42  0F01               	addlw	low _configs
 28170  002F44  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28171  002F46  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28172  002F4A                     	if	1	;There is more than 1 active tblptr byte
 28173  002F4A  0E0F               	movlw	high __smallconst
 28174  002F4C  6EF7               	movwf	tblptrh,c
 28175  002F4E                     	endif
 28176  002F4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28177  002F4E  6AF8               	clrf	tblptru,c
 28178  002F50                     	endif
 28179  002F50                     	if	0	;tblptru may be non-zero
 28180  002F50                     	endif
 28181  002F50  0008               	tblrd		*
 28182  002F52  CFF5 F07E          	movff	tablat,??_configIO+2
 28183  002F56  0EF8               	movlw	248
 28184  002F58  277E               	addwf	(??_configIO+2)& (0+255),f,b
 28185  002F5A  0E01               	movlw	1
 28186  002F5C  6F7F               	movwf	(??_configIO+3)& (0+255),b
 28187  002F5E  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 28188  002F60  D002               	goto	u22934
 28189  002F62                     u22935:
 28190  002F62  90D8               	bcf	status,0,c
 28191  002F64  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 28192  002F66                     u22934:
 28193  002F66  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 28194  002F68  D7FC               	goto	u22935
 28195  002F6A  0100               	movlb	0	; () banked
 28196  002F6C  517F               	movf	(??_configIO+3)& (0+255),w,b
 28197  002F6E  010F               	movlb	15	; () banked
 28198  002F70  135C               	iorwf	92,f,b	;volatile
 28199  002F72  0012               	return	
 28200  002F74                     l18519:
 28201                           
 28202                           ; BSR set to: 0
 28203                           ;main.c: 721: if (configs[i].an < 8U) {
 28204  002F74  5183               	movf	configIO@i& (0+255),w,b
 28205  002F76  0D04               	mullw	4
 28206  002F78  CFF3 F07C          	movff	prodl,??_configIO
 28207  002F7C  0E03               	movlw	3
 28208  002F7E  277C               	addwf	??_configIO& (0+255),f,b
 28209  002F80  517C               	movf	??_configIO& (0+255),w,b
 28210  002F82  0F01               	addlw	low _configs
 28211  002F84  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28212  002F86  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28213  002F8A                     	if	1	;There is more than 1 active tblptr byte
 28214  002F8A  0E0F               	movlw	high __smallconst
 28215  002F8C  6EF7               	movwf	tblptrh,c
 28216  002F8E                     	endif
 28217  002F8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28218  002F8E  6AF8               	clrf	tblptru,c
 28219  002F90                     	endif
 28220  002F90                     	if	0	;tblptru may be non-zero
 28221  002F90                     	endif
 28222  002F90  0E08               	movlw	8
 28223  002F92  0008               	tblrd		*
 28224  002F94  60F5               	cpfslt	tablat,c
 28225  002F96  D01F               	goto	l18523
 28226                           
 28227                           ; BSR set to: 0
 28228                           ;main.c: 722: ANCON0 &= ~(1U << configs[i].an);
 28229  002F98  5183               	movf	configIO@i& (0+255),w,b
 28230  002F9A  0D04               	mullw	4
 28231  002F9C  CFF3 F07C          	movff	prodl,??_configIO
 28232  002FA0  0E03               	movlw	3
 28233  002FA2  277C               	addwf	??_configIO& (0+255),f,b
 28234  002FA4  517C               	movf	??_configIO& (0+255),w,b
 28235  002FA6  0F01               	addlw	low _configs
 28236  002FA8  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28237  002FAA  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28238  002FAE                     	if	1	;There is more than 1 active tblptr byte
 28239  002FAE  0E0F               	movlw	high __smallconst
 28240  002FB0  6EF7               	movwf	tblptrh,c
 28241  002FB2                     	endif
 28242  002FB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28243  002FB2  6AF8               	clrf	tblptru,c
 28244  002FB4                     	endif
 28245  002FB4                     	if	0	;tblptru may be non-zero
 28246  002FB4                     	endif
 28247  002FB4  0008               	tblrd		*
 28248  002FB6  CFF5 F07E          	movff	tablat,??_configIO+2
 28249  002FBA  0E01               	movlw	1
 28250  002FBC  6F7F               	movwf	(??_configIO+3)& (0+255),b
 28251  002FBE  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 28252  002FC0  D002               	goto	u22954
 28253  002FC2                     u22955:
 28254  002FC2  90D8               	bcf	status,0,c
 28255  002FC4  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 28256  002FC6                     u22954:
 28257  002FC6  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 28258  002FC8  D7FC               	goto	u22955
 28259  002FCA  0100               	movlb	0	; () banked
 28260  002FCC  517F               	movf	(??_configIO+3)& (0+255),w,b
 28261  002FCE  0AFF               	xorlw	255
 28262  002FD0  010F               	movlb	15	; () banked
 28263  002FD2  175D               	andwf	93,f,b	;volatile
 28264                           
 28265                           ;main.c: 723: } else if (configs[i].an < 16U) {
 28266  002FD4  0012               	return	
 28267  002FD6                     l18523:
 28268                           
 28269                           ; BSR set to: 0
 28270  002FD6  5183               	movf	configIO@i& (0+255),w,b
 28271  002FD8  0D04               	mullw	4
 28272  002FDA  CFF3 F07C          	movff	prodl,??_configIO
 28273  002FDE  0E03               	movlw	3
 28274  002FE0  277C               	addwf	??_configIO& (0+255),f,b
 28275  002FE2  517C               	movf	??_configIO& (0+255),w,b
 28276  002FE4  0F01               	addlw	low _configs
 28277  002FE6  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28278  002FE8  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28279  002FEC                     	if	1	;There is more than 1 active tblptr byte
 28280  002FEC  0E0F               	movlw	high __smallconst
 28281  002FEE  6EF7               	movwf	tblptrh,c
 28282  002FF0                     	endif
 28283  002FF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28284  002FF0  6AF8               	clrf	tblptru,c
 28285  002FF2                     	endif
 28286  002FF2                     	if	0	;tblptru may be non-zero
 28287  002FF2                     	endif
 28288  002FF2  0E10               	movlw	16
 28289  002FF4  0008               	tblrd		*
 28290  002FF6  60F5               	cpfslt	tablat,c
 28291  002FF8  0012               	return	
 28292                           
 28293                           ; BSR set to: 0
 28294                           ;main.c: 724: ANCON1 &= ~(1U << (configs[i].an - 8U));
 28295  002FFA  5183               	movf	configIO@i& (0+255),w,b
 28296  002FFC  0D04               	mullw	4
 28297  002FFE  CFF3 F07C          	movff	prodl,??_configIO
 28298  003002  0E03               	movlw	3
 28299  003004  277C               	addwf	??_configIO& (0+255),f,b
 28300  003006  517C               	movf	??_configIO& (0+255),w,b
 28301  003008  0F01               	addlw	low _configs
 28302  00300A  6F7D               	movwf	(??_configIO+1)& (0+255),b
 28303  00300C  C07D  FFF6         	movff	??_configIO+1,tblptrl
 28304  003010                     	if	1	;There is more than 1 active tblptr byte
 28305  003010  0E0F               	movlw	high __smallconst
 28306  003012  6EF7               	movwf	tblptrh,c
 28307  003014                     	endif
 28308  003014                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28309  003014  6AF8               	clrf	tblptru,c
 28310  003016                     	endif
 28311  003016                     	if	0	;tblptru may be non-zero
 28312  003016                     	endif
 28313  003016  0008               	tblrd		*
 28314  003018  CFF5 F07E          	movff	tablat,??_configIO+2
 28315  00301C  0EF8               	movlw	248
 28316  00301E  277E               	addwf	(??_configIO+2)& (0+255),f,b
 28317  003020  0E01               	movlw	1
 28318  003022  6F7F               	movwf	(??_configIO+3)& (0+255),b
 28319  003024  2B7E               	incf	(??_configIO+2)& (0+255),f,b
 28320  003026  D002               	goto	u22974
 28321  003028                     u22975:
 28322  003028  90D8               	bcf	status,0,c
 28323  00302A  377F               	rlcf	(??_configIO+3)& (0+255),f,b
 28324  00302C                     u22974:
 28325  00302C  2F7E               	decfsz	(??_configIO+2)& (0+255),f,b
 28326  00302E  D7FC               	goto	u22975
 28327  003030  0100               	movlb	0	; () banked
 28328  003032  517F               	movf	(??_configIO+3)& (0+255),w,b
 28329  003034  0AFF               	xorlw	255
 28330  003036  010F               	movlb	15	; () banked
 28331  003038  175C               	andwf	92,f,b	;volatile
 28332  00303A  0012               	return		;funcret
 28333  00303C                     __end_of_configIO:
 28334                           	callstack 0
 28335                           
 28336 ;; *************** function _setDigitalOutput *****************
 28337 ;; Defined at:
 28338 ;;		line 227 in file "../../github/CANMIOfirmware/digitalOut.c"
 28339 ;; Parameters:    Size  Location     Type
 28340 ;;  io              1    wreg     unsigned char 
 28341 ;;  state           1   23[BANK0 ] unsigned char 
 28342 ;; Auto vars:     Size  Location     Type
 28343 ;;  io              1   27[BANK0 ] unsigned char 
 28344 ;;  pinState        1   26[BANK0 ] unsigned char 
 28345 ;; Return value:  Size  Location     Type
 28346 ;;                  1    wreg      void 
 28347 ;; Registers used:
 28348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28349 ;; Tracked objects:
 28350 ;;		On entry : 3F/0
 28351 ;;		On exit  : 3F/0
 28352 ;;		Unchanged: 0/0
 28353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28354 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28357 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28358 ;;Total ram usage:        5 bytes
 28359 ;; Hardware stack levels used: 1
 28360 ;; Hardware stack levels required when called: 9
 28361 ;; This function calls:
 28362 ;;		_setOutputPin
 28363 ;; This function is called by:
 28364 ;;		_configIO
 28365 ;;		_setOutputPosition
 28366 ;; This function uses a non-reentrant model
 28367 ;;
 28368                           
 28369                           	psect	text128
 28370  007F78                     __ptext128:
 28371                           	callstack 0
 28372  007F78                     _setDigitalOutput:
 28373                           	callstack 18
 28374                           
 28375                           ;incstack = 0
 28376                           ;setDigitalOutput@io stored from wreg
 28377  007F78  6F7B               	movwf	setDigitalOutput@io& (0+255),b
 28378                           
 28379                           ;digitalOut.c: 228: BOOL pinState;;digitalOut.c: 229: switch (state) {
 28380  007F7A  D04A               	goto	l18333
 28381  007F7C                     l18317:
 28382                           
 28383                           ; BSR set to: 0
 28384                           ;digitalOut.c: 231: state = 2U;
 28385  007F7C  0E02               	movlw	2
 28386  007F7E  6F77               	movwf	setDigitalOutput@state& (0+255),b
 28387  007F80                     l18319:
 28388                           
 28389                           ; BSR set to: 0
 28390                           ;digitalOut.c: 234: case 2U:;digitalOut.c: 235: pinState = (BOOL)(state == 1U);
 28391  007F80  0577               	decf	setDigitalOutput@state& (0+255),w,b
 28392  007F82  A4D8               	btfss	status,2,c
 28393  007F84  D002               	goto	u22550
 28394  007F86  0E01               	movlw	1
 28395  007F88  D001               	goto	u22560
 28396  007F8A                     u22550:
 28397  007F8A  0E00               	movlw	0
 28398  007F8C                     u22560:
 28399  007F8C  6F7A               	movwf	setDigitalOutput@pinState& (0+255),b
 28400                           
 28401                           ; BSR set to: 0
 28402                           ;digitalOut.c: 239: if (NV->io[io].flags & 0x20U) {
 28403  007F8E  517B               	movf	setDigitalOutput@io& (0+255),w,b
 28404  007F90  0D07               	mullw	7
 28405  007F92  C0EC  F078         	movff	_NV,??_setDigitalOutput
 28406  007F96  C0ED  F079         	movff	_NV+1,??_setDigitalOutput+1
 28407  007F9A  50F3               	movf	243,w,c
 28408  007F9C  2778               	addwf	??_setDigitalOutput& (0+255),f,b
 28409  007F9E  50F4               	movf	244,w,c
 28410  007FA0  2379               	addwfc	(??_setDigitalOutput+1)& (0+255),f,b
 28411  007FA2  0E11               	movlw	17
 28412  007FA4  2578               	addwf	??_setDigitalOutput& (0+255),w,b
 28413  007FA6  6ED9               	movwf	fsr2l,c
 28414  007FA8  0E00               	movlw	0
 28415  007FAA  2179               	addwfc	(??_setDigitalOutput+1)& (0+255),w,b
 28416  007FAC  6EDA               	movwf	fsr2h,c
 28417  007FAE  AADF               	btfss	indf2,5,c
 28418  007FB0  D00B               	goto	l18325
 28419                           
 28420                           ; BSR set to: 0
 28421                           ;digitalOut.c: 240: setOutputPin(io, (BOOL)(! pinState));
 28422  007FB2  517A               	movf	setDigitalOutput@pinState& (0+255),w,b
 28423  007FB4  A4D8               	btfss	status,2,c
 28424  007FB6  D002               	goto	u22580
 28425  007FB8  0E01               	movlw	1
 28426  007FBA  D001               	goto	u22590
 28427  007FBC                     u22580:
 28428  007FBC  0E00               	movlw	0
 28429  007FBE                     u22590:
 28430  007FBE  6F71               	movwf	setOutputPin@state& (0+255),b
 28431  007FC0  517B               	movf	setDigitalOutput@io& (0+255),w,b
 28432  007FC2  EC90  F031         	call	_setOutputPin
 28433                           
 28434                           ;digitalOut.c: 241: } else {
 28435  007FC6  0012               	return	
 28436  007FC8                     l18325:
 28437                           
 28438                           ; BSR set to: 0
 28439                           ;digitalOut.c: 242: setOutputPin(io, pinState);
 28440  007FC8  C07A  F071         	movff	setDigitalOutput@pinState,setOutputPin@state
 28441  007FCC  517B               	movf	setDigitalOutput@io& (0+255),w,b
 28442  007FCE  EC90  F031         	call	_setOutputPin
 28443  007FD2  0012               	return	
 28444  007FD4                     l18327:
 28445                           
 28446                           ; BSR set to: 0
 28447                           ;digitalOut.c: 246: flashDelays[io] = NV->io[io].nv_io.nv_output.output_flash_period;
 28448  007FD4  517B               	movf	setDigitalOutput@io& (0+255),w,b
 28449  007FD6  0D07               	mullw	7
 28450  007FD8  C0EC  F078         	movff	_NV,??_setDigitalOutput
 28451  007FDC  C0ED  F079         	movff	_NV+1,??_setDigitalOutput+1
 28452  007FE0  50F3               	movf	243,w,c
 28453  007FE2  2778               	addwf	??_setDigitalOutput& (0+255),f,b
 28454  007FE4  50F4               	movf	244,w,c
 28455  007FE6  2379               	addwfc	(??_setDigitalOutput+1)& (0+255),f,b
 28456  007FE8  0E13               	movlw	19
 28457  007FEA  2578               	addwf	??_setDigitalOutput& (0+255),w,b
 28458  007FEC  6ED9               	movwf	fsr2l,c
 28459  007FEE  0E00               	movlw	0
 28460  007FF0  2179               	addwfc	(??_setDigitalOutput+1)& (0+255),w,b
 28461  007FF2  6EDA               	movwf	fsr2h,c
 28462  007FF4  0E60               	movlw	low _flashDelays
 28463  007FF6  257B               	addwf	setDigitalOutput@io& (0+255),w,b
 28464  007FF8  6EE1               	movwf	fsr1l,c
 28465  007FFA  6AE2               	clrf	fsr1h,c
 28466  007FFC  0E01               	movlw	high _flashDelays
 28467  007FFE  22E2               	addwfc	fsr1h,f,c
 28468  008000  CFDF FFE7          	movff	indf2,indf1
 28469                           
 28470                           ; BSR set to: 0
 28471                           ;digitalOut.c: 247: setOutputPin(io, 1);
 28472  008004  0E01               	movlw	1
 28473  008006  6F71               	movwf	setOutputPin@state& (0+255),b
 28474  008008  517B               	movf	setDigitalOutput@io& (0+255),w,b
 28475  00800A  EC90  F031         	call	_setOutputPin
 28476                           
 28477                           ;digitalOut.c: 248: break;
 28478  00800E  0012               	return	
 28479  008010                     l18333:
 28480  008010  0100               	movlb	0	; () banked
 28481  008012  5177               	movf	setDigitalOutput@state& (0+255),w,b
 28482                           
 28483                           ; Switch size 1, requested type "simple"
 28484                           ; Number of cases is 3, Range of values is 1 to 3
 28485                           ; switch strategies available:
 28486                           ; Name         Instructions Cycles
 28487                           ; simple_byte           10     6 (average)
 28488                           ;	Chosen strategy is simple_byte
 28489  008014  0A01               	xorlw	1	; case 1
 28490  008016  B4D8               	btfsc	status,2,c
 28491  008018  D7B3               	goto	l18319
 28492  00801A  0A03               	xorlw	3	; case 2
 28493  00801C  B4D8               	btfsc	status,2,c
 28494  00801E  D7B0               	goto	l18319
 28495  008020  0A01               	xorlw	1	; case 3
 28496  008022  B4D8               	btfsc	status,2,c
 28497  008024  D7D7               	goto	l18327
 28498  008026  D7AA               	goto	l18317
 28499  008028                     __end_of_setDigitalOutput:
 28500                           	callstack 0
 28501                           
 28502 ;; *************** function _setOutputPin *****************
 28503 ;; Defined at:
 28504 ;;		line 257 in file "../../github/CANMIOfirmware/digitalOut.c"
 28505 ;; Parameters:    Size  Location     Type
 28506 ;;  io              1    wreg     unsigned char 
 28507 ;;  state           1   17[BANK0 ] unsigned char 
 28508 ;; Auto vars:     Size  Location     Type
 28509 ;;  io              1   22[BANK0 ] unsigned char 
 28510 ;; Return value:  Size  Location     Type
 28511 ;;                  1    wreg      void 
 28512 ;; Registers used:
 28513 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28514 ;; Tracked objects:
 28515 ;;		On entry : 3F/0
 28516 ;;		On exit  : 3F/0
 28517 ;;		Unchanged: 0/0
 28518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28519 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28521 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28522 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28523 ;;Total ram usage:        6 bytes
 28524 ;; Hardware stack levels used: 1
 28525 ;; Hardware stack levels required when called: 8
 28526 ;; This function calls:
 28527 ;;		Nothing
 28528 ;; This function is called by:
 28529 ;;		_startDigitalOutput
 28530 ;;		_processOutputs
 28531 ;;		_setDigitalOutput
 28532 ;;		_setOutputPosition
 28533 ;;		_setupTimer1
 28534 ;;		_setupTimer3
 28535 ;; This function uses a non-reentrant model
 28536 ;;
 28537                           
 28538                           	psect	text129
 28539  006320                     __ptext129:
 28540                           	callstack 0
 28541  006320                     _setOutputPin:
 28542                           	callstack 20
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;incstack = 0
 28546                           ;setOutputPin@io stored from wreg
 28547  006320  6F76               	movwf	setOutputPin@io& (0+255),b
 28548                           
 28549                           ;digitalOut.c: 258: switch (configs[io].port) {
 28550  006322  D0BA               	goto	l18145
 28551  006324                     l18125:
 28552                           
 28553                           ; BSR set to: 0
 28554                           ;digitalOut.c: 260: if (state) {
 28555  006324  5171               	movf	setOutputPin@state& (0+255),w,b
 28556  006326  B4D8               	btfsc	status,2,c
 28557  006328  D01D               	goto	l18129
 28558                           
 28559                           ; BSR set to: 0
 28560                           ;digitalOut.c: 262: LATA |= (1U<<configs[io].no);
 28561  00632A  5176               	movf	setOutputPin@io& (0+255),w,b
 28562  00632C  0D04               	mullw	4
 28563  00632E  CFF3 F072          	movff	prodl,??_setOutputPin
 28564  006332  0E02               	movlw	2
 28565  006334  2772               	addwf	??_setOutputPin& (0+255),f,b
 28566  006336  5172               	movf	??_setOutputPin& (0+255),w,b
 28567  006338  0F01               	addlw	low _configs
 28568  00633A  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28569  00633C  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28570  006340                     	if	1	;There is more than 1 active tblptr byte
 28571  006340  0E0F               	movlw	high __smallconst
 28572  006342  6EF7               	movwf	tblptrh,c
 28573  006344                     	endif
 28574  006344                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28575  006344  6AF8               	clrf	tblptru,c
 28576  006346                     	endif
 28577  006346                     	if	0	;tblptru may be non-zero
 28578  006346                     	endif
 28579  006346  0008               	tblrd		*
 28580  006348  CFF5 F074          	movff	tablat,??_setOutputPin+2
 28581  00634C  0E01               	movlw	1
 28582  00634E  6F75               	movwf	(??_setOutputPin+3)& (0+255),b
 28583  006350  2B74               	incf	(??_setOutputPin+2)& (0+255),f,b
 28584  006352  D002               	goto	u22204
 28585  006354                     u22205:
 28586  006354  90D8               	bcf	status,0,c
 28587  006356  3775               	rlcf	(??_setOutputPin+3)& (0+255),f,b
 28588  006358                     u22204:
 28589  006358  2F74               	decfsz	(??_setOutputPin+2)& (0+255),f,b
 28590  00635A  D7FC               	goto	u22205
 28591  00635C  0100               	movlb	0	; () banked
 28592  00635E  5175               	movf	(??_setOutputPin+3)& (0+255),w,b
 28593  006360  1289               	iorwf	137,f,c	;volatile
 28594                           
 28595                           ;digitalOut.c: 263: } else {
 28596  006362  0012               	return	
 28597  006364                     l18129:
 28598                           
 28599                           ; BSR set to: 0
 28600                           ;digitalOut.c: 265: LATA &= ~(1U<<configs[io].no);
 28601  006364  5176               	movf	setOutputPin@io& (0+255),w,b
 28602  006366  0D04               	mullw	4
 28603  006368  CFF3 F072          	movff	prodl,??_setOutputPin
 28604  00636C  0E02               	movlw	2
 28605  00636E  2772               	addwf	??_setOutputPin& (0+255),f,b
 28606  006370  5172               	movf	??_setOutputPin& (0+255),w,b
 28607  006372  0F01               	addlw	low _configs
 28608  006374  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28609  006376  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28610  00637A                     	if	1	;There is more than 1 active tblptr byte
 28611  00637A  0E0F               	movlw	high __smallconst
 28612  00637C  6EF7               	movwf	tblptrh,c
 28613  00637E                     	endif
 28614  00637E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28615  00637E  6AF8               	clrf	tblptru,c
 28616  006380                     	endif
 28617  006380                     	if	0	;tblptru may be non-zero
 28618  006380                     	endif
 28619  006380  0008               	tblrd		*
 28620  006382  CFF5 F074          	movff	tablat,??_setOutputPin+2
 28621  006386  0E01               	movlw	1
 28622  006388  6F75               	movwf	(??_setOutputPin+3)& (0+255),b
 28623  00638A  2B74               	incf	(??_setOutputPin+2)& (0+255),f,b
 28624  00638C  D002               	goto	u22214
 28625  00638E                     u22215:
 28626  00638E  90D8               	bcf	status,0,c
 28627  006390  3775               	rlcf	(??_setOutputPin+3)& (0+255),f,b
 28628  006392                     u22214:
 28629  006392  2F74               	decfsz	(??_setOutputPin+2)& (0+255),f,b
 28630  006394  D7FC               	goto	u22215
 28631  006396  0100               	movlb	0	; () banked
 28632  006398  5175               	movf	(??_setOutputPin+3)& (0+255),w,b
 28633  00639A  0AFF               	xorlw	255
 28634  00639C  1689               	andwf	137,f,c	;volatile
 28635  00639E  0012               	return	
 28636  0063A0                     l18131:
 28637                           
 28638                           ; BSR set to: 0
 28639                           ;digitalOut.c: 269: if (state) {
 28640  0063A0  5171               	movf	setOutputPin@state& (0+255),w,b
 28641  0063A2  B4D8               	btfsc	status,2,c
 28642  0063A4  D01D               	goto	l18135
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;digitalOut.c: 271: LATB |= (1U<<configs[io].no);
 28646  0063A6  5176               	movf	setOutputPin@io& (0+255),w,b
 28647  0063A8  0D04               	mullw	4
 28648  0063AA  CFF3 F072          	movff	prodl,??_setOutputPin
 28649  0063AE  0E02               	movlw	2
 28650  0063B0  2772               	addwf	??_setOutputPin& (0+255),f,b
 28651  0063B2  5172               	movf	??_setOutputPin& (0+255),w,b
 28652  0063B4  0F01               	addlw	low _configs
 28653  0063B6  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28654  0063B8  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28655  0063BC                     	if	1	;There is more than 1 active tblptr byte
 28656  0063BC  0E0F               	movlw	high __smallconst
 28657  0063BE  6EF7               	movwf	tblptrh,c
 28658  0063C0                     	endif
 28659  0063C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28660  0063C0  6AF8               	clrf	tblptru,c
 28661  0063C2                     	endif
 28662  0063C2                     	if	0	;tblptru may be non-zero
 28663  0063C2                     	endif
 28664  0063C2  0008               	tblrd		*
 28665  0063C4  CFF5 F074          	movff	tablat,??_setOutputPin+2
 28666  0063C8  0E01               	movlw	1
 28667  0063CA  6F75               	movwf	(??_setOutputPin+3)& (0+255),b
 28668  0063CC  2B74               	incf	(??_setOutputPin+2)& (0+255),f,b
 28669  0063CE  D002               	goto	u22234
 28670  0063D0                     u22235:
 28671  0063D0  90D8               	bcf	status,0,c
 28672  0063D2  3775               	rlcf	(??_setOutputPin+3)& (0+255),f,b
 28673  0063D4                     u22234:
 28674  0063D4  2F74               	decfsz	(??_setOutputPin+2)& (0+255),f,b
 28675  0063D6  D7FC               	goto	u22235
 28676  0063D8  0100               	movlb	0	; () banked
 28677  0063DA  5175               	movf	(??_setOutputPin+3)& (0+255),w,b
 28678  0063DC  128A               	iorwf	138,f,c	;volatile
 28679                           
 28680                           ;digitalOut.c: 272: } else {
 28681  0063DE  0012               	return	
 28682  0063E0                     l18135:
 28683                           
 28684                           ; BSR set to: 0
 28685                           ;digitalOut.c: 274: LATB &= ~(1U<<configs[io].no);
 28686  0063E0  5176               	movf	setOutputPin@io& (0+255),w,b
 28687  0063E2  0D04               	mullw	4
 28688  0063E4  CFF3 F072          	movff	prodl,??_setOutputPin
 28689  0063E8  0E02               	movlw	2
 28690  0063EA  2772               	addwf	??_setOutputPin& (0+255),f,b
 28691  0063EC  5172               	movf	??_setOutputPin& (0+255),w,b
 28692  0063EE  0F01               	addlw	low _configs
 28693  0063F0  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28694  0063F2  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28695  0063F6                     	if	1	;There is more than 1 active tblptr byte
 28696  0063F6  0E0F               	movlw	high __smallconst
 28697  0063F8  6EF7               	movwf	tblptrh,c
 28698  0063FA                     	endif
 28699  0063FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28700  0063FA  6AF8               	clrf	tblptru,c
 28701  0063FC                     	endif
 28702  0063FC                     	if	0	;tblptru may be non-zero
 28703  0063FC                     	endif
 28704  0063FC  0008               	tblrd		*
 28705  0063FE  CFF5 F074          	movff	tablat,??_setOutputPin+2
 28706  006402  0E01               	movlw	1
 28707  006404  6F75               	movwf	(??_setOutputPin+3)& (0+255),b
 28708  006406  2B74               	incf	(??_setOutputPin+2)& (0+255),f,b
 28709  006408  D002               	goto	u22244
 28710  00640A                     u22245:
 28711  00640A  90D8               	bcf	status,0,c
 28712  00640C  3775               	rlcf	(??_setOutputPin+3)& (0+255),f,b
 28713  00640E                     u22244:
 28714  00640E  2F74               	decfsz	(??_setOutputPin+2)& (0+255),f,b
 28715  006410  D7FC               	goto	u22245
 28716  006412  0100               	movlb	0	; () banked
 28717  006414  5175               	movf	(??_setOutputPin+3)& (0+255),w,b
 28718  006416  0AFF               	xorlw	255
 28719  006418  168A               	andwf	138,f,c	;volatile
 28720  00641A  0012               	return	
 28721  00641C                     l18137:
 28722                           
 28723                           ; BSR set to: 0
 28724                           ;digitalOut.c: 278: if (state) {
 28725  00641C  5171               	movf	setOutputPin@state& (0+255),w,b
 28726  00641E  B4D8               	btfsc	status,2,c
 28727  006420  D01D               	goto	l18141
 28728                           
 28729                           ; BSR set to: 0
 28730                           ;digitalOut.c: 280: LATC |= (1U<<configs[io].no);
 28731  006422  5176               	movf	setOutputPin@io& (0+255),w,b
 28732  006424  0D04               	mullw	4
 28733  006426  CFF3 F072          	movff	prodl,??_setOutputPin
 28734  00642A  0E02               	movlw	2
 28735  00642C  2772               	addwf	??_setOutputPin& (0+255),f,b
 28736  00642E  5172               	movf	??_setOutputPin& (0+255),w,b
 28737  006430  0F01               	addlw	low _configs
 28738  006432  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28739  006434  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28740  006438                     	if	1	;There is more than 1 active tblptr byte
 28741  006438  0E0F               	movlw	high __smallconst
 28742  00643A  6EF7               	movwf	tblptrh,c
 28743  00643C                     	endif
 28744  00643C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28745  00643C  6AF8               	clrf	tblptru,c
 28746  00643E                     	endif
 28747  00643E                     	if	0	;tblptru may be non-zero
 28748  00643E                     	endif
 28749  00643E  0008               	tblrd		*
 28750  006440  CFF5 F074          	movff	tablat,??_setOutputPin+2
 28751  006444  0E01               	movlw	1
 28752  006446  6F75               	movwf	(??_setOutputPin+3)& (0+255),b
 28753  006448  2B74               	incf	(??_setOutputPin+2)& (0+255),f,b
 28754  00644A  D002               	goto	u22264
 28755  00644C                     u22265:
 28756  00644C  90D8               	bcf	status,0,c
 28757  00644E  3775               	rlcf	(??_setOutputPin+3)& (0+255),f,b
 28758  006450                     u22264:
 28759  006450  2F74               	decfsz	(??_setOutputPin+2)& (0+255),f,b
 28760  006452  D7FC               	goto	u22265
 28761  006454  0100               	movlb	0	; () banked
 28762  006456  5175               	movf	(??_setOutputPin+3)& (0+255),w,b
 28763  006458  128B               	iorwf	139,f,c	;volatile
 28764                           
 28765                           ;digitalOut.c: 281: } else {
 28766  00645A  0012               	return	
 28767  00645C                     l18141:
 28768                           
 28769                           ; BSR set to: 0
 28770                           ;digitalOut.c: 283: LATC &= ~(1U<<configs[io].no);
 28771  00645C  5176               	movf	setOutputPin@io& (0+255),w,b
 28772  00645E  0D04               	mullw	4
 28773  006460  CFF3 F072          	movff	prodl,??_setOutputPin
 28774  006464  0E02               	movlw	2
 28775  006466  2772               	addwf	??_setOutputPin& (0+255),f,b
 28776  006468  5172               	movf	??_setOutputPin& (0+255),w,b
 28777  00646A  0F01               	addlw	low _configs
 28778  00646C  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28779  00646E  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28780  006472                     	if	1	;There is more than 1 active tblptr byte
 28781  006472  0E0F               	movlw	high __smallconst
 28782  006474  6EF7               	movwf	tblptrh,c
 28783  006476                     	endif
 28784  006476                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28785  006476  6AF8               	clrf	tblptru,c
 28786  006478                     	endif
 28787  006478                     	if	0	;tblptru may be non-zero
 28788  006478                     	endif
 28789  006478  0008               	tblrd		*
 28790  00647A  CFF5 F074          	movff	tablat,??_setOutputPin+2
 28791  00647E  0E01               	movlw	1
 28792  006480  6F75               	movwf	(??_setOutputPin+3)& (0+255),b
 28793  006482  2B74               	incf	(??_setOutputPin+2)& (0+255),f,b
 28794  006484  D002               	goto	u22274
 28795  006486                     u22275:
 28796  006486  90D8               	bcf	status,0,c
 28797  006488  3775               	rlcf	(??_setOutputPin+3)& (0+255),f,b
 28798  00648A                     u22274:
 28799  00648A  2F74               	decfsz	(??_setOutputPin+2)& (0+255),f,b
 28800  00648C  D7FC               	goto	u22275
 28801  00648E  0100               	movlb	0	; () banked
 28802  006490  5175               	movf	(??_setOutputPin+3)& (0+255),w,b
 28803  006492  0AFF               	xorlw	255
 28804  006494  168B               	andwf	139,f,c	;volatile
 28805  006496  0012               	return	
 28806  006498                     l18145:
 28807  006498  0100               	movlb	0	; () banked
 28808  00649A  5176               	movf	setOutputPin@io& (0+255),w,b
 28809  00649C  0D04               	mullw	4
 28810  00649E  CFF3 F072          	movff	prodl,??_setOutputPin
 28811  0064A2  0E01               	movlw	1
 28812  0064A4  2772               	addwf	??_setOutputPin& (0+255),f,b
 28813  0064A6  5172               	movf	??_setOutputPin& (0+255),w,b
 28814  0064A8  0F01               	addlw	low _configs
 28815  0064AA  6F73               	movwf	(??_setOutputPin+1)& (0+255),b
 28816  0064AC  C073  FFF6         	movff	??_setOutputPin+1,tblptrl
 28817  0064B0                     	if	1	;There is more than 1 active tblptr byte
 28818  0064B0  0E0F               	movlw	high __smallconst
 28819  0064B2  6EF7               	movwf	tblptrh,c
 28820  0064B4                     	endif
 28821  0064B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 28822  0064B4  6AF8               	clrf	tblptru,c
 28823  0064B6                     	endif
 28824  0064B6                     	if	0	;tblptru may be non-zero
 28825  0064B6                     	endif
 28826  0064B6  0008               	tblrd		*
 28827  0064B8  50F5               	movf	tablat,w,c
 28828                           
 28829                           ; Switch size 1, requested type "simple"
 28830                           ; Number of cases is 3, Range of values is 65 to 67
 28831                           ; switch strategies available:
 28832                           ; Name         Instructions Cycles
 28833                           ; simple_byte           10     6 (average)
 28834                           ;	Chosen strategy is simple_byte
 28835  0064BA  0A41               	xorlw	65	; case 65
 28836  0064BC  B4D8               	btfsc	status,2,c
 28837  0064BE  D732               	goto	l18125
 28838  0064C0  0A03               	xorlw	3	; case 66
 28839  0064C2  B4D8               	btfsc	status,2,c
 28840  0064C4  D76D               	goto	l18131
 28841  0064C6  0A01               	xorlw	1	; case 67
 28842  0064C8  A4D8               	btfss	status,2,c
 28843  0064CA  0012               	return	
 28844  0064CC  D7A7               	goto	l18137
 28845  0064CE                     __end_of_setOutputPin:
 28846                           	callstack 0
 28847                           
 28848 ;; *************** function _factoryResetGlobalNv *****************
 28849 ;; Defined at:
 28850 ;;		line 195 in file "../../github/CANMIOfirmware/mioNv.c"
 28851 ;; Parameters:    Size  Location     Type
 28852 ;;		None
 28853 ;; Auto vars:     Size  Location     Type
 28854 ;;		None
 28855 ;; Return value:  Size  Location     Type
 28856 ;;                  1    wreg      void 
 28857 ;; Registers used:
 28858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28859 ;; Tracked objects:
 28860 ;;		On entry : 0/0
 28861 ;;		On exit  : 3F/0
 28862 ;;		Unchanged: 0/0
 28863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28868 ;;Total ram usage:        0 bytes
 28869 ;; Hardware stack levels used: 1
 28870 ;; Hardware stack levels required when called: 15
 28871 ;; This function calls:
 28872 ;;		_loadNvCache
 28873 ;;		_writeFlashByte
 28874 ;; This function is called by:
 28875 ;;		_factoryResetFlash
 28876 ;; This function uses a non-reentrant model
 28877 ;;
 28878                           
 28879                           	psect	text130
 28880  008AC4                     __ptext130:
 28881                           	callstack 0
 28882  008AC4                     _factoryResetGlobalNv:
 28883                           	callstack 13
 28884                           
 28885                           ;mioNv.c: 196: writeFlashByte((BYTE*)(0xFF80U + 1U), (BYTE)0);
 28886                           
 28887                           ; BSR set to: 0
 28888                           ;incstack = 0
 28889  008AC4  0E81               	movlw	129
 28890  008AC6  0100               	movlb	0	; () banked
 28891  008AC8  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 28892  008ACA  0EFF               	movlw	255
 28893  008ACC  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 28894  008ACE  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 28895  008AD0  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 28896  008AD2  A4D8               	btfss	status,2,c
 28897  008AD4  0E20               	movlw	32
 28898  008AD6  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 28899  008AD8  0E00               	movlw	0
 28900  008ADA  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 28901  008ADC  ECBA  F052         	call	_writeFlashByte	;wreg free
 28902                           
 28903                           ;mioNv.c: 197: writeFlashByte((BYTE*)(0xFF80U + 2U), (BYTE)0);
 28904  008AE0  0E82               	movlw	130
 28905  008AE2  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 28906  008AE4  0EFF               	movlw	255
 28907  008AE6  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 28908  008AE8  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 28909  008AEA  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 28910  008AEC  A4D8               	btfss	status,2,c
 28911  008AEE  0E20               	movlw	32
 28912  008AF0  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 28913  008AF2  0E00               	movlw	0
 28914  008AF4  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 28915  008AF6  ECBA  F052         	call	_writeFlashByte	;wreg free
 28916                           
 28917                           ;mioNv.c: 198: writeFlashByte((BYTE*)(0xFF80U + 3U), (BYTE)234U);
 28918  008AFA  0E83               	movlw	131
 28919  008AFC  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 28920  008AFE  0EFF               	movlw	255
 28921  008B00  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 28922  008B02  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 28923  008B04  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 28924  008B06  A4D8               	btfss	status,2,c
 28925  008B08  0E20               	movlw	32
 28926  008B0A  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 28927  008B0C  0EEA               	movlw	234
 28928  008B0E  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 28929  008B10  ECBA  F052         	call	_writeFlashByte	;wreg free
 28930                           
 28931                           ;mioNv.c: 199: writeFlashByte((BYTE*)(0xFF80U + 4U), (BYTE)0x33);
 28932  008B14  0E84               	movlw	132
 28933  008B16  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 28934  008B18  0EFF               	movlw	255
 28935  008B1A  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 28936  008B1C  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 28937  008B1E  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 28938  008B20  A4D8               	btfss	status,2,c
 28939  008B22  0E20               	movlw	32
 28940  008B24  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 28941  008B26  0E33               	movlw	51
 28942  008B28  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 28943  008B2A  ECBA  F052         	call	_writeFlashByte	;wreg free
 28944                           
 28945                           ;mioNv.c: 200: writeFlashByte((BYTE*)(0xFF80U + 5U), (BYTE)10);
 28946  008B2E  0E85               	movlw	133
 28947  008B30  6F87               	movwf	writeFlashByte@flashAddr& (0+255),b
 28948  008B32  0EFF               	movlw	255
 28949  008B34  6F88               	movwf	(writeFlashByte@flashAddr+1)& (0+255),b
 28950  008B36  5187               	movf	writeFlashByte@flashAddr& (0+255),w,b
 28951  008B38  1188               	iorwf	(writeFlashByte@flashAddr+1)& (0+255),w,b
 28952  008B3A  A4D8               	btfss	status,2,c
 28953  008B3C  0E20               	movlw	32
 28954  008B3E  6F89               	movwf	(writeFlashByte@flashAddr+2)& (0+255),b
 28955  008B40  0E0A               	movlw	10
 28956  008B42  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 28957  008B44  ECBA  F052         	call	_writeFlashByte	;wreg free
 28958                           
 28959                           ;mioNv.c: 202: loadNvCache();
 28960  008B48  EC0C  F04F         	call	_loadNvCache	;wreg free
 28961                           
 28962                           ; BSR set to: 0
 28963  008B4C  0012               	return		;funcret
 28964  008B4E                     __end_of_factoryResetGlobalNv:
 28965                           	callstack 0
 28966                           
 28967 ;; *************** function _loadNvCache *****************
 28968 ;; Defined at:
 28969 ;;		line 47 in file "../../github/CANMIOfirmware/nvCache.c"
 28970 ;; Parameters:    Size  Location     Type
 28971 ;;		None
 28972 ;; Auto vars:     Size  Location     Type
 28973 ;;  np              2   32[BANK0 ] PTR unsigned char 
 28974 ;;		 -> nvCache(128), 
 28975 ;;  i               1   34[BANK0 ] unsigned char 
 28976 ;; Return value:  Size  Location     Type
 28977 ;;                  2   29[BANK0 ] PTR struct .
 28978 ;; Registers used:
 28979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28980 ;; Tracked objects:
 28981 ;;		On entry : 3E/1
 28982 ;;		On exit  : 3F/0
 28983 ;;		Unchanged: 0/0
 28984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28986 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28988 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28989 ;;Total ram usage:        6 bytes
 28990 ;; Hardware stack levels used: 1
 28991 ;; Hardware stack levels required when called: 13
 28992 ;; This function calls:
 28993 ;;		_readFlashBlock
 28994 ;; This function is called by:
 28995 ;;		_main
 28996 ;;		_initialise
 28997 ;;		_factoryResetGlobalNv
 28998 ;;		_defaultNVs
 28999 ;;		_doNvset
 29000 ;; This function uses a non-reentrant model
 29001 ;;
 29002                           
 29003                           	psect	text131
 29004  009E18                     __ptext131:
 29005                           	callstack 0
 29006  009E18                     _loadNvCache:
 29007                           	callstack 17
 29008                           
 29009                           ;nvCache.c: 48: BYTE * np = (BYTE*)(&nvCache);
 29010                           
 29011                           ; BSR set to: 0
 29012                           ;incstack = 0
 29013  009E18  0E00               	movlw	low _nvCache
 29014  009E1A  0100               	movlb	0	; () banked
 29015  009E1C  6F80               	movwf	loadNvCache@np& (0+255),b
 29016  009E1E  0E04               	movlw	high _nvCache
 29017  009E20  6F81               	movwf	(loadNvCache@np+1)& (0+255),b
 29018                           
 29019                           ; BSR set to: 0
 29020                           ;nvCache.c: 49: unsigned char i;;nvCache.c: 51: for (i=0; i<sizeof(ModuleNvDefs); i++) {
 29021  009E22  0E00               	movlw	0
 29022  009E24  6F82               	movwf	loadNvCache@i& (0+255),b
 29023  009E26                     l18343:
 29024                           
 29025                           ; BSR set to: 0
 29026                           ;nvCache.c: 52: *(np+i) = readFlashBlock((WORD)(NvBytePtr+i));
 29027  009E26  0E80               	movlw	128
 29028  009E28  2582               	addwf	loadNvCache@i& (0+255),w,b
 29029  009E2A  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 29030  009E2C  6B77               	clrf	(readFlashBlock@flashAddr+1)& (0+255),b
 29031  009E2E  0EFF               	movlw	255
 29032  009E30  2377               	addwfc	(readFlashBlock@flashAddr+1)& (0+255),f,b
 29033  009E32  EC8D  F03D         	call	_readFlashBlock	;wreg free
 29034  009E36  6F7F               	movwf	??_loadNvCache& (0+255),b
 29035  009E38  5182               	movf	loadNvCache@i& (0+255),w,b
 29036  009E3A  2580               	addwf	loadNvCache@np& (0+255),w,b
 29037  009E3C  6ED9               	movwf	fsr2l,c
 29038  009E3E  0E00               	movlw	0
 29039  009E40  2181               	addwfc	(loadNvCache@np+1)& (0+255),w,b
 29040  009E42  6EDA               	movwf	fsr2h,c
 29041  009E44  C07F  FFDF         	movff	??_loadNvCache,indf2
 29042                           
 29043                           ; BSR set to: 0
 29044  009E48  2B82               	incf	loadNvCache@i& (0+255),f,b
 29045                           
 29046                           ; BSR set to: 0
 29047  009E4A  0E7F               	movlw	127
 29048  009E4C  6582               	cpfsgt	loadNvCache@i& (0+255),b
 29049  009E4E  D7EB               	goto	l18343
 29050                           
 29051                           ; BSR set to: 0
 29052                           ;nvCache.c: 53: };nvCache.c: 54: return (ModuleNvDefs*)&nvCache;
 29053  009E50  0E00               	movlw	low _nvCache
 29054  009E52  6F7D               	movwf	?_loadNvCache& (0+255),b
 29055  009E54  0E04               	movlw	high _nvCache
 29056  009E56  6F7E               	movwf	(?_loadNvCache+1)& (0+255),b
 29057                           
 29058                           ; BSR set to: 0
 29059  009E58  0012               	return		;funcret
 29060  009E5A                     __end_of_loadNvCache:
 29061                           	callstack 0
 29062                           
 29063 ;; *************** function _factoryResetGlobalEvents *****************
 29064 ;; Defined at:
 29065 ;;		line 95 in file "../../github/CANMIOfirmware/mioEvents.c"
 29066 ;; Parameters:    Size  Location     Type
 29067 ;;		None
 29068 ;; Auto vars:     Size  Location     Type
 29069 ;;		None
 29070 ;; Return value:  Size  Location     Type
 29071 ;;                  1    wreg      void 
 29072 ;; Registers used:
 29073 ;;		None
 29074 ;; Tracked objects:
 29075 ;;		On entry : 3F/0
 29076 ;;		On exit  : 3F/0
 29077 ;;		Unchanged: 3F/0
 29078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29083 ;;Total ram usage:        0 bytes
 29084 ;; Hardware stack levels used: 1
 29085 ;; Hardware stack levels required when called: 8
 29086 ;; This function calls:
 29087 ;;		Nothing
 29088 ;; This function is called by:
 29089 ;;		_factoryResetFlash
 29090 ;; This function uses a non-reentrant model
 29091 ;;
 29092                           
 29093                           	psect	text132
 29094  00A71E                     __ptext132:
 29095                           	callstack 0
 29096  00A71E                     _factoryResetGlobalEvents:
 29097                           	callstack 20
 29098                           
 29099                           ; BSR set to: 0
 29100                           
 29101                           ; BSR set to: 0
 29102                           ;incstack = 0
 29103  00A71E  0012               	return		;funcret
 29104  00A720                     __end_of_factoryResetGlobalEvents:
 29105                           	callstack 0
 29106                           
 29107 ;; *************** function _clearAllEvents *****************
 29108 ;; Defined at:
 29109 ;;		line 303 in file "../../github/CBUSlib/events.c"
 29110 ;; Parameters:    Size  Location     Type
 29111 ;;		None
 29112 ;; Auto vars:     Size  Location     Type
 29113 ;;  tableIndex      1   61[BANK0 ] unsigned char 
 29114 ;; Return value:  Size  Location     Type
 29115 ;;                  1    wreg      void 
 29116 ;; Registers used:
 29117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29118 ;; Tracked objects:
 29119 ;;		On entry : 3F/0
 29120 ;;		On exit  : 3F/0
 29121 ;;		Unchanged: 0/0
 29122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29125 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29126 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29127 ;;Total ram usage:        6 bytes
 29128 ;; Hardware stack levels used: 1
 29129 ;; Hardware stack levels required when called: 16
 29130 ;; This function calls:
 29131 ;;		_flushFlashImage
 29132 ;;		_rebuildHashtable
 29133 ;;		_writeFlashByte
 29134 ;; This function is called by:
 29135 ;;		_factoryResetFlash
 29136 ;;		_doNnclr
 29137 ;; This function uses a non-reentrant model
 29138 ;;
 29139                           
 29140                           	psect	text133
 29141  009BF6                     __ptext133:
 29142                           	callstack 0
 29143  009BF6                     _clearAllEvents:
 29144                           	callstack 12
 29145                           
 29146                           ; BSR set to: 0
 29147                           ;events.c: 304: unsigned char tableIndex;;events.c: 305: for (tableIndex=0; tableIndex<2
      +                          55U; tableIndex++) {
 29148                           
 29149                           ; BSR set to: 0
 29150                           ;incstack = 0
 29151  009BF6  0E00               	movlw	0
 29152  009BF8  6F9D               	movwf	clearAllEvents@tableIndex& (0+255),b
 29153  009BFA                     l18895:
 29154                           
 29155                           ; BSR set to: 0
 29156                           ;events.c: 307: writeFlashByte((BYTE*)&(eventTable[tableIndex].flags.asByte), 0xff);
 29157  009BFA  519D               	movf	clearAllEvents@tableIndex& (0+255),w,b
 29158  009BFC  0D10               	mullw	16
 29159  009BFE  CFF3 F098          	movff	prodl,??_clearAllEvents
 29160  009C02  CFF4 F099          	movff	prodh,??_clearAllEvents+1
 29161  009C06  5198               	movf	??_clearAllEvents& (0+255),w,b
 29162  009C08  25E9               	addwf	_eventTable& (0+255),w,b
 29163  009C0A  6F9A               	movwf	(??_clearAllEvents+2)& (0+255),b
 29164  009C0C  5199               	movf	(??_clearAllEvents+1)& (0+255),w,b
 29165  009C0E  21EA               	addwfc	(_eventTable+1)& (0+255),w,b
 29166  009C10  6F9B               	movwf	(??_clearAllEvents+3)& (0+255),b
 29167  009C12  0E00               	movlw	0
 29168  009C14  21EB               	addwfc	(_eventTable+2)& (0+255),w,b
 29169  009C16  6F9C               	movwf	(??_clearAllEvents+4)& (0+255),b
 29170  009C18  C09A  F087         	movff	??_clearAllEvents+2,writeFlashByte@flashAddr
 29171  009C1C  C09B  F088         	movff	??_clearAllEvents+3,writeFlashByte@flashAddr+1
 29172  009C20  C09C  F089         	movff	??_clearAllEvents+4,writeFlashByte@flashAddr+2
 29173  009C24  0EFF               	movlw	255
 29174  009C26  6F8A               	movwf	writeFlashByte@flashData& (0+255),b
 29175  009C28  ECBA  F052         	call	_writeFlashByte	;wreg free
 29176                           
 29177                           ; BSR set to: 0
 29178  009C2C  2B9D               	incf	clearAllEvents@tableIndex& (0+255),f,b
 29179                           
 29180                           ; BSR set to: 0
 29181  009C2E  299D               	incf	clearAllEvents@tableIndex& (0+255),w,b
 29182  009C30  A4D8               	btfss	status,2,c
 29183  009C32  D7E3               	goto	l18895
 29184                           
 29185                           ; BSR set to: 0
 29186                           ;events.c: 308: };events.c: 309: flushFlashImage();
 29187  009C34  EC0D  F053         	call	_flushFlashImage	;wreg free
 29188                           
 29189                           ; BSR set to: 0
 29190                           ;events.c: 311: rebuildHashtable();
 29191  009C38  ECB2  F034         	call	_rebuildHashtable	;wreg free
 29192                           
 29193                           ; BSR set to: 0
 29194  009C3C  0012               	return		;funcret
 29195  009C3E                     __end_of_clearAllEvents:
 29196                           	callstack 0
 29197                           
 29198 ;; *************** function _writeFlashByte *****************
 29199 ;; Defined at:
 29200 ;;		line 341 in file "../../github/CBUSlib/romops.c"
 29201 ;; Parameters:    Size  Location     Type
 29202 ;;  flashAddr       3   39[BANK0 ] PTR unsigned char 
 29203 ;;		 -> ROM(65535), NULL(0), RAM(3648), 
 29204 ;;  flashData       1   42[BANK0 ] unsigned char 
 29205 ;; Auto vars:     Size  Location     Type
 29206 ;;		None
 29207 ;; Return value:  Size  Location     Type
 29208 ;;                  1    wreg      void 
 29209 ;; Registers used:
 29210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29211 ;; Tracked objects:
 29212 ;;		On entry : 3F/0
 29213 ;;		On exit  : 3F/0
 29214 ;;		Unchanged: 0/0
 29215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29220 ;;Total ram usage:        4 bytes
 29221 ;; Hardware stack levels used: 1
 29222 ;; Hardware stack levels required when called: 14
 29223 ;; This function calls:
 29224 ;;		_flushFlashImage
 29225 ;;		_writeFlashImage
 29226 ;; This function is called by:
 29227 ;;		_pollAnalogue
 29228 ;;		_initialise
 29229 ;;		_setType
 29230 ;;		_factoryResetGlobalNv
 29231 ;;		_defaultNVs
 29232 ;;		_clearAllEvents
 29233 ;;		_removeTableEntry
 29234 ;;		_addEvent
 29235 ;;		_writeEv
 29236 ;;		_doNvset
 29237 ;; This function uses a non-reentrant model
 29238 ;;
 29239                           
 29240                           	psect	text134
 29241  00A574                     __ptext134:
 29242                           	callstack 0
 29243  00A574                     _writeFlashByte:
 29244                           	callstack 15
 29245                           
 29246                           ; BSR set to: 0
 29247                           ;romops.c: 345: writeFlashImage( flashAddr, flashData );
 29248                           
 29249                           ; BSR set to: 0
 29250                           ;incstack = 0
 29251  00A574  C087  F07D         	movff	writeFlashByte@flashAddr,writeFlashImage@addr
 29252  00A578  C088  F07E         	movff	writeFlashByte@flashAddr+1,writeFlashImage@addr+1
 29253  00A57C  C089  F07F         	movff	writeFlashByte@flashAddr+2,writeFlashImage@addr+2
 29254  00A580  C08A  F080         	movff	writeFlashByte@flashData,writeFlashImage@data
 29255  00A584  ECC2  F041         	call	_writeFlashImage	;wreg free
 29256                           
 29257                           ;romops.c: 346: flushFlashImage();
 29258  00A588  EC0D  F053         	call	_flushFlashImage	;wreg free
 29259                           
 29260                           ; BSR set to: 0
 29261  00A58C  0012               	return		;funcret
 29262  00A58E                     __end_of_writeFlashByte:
 29263                           	callstack 0
 29264                           
 29265 ;; *************** function _writeFlashImage *****************
 29266 ;; Defined at:
 29267 ;;		line 308 in file "../../github/CBUSlib/romops.c"
 29268 ;; Parameters:    Size  Location     Type
 29269 ;;  addr            3   29[BANK0 ] PTR unsigned char 
 29270 ;;		 -> ROM(65535), NULL(0), RAM(3648), 
 29271 ;;  data            1   32[BANK0 ] unsigned char 
 29272 ;; Auto vars:     Size  Location     Type
 29273 ;;  offset          2   37[BANK0 ] PTR unsigned char 
 29274 ;;		 -> flashbuf(64), 
 29275 ;; Return value:  Size  Location     Type
 29276 ;;                  1    wreg      void 
 29277 ;; Registers used:
 29278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29279 ;; Tracked objects:
 29280 ;;		On entry : 3F/0
 29281 ;;		On exit  : 3F/0
 29282 ;;		Unchanged: 0/0
 29283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29286 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29287 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29288 ;;Total ram usage:       10 bytes
 29289 ;; Hardware stack levels used: 1
 29290 ;; Hardware stack levels required when called: 13
 29291 ;; This function calls:
 29292 ;;		_readFlashBlock
 29293 ;; This function is called by:
 29294 ;;		_writeFlashByte
 29295 ;;		_setFlashWord
 29296 ;; This function uses a non-reentrant model
 29297 ;;
 29298                           
 29299                           	psect	text135
 29300  008384                     __ptext135:
 29301                           	callstack 0
 29302  008384                     _writeFlashImage:
 29303                           	callstack 15
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;romops.c: 310: unsigned char *offset;;romops.c: 312: if (((WORD)addr < (0xEF80U&0xFFC0)
      +                          ) || ((WORD)addr > 0xFFFF)) {
 29307                           
 29308                           ; BSR set to: 0
 29309                           ;incstack = 0
 29310  008384  0E80               	movlw	128
 29311  008386  5D7D               	subwf	writeFlashImage@addr& (0+255),w,b
 29312  008388  0EEF               	movlw	239
 29313  00838A  597E               	subwfb	(writeFlashImage@addr+1)& (0+255),w,b
 29314  00838C  A0D8               	btfss	status,0,c
 29315  00838E  0012               	return	
 29316                           
 29317                           ; BSR set to: 0
 29318                           ;romops.c: 316: };romops.c: 318: if(flashFlags.valid !=5)
 29319  008390  5005               	movf	_flashFlags^0,w,c
 29320  008392  0B07               	andlw	7
 29321  008394  0A05               	xorlw	5
 29322  008396  B4D8               	btfsc	status,2,c
 29323  008398  D004               	goto	l17723
 29324                           
 29325                           ; BSR set to: 0
 29326                           ;romops.c: 319: {;romops.c: 320: flashFlags.valid=5;
 29327  00839A  5005               	movf	_flashFlags^0,w,c
 29328  00839C  0BF8               	andlw	-8
 29329  00839E  0905               	iorlw	5
 29330  0083A0  6E05               	movwf	_flashFlags^0,c
 29331  0083A2                     l17723:
 29332                           
 29333                           ; BSR set to: 0
 29334                           ;romops.c: 321: };romops.c: 323: if (!flashFlags.loaded || flashblock!=((WORD)addr & 0XF
      +                          FC0))
 29335  0083A2  A605               	btfss	_flashFlags^0,3,c
 29336  0083A4  D017               	goto	u21630
 29337                           
 29338                           ; BSR set to: 0
 29339  0083A6  0EC0               	movlw	192
 29340  0083A8  6F81               	movwf	??_writeFlashImage& (0+255),b
 29341  0083AA  0EFF               	movlw	255
 29342  0083AC  6F82               	movwf	(??_writeFlashImage+1)& (0+255),b
 29343  0083AE  C07D  F083         	movff	writeFlashImage@addr,??_writeFlashImage+2
 29344  0083B2  C07E  F084         	movff	writeFlashImage@addr+1,??_writeFlashImage+3
 29345  0083B6  5181               	movf	??_writeFlashImage& (0+255),w,b
 29346  0083B8  1783               	andwf	(??_writeFlashImage+2)& (0+255),f,b
 29347  0083BA  5182               	movf	(??_writeFlashImage+1)& (0+255),w,b
 29348  0083BC  1784               	andwf	(??_writeFlashImage+3)& (0+255),f,b
 29349  0083BE  0101               	movlb	1	; () banked
 29350  0083C0  51F6               	movf	_flashblock& (0+255),w,b
 29351  0083C2  0100               	movlb	0	; () banked
 29352  0083C4  1983               	xorwf	(??_writeFlashImage+2)& (0+255),w,b
 29353  0083C6  E106               	bnz	u21630
 29354  0083C8  0101               	movlb	1	; () banked
 29355  0083CA  51F7               	movf	(_flashblock+1)& (0+255),w,b
 29356  0083CC  0100               	movlb	0	; () banked
 29357  0083CE  1984               	xorwf	(??_writeFlashImage+3)& (0+255),w,b
 29358  0083D0  B4D8               	btfsc	status,2,c
 29359  0083D2  D006               	goto	l17729
 29360  0083D4                     u21630:
 29361                           
 29362                           ; BSR set to: 0
 29363                           ;romops.c: 324: readFlashBlock((WORD)addr);
 29364  0083D4  C07D  F076         	movff	writeFlashImage@addr,readFlashBlock@flashAddr
 29365  0083D8  C07E  F077         	movff	writeFlashImage@addr+1,readFlashBlock@flashAddr+1
 29366  0083DC  EC8D  F03D         	call	_readFlashBlock	;wreg free
 29367  0083E0                     l17729:
 29368                           
 29369                           ; BSR set to: 0
 29370                           ;romops.c: 326: offset = &flashbuf[(WORD)addr & 0x3F];
 29371  0083E0  0E3F               	movlw	63
 29372  0083E2  157D               	andwf	writeFlashImage@addr& (0+255),w,b
 29373  0083E4  6F81               	movwf	??_writeFlashImage& (0+255),b
 29374  0083E6  0E00               	movlw	0
 29375  0083E8  157E               	andwf	(writeFlashImage@addr+1)& (0+255),w,b
 29376  0083EA  6F82               	movwf	(??_writeFlashImage+1)& (0+255),b
 29377  0083EC  0E48               	movlw	low _flashbuf
 29378  0083EE  2581               	addwf	??_writeFlashImage& (0+255),w,b
 29379  0083F0  6F85               	movwf	writeFlashImage@offset& (0+255),b
 29380  0083F2  0E03               	movlw	high _flashbuf
 29381  0083F4  2182               	addwfc	(??_writeFlashImage+1)& (0+255),w,b
 29382  0083F6  6F86               	movwf	(writeFlashImage@offset+1)& (0+255),b
 29383                           
 29384                           ; BSR set to: 0
 29385                           ;romops.c: 328: if(data !=*offset)
 29386  0083F8  C085  FFD9         	movff	writeFlashImage@offset,fsr2l
 29387  0083FC  C086  FFDA         	movff	writeFlashImage@offset+1,fsr2h
 29388  008400  5180               	movf	writeFlashImage@data& (0+255),w,b
 29389  008402  18DE               	xorwf	postinc2,w,c
 29390  008404  A4D8               	btfss	status,2,c
 29391                           
 29392                           ; BSR set to: 0
 29393                           ;romops.c: 329: flashFlags.modified=1;
 29394  008406  8805               	bsf	_flashFlags^0,4,c
 29395                           
 29396                           ; BSR set to: 0
 29397                           ;romops.c: 331: if(data & ~*offset)
 29398  008408  C085  FFD9         	movff	writeFlashImage@offset,fsr2l
 29399  00840C  C086  FFDA         	movff	writeFlashImage@offset+1,fsr2h
 29400  008410  50DF               	movf	indf2,w,c
 29401  008412  0AFF               	xorlw	255
 29402  008414  1580               	andwf	writeFlashImage@data& (0+255),w,b
 29403  008416  0900               	iorlw	0
 29404  008418  A4D8               	btfss	status,2,c
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;romops.c: 332: flashFlags.zeroto1=1;
 29408  00841A  8A05               	bsf	_flashFlags^0,5,c
 29409                           
 29410                           ; BSR set to: 0
 29411                           ;romops.c: 333: *offset=data;
 29412  00841C  C085  FFD9         	movff	writeFlashImage@offset,fsr2l
 29413  008420  C086  FFDA         	movff	writeFlashImage@offset+1,fsr2h
 29414  008424  C080  FFDF         	movff	writeFlashImage@data,indf2
 29415                           
 29416                           ; BSR set to: 0
 29417  008428  0012               	return		;funcret
 29418  00842A                     __end_of_writeFlashImage:
 29419                           	callstack 0
 29420                           
 29421 ;; *************** function _factoryResetEE *****************
 29422 ;; Defined at:
 29423 ;;		line 548 in file "../../github/CANMIOfirmware/main.c"
 29424 ;; Parameters:    Size  Location     Type
 29425 ;;		None
 29426 ;; Auto vars:     Size  Location     Type
 29427 ;;		None
 29428 ;; Return value:  Size  Location     Type
 29429 ;;                  1    wreg      void 
 29430 ;; Registers used:
 29431 ;;		wreg, status,2, status,0, cstack
 29432 ;; Tracked objects:
 29433 ;;		On entry : 0/1
 29434 ;;		On exit  : 3F/0
 29435 ;;		Unchanged: 0/0
 29436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29441 ;;Total ram usage:        0 bytes
 29442 ;; Hardware stack levels used: 1
 29443 ;; Hardware stack levels required when called: 11
 29444 ;; This function calls:
 29445 ;;		_ee_write
 29446 ;;		_ee_write_short
 29447 ;; This function is called by:
 29448 ;;		_initialise
 29449 ;;		_factoryReset
 29450 ;; This function uses a non-reentrant model
 29451 ;;
 29452                           
 29453                           	psect	text136
 29454  009C84                     __ptext136:
 29455                           	callstack 0
 29456  009C84                     _factoryResetEE:
 29457                           	callstack 18
 29458                           
 29459                           ;main.c: 549: ee_write((WORD)((BYTE*)(0x3FF)), 0);
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;incstack = 0
 29463  009C84  0E03               	movlw	3
 29464  009C86  0100               	movlb	0	; () banked
 29465  009C88  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 29466  009C8A  6973               	setf	ee_write@addr& (0+255),b
 29467  009C8C  0E00               	movlw	0
 29468  009C8E  6F75               	movwf	ee_write@data& (0+255),b
 29469  009C90  EC17  F04D         	call	_ee_write	;wreg free
 29470                           
 29471                           ;main.c: 550: ee_write((WORD)((BYTE*)(0x3FF-1)), 0x01);
 29472  009C94  0E03               	movlw	3
 29473  009C96  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 29474  009C98  0EFE               	movlw	254
 29475  009C9A  6F73               	movwf	ee_write@addr& (0+255),b
 29476  009C9C  0E01               	movlw	1
 29477  009C9E  6F75               	movwf	ee_write@data& (0+255),b
 29478  009CA0  EC17  F04D         	call	_ee_write	;wreg free
 29479                           
 29480                           ; BSR set to: 0
 29481                           ;main.c: 551: ee_write_short((WORD)((WORD*)(0x3FF-3)), 0x00);
 29482  009CA4  0E03               	movlw	3
 29483  009CA6  6F78               	movwf	(ee_write_short@addr+1)& (0+255),b
 29484  009CA8  0EFC               	movlw	252
 29485  009CAA  6F77               	movwf	ee_write_short@addr& (0+255),b
 29486  009CAC  0E00               	movlw	0
 29487  009CAE  6F7A               	movwf	(ee_write_short@data+1)& (0+255),b
 29488  009CB0  0E00               	movlw	0
 29489  009CB2  6F79               	movwf	ee_write_short@data& (0+255),b
 29490  009CB4  EC6D  F051         	call	_ee_write_short	;wreg free
 29491                           
 29492                           ; BSR set to: 0
 29493                           ;main.c: 552: ee_write((WORD)((BYTE*)(0x3FF-4)), fsSLiM);
 29494  009CB8  0E03               	movlw	3
 29495  009CBA  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 29496  009CBC  0EFB               	movlw	251
 29497  009CBE  6F73               	movwf	ee_write@addr& (0+255),b
 29498  009CC0  0E00               	movlw	0
 29499  009CC2  6F75               	movwf	ee_write@data& (0+255),b
 29500  009CC4  EC17  F04D         	call	_ee_write	;wreg free
 29501                           
 29502                           ; BSR set to: 0
 29503  009CC8  0012               	return		;funcret
 29504  009CCA                     __end_of_factoryResetEE:
 29505                           	callstack 0
 29506                           
 29507 ;; *************** function _cbusMsgReceived *****************
 29508 ;; Defined at:
 29509 ;;		line 105 in file "../../github/CBUSlib/cbus.c"
 29510 ;; Parameters:    Size  Location     Type
 29511 ;;  cbusNum         1    wreg     unsigned char 
 29512 ;;  msg             2   65[BANK0 ] PTR unsigned char 
 29513 ;;		 -> checkCBUS@msg(20), 
 29514 ;; Auto vars:     Size  Location     Type
 29515 ;;  cbusNum         1   67[BANK0 ] unsigned char 
 29516 ;; Return value:  Size  Location     Type
 29517 ;;                  1    wreg      unsigned char 
 29518 ;; Registers used:
 29519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29520 ;; Tracked objects:
 29521 ;;		On entry : 3F/0
 29522 ;;		On exit  : 3F/0
 29523 ;;		Unchanged: 0/0
 29524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29528 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29529 ;;Total ram usage:        3 bytes
 29530 ;; Hardware stack levels used: 1
 29531 ;; Hardware stack levels required when called: 16
 29532 ;; This function calls:
 29533 ;;		_canbusRecv
 29534 ;; This function is called by:
 29535 ;;		_checkCBUS
 29536 ;; This function uses a non-reentrant model
 29537 ;;
 29538                           
 29539                           	psect	text137
 29540  00A506                     __ptext137:
 29541                           	callstack 0
 29542  00A506                     _cbusMsgReceived:
 29543                           	callstack 13
 29544                           
 29545                           ; BSR set to: 0
 29546                           ;incstack = 0
 29547                           ;cbusMsgReceived@cbusNum stored from wreg
 29548  00A506  6FA3               	movwf	cbusMsgReceived@cbusNum& (0+255),b
 29549                           
 29550                           ;cbus.c: 110: if (cbusNum == 0)
 29551  00A508  0100               	movlb	0	; () banked
 29552  00A50A  51A3               	movf	cbusMsgReceived@cbusNum& (0+255),w,b
 29553  00A50C  A4D8               	btfss	status,2,c
 29554  00A50E  D007               	goto	l20417
 29555                           
 29556                           ; BSR set to: 0
 29557                           ;cbus.c: 111: {;cbus.c: 112: return( canbusRecv( (CanPacket *) msg ));
 29558  00A510  C0A1  F09B         	movff	cbusMsgReceived@msg,canbusRecv@msg
 29559  00A514  C0A2  F09C         	movff	cbusMsgReceived@msg+1,canbusRecv@msg+1
 29560  00A518  ECE7  F03B         	call	_canbusRecv	;wreg free
 29561  00A51C  0012               	return	
 29562  00A51E                     l20417:
 29563                           
 29564                           ; BSR set to: 0
 29565                           ;cbus.c: 113: };cbus.c: 122: return 0;
 29566  00A51E  0E00               	movlw	0
 29567                           
 29568                           ; BSR set to: 0
 29569  00A520  0012               	return		;funcret
 29570  00A522                     __end_of_cbusMsgReceived:
 29571                           	callstack 0
 29572                           
 29573 ;; *************** function _canbusRecv *****************
 29574 ;; Defined at:
 29575 ;;		line 496 in file "../../github/CBUSlib/can18.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;  msg             2   59[BANK0 ] PTR struct .
 29578 ;;		 -> checkCBUS@msg(20), 
 29579 ;; Auto vars:     Size  Location     Type
 29580 ;;  ptr             2   63[BANK0 ] PTR struct .
 29581 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 29582 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 29583 ;;  msgFound        1   62[BANK0 ] unsigned char 
 29584 ;; Return value:  Size  Location     Type
 29585 ;;                  1    wreg      unsigned char 
 29586 ;; Registers used:
 29587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29588 ;; Tracked objects:
 29589 ;;		On entry : 3F/0
 29590 ;;		On exit  : 3F/0
 29591 ;;		Unchanged: 0/0
 29592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29596 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29597 ;;Total ram usage:        6 bytes
 29598 ;; Hardware stack levels used: 1
 29599 ;; Hardware stack levels required when called: 15
 29600 ;; This function calls:
 29601 ;;		__PointBuffer
 29602 ;;		_checkIncomingPacket
 29603 ;;		_memcpy
 29604 ;;		_processEnumeration
 29605 ;; This function is called by:
 29606 ;;		_cbusMsgReceived
 29607 ;; This function uses a non-reentrant model
 29608 ;;
 29609                           
 29610                           	psect	text138
 29611  0077CE                     __ptext138:
 29612                           	callstack 0
 29613  0077CE                     _canbusRecv:
 29614                           	callstack 13
 29615                           
 29616                           ; BSR set to: 0
 29617                           ;can18.c: 499: CanPacket *ptr;;can18.c: 500: BOOL msgFound;;can18.c: 502: PIE5bits.FIFOW
      +                          MIE = 0;
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;incstack = 0
 29621  0077CE  9076               	bcf	118,0,c	;volatile
 29622                           
 29623                           ; BSR set to: 0
 29624                           ;can18.c: 504: processEnumeration();
 29625  0077D0  EC06  F034         	call	_processEnumeration	;wreg free
 29626                           
 29627                           ;can18.c: 509: if (rxIndexNextUsed != rxIndexNextFree)
 29628  0077D4  500F               	movf	_rxIndexNextFree^0,w,c
 29629  0077D6  180E               	xorwf	_rxIndexNextUsed^0,w,c
 29630  0077D8  B4D8               	btfsc	status,2,c
 29631  0077DA  D02B               	goto	l20141
 29632                           
 29633                           ;can18.c: 510: {;can18.c: 511: memcpy(msg->buffer, canRxFifo[rxIndexNextUsed].buffer, ca
      +                          nRxFifo[rxIndexNextUsed].buffer[dlc] + 6U);
 29634  0077DC  C09B  F071         	movff	canbusRecv@msg,memcpy@d1
 29635  0077E0  C09C  F072         	movff	canbusRecv@msg+1,memcpy@d1+1
 29636  0077E4  500E               	movf	_rxIndexNextUsed^0,w,c
 29637  0077E6  0D10               	mullw	16
 29638  0077E8  0E00               	movlw	low _canRxFifo
 29639  0077EA  24F3               	addwf	243,w,c
 29640  0077EC  0100               	movlb	0	; () banked
 29641  0077EE  6F73               	movwf	memcpy@s1& (0+255),b
 29642  0077F0  0E05               	movlw	high _canRxFifo
 29643  0077F2  20F4               	addwfc	prodh,w,c
 29644  0077F4  6F74               	movwf	(memcpy@s1+1)& (0+255),b
 29645  0077F6  500E               	movf	_rxIndexNextUsed^0,w,c
 29646  0077F8  0D10               	mullw	16
 29647  0077FA  0E05               	movlw	low (_canRxFifo+5)
 29648  0077FC  24F3               	addwf	243,w,c
 29649  0077FE  6ED9               	movwf	fsr2l,c
 29650  007800  0E05               	movlw	high (_canRxFifo+5)
 29651  007802  20F4               	addwfc	prodh,w,c
 29652  007804  6EDA               	movwf	fsr2h,c
 29653  007806  50DF               	movf	indf2,w,c
 29654  007808  6F9D               	movwf	??_canbusRecv& (0+255),b
 29655  00780A  0E06               	movlw	6
 29656  00780C  259D               	addwf	??_canbusRecv& (0+255),w,b
 29657  00780E  6F75               	movwf	memcpy@n& (0+255),b
 29658  007810  6B76               	clrf	(memcpy@n+1)& (0+255),b
 29659  007812  0E00               	movlw	0
 29660  007814  2376               	addwfc	(memcpy@n+1)& (0+255),f,b
 29661  007816  EC65  F04E         	call	_memcpy	;wreg free
 29662                           
 29663                           ; BSR set to: 0
 29664                           ;can18.c: 512: rxFifoUsage--;
 29665  00781A  0101               	movlb	1	; () banked
 29666  00781C  07D8               	decf	_rxFifoUsage& (0+255),f,b
 29667                           
 29668                           ; BSR set to: 1
 29669                           ;can18.c: 514: if (++rxIndexNextUsed >= 16U)
 29670  00781E  2A0E               	incf	_rxIndexNextUsed^0,f,c
 29671  007820  0E0F               	movlw	15
 29672  007822  640E               	cpfsgt	_rxIndexNextUsed^0,c
 29673  007824  D002               	goto	l1623
 29674                           
 29675                           ; BSR set to: 1
 29676                           ;can18.c: 515: {;can18.c: 516: rxIndexNextUsed = 0;
 29677  007826  0E00               	movlw	0
 29678  007828  6E0E               	movwf	_rxIndexNextUsed^0,c
 29679  00782A                     l1623:
 29680                           
 29681                           ; BSR set to: 1
 29682                           ;can18.c: 517: };can18.c: 518: msgFound = 1;
 29683  00782A  0E01               	movlw	1
 29684  00782C  0100               	movlb	0	; () banked
 29685  00782E  6F9E               	movwf	canbusRecv@msgFound& (0+255),b
 29686                           
 29687                           ;can18.c: 519: }
 29688  007830  D038               	goto	l20159
 29689  007832                     l20141:
 29690                           
 29691                           ;can18.c: 520: else;can18.c: 521: {;can18.c: 522: msgFound = 0;
 29692  007832  0E00               	movlw	0
 29693  007834  0100               	movlb	0	; () banked
 29694  007836  6F9E               	movwf	canbusRecv@msgFound& (0+255),b
 29695                           
 29696                           ; BSR set to: 0
 29697                           ;can18.c: 525: if (COMSTATbits.NOT_FIFOEMPTY)
 29698  007838  AE71               	btfss	113,7,c	;volatile
 29699  00783A  D033               	goto	l20159
 29700                           
 29701                           ; BSR set to: 0
 29702                           ;can18.c: 526: {;can18.c: 527: ptr = (CanPacket*) _PointBuffer(CANCON & 0x07U);
 29703  00783C  506F               	movf	111,w,c	;volatile
 29704  00783E  0B07               	andlw	7
 29705  007840  ECBF  F048         	call	__PointBuffer
 29706  007844  C071  F09F         	movff	?__PointBuffer,canbusRecv@ptr
 29707  007848  C072  F0A0         	movff	?__PointBuffer+1,canbusRecv@ptr+1
 29708                           
 29709                           ; BSR set to: 0
 29710                           ;can18.c: 528: PIR5bits.RXBnIF = 0;
 29711  00784C  9277               	bcf	119,1,c	;volatile
 29712                           
 29713                           ; BSR set to: 0
 29714                           ;can18.c: 538: if (msgFound = checkIncomingPacket(ptr))
 29715  00784E  C09F  F07B         	movff	canbusRecv@ptr,checkIncomingPacket@ptr
 29716  007852  C0A0  F07C         	movff	canbusRecv@ptr+1,checkIncomingPacket@ptr+1
 29717  007856  ECA8  F038         	call	_checkIncomingPacket	;wreg free
 29718  00785A  6F9E               	movwf	canbusRecv@msgFound& (0+255),b
 29719  00785C  519E               	movf	canbusRecv@msgFound& (0+255),w,b
 29720  00785E  B4D8               	btfsc	status,2,c
 29721  007860  D018               	goto	l20153
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;can18.c: 539: memcpy(msg->buffer, (void*) ptr, ptr->buffer[dlc] + 6U);
 29725  007862  C09B  F071         	movff	canbusRecv@msg,memcpy@d1
 29726  007866  C09C  F072         	movff	canbusRecv@msg+1,memcpy@d1+1
 29727  00786A  C09F  F073         	movff	canbusRecv@ptr,memcpy@s1
 29728  00786E  C0A0  F074         	movff	canbusRecv@ptr+1,memcpy@s1+1
 29729  007872  EE20 F005          	lfsr	2,5
 29730  007876  519F               	movf	canbusRecv@ptr& (0+255),w,b
 29731  007878  26D9               	addwf	fsr2l,f,c
 29732  00787A  51A0               	movf	(canbusRecv@ptr+1)& (0+255),w,b
 29733  00787C  22DA               	addwfc	fsr2h,f,c
 29734  00787E  50DF               	movf	indf2,w,c
 29735  007880  6F9D               	movwf	??_canbusRecv& (0+255),b
 29736  007882  0E06               	movlw	6
 29737  007884  259D               	addwf	??_canbusRecv& (0+255),w,b
 29738  007886  6F75               	movwf	memcpy@n& (0+255),b
 29739  007888  6B76               	clrf	(memcpy@n+1)& (0+255),b
 29740  00788A  0E00               	movlw	0
 29741  00788C  2376               	addwfc	(memcpy@n+1)& (0+255),f,b
 29742  00788E  EC65  F04E         	call	_memcpy	;wreg free
 29743  007892                     l20153:
 29744                           
 29745                           ; BSR set to: 0
 29746                           ;can18.c: 542: if (PIR5bits.IRXIF) {
 29747  007892  BE77               	btfsc	119,7,c	;volatile
 29748                           
 29749                           ; BSR set to: 0
 29750                           ;can18.c: 543: PIR5bits.IRXIF = 0;
 29751  007894  9E77               	bcf	119,7,c	;volatile
 29752                           
 29753                           ; BSR set to: 0
 29754                           ;can18.c: 544: };can18.c: 546: ptr->buffer[con] &= 0x7f;
 29755  007896  C09F  FFD9         	movff	canbusRecv@ptr,fsr2l
 29756  00789A  C0A0  FFDA         	movff	canbusRecv@ptr+1,fsr2h
 29757  00789E  0E7F               	movlw	127
 29758  0078A0  16DF               	andwf	indf2,f,c
 29759  0078A2                     l20159:
 29760                           
 29761                           ; BSR set to: 0
 29762                           ;can18.c: 551: };can18.c: 552: };can18.c: 554: PIE5bits.FIFOWMIE = 1;
 29763  0078A2  8076               	bsf	118,0,c	;volatile
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;can18.c: 555: return msgFound;
 29767  0078A4  519E               	movf	canbusRecv@msgFound& (0+255),w,b
 29768                           
 29769                           ; BSR set to: 0
 29770  0078A6  0012               	return		;funcret
 29771  0078A8                     __end_of_canbusRecv:
 29772                           	callstack 0
 29773                           
 29774 ;; *************** function _processEnumeration *****************
 29775 ;; Defined at:
 29776 ;;		line 645 in file "../../github/CBUSlib/can18.c"
 29777 ;; Parameters:    Size  Location     Type
 29778 ;;		None
 29779 ;; Auto vars:     Size  Location     Type
 29780 ;;  i               1   58[BANK0 ] unsigned char 
 29781 ;;  newCanId        1   57[BANK0 ] unsigned char 
 29782 ;;  enumResult      1   56[BANK0 ] unsigned char 
 29783 ;; Return value:  Size  Location     Type
 29784 ;;                  1    wreg      void 
 29785 ;; Registers used:
 29786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29787 ;; Tracked objects:
 29788 ;;		On entry : 3F/0
 29789 ;;		On exit  : 30/0
 29790 ;;		Unchanged: 0/0
 29791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29793 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29794 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29795 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29796 ;;Total ram usage:        7 bytes
 29797 ;; Hardware stack levels used: 1
 29798 ;; Hardware stack levels required when called: 14
 29799 ;; This function calls:
 29800 ;;		_cbusSendOpcMyNN
 29801 ;;		_doError
 29802 ;;		_setNewCanId
 29803 ;;		_tickGet
 29804 ;; This function is called by:
 29805 ;;		_canbusRecv
 29806 ;; This function uses a non-reentrant model
 29807 ;;
 29808                           
 29809                           	psect	text139
 29810  00680C                     __ptext139:
 29811                           	callstack 0
 29812  00680C                     _processEnumeration:
 29813                           	callstack 13
 29814                           
 29815                           ; BSR set to: 0
 29816                           ;can18.c: 648: BYTE i, newCanId, enumResult;;can18.c: 650: if (enumerationRequired && ((
      +                          tickGet() - enumerationStartTime.Val) > 2 * (62500/10) ))
 29817                           
 29818                           ; BSR set to: 0
 29819                           ;incstack = 0
 29820  00680C  5009               	movf	_enumerationRequired^0,w,c
 29821  00680E  B4D8               	btfsc	status,2,c
 29822  006810  D041               	goto	l19459
 29823                           
 29824                           ; BSR set to: 0
 29825  006812  EC9D  F04B         	call	_tickGet	;wreg free
 29826  006816  0101               	movlb	1	; () banked
 29827  006818  51B0               	movf	_enumerationStartTime& (0+255),w,b
 29828  00681A  0100               	movlb	0	; () banked
 29829  00681C  5D71               	subwf	?_tickGet& (0+255),w,b
 29830  00681E  6F94               	movwf	??_processEnumeration& (0+255),b
 29831  006820  0101               	movlb	1	; () banked
 29832  006822  51B1               	movf	(_enumerationStartTime+1)& (0+255),w,b
 29833  006824  0100               	movlb	0	; () banked
 29834  006826  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 29835  006828  6F95               	movwf	(??_processEnumeration+1)& (0+255),b
 29836  00682A  0101               	movlb	1	; () banked
 29837  00682C  51B2               	movf	(_enumerationStartTime+2)& (0+255),w,b
 29838  00682E  0100               	movlb	0	; () banked
 29839  006830  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 29840  006832  6F96               	movwf	(??_processEnumeration+2)& (0+255),b
 29841  006834  0101               	movlb	1	; () banked
 29842  006836  51B3               	movf	(_enumerationStartTime+3)& (0+255),w,b
 29843  006838  0100               	movlb	0	; () banked
 29844  00683A  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 29845  00683C  6F97               	movwf	(??_processEnumeration+3)& (0+255),b
 29846  00683E  5197               	movf	(??_processEnumeration+3)& (0+255),w,b
 29847  006840  1196               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 29848  006842  E106               	bnz	u24040
 29849  006844  0ED5               	movlw	213
 29850  006846  5D94               	subwf	??_processEnumeration& (0+255),w,b
 29851  006848  0E30               	movlw	48
 29852  00684A  5995               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 29853  00684C  A0D8               	btfss	status,0,c
 29854  00684E  D022               	goto	l19459
 29855  006850                     u24040:
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;can18.c: 651: {;can18.c: 652: for (i=1; i< (0x7F/8)+1; i++)
 29859  006850  0E01               	movlw	1
 29860  006852  6F9A               	movwf	processEnumeration@i& (0+255),b
 29861  006854                     l19447:
 29862                           
 29863                           ; BSR set to: 0
 29864                           ;can18.c: 653: enumerationResults[i] = 0;
 29865  006854  0E54               	movlw	low _enumerationResults
 29866  006856  259A               	addwf	processEnumeration@i& (0+255),w,b
 29867  006858  6ED9               	movwf	fsr2l,c
 29868  00685A  6ADA               	clrf	fsr2h,c
 29869  00685C  0E02               	movlw	high _enumerationResults
 29870  00685E  22DA               	addwfc	fsr2h,f,c
 29871  006860  0E00               	movlw	0
 29872  006862  6EDF               	movwf	indf2,c
 29873                           
 29874                           ; BSR set to: 0
 29875  006864  2B9A               	incf	processEnumeration@i& (0+255),f,b
 29876                           
 29877                           ; BSR set to: 0
 29878  006866  0E0F               	movlw	15
 29879  006868  659A               	cpfsgt	processEnumeration@i& (0+255),b
 29880  00686A  D7F4               	goto	l19447
 29881                           
 29882                           ; BSR set to: 0
 29883                           ;can18.c: 654: enumerationResults[0] = 1;
 29884  00686C  0E01               	movlw	1
 29885  00686E  0102               	movlb	2	; () banked
 29886  006870  6F54               	movwf	_enumerationResults& (0+255),b
 29887                           
 29888                           ;can18.c: 656: enumerationInProgress = 1;
 29889  006872  0E01               	movlw	1
 29890  006874  6E07               	movwf	_enumerationInProgress^0,c
 29891                           
 29892                           ;can18.c: 657: enumerationRequired = 0;
 29893  006876  0E00               	movlw	0
 29894  006878  6E09               	movwf	_enumerationRequired^0,c
 29895                           
 29896                           ; BSR set to: 2
 29897                           ;can18.c: 658: enumerationStartTime.Val = tickGet();
 29898  00687A  EC9D  F04B         	call	_tickGet	;wreg free
 29899  00687E  C071  F1B0         	movff	?_tickGet,_enumerationStartTime
 29900  006882  C072  F1B1         	movff	?_tickGet+1,_enumerationStartTime+1
 29901  006886  C073  F1B2         	movff	?_tickGet+2,_enumerationStartTime+2
 29902  00688A  C074  F1B3         	movff	?_tickGet+3,_enumerationStartTime+3
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;can18.c: 659: TXB1CONbits.TXREQ = 1;
 29906  00688E  010F               	movlb	15	; () banked
 29907  006890  8710               	bsf	16,3,b	;volatile
 29908                           
 29909                           ;can18.c: 660: }
 29910  006892  0012               	return	
 29911  006894                     l19459:
 29912                           
 29913                           ; BSR set to: 0
 29914                           ;can18.c: 661: else if (enumerationInProgress && ((tickGet() - enumerationStartTime.Val)
      +                           > (62500/10) ))
 29915  006894  5007               	movf	_enumerationInProgress^0,w,c
 29916  006896  B4D8               	btfsc	status,2,c
 29917  006898  0012               	return	
 29918                           
 29919                           ; BSR set to: 0
 29920  00689A  EC9D  F04B         	call	_tickGet	;wreg free
 29921  00689E  0101               	movlb	1	; () banked
 29922  0068A0  51B0               	movf	_enumerationStartTime& (0+255),w,b
 29923  0068A2  0100               	movlb	0	; () banked
 29924  0068A4  5D71               	subwf	?_tickGet& (0+255),w,b
 29925  0068A6  6F94               	movwf	??_processEnumeration& (0+255),b
 29926  0068A8  0101               	movlb	1	; () banked
 29927  0068AA  51B1               	movf	(_enumerationStartTime+1)& (0+255),w,b
 29928  0068AC  0100               	movlb	0	; () banked
 29929  0068AE  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 29930  0068B0  6F95               	movwf	(??_processEnumeration+1)& (0+255),b
 29931  0068B2  0101               	movlb	1	; () banked
 29932  0068B4  51B2               	movf	(_enumerationStartTime+2)& (0+255),w,b
 29933  0068B6  0100               	movlb	0	; () banked
 29934  0068B8  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 29935  0068BA  6F96               	movwf	(??_processEnumeration+2)& (0+255),b
 29936  0068BC  0101               	movlb	1	; () banked
 29937  0068BE  51B3               	movf	(_enumerationStartTime+3)& (0+255),w,b
 29938  0068C0  0100               	movlb	0	; () banked
 29939  0068C2  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 29940  0068C4  6F97               	movwf	(??_processEnumeration+3)& (0+255),b
 29941  0068C6  5197               	movf	(??_processEnumeration+3)& (0+255),w,b
 29942  0068C8  1196               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 29943  0068CA  E106               	bnz	u24070
 29944  0068CC  0E6B               	movlw	107
 29945  0068CE  5D94               	subwf	??_processEnumeration& (0+255),w,b
 29946  0068D0  0E18               	movlw	24
 29947  0068D2  5995               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 29948  0068D4  A0D8               	btfss	status,0,c
 29949  0068D6  0012               	return	
 29950  0068D8                     u24070:
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;can18.c: 662: {;can18.c: 666: for (i=0; (enumerationResults[i] == 0xFF) && (i < (0x7F/8
      +                          )+1); i++) {
 29954  0068D8  0E00               	movlw	0
 29955  0068DA  6F9A               	movwf	processEnumeration@i& (0+255),b
 29956  0068DC  D001               	goto	l19467
 29957  0068DE                     l19465:
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;can18.c: 667: ;
 29961  0068DE  2B9A               	incf	processEnumeration@i& (0+255),f,b
 29962  0068E0                     l19467:
 29963                           
 29964                           ; BSR set to: 0
 29965  0068E0  0E54               	movlw	low _enumerationResults
 29966  0068E2  259A               	addwf	processEnumeration@i& (0+255),w,b
 29967  0068E4  6ED9               	movwf	fsr2l,c
 29968  0068E6  6ADA               	clrf	fsr2h,c
 29969  0068E8  0E02               	movlw	high _enumerationResults
 29970  0068EA  22DA               	addwfc	fsr2h,f,c
 29971  0068EC  28DE               	incf	postinc2,w,c
 29972  0068EE  A4D8               	btfss	status,2,c
 29973  0068F0  D003               	goto	u24090
 29974                           
 29975                           ; BSR set to: 0
 29976  0068F2  0E0F               	movlw	15
 29977  0068F4  659A               	cpfsgt	processEnumeration@i& (0+255),b
 29978  0068F6  D7F3               	goto	l19465
 29979  0068F8                     u24090:
 29980                           
 29981                           ; BSR set to: 0
 29982                           ;can18.c: 668: };can18.c: 670: if ((enumResult = enumerationResults[i]) != 0xFF)
 29983  0068F8  0E54               	movlw	low _enumerationResults
 29984  0068FA  259A               	addwf	processEnumeration@i& (0+255),w,b
 29985  0068FC  6ED9               	movwf	fsr2l,c
 29986  0068FE  6ADA               	clrf	fsr2h,c
 29987  006900  0E02               	movlw	high _enumerationResults
 29988  006902  22DA               	addwfc	fsr2h,f,c
 29989  006904  50DF               	movf	indf2,w,c
 29990  006906  6F98               	movwf	processEnumeration@enumResult& (0+255),b
 29991  006908  2998               	incf	processEnumeration@enumResult& (0+255),w,b
 29992  00690A  B4D8               	btfsc	status,2,c
 29993  00690C  D020               	goto	l19493
 29994                           
 29995                           ; BSR set to: 0
 29996                           ;can18.c: 671: {;can18.c: 672: for (newCanId = i*8U; (enumResult & 0x01U); newCanId++) {
 29997  00690E  519A               	movf	processEnumeration@i& (0+255),w,b
 29998  006910  0D08               	mullw	8
 29999  006912  CFF3 F099          	movff	prodl,processEnumeration@newCanId
 30000  006916  D003               	goto	l19479
 30001  006918                     l19475:
 30002                           
 30003                           ; BSR set to: 0
 30004                           ;can18.c: 673: enumResult >>= 1;
 30005  006918  90D8               	bcf	status,0,c
 30006  00691A  3398               	rrcf	processEnumeration@enumResult& (0+255),f,b
 30007                           
 30008                           ; BSR set to: 0
 30009  00691C  2B99               	incf	processEnumeration@newCanId& (0+255),f,b
 30010  00691E                     l19479:
 30011                           
 30012                           ; BSR set to: 0
 30013  00691E  B198               	btfsc	processEnumeration@enumResult& (0+255),0,b
 30014  006920  D7FB               	goto	l19475
 30015                           
 30016                           ; BSR set to: 0
 30017                           ;can18.c: 674: };can18.c: 675: if ((newCanId >= 1) && (newCanId <= 99)) {
 30018  006922  5199               	movf	processEnumeration@newCanId& (0+255),w,b
 30019  006924  B4D8               	btfsc	status,2,c
 30020  006926  D019               	goto	l19497
 30021                           
 30022                           ; BSR set to: 0
 30023  006928  0E64               	movlw	100
 30024  00692A  6199               	cpfslt	processEnumeration@newCanId& (0+255),b
 30025  00692C  D016               	goto	l19497
 30026                           
 30027                           ; BSR set to: 0
 30028                           ;can18.c: 676: canID = newCanId;
 30029  00692E  C099  F02C         	movff	processEnumeration@newCanId,_canID
 30030                           
 30031                           ; BSR set to: 0
 30032                           ;can18.c: 677: setNewCanId(canID);
 30033  006932  502C               	movf	_canID^0,w,c
 30034  006934  ECA7  F045         	call	_setNewCanId
 30035                           
 30036                           ; BSR set to: 0
 30037                           ;can18.c: 678: if (resultRequired) {
 30038  006938  5008               	movf	_resultRequired^0,w,c
 30039  00693A  B4D8               	btfsc	status,2,c
 30040  00693C  D00E               	goto	l19497
 30041                           
 30042                           ; BSR set to: 0
 30043                           ;can18.c: 679: cbusSendOpcMyNN( 0, 0x52, cbusMsg );
 30044  00693E  0E52               	movlw	82
 30045  006940  6F91               	movwf	cbusSendOpcMyNN@opc& (0+255),b
 30046  006942  0E1C               	movlw	low _cbusMsg
 30047  006944  6F92               	movwf	cbusSendOpcMyNN@msg& (0+255),b
 30048  006946  0E00               	movlw	0
 30049  006948  EC65  F052         	call	_cbusSendOpcMyNN
 30050  00694C  D006               	goto	l19497
 30051  00694E                     l19493:
 30052                           
 30053                           ; BSR set to: 0
 30054                           ;can18.c: 683: else;can18.c: 684: {;can18.c: 685: if (resultRequired) {
 30055  00694E  5008               	movf	_resultRequired^0,w,c
 30056  006950  B4D8               	btfsc	status,2,c
 30057  006952  D003               	goto	l19497
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;can18.c: 686: doError(7);
 30061  006954  0E07               	movlw	7
 30062  006956  EC56  F052         	call	_doError
 30063  00695A                     l19497:
 30064                           
 30065                           ; BSR set to: 0
 30066                           ;can18.c: 687: };can18.c: 688: };can18.c: 689: enumerationRequired = enumerationInProgre
      +                          ss = 0;
 30067  00695A  0E00               	movlw	0
 30068  00695C  6E07               	movwf	_enumerationInProgress^0,c
 30069  00695E  C007  F009         	movff	_enumerationInProgress,_enumerationRequired
 30070  006962  0012               	return		;funcret
 30071  006964                     __end_of_processEnumeration:
 30072                           	callstack 0
 30073                           
 30074 ;; *************** function _setNewCanId *****************
 30075 ;; Defined at:
 30076 ;;		line 307 in file "../../github/CBUSlib/can18.c"
 30077 ;; Parameters:    Size  Location     Type
 30078 ;;  newCanId        1    wreg     unsigned char 
 30079 ;; Auto vars:     Size  Location     Type
 30080 ;;  newCanId        1   25[BANK0 ] unsigned char 
 30081 ;; Return value:  Size  Location     Type
 30082 ;;                  1    wreg      unsigned char 
 30083 ;; Registers used:
 30084 ;;		wreg, status,2, status,0, cstack
 30085 ;; Tracked objects:
 30086 ;;		On entry : 3F/0
 30087 ;;		On exit  : 3F/0
 30088 ;;		Unchanged: 0/0
 30089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30093 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30094 ;;Total ram usage:        3 bytes
 30095 ;; Hardware stack levels used: 1
 30096 ;; Hardware stack levels required when called: 10
 30097 ;; This function calls:
 30098 ;;		_ee_write
 30099 ;; This function is called by:
 30100 ;;		_processEnumeration
 30101 ;;		_parseFLiMCmd
 30102 ;; This function uses a non-reentrant model
 30103 ;;
 30104                           
 30105                           	psect	text140
 30106  008B4E                     __ptext140:
 30107                           	callstack 0
 30108  008B4E                     _setNewCanId:
 30109                           	callstack 17
 30110                           
 30111                           ;incstack = 0
 30112                           ;setNewCanId@newCanId stored from wreg
 30113  008B4E  6F79               	movwf	setNewCanId@newCanId& (0+255),b
 30114                           
 30115                           ;can18.c: 310: if ((newCanId >= 1) && (newCanId <= 99)) {
 30116  008B50  0100               	movlb	0	; () banked
 30117  008B52  5179               	movf	setNewCanId@newCanId& (0+255),w,b
 30118  008B54  B4D8               	btfsc	status,2,c
 30119  008B56  D03E               	goto	l19179
 30120                           
 30121                           ; BSR set to: 0
 30122  008B58  0E64               	movlw	100
 30123  008B5A  6179               	cpfslt	setNewCanId@newCanId& (0+255),b
 30124  008B5C  D03B               	goto	l19179
 30125                           
 30126                           ; BSR set to: 0
 30127                           ;can18.c: 311: canID = newCanId;
 30128  008B5E  C079  F02C         	movff	setNewCanId@newCanId,_canID
 30129                           
 30130                           ; BSR set to: 0
 30131                           ;can18.c: 312: TXB0SIDH &= 0b11110000;
 30132  008B62  0EF0               	movlw	240
 30133  008B64  010F               	movlb	15	; () banked
 30134  008B66  1721               	andwf	33,f,b	;volatile
 30135                           
 30136                           ;can18.c: 313: TXB0SIDH |= ((newCanId & 0x78U) >>3U);
 30137  008B68  0100               	movlb	0	; () banked
 30138  008B6A  3979               	swapf	setNewCanId@newCanId& (0+255),w,b
 30139  008B6C  46E8               	rlncf	wreg,f,c
 30140  008B6E  0B1F               	andlw	31
 30141  008B70  0B0F               	andlw	15
 30142  008B72  010F               	movlb	15	; () banked
 30143  008B74  1321               	iorwf	33,f,b	;volatile
 30144                           
 30145                           ;can18.c: 314: TXB0SIDL = ( newCanId & 0x07U) << 5U;
 30146  008B76  C079  F077         	movff	setNewCanId@newCanId,??_setNewCanId
 30147  008B7A  0E07               	movlw	7
 30148  008B7C  0100               	movlb	0	; () banked
 30149  008B7E  1777               	andwf	??_setNewCanId& (0+255),f,b
 30150  008B80  0E05               	movlw	5
 30151  008B82  6F78               	movwf	(??_setNewCanId+1)& (0+255),b
 30152  008B84                     u23655:
 30153  008B84  90D8               	bcf	status,0,c
 30154  008B86  3777               	rlcf	??_setNewCanId& (0+255),f,b
 30155  008B88  2F78               	decfsz	(??_setNewCanId+1)& (0+255),f,b
 30156  008B8A  D7FC               	goto	u23655
 30157  008B8C  5177               	movf	??_setNewCanId& (0+255),w,b
 30158  008B8E  010F               	movlb	15	; () banked
 30159  008B90  6F22               	movwf	34,b	;volatile
 30160                           
 30161                           ;can18.c: 316: TXB1SIDH &= 0b11110000;
 30162  008B92  0EF0               	movlw	240
 30163  008B94  1711               	andwf	17,f,b	;volatile
 30164                           
 30165                           ;can18.c: 317: TXB1SIDH |= ((newCanId & 0x78U) >>3U);
 30166  008B96  0100               	movlb	0	; () banked
 30167  008B98  3979               	swapf	setNewCanId@newCanId& (0+255),w,b
 30168  008B9A  46E8               	rlncf	wreg,f,c
 30169  008B9C  0B1F               	andlw	31
 30170  008B9E  0B0F               	andlw	15
 30171  008BA0  010F               	movlb	15	; () banked
 30172  008BA2  1311               	iorwf	17,f,b	;volatile
 30173                           
 30174                           ; BSR set to: 15
 30175                           ;can18.c: 318: TXB1SIDL = TXB0SIDL;
 30176  008BA4  CF22 FF12          	movff	3874,3858	;volatile
 30177                           
 30178                           ;can18.c: 320: TXB2SIDH &= 0b11110000;
 30179  008BA8  0EF0               	movlw	240
 30180  008BAA  1701               	andwf	1,f,b	;volatile
 30181                           
 30182                           ;can18.c: 321: TXB2SIDH |= ((newCanId & 0x78U) >>3U);
 30183  008BAC  0100               	movlb	0	; () banked
 30184  008BAE  3979               	swapf	setNewCanId@newCanId& (0+255),w,b
 30185  008BB0  46E8               	rlncf	wreg,f,c
 30186  008BB2  0B1F               	andlw	31
 30187  008BB4  0B0F               	andlw	15
 30188  008BB6  010F               	movlb	15	; () banked
 30189  008BB8  1301               	iorwf	1,f,b	;volatile
 30190                           
 30191                           ; BSR set to: 15
 30192                           ;can18.c: 322: TXB2SIDL = TXB0SIDL;
 30193  008BBA  CF22 FF02          	movff	3874,3842	;volatile
 30194                           
 30195                           ; BSR set to: 15
 30196                           ;can18.c: 324: ee_write((WORD)((BYTE*)(0x3FF-1)), newCanId );
 30197  008BBE  0E03               	movlw	3
 30198  008BC0  0100               	movlb	0	; () banked
 30199  008BC2  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 30200  008BC4  0EFE               	movlw	254
 30201  008BC6  6F73               	movwf	ee_write@addr& (0+255),b
 30202  008BC8  C079  F075         	movff	setNewCanId@newCanId,ee_write@data
 30203  008BCC  EC17  F04D         	call	_ee_write	;wreg free
 30204                           
 30205                           ; BSR set to: 0
 30206                           ;can18.c: 325: return 1;
 30207  008BD0  0E01               	movlw	1
 30208  008BD2  0012               	return	
 30209  008BD4                     l19179:
 30210                           
 30211                           ; BSR set to: 0
 30212                           ;can18.c: 327: return 0;
 30213  008BD4  0E00               	movlw	0
 30214                           
 30215                           ; BSR set to: 0
 30216  008BD6  0012               	return		;funcret
 30217  008BD8                     __end_of_setNewCanId:
 30218                           	callstack 0
 30219                           
 30220 ;; *************** function _doError *****************
 30221 ;; Defined at:
 30222 ;;		line 742 in file "../../github/CBUSlib/FliM.c"
 30223 ;; Parameters:    Size  Location     Type
 30224 ;;  code            1    wreg     unsigned char 
 30225 ;; Auto vars:     Size  Location     Type
 30226 ;;  code            1   51[BANK0 ] unsigned char 
 30227 ;; Return value:  Size  Location     Type
 30228 ;;                  1    wreg      void 
 30229 ;; Registers used:
 30230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30231 ;; Tracked objects:
 30232 ;;		On entry : 3F/0
 30233 ;;		On exit  : 3F/0
 30234 ;;		Unchanged: 0/0
 30235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30240 ;;Total ram usage:        1 bytes
 30241 ;; Hardware stack levels used: 1
 30242 ;; Hardware stack levels required when called: 13
 30243 ;; This function calls:
 30244 ;;		_cbusSendMsgNN
 30245 ;; This function is called by:
 30246 ;;		_processEnumeration
 30247 ;;		_doNenrd
 30248 ;;		_parseFLiMCmd
 30249 ;;		_doRqnpn
 30250 ;;		_doNvrd
 30251 ;;		_doNvset
 30252 ;;		_doAreq
 30253 ;; This function uses a non-reentrant model
 30254 ;;
 30255                           
 30256                           	psect	text141
 30257  00A4AC                     __ptext141:
 30258                           	callstack 0
 30259  00A4AC                     _doError:
 30260                           	callstack 13
 30261                           
 30262                           ; BSR set to: 0
 30263                           ;incstack = 0
 30264                           ;doError@code stored from wreg
 30265  00A4AC  6F93               	movwf	doError@code& (0+255),b
 30266                           
 30267                           ;FliM.c: 744: cbusMsg[d0] = 0x6F;
 30268  00A4AE  0E6F               	movlw	111
 30269  00A4B0  6E22               	movwf	(_cbusMsg+6)^0,c
 30270                           
 30271                           ;FliM.c: 745: cbusMsg[d3] = code;
 30272  00A4B2  C093  F025         	movff	doError@code,_cbusMsg+9
 30273                           
 30274                           ;FliM.c: 746: cbusSendMsgNN(0xFF, -1, cbusMsg);
 30275  00A4B6  0EFF               	movlw	255
 30276  00A4B8  0100               	movlb	0	; () banked
 30277  00A4BA  6F90               	movwf	(cbusSendMsgNN@eventNode+1)& (0+255),b
 30278  00A4BC  698F               	setf	cbusSendMsgNN@eventNode& (0+255),b
 30279  00A4BE  0E1C               	movlw	low _cbusMsg
 30280  00A4C0  6F91               	movwf	cbusSendMsgNN@msg& (0+255),b
 30281  00A4C2  0EFF               	movlw	255
 30282  00A4C4  EC4C  F04F         	call	_cbusSendMsgNN
 30283                           
 30284                           ; BSR set to: 0
 30285  00A4C8  0012               	return		;funcret
 30286  00A4CA                     __end_of_doError:
 30287                           	callstack 0
 30288                           
 30289 ;; *************** function _cbusSendOpcMyNN *****************
 30290 ;; Defined at:
 30291 ;;		line 149 in file "../../github/CBUSlib/cbus.c"
 30292 ;; Parameters:    Size  Location     Type
 30293 ;;  cbusNum         1    wreg     unsigned char 
 30294 ;;  opc             1   49[BANK0 ] unsigned char 
 30295 ;;  msg             1   50[BANK0 ] PTR unsigned char 
 30296 ;;		 -> cbusMsg(16), 
 30297 ;; Auto vars:     Size  Location     Type
 30298 ;;  cbusNum         1   51[BANK0 ] unsigned char 
 30299 ;; Return value:  Size  Location     Type
 30300 ;;                  1    wreg      unsigned char 
 30301 ;; Registers used:
 30302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30303 ;; Tracked objects:
 30304 ;;		On entry : 3F/0
 30305 ;;		On exit  : 3F/0
 30306 ;;		Unchanged: 0/0
 30307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30311 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30312 ;;Total ram usage:        3 bytes
 30313 ;; Hardware stack levels used: 1
 30314 ;; Hardware stack levels required when called: 13
 30315 ;; This function calls:
 30316 ;;		_cbusSendMsgMyNN
 30317 ;; This function is called by:
 30318 ;;		_checkCBUS
 30319 ;;		_processEnumeration
 30320 ;;		_doNnevn
 30321 ;;		_doNenrd
 30322 ;;		_doRqevn
 30323 ;;		_doNvset
 30324 ;;		_doSnn
 30325 ;;		_doNnclr
 30326 ;;		_doEvlrn
 30327 ;;		_doReval
 30328 ;;		_doReqev
 30329 ;;		_doTimedResponse
 30330 ;; This function uses a non-reentrant model
 30331 ;;
 30332                           
 30333                           	psect	text142
 30334  00A4CA                     __ptext142:
 30335                           	callstack 0
 30336  00A4CA                     _cbusSendOpcMyNN:
 30337                           	callstack 16
 30338                           
 30339                           ; BSR set to: 0
 30340                           ;incstack = 0
 30341                           ;cbusSendOpcMyNN@cbusNum stored from wreg
 30342  00A4CA  6F93               	movwf	cbusSendOpcMyNN@cbusNum& (0+255),b
 30343                           
 30344                           ;cbus.c: 151: msg[d0] = opc;
 30345  00A4CC  0100               	movlb	0	; () banked
 30346  00A4CE  5192               	movf	cbusSendOpcMyNN@msg& (0+255),w,b
 30347  00A4D0  6ED9               	movwf	fsr2l,c
 30348  00A4D2  6ADA               	clrf	fsr2h,c
 30349  00A4D4  0E06               	movlw	6
 30350  00A4D6  26D9               	addwf	fsr2l,f,c
 30351  00A4D8  C091  FFDF         	movff	cbusSendOpcMyNN@opc,indf2
 30352                           
 30353                           ; BSR set to: 0
 30354                           ;cbus.c: 152: return cbusSendMsgMyNN(cbusNum, msg);
 30355  00A4DC  C092  F08F         	movff	cbusSendOpcMyNN@msg,cbusSendMsgMyNN@msg
 30356  00A4E0  5193               	movf	cbusSendOpcMyNN@cbusNum& (0+255),w,b
 30357  00A4E2  EC84  F051         	call	_cbusSendMsgMyNN
 30358                           
 30359                           ; BSR set to: 0
 30360  00A4E6  0012               	return		;funcret
 30361  00A4E8                     __end_of_cbusSendOpcMyNN:
 30362                           	callstack 0
 30363                           
 30364 ;; *************** function _cbusSendMsgMyNN *****************
 30365 ;; Defined at:
 30366 ;;		line 255 in file "../../github/CBUSlib/cbus.c"
 30367 ;; Parameters:    Size  Location     Type
 30368 ;;  cbusNum         1    wreg     unsigned char 
 30369 ;;  msg             1   47[BANK0 ] PTR unsigned char 
 30370 ;;		 -> cbusMsg(16), 
 30371 ;; Auto vars:     Size  Location     Type
 30372 ;;  cbusNum         1   48[BANK0 ] unsigned char 
 30373 ;; Return value:  Size  Location     Type
 30374 ;;                  1    wreg      unsigned char 
 30375 ;; Registers used:
 30376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30377 ;; Tracked objects:
 30378 ;;		On entry : 3F/0
 30379 ;;		On exit  : 3F/0
 30380 ;;		Unchanged: 0/0
 30381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30382 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30386 ;;Total ram usage:        2 bytes
 30387 ;; Hardware stack levels used: 1
 30388 ;; Hardware stack levels required when called: 12
 30389 ;; This function calls:
 30390 ;;		_cbusSendMsg
 30391 ;; This function is called by:
 30392 ;;		_cbusSendOpcMyNN
 30393 ;;		_doNvrd
 30394 ;; This function uses a non-reentrant model
 30395 ;;
 30396                           
 30397                           	psect	text143
 30398  00A308                     __ptext143:
 30399                           	callstack 0
 30400  00A308                     _cbusSendMsgMyNN:
 30401                           	callstack 16
 30402                           
 30403                           ; BSR set to: 0
 30404                           ;incstack = 0
 30405                           ;cbusSendMsgMyNN@cbusNum stored from wreg
 30406  00A308  6F90               	movwf	cbusSendMsgMyNN@cbusNum& (0+255),b
 30407                           
 30408                           ;cbus.c: 257: msg[d1] = nodeID>>8;
 30409  00A30A  0100               	movlb	0	; () banked
 30410  00A30C  518F               	movf	cbusSendMsgMyNN@msg& (0+255),w,b
 30411  00A30E  6ED9               	movwf	fsr2l,c
 30412  00A310  6ADA               	clrf	fsr2h,c
 30413  00A312  0E07               	movlw	7
 30414  00A314  26D9               	addwf	fsr2l,f,c
 30415  00A316  C002  FFDF         	movff	_nodeID+1,indf2
 30416                           
 30417                           ;cbus.c: 258: msg[d2] = nodeID & 0xFF;
 30418  00A31A  518F               	movf	cbusSendMsgMyNN@msg& (0+255),w,b
 30419  00A31C  6ED9               	movwf	fsr2l,c
 30420  00A31E  6ADA               	clrf	fsr2h,c
 30421  00A320  0E08               	movlw	8
 30422  00A322  26D9               	addwf	fsr2l,f,c
 30423  00A324  C001  FFDF         	movff	_nodeID,indf2
 30424                           
 30425                           ; BSR set to: 0
 30426                           ;cbus.c: 259: return cbusSendMsg(cbusNum, msg);
 30427  00A328  C08F  F08B         	movff	cbusSendMsgMyNN@msg,cbusSendMsg@msg
 30428  00A32C  5190               	movf	cbusSendMsgMyNN@cbusNum& (0+255),w,b
 30429  00A32E  ECA7  F04F         	call	_cbusSendMsg
 30430                           
 30431                           ; BSR set to: 0
 30432  00A332  0012               	return		;funcret
 30433  00A334                     __end_of_cbusSendMsgMyNN:
 30434                           	callstack 0
 30435                           
 30436 ;; *************** function _checkIncomingPacket *****************
 30437 ;; Defined at:
 30438 ;;		line 700 in file "../../github/CBUSlib/can18.c"
 30439 ;; Parameters:    Size  Location     Type
 30440 ;;  ptr             2   27[BANK0 ] PTR struct .
 30441 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30442 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30443 ;; Auto vars:     Size  Location     Type
 30444 ;;  incomingCanI    1   34[BANK0 ] unsigned char 
 30445 ;;  msgFound        1   33[BANK0 ] unsigned char 
 30446 ;; Return value:  Size  Location     Type
 30447 ;;                  1    wreg      unsigned char 
 30448 ;; Registers used:
 30449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30450 ;; Tracked objects:
 30451 ;;		On entry : 3F/0
 30452 ;;		On exit  : 3F/0
 30453 ;;		Unchanged: 0/0
 30454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30457 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30458 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30459 ;;Total ram usage:        8 bytes
 30460 ;; Hardware stack levels used: 1
 30461 ;; Hardware stack levels required when called: 9
 30462 ;; This function calls:
 30463 ;;		_doEnum
 30464 ;;		_tickGet
 30465 ;; This function is called by:
 30466 ;;		_canbusRecv
 30467 ;; This function uses a non-reentrant model
 30468 ;;
 30469                           
 30470                           	psect	text144
 30471  007150                     __ptext144:
 30472                           	callstack 0
 30473  007150                     _checkIncomingPacket:
 30474                           	callstack 18
 30475                           
 30476                           ; BSR set to: 0
 30477                           ;can18.c: 703: BYTE incomingCanId;;can18.c: 704: BOOL msgFound;;can18.c: 706: msgFound =
      +                           0;
 30478                           
 30479                           ; BSR set to: 0
 30480                           ;incstack = 0
 30481  007150  0E00               	movlw	0
 30482  007152  6F81               	movwf	checkIncomingPacket@msgFound& (0+255),b
 30483                           
 30484                           ; BSR set to: 0
 30485                           ;can18.c: 707: incomingCanId = (unsigned char)((unsigned char)((unsigned char)(ptr->buff
      +                          er[(unsigned char)sidh] << 3U) + (unsigned char)(ptr->buffer[(unsigned char)sidl] >> 5U)
      +                          ) & 0x7fU);
 30486  007154  EE20 F002          	lfsr	2,2
 30487  007158  517B               	movf	checkIncomingPacket@ptr& (0+255),w,b
 30488  00715A  26D9               	addwf	fsr2l,f,c
 30489  00715C  517C               	movf	(checkIncomingPacket@ptr+1)& (0+255),w,b
 30490  00715E  22DA               	addwfc	fsr2h,f,c
 30491  007160  50DF               	movf	indf2,w,c
 30492  007162  6F7D               	movwf	??_checkIncomingPacket& (0+255),b
 30493  007164  0E05               	movlw	5
 30494  007166  6F7E               	movwf	(??_checkIncomingPacket+1)& (0+255),b
 30495  007168                     u24165:
 30496  007168  90D8               	bcf	status,0,c
 30497  00716A  337D               	rrcf	??_checkIncomingPacket& (0+255),f,b
 30498  00716C  2F7E               	decfsz	(??_checkIncomingPacket+1)& (0+255),f,b
 30499  00716E  D7FC               	goto	u24165
 30500  007170  EE20 F001          	lfsr	2,1
 30501  007174  517B               	movf	checkIncomingPacket@ptr& (0+255),w,b
 30502  007176  26D9               	addwf	fsr2l,f,c
 30503  007178  517C               	movf	(checkIncomingPacket@ptr+1)& (0+255),w,b
 30504  00717A  22DA               	addwfc	fsr2h,f,c
 30505  00717C  50DF               	movf	indf2,w,c
 30506  00717E  0D08               	mullw	8
 30507  007180  50F3               	movf	243,w,c
 30508  007182  257D               	addwf	??_checkIncomingPacket& (0+255),w,b
 30509  007184  0B7F               	andlw	127
 30510  007186  6F82               	movwf	checkIncomingPacket@incomingCanId& (0+255),b
 30511                           
 30512                           ; BSR set to: 0
 30513                           ;can18.c: 709: if (enumerationInProgress) {
 30514  007188  5007               	movf	_enumerationInProgress^0,w,c
 30515  00718A  B4D8               	btfsc	status,2,c
 30516  00718C  D01B               	goto	l19529
 30517                           
 30518                           ; BSR set to: 0
 30519                           ;can18.c: 710: ( enumerationResults[incomingCanId>>3] |= ( 1<<(incomingCanId & 0x07) ) )
      +                          ;
 30520  00718E  C082  F07D         	movff	checkIncomingPacket@incomingCanId,??_checkIncomingPacket
 30521  007192  0E07               	movlw	7
 30522  007194  177D               	andwf	??_checkIncomingPacket& (0+255),f,b
 30523  007196  0E01               	movlw	1
 30524  007198  6F7E               	movwf	(??_checkIncomingPacket+1)& (0+255),b
 30525  00719A  2B7D               	incf	??_checkIncomingPacket& (0+255),f,b
 30526  00719C  D002               	goto	u24184
 30527  00719E                     u24185:
 30528  00719E  90D8               	bcf	status,0,c
 30529  0071A0  377E               	rlcf	(??_checkIncomingPacket+1)& (0+255),f,b
 30530  0071A2                     u24184:
 30531  0071A2  2F7D               	decfsz	??_checkIncomingPacket& (0+255),f,b
 30532  0071A4  D7FC               	goto	u24185
 30533  0071A6  0100               	movlb	0	; () banked
 30534  0071A8  3982               	swapf	checkIncomingPacket@incomingCanId& (0+255),w,b
 30535  0071AA  46E8               	rlncf	wreg,f,c
 30536  0071AC  0B1F               	andlw	31
 30537  0071AE  6F7F               	movwf	(??_checkIncomingPacket+2)& (0+255),b
 30538  0071B0  6B80               	clrf	(??_checkIncomingPacket+3)& (0+255),b
 30539  0071B2  0E54               	movlw	low _enumerationResults
 30540  0071B4  257F               	addwf	(??_checkIncomingPacket+2)& (0+255),w,b
 30541  0071B6  6ED9               	movwf	fsr2l,c
 30542  0071B8  0E02               	movlw	high _enumerationResults
 30543  0071BA  2180               	addwfc	(??_checkIncomingPacket+3)& (0+255),w,b
 30544  0071BC  6EDA               	movwf	fsr2h,c
 30545  0071BE  517E               	movf	(??_checkIncomingPacket+1)& (0+255),w,b
 30546  0071C0  12DF               	iorwf	indf2,f,c
 30547                           
 30548                           ;can18.c: 711: } else if (!enumerationRequired && (incomingCanId == canID))
 30549  0071C2  D014               	goto	l19537
 30550  0071C4                     l19529:
 30551                           
 30552                           ; BSR set to: 0
 30553  0071C4  5009               	movf	_enumerationRequired^0,w,c
 30554  0071C6  A4D8               	btfss	status,2,c
 30555  0071C8  D011               	goto	l19537
 30556                           
 30557                           ; BSR set to: 0
 30558  0071CA  502C               	movf	_canID^0,w,c
 30559  0071CC  1982               	xorwf	checkIncomingPacket@incomingCanId& (0+255),w,b
 30560  0071CE  A4D8               	btfss	status,2,c
 30561  0071D0  D00D               	goto	l19537
 30562                           
 30563                           ; BSR set to: 0
 30564                           ;can18.c: 712: {;can18.c: 715: doEnum(0);
 30565  0071D2  0E00               	movlw	0
 30566  0071D4  EC20  F053         	call	_doEnum
 30567                           
 30568                           ;can18.c: 716: enumerationStartTime.Val = tickGet();
 30569  0071D8  EC9D  F04B         	call	_tickGet	;wreg free
 30570  0071DC  C071  F1B0         	movff	?_tickGet,_enumerationStartTime
 30571  0071E0  C072  F1B1         	movff	?_tickGet+1,_enumerationStartTime+1
 30572  0071E4  C073  F1B2         	movff	?_tickGet+2,_enumerationStartTime+2
 30573  0071E8  C074  F1B3         	movff	?_tickGet+3,_enumerationStartTime+3
 30574  0071EC                     l19537:
 30575                           
 30576                           ; BSR set to: 0
 30577                           ;can18.c: 717: };can18.c: 721: if (ptr->buffer[dlc] & 0x40 )
 30578  0071EC  EE20 F005          	lfsr	2,5
 30579  0071F0  517B               	movf	checkIncomingPacket@ptr& (0+255),w,b
 30580  0071F2  26D9               	addwf	fsr2l,f,c
 30581  0071F4  517C               	movf	(checkIncomingPacket@ptr+1)& (0+255),w,b
 30582  0071F6  22DA               	addwfc	fsr2h,f,c
 30583  0071F8  ACDF               	btfss	indf2,6,c
 30584  0071FA  D00D               	goto	l19543
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;can18.c: 722: {;can18.c: 723: TXB2CONbits.TXREQ = 1;
 30588  0071FC  010F               	movlb	15	; () banked
 30589  0071FE  8700               	bsf	0,3,b	;volatile
 30590                           
 30591                           ; BSR set to: 15
 30592                           ;can18.c: 724: enumerationStartTime.Val = tickGet();
 30593  007200  EC9D  F04B         	call	_tickGet	;wreg free
 30594  007204  C071  F1B0         	movff	?_tickGet,_enumerationStartTime
 30595  007208  C072  F1B1         	movff	?_tickGet+1,_enumerationStartTime+1
 30596  00720C  C073  F1B2         	movff	?_tickGet+2,_enumerationStartTime+2
 30597  007210  C074  F1B3         	movff	?_tickGet+3,_enumerationStartTime+3
 30598                           
 30599                           ;can18.c: 725: }
 30600  007214  D01A               	goto	l19547
 30601  007216                     l19543:
 30602                           
 30603                           ; BSR set to: 0
 30604                           ;can18.c: 726: else;can18.c: 727: {;can18.c: 728: msgFound = ptr->buffer[dlc] & 0x0FU;
 30605  007216  EE20 F005          	lfsr	2,5
 30606  00721A  517B               	movf	checkIncomingPacket@ptr& (0+255),w,b
 30607  00721C  26D9               	addwf	fsr2l,f,c
 30608  00721E  517C               	movf	(checkIncomingPacket@ptr+1)& (0+255),w,b
 30609  007220  22DA               	addwfc	fsr2h,f,c
 30610  007222  50DF               	movf	indf2,w,c
 30611  007224  0B0F               	andlw	15
 30612  007226  6F81               	movwf	checkIncomingPacket@msgFound& (0+255),b
 30613                           
 30614                           ;can18.c: 729: if (ptr->buffer[dlc] > 8)
 30615  007228  EE20 F005          	lfsr	2,5
 30616  00722C  517B               	movf	checkIncomingPacket@ptr& (0+255),w,b
 30617  00722E  26D9               	addwf	fsr2l,f,c
 30618  007230  517C               	movf	(checkIncomingPacket@ptr+1)& (0+255),w,b
 30619  007232  22DA               	addwfc	fsr2h,f,c
 30620  007234  0E08               	movlw	8
 30621  007236  64DF               	cpfsgt	indf2,c
 30622  007238  D008               	goto	l19547
 30623                           
 30624                           ; BSR set to: 0
 30625                           ;can18.c: 730: ptr->buffer[dlc] = 8;
 30626  00723A  EE20 F005          	lfsr	2,5
 30627  00723E  517B               	movf	checkIncomingPacket@ptr& (0+255),w,b
 30628  007240  26D9               	addwf	fsr2l,f,c
 30629  007242  517C               	movf	(checkIncomingPacket@ptr+1)& (0+255),w,b
 30630  007244  22DA               	addwfc	fsr2h,f,c
 30631  007246  0E08               	movlw	8
 30632  007248  6EDF               	movwf	indf2,c
 30633  00724A                     l19547:
 30634                           
 30635                           ; BSR set to: 0
 30636                           ;can18.c: 731: };can18.c: 733: return( msgFound );
 30637  00724A  5181               	movf	checkIncomingPacket@msgFound& (0+255),w,b
 30638                           
 30639                           ; BSR set to: 0
 30640  00724C  0012               	return		;funcret
 30641  00724E                     __end_of_checkIncomingPacket:
 30642                           	callstack 0
 30643                           
 30644 ;; *************** function _doEnum *****************
 30645 ;; Defined at:
 30646 ;;		line 635 in file "../../github/CBUSlib/can18.c"
 30647 ;; Parameters:    Size  Location     Type
 30648 ;;  sendResult      1    wreg     unsigned char 
 30649 ;; Auto vars:     Size  Location     Type
 30650 ;;  sendResult      1   17[BANK0 ] unsigned char 
 30651 ;; Return value:  Size  Location     Type
 30652 ;;                  1    wreg      void 
 30653 ;; Registers used:
 30654 ;;		wreg, status,2
 30655 ;; Tracked objects:
 30656 ;;		On entry : 3F/0
 30657 ;;		On exit  : 0/0
 30658 ;;		Unchanged: 0/0
 30659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30664 ;;Total ram usage:        1 bytes
 30665 ;; Hardware stack levels used: 1
 30666 ;; Hardware stack levels required when called: 8
 30667 ;; This function calls:
 30668 ;;		Nothing
 30669 ;; This function is called by:
 30670 ;;		_checkIncomingPacket
 30671 ;;		_parseFLiMCmd
 30672 ;; This function uses a non-reentrant model
 30673 ;;
 30674                           
 30675                           	psect	text145
 30676  00A640                     __ptext145:
 30677                           	callstack 0
 30678  00A640                     _doEnum:
 30679                           	callstack 19
 30680                           
 30681                           ; BSR set to: 0
 30682                           ;incstack = 0
 30683                           ;doEnum@sendResult stored from wreg
 30684  00A640  6F71               	movwf	doEnum@sendResult& (0+255),b
 30685                           
 30686                           ;can18.c: 636: resultRequired = sendResult;
 30687  00A642  C071  F008         	movff	doEnum@sendResult,_resultRequired
 30688                           
 30689                           ;can18.c: 637: if (! enumerationInProgress) {
 30690  00A646  5007               	movf	_enumerationInProgress^0,w,c
 30691  00A648  A4D8               	btfss	status,2,c
 30692  00A64A  0012               	return	
 30693                           
 30694                           ;can18.c: 638: enumerationRequired = 1;
 30695  00A64C  0E01               	movlw	1
 30696  00A64E  6E09               	movwf	_enumerationRequired^0,c
 30697  00A650  0012               	return		;funcret
 30698  00A652                     __end_of_doEnum:
 30699                           	callstack 0
 30700                           
 30701 ;; *************** function __PointBuffer *****************
 30702 ;; Defined at:
 30703 ;;		line 792 in file "../../github/CBUSlib/can18.c"
 30704 ;; Parameters:    Size  Location     Type
 30705 ;;  b               1    wreg     unsigned char 
 30706 ;; Auto vars:     Size  Location     Type
 30707 ;;  b               1   19[BANK0 ] unsigned char 
 30708 ;;  pt              2   20[BANK0 ] PTR unsigned char 
 30709 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30710 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30711 ;; Return value:  Size  Location     Type
 30712 ;;                  2   17[BANK0 ] PTR unsigned char 
 30713 ;; Registers used:
 30714 ;;		wreg, status,2, status,0
 30715 ;; Tracked objects:
 30716 ;;		On entry : 3F/0
 30717 ;;		On exit  : 3F/0
 30718 ;;		Unchanged: 0/0
 30719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30721 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30723 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30724 ;;Total ram usage:        5 bytes
 30725 ;; Hardware stack levels used: 1
 30726 ;; Hardware stack levels required when called: 8
 30727 ;; This function calls:
 30728 ;;		Nothing
 30729 ;; This function is called by:
 30730 ;;		_canbusRecv
 30731 ;; This function uses a non-reentrant model
 30732 ;;
 30733                           
 30734                           	psect	text146
 30735  00917E                     __ptext146:
 30736                           	callstack 0
 30737  00917E                     __PointBuffer:
 30738                           	callstack 19
 30739                           
 30740                           ;incstack = 0
 30741                           ;__PointBuffer@b stored from wreg
 30742  00917E  6F73               	movwf	__PointBuffer@b& (0+255),b
 30743                           
 30744                           ;can18.c: 793: BYTE* pt;;can18.c: 795: switch (b) {
 30745  009180  D016               	goto	l19519
 30746  009182                     l19501:
 30747                           
 30748                           ; BSR set to: 0
 30749                           ;can18.c: 797: pt = (BYTE*) & RXB0CON;
 30750  009182  0E60               	movlw	96
 30751  009184  D001               	goto	L23
 30752  009186                     l19503:
 30753                           
 30754                           ; BSR set to: 0
 30755                           ;can18.c: 800: pt = (BYTE*) & RXB1CON;
 30756  009186  0E30               	movlw	48
 30757  009188                     L23:
 30758  009188  6F74               	movwf	__PointBuffer@pt& (0+255),b
 30759  00918A  0E0F               	movlw	15
 30760  00918C  D002               	goto	L24
 30761  00918E                     l19505:
 30762                           
 30763                           ; BSR set to: 0
 30764                           ;can18.c: 803: pt = (BYTE*) & B0CON;
 30765  00918E  0E80               	movlw	128
 30766  009190  D00B               	goto	L29
 30767  009192                     L24:
 30768  009192  6F75               	movwf	(__PointBuffer@pt+1)& (0+255),b
 30769                           
 30770                           ;can18.c: 804: break;
 30771  009194  D024               	goto	l1703
 30772  009196                     l19507:
 30773                           
 30774                           ; BSR set to: 0
 30775                           ;can18.c: 806: pt = (BYTE*) & B1CON;
 30776  009196  0E90               	movlw	144
 30777  009198  D007               	goto	L29
 30778  00919A                     l19509:
 30779                           
 30780                           ; BSR set to: 0
 30781                           ;can18.c: 809: pt = (BYTE*) & B2CON;
 30782  00919A  0EA0               	movlw	160
 30783  00919C  D005               	goto	L29
 30784  00919E                     l19511:
 30785                           
 30786                           ; BSR set to: 0
 30787                           ;can18.c: 812: pt = (BYTE*) & B3CON;
 30788  00919E  0EB0               	movlw	176
 30789  0091A0  D003               	goto	L29
 30790  0091A2                     l19513:
 30791                           
 30792                           ; BSR set to: 0
 30793                           ;can18.c: 815: pt = (BYTE*) & B4CON;
 30794  0091A2  0EC0               	movlw	192
 30795  0091A4  D001               	goto	L29
 30796  0091A6                     l19515:
 30797                           
 30798                           ; BSR set to: 0
 30799                           ;can18.c: 818: pt = (BYTE*) & B5CON;
 30800  0091A6  0ED0               	movlw	208
 30801  0091A8                     L29:
 30802  0091A8  6F74               	movwf	__PointBuffer@pt& (0+255),b
 30803  0091AA  0E0E               	movlw	14
 30804  0091AC  D7F2               	goto	L24
 30805  0091AE                     l19519:
 30806  0091AE  0100               	movlb	0	; () banked
 30807  0091B0  5173               	movf	__PointBuffer@b& (0+255),w,b
 30808                           
 30809                           ; Switch size 1, requested type "simple"
 30810                           ; Number of cases is 7, Range of values is 0 to 6
 30811                           ; switch strategies available:
 30812                           ; Name         Instructions Cycles
 30813                           ; simple_byte           22    12 (average)
 30814                           ;	Chosen strategy is simple_byte
 30815  0091B2  0A00               	xorlw	0	; case 0
 30816  0091B4  B4D8               	btfsc	status,2,c
 30817  0091B6  D7E5               	goto	l19501
 30818  0091B8  0A01               	xorlw	1	; case 1
 30819  0091BA  B4D8               	btfsc	status,2,c
 30820  0091BC  D7E4               	goto	l19503
 30821  0091BE  0A03               	xorlw	3	; case 2
 30822  0091C0  B4D8               	btfsc	status,2,c
 30823  0091C2  D7E5               	goto	l19505
 30824  0091C4  0A01               	xorlw	1	; case 3
 30825  0091C6  B4D8               	btfsc	status,2,c
 30826  0091C8  D7E6               	goto	l19507
 30827  0091CA  0A07               	xorlw	7	; case 4
 30828  0091CC  B4D8               	btfsc	status,2,c
 30829  0091CE  D7E5               	goto	l19509
 30830  0091D0  0A01               	xorlw	1	; case 5
 30831  0091D2  B4D8               	btfsc	status,2,c
 30832  0091D4  D7E4               	goto	l19511
 30833  0091D6  0A03               	xorlw	3	; case 6
 30834  0091D8  B4D8               	btfsc	status,2,c
 30835  0091DA  D7E3               	goto	l19513
 30836  0091DC  D7E4               	goto	l19515
 30837  0091DE                     l1703:
 30838                           
 30839                           ; BSR set to: 0
 30840                           ;can18.c: 821: return (pt);
 30841  0091DE  C074  F071         	movff	__PointBuffer@pt,?__PointBuffer
 30842  0091E2  C075  F072         	movff	__PointBuffer@pt+1,?__PointBuffer+1
 30843                           
 30844                           ; BSR set to: 0
 30845  0091E6  0012               	return		;funcret
 30846  0091E8                     __end_of__PointBuffer:
 30847                           	callstack 0
 30848                           
 30849 ;; *************** function _FLiMSWCheck *****************
 30850 ;; Defined at:
 30851 ;;		line 134 in file "../../github/CBUSlib/FliM.c"
 30852 ;; Parameters:    Size  Location     Type
 30853 ;;		None
 30854 ;; Auto vars:     Size  Location     Type
 30855 ;;		None
 30856 ;; Return value:  Size  Location     Type
 30857 ;;                  1    wreg      void 
 30858 ;; Registers used:
 30859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30860 ;; Tracked objects:
 30861 ;;		On entry : 0/0
 30862 ;;		On exit  : 0/0
 30863 ;;		Unchanged: 0/0
 30864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30868 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30869 ;;Total ram usage:        4 bytes
 30870 ;; Hardware stack levels used: 1
 30871 ;; Hardware stack levels required when called: 17
 30872 ;; This function calls:
 30873 ;;		_SLiMRevert
 30874 ;;		_SaveNodeDetails
 30875 ;;		_requestNodeNumber
 30876 ;;		_setSLiMLed
 30877 ;;		_setStatusLed
 30878 ;;		_startFLiMFlash
 30879 ;;		_tickGet
 30880 ;; This function is called by:
 30881 ;;		_main
 30882 ;; This function uses a non-reentrant model
 30883 ;;
 30884                           
 30885                           	psect	text147
 30886  00666E                     __ptext147:
 30887                           	callstack 0
 30888  00666E                     _FLiMSWCheck:
 30889                           	callstack 13
 30890                           
 30891                           ;FliM.c: 137: switch (flimState)
 30892                           
 30893                           ; BSR set to: 0
 30894                           ;incstack = 0
 30895  00666E  D0BA               	goto	l21475
 30896  006670                     l2142:
 30897                           
 30898                           ;FliM.c: 140: case fsSLiM:;FliM.c: 141: if (!PORTAbits.RA2)
 30899  006670  B480               	btfsc	128,2,c	;volatile
 30900  006672  0012               	return	
 30901                           
 30902                           ;FliM.c: 142: {;FliM.c: 143: prevFlimState = flimState;
 30903  006674  C016  F006         	movff	_flimState,_prevFlimState
 30904                           
 30905                           ;FliM.c: 144: flimState = fsPressed;
 30906  006678  0E02               	movlw	2
 30907  00667A  6E16               	movwf	_flimState^0,c
 30908                           
 30909                           ;FliM.c: 146: cbusMsg[d1] = (nodeID >>8)&0xff;
 30910  00667C  C002  F023         	movff	_nodeID+1,_cbusMsg+7
 30911                           
 30912                           ;FliM.c: 147: cbusMsg[d2] = nodeID & 0xff;
 30913  006680  C001  F024         	movff	_nodeID,_cbusMsg+8
 30914  006684                     l21427:
 30915                           
 30916                           ;FliM.c: 148: switchTime.Val = tickGet();
 30917  006684  EC9D  F04B         	call	_tickGet	;wreg free
 30918  006688  C071  F1AC         	movff	?_tickGet,_switchTime
 30919  00668C  C072  F1AD         	movff	?_tickGet+1,_switchTime+1
 30920  006690  C073  F1AE         	movff	?_tickGet+2,_switchTime+2
 30921  006694  C074  F1AF         	movff	?_tickGet+3,_switchTime+3
 30922  006698  0012               	return	
 30923  00669A                     l2145:
 30924                           
 30925                           ;FliM.c: 153: if (!PORTAbits.RA2)
 30926  00669A  B480               	btfsc	128,2,c	;volatile
 30927  00669C  D026               	goto	l21435
 30928                           
 30929                           ;FliM.c: 154: {;FliM.c: 155: if ((tickGet() - switchTime.Val) > 4 * 62500)
 30930  00669E  EC9D  F04B         	call	_tickGet	;wreg free
 30931  0066A2  0101               	movlb	1	; () banked
 30932  0066A4  51AC               	movf	_switchTime& (0+255),w,b
 30933  0066A6  0100               	movlb	0	; () banked
 30934  0066A8  5D71               	subwf	?_tickGet& (0+255),w,b
 30935  0066AA  6FA1               	movwf	??_FLiMSWCheck& (0+255),b
 30936  0066AC  0101               	movlb	1	; () banked
 30937  0066AE  51AD               	movf	(_switchTime+1)& (0+255),w,b
 30938  0066B0  0100               	movlb	0	; () banked
 30939  0066B2  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 30940  0066B4  6FA2               	movwf	(??_FLiMSWCheck+1)& (0+255),b
 30941  0066B6  0101               	movlb	1	; () banked
 30942  0066B8  51AE               	movf	(_switchTime+2)& (0+255),w,b
 30943  0066BA  0100               	movlb	0	; () banked
 30944  0066BC  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 30945  0066BE  6FA3               	movwf	(??_FLiMSWCheck+2)& (0+255),b
 30946  0066C0  0101               	movlb	1	; () banked
 30947  0066C2  51AF               	movf	(_switchTime+3)& (0+255),w,b
 30948  0066C4  0100               	movlb	0	; () banked
 30949  0066C6  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 30950  0066C8  6FA4               	movwf	(??_FLiMSWCheck+3)& (0+255),b
 30951  0066CA  51A4               	movf	(??_FLiMSWCheck+3)& (0+255),w,b
 30952  0066CC  E108               	bnz	u27430
 30953  0066CE  0E91               	movlw	145
 30954  0066D0  5DA1               	subwf	??_FLiMSWCheck& (0+255),w,b
 30955  0066D2  0ED0               	movlw	208
 30956  0066D4  59A2               	subwfb	(??_FLiMSWCheck+1)& (0+255),w,b
 30957  0066D6  0E03               	movlw	3
 30958  0066D8  59A3               	subwfb	(??_FLiMSWCheck+2)& (0+255),w,b
 30959  0066DA  A0D8               	btfss	status,0,c
 30960  0066DC  0012               	return	
 30961  0066DE                     u27430:
 30962                           
 30963                           ; BSR set to: 0
 30964                           ;FliM.c: 156: {;FliM.c: 157: flimState = fsFlashing;
 30965  0066DE  0E03               	movlw	3
 30966  0066E0  6E16               	movwf	_flimState^0,c
 30967                           
 30968                           ; BSR set to: 0
 30969                           ;FliM.c: 158: startFLiMFlash(0);
 30970  0066E2  0E00               	movlw	0
 30971  0066E4  EC34  F052         	call	_startFLiMFlash
 30972  0066E8  0012               	return	
 30973  0066EA                     l21435:
 30974                           
 30975                           ;FliM.c: 161: else if ((prevFlimState == fsFLiM) && ((tickGet() - switchTime.Val) > (625
      +                          00/10)))
 30976  0066EA  0406               	decf	_prevFlimState^0,w,c
 30977  0066EC  A4D8               	btfss	status,2,c
 30978  0066EE  D027               	goto	l2149
 30979  0066F0  EC9D  F04B         	call	_tickGet	;wreg free
 30980  0066F4  0101               	movlb	1	; () banked
 30981  0066F6  51AC               	movf	_switchTime& (0+255),w,b
 30982  0066F8  0100               	movlb	0	; () banked
 30983  0066FA  5D71               	subwf	?_tickGet& (0+255),w,b
 30984  0066FC  6FA1               	movwf	??_FLiMSWCheck& (0+255),b
 30985  0066FE  0101               	movlb	1	; () banked
 30986  006700  51AD               	movf	(_switchTime+1)& (0+255),w,b
 30987  006702  0100               	movlb	0	; () banked
 30988  006704  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 30989  006706  6FA2               	movwf	(??_FLiMSWCheck+1)& (0+255),b
 30990  006708  0101               	movlb	1	; () banked
 30991  00670A  51AE               	movf	(_switchTime+2)& (0+255),w,b
 30992  00670C  0100               	movlb	0	; () banked
 30993  00670E  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 30994  006710  6FA3               	movwf	(??_FLiMSWCheck+2)& (0+255),b
 30995  006712  0101               	movlb	1	; () banked
 30996  006714  51AF               	movf	(_switchTime+3)& (0+255),w,b
 30997  006716  0100               	movlb	0	; () banked
 30998  006718  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 30999  00671A  6FA4               	movwf	(??_FLiMSWCheck+3)& (0+255),b
 31000  00671C  51A4               	movf	(??_FLiMSWCheck+3)& (0+255),w,b
 31001  00671E  11A3               	iorwf	(??_FLiMSWCheck+2)& (0+255),w,b
 31002  006720  E106               	bnz	u27450
 31003  006722  0E6B               	movlw	107
 31004  006724  5DA1               	subwf	??_FLiMSWCheck& (0+255),w,b
 31005  006726  0E18               	movlw	24
 31006  006728  59A2               	subwfb	(??_FLiMSWCheck+1)& (0+255),w,b
 31007  00672A  A0D8               	btfss	status,0,c
 31008  00672C  D008               	goto	l2149
 31009  00672E                     u27450:
 31010                           
 31011                           ; BSR set to: 0
 31012                           ;FliM.c: 162: {;FliM.c: 163: flimState = fsFLiMSetup;
 31013  00672E  0E04               	movlw	4
 31014  006730  6E16               	movwf	_flimState^0,c
 31015                           
 31016                           ; BSR set to: 0
 31017                           ;FliM.c: 164: startFLiMFlash(0);
 31018  006732  0E00               	movlw	0
 31019  006734  EC34  F052         	call	_startFLiMFlash
 31020  006738                     l21443:
 31021                           
 31022                           ;FliM.c: 165: requestNodeNumber();
 31023  006738  ECD3  F052         	call	_requestNodeNumber	;wreg free
 31024                           
 31025                           ;FliM.c: 166: }
 31026  00673C  0012               	return	
 31027  00673E                     l2149:
 31028                           
 31029                           ;FliM.c: 167: else;FliM.c: 168: {;FliM.c: 169: flimState = prevFlimState;
 31030  00673E  C006  F016         	movff	_prevFlimState,_flimState
 31031  006742  0012               	return	
 31032  006744                     l2151:
 31033                           
 31034                           ;FliM.c: 174: if (PORTAbits.RA2)
 31035  006744  A480               	btfss	128,2,c	;volatile
 31036  006746  0012               	return	
 31037                           
 31038                           ;FliM.c: 175: {;FliM.c: 176: if (prevFlimState == fsSLiM)
 31039  006748  5006               	movf	_prevFlimState^0,w,c
 31040  00674A  A4D8               	btfss	status,2,c
 31041  00674C  D003               	goto	l21451
 31042                           
 31043                           ;FliM.c: 177: {;FliM.c: 178: flimState = fsFLiMSetup;
 31044  00674E  0E04               	movlw	4
 31045  006750  6E16               	movwf	_flimState^0,c
 31046  006752  D7F2               	goto	l21443
 31047  006754                     l21451:
 31048                           
 31049                           ;FliM.c: 182: else;FliM.c: 183: {;FliM.c: 184: flimState = fsSLiM;
 31050  006754  0E00               	movlw	0
 31051  006756  6E16               	movwf	_flimState^0,c
 31052                           
 31053                           ;FliM.c: 185: SLiMRevert();
 31054  006758  ECDF  F052         	call	_SLiMRevert	;wreg free
 31055                           
 31056                           ; BSR set to: 0
 31057                           ;FliM.c: 186: setSLiMLed();
 31058  00675C  EC48  F053         	call	_setSLiMLed	;wreg free
 31059                           
 31060                           ; BSR set to: 1
 31061                           ;FliM.c: 187: nodeID = 0;
 31062  006760  0E00               	movlw	0
 31063  006762  6E02               	movwf	(_nodeID+1)^0,c
 31064  006764  0E00               	movlw	0
 31065  006766  6E01               	movwf	_nodeID^0,c
 31066                           
 31067                           ; BSR set to: 1
 31068                           ;FliM.c: 188: SaveNodeDetails(nodeID, fsSLiM);
 31069  006768  C001  F098         	movff	_nodeID,SaveNodeDetails@nodeID
 31070  00676C  C002  F099         	movff	_nodeID+1,SaveNodeDetails@nodeID+1
 31071  006770  0E00               	movlw	0
 31072  006772  0100               	movlb	0	; () banked
 31073  006774  6F9A               	movwf	SaveNodeDetails@flimState& (0+255),b
 31074  006776  ECAF  F051         	call	_SaveNodeDetails	;wreg free
 31075  00677A  0012               	return	
 31076  00677C                     l2155:
 31077                           
 31078                           ;FliM.c: 203: if (!PORTAbits.RA2)
 31079  00677C  B480               	btfsc	128,2,c	;volatile
 31080  00677E  0012               	return	
 31081                           
 31082                           ;FliM.c: 204: {;FliM.c: 205: flimState = fsPressedSetup;
 31083  006780  0E09               	movlw	9
 31084  006782  6E16               	movwf	_flimState^0,c
 31085  006784  D77F               	goto	l21427
 31086  006786                     l2157:
 31087                           
 31088                           ;FliM.c: 211: if (PORTAbits.RA2)
 31089  006786  A480               	btfss	128,2,c	;volatile
 31090  006788  0012               	return	
 31091                           
 31092                           ;FliM.c: 212: {;FliM.c: 213: if (((tickGet() - switchTime.Val) > (62500/10)))
 31093  00678A  EC9D  F04B         	call	_tickGet	;wreg free
 31094  00678E  0101               	movlb	1	; () banked
 31095  006790  51AC               	movf	_switchTime& (0+255),w,b
 31096  006792  0100               	movlb	0	; () banked
 31097  006794  5D71               	subwf	?_tickGet& (0+255),w,b
 31098  006796  6FA1               	movwf	??_FLiMSWCheck& (0+255),b
 31099  006798  0101               	movlb	1	; () banked
 31100  00679A  51AD               	movf	(_switchTime+1)& (0+255),w,b
 31101  00679C  0100               	movlb	0	; () banked
 31102  00679E  5972               	subwfb	(?_tickGet+1)& (0+255),w,b
 31103  0067A0  6FA2               	movwf	(??_FLiMSWCheck+1)& (0+255),b
 31104  0067A2  0101               	movlb	1	; () banked
 31105  0067A4  51AE               	movf	(_switchTime+2)& (0+255),w,b
 31106  0067A6  0100               	movlb	0	; () banked
 31107  0067A8  5973               	subwfb	(?_tickGet+2)& (0+255),w,b
 31108  0067AA  6FA3               	movwf	(??_FLiMSWCheck+2)& (0+255),b
 31109  0067AC  0101               	movlb	1	; () banked
 31110  0067AE  51AF               	movf	(_switchTime+3)& (0+255),w,b
 31111  0067B0  0100               	movlb	0	; () banked
 31112  0067B2  5974               	subwfb	(?_tickGet+3)& (0+255),w,b
 31113  0067B4  6FA4               	movwf	(??_FLiMSWCheck+3)& (0+255),b
 31114  0067B6  51A4               	movf	(??_FLiMSWCheck+3)& (0+255),w,b
 31115  0067B8  11A3               	iorwf	(??_FLiMSWCheck+2)& (0+255),w,b
 31116  0067BA  E106               	bnz	u27500
 31117  0067BC  0E6B               	movlw	107
 31118  0067BE  5DA1               	subwf	??_FLiMSWCheck& (0+255),w,b
 31119  0067C0  0E18               	movlw	24
 31120  0067C2  59A2               	subwfb	(??_FLiMSWCheck+1)& (0+255),w,b
 31121  0067C4  A0D8               	btfss	status,0,c
 31122  0067C6  D00B               	goto	l21471
 31123  0067C8                     u27500:
 31124                           
 31125                           ; BSR set to: 0
 31126                           ;FliM.c: 214: {;FliM.c: 215: flimState = prevFlimState;
 31127  0067C8  C006  F016         	movff	_prevFlimState,_flimState
 31128                           
 31129                           ; BSR set to: 0
 31130                           ;FliM.c: 216: setStatusLed(flimState == fsFLiM);
 31131  0067CC  0416               	decf	_flimState^0,w,c
 31132  0067CE  A4D8               	btfss	status,2,c
 31133  0067D0  D002               	goto	u27510
 31134  0067D2  0E01               	movlw	1
 31135  0067D4  D001               	goto	u27520
 31136  0067D6                     u27510:
 31137  0067D6  0E00               	movlw	0
 31138  0067D8                     u27520:
 31139  0067D8  ECC7  F052         	call	_setStatusLed
 31140                           
 31141                           ;FliM.c: 217: }
 31142  0067DC  0012               	return	
 31143  0067DE                     l21471:
 31144                           
 31145                           ; BSR set to: 0
 31146                           ;FliM.c: 218: else;FliM.c: 219: flimState = fsFLiMSetup;
 31147  0067DE  0E04               	movlw	4
 31148  0067E0  6E16               	movwf	_flimState^0,c
 31149  0067E2  0012               	return	
 31150  0067E4                     l21475:
 31151  0067E4  5016               	movf	_flimState^0,w,c
 31152                           
 31153                           ; Switch size 1, requested type "simple"
 31154                           ; Number of cases is 6, Range of values is 0 to 9
 31155                           ; switch strategies available:
 31156                           ; Name         Instructions Cycles
 31157                           ; simple_byte           19    10 (average)
 31158                           ;	Chosen strategy is simple_byte
 31159  0067E6  0A00               	xorlw	0	; case 0
 31160  0067E8  B4D8               	btfsc	status,2,c
 31161  0067EA  D742               	goto	l2142
 31162  0067EC  0A01               	xorlw	1	; case 1
 31163  0067EE  B4D8               	btfsc	status,2,c
 31164  0067F0  D73F               	goto	l2142
 31165  0067F2  0A03               	xorlw	3	; case 2
 31166  0067F4  B4D8               	btfsc	status,2,c
 31167  0067F6  D751               	goto	l2145
 31168  0067F8  0A01               	xorlw	1	; case 3
 31169  0067FA  B4D8               	btfsc	status,2,c
 31170  0067FC  D7A3               	goto	l2151
 31171  0067FE  0A07               	xorlw	7	; case 4
 31172  006800  B4D8               	btfsc	status,2,c
 31173  006802  D7BC               	goto	l2155
 31174  006804  0A0D               	xorlw	13	; case 9
 31175  006806  A4D8               	btfss	status,2,c
 31176  006808  0012               	return	
 31177  00680A  D7BD               	goto	l2157
 31178  00680C                     __end_of_FLiMSWCheck:
 31179                           	callstack 0
 31180                           
 31181 ;; *************** function _startFLiMFlash *****************
 31182 ;; Defined at:
 31183 ;;		line 118 in file "../../github/CBUSlib/StatusLeds.c"
 31184 ;; Parameters:    Size  Location     Type
 31185 ;;  fast            1    wreg     unsigned char 
 31186 ;; Auto vars:     Size  Location     Type
 31187 ;;  fast            1   28[BANK0 ] unsigned char 
 31188 ;; Return value:  Size  Location     Type
 31189 ;;                  1    wreg      void 
 31190 ;; Registers used:
 31191 ;;		wreg, status,2, status,0, cstack
 31192 ;; Tracked objects:
 31193 ;;		On entry : 3F/0
 31194 ;;		On exit  : 3F/0
 31195 ;;		Unchanged: 0/0
 31196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31198 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31200 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31201 ;;Total ram usage:        3 bytes
 31202 ;; Hardware stack levels used: 1
 31203 ;; Hardware stack levels required when called: 10
 31204 ;; This function calls:
 31205 ;;		_doFLiMFlash
 31206 ;; This function is called by:
 31207 ;;		_FLiMSWCheck
 31208 ;; This function uses a non-reentrant model
 31209 ;;
 31210                           
 31211                           	psect	text148
 31212  00A468                     __ptext148:
 31213                           	callstack 0
 31214  00A468                     _startFLiMFlash:
 31215                           	callstack 19
 31216                           
 31217                           ;incstack = 0
 31218                           ;startFLiMFlash@fast stored from wreg
 31219  00A468  6F7C               	movwf	startFLiMFlash@fast& (0+255),b
 31220                           
 31221                           ;StatusLeds.c: 120: flashState = (fast? flFLiMFast : flFLiMSlow);
 31222  00A46A  0100               	movlb	0	; () banked
 31223  00A46C  517C               	movf	startFLiMFlash@fast& (0+255),w,b
 31224  00A46E  A4D8               	btfss	status,2,c
 31225  00A470  D004               	goto	l20971
 31226                           
 31227                           ; BSR set to: 0
 31228  00A472  0E00               	movlw	0
 31229  00A474  6F7E               	movwf	(_startFLiMFlash$4941+1)& (0+255),b
 31230  00A476  0E01               	movlw	1
 31231  00A478  D003               	goto	L30
 31232  00A47A                     l20971:
 31233                           
 31234                           ; BSR set to: 0
 31235  00A47A  0E00               	movlw	0
 31236  00A47C  6F7E               	movwf	(_startFLiMFlash$4941+1)& (0+255),b
 31237  00A47E  0E02               	movlw	2
 31238  00A480                     L30:
 31239  00A480  6F7D               	movwf	_startFLiMFlash$4941& (0+255),b
 31240                           
 31241                           ; BSR set to: 0
 31242  00A482  C07D  F1D3         	movff	_startFLiMFlash$4941,_flashState
 31243                           
 31244                           ; BSR set to: 0
 31245                           ;StatusLeds.c: 121: doFLiMFlash();
 31246  00A486  EC18  F050         	call	_doFLiMFlash	;wreg free
 31247                           
 31248                           ; BSR set to: 0
 31249  00A48A  0012               	return		;funcret
 31250  00A48C                     __end_of_startFLiMFlash:
 31251                           	callstack 0
 31252                           
 31253 ;; *************** function _doFLiMFlash *****************
 31254 ;; Defined at:
 31255 ;;		line 108 in file "../../github/CBUSlib/StatusLeds.c"
 31256 ;; Parameters:    Size  Location     Type
 31257 ;;		None
 31258 ;; Auto vars:     Size  Location     Type
 31259 ;;		None
 31260 ;; Return value:  Size  Location     Type
 31261 ;;                  1    wreg      void 
 31262 ;; Registers used:
 31263 ;;		wreg, status,2, status,0, cstack
 31264 ;; Tracked objects:
 31265 ;;		On entry : 3D/0
 31266 ;;		On exit  : 3F/0
 31267 ;;		Unchanged: 0/0
 31268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31273 ;;Total ram usage:        1 bytes
 31274 ;; Hardware stack levels used: 1
 31275 ;; Hardware stack levels required when called: 9
 31276 ;; This function calls:
 31277 ;;		_tickGet
 31278 ;; This function is called by:
 31279 ;;		_startFLiMFlash
 31280 ;;		_checkFlashing
 31281 ;; This function uses a non-reentrant model
 31282 ;;
 31283                           
 31284                           	psect	text149
 31285  00A030                     __ptext149:
 31286                           	callstack 0
 31287  00A030                     _doFLiMFlash:
 31288                           	callstack 20
 31289                           
 31290                           ;StatusLeds.c: 110: LATBbits.LATB6 = (BOOL)(! LATBbits.LATB6);
 31291                           
 31292                           ; BSR set to: 0
 31293                           ;incstack = 0
 31294  00A030  BC8A               	btfsc	138,6,c	;volatile
 31295  00A032  D004               	goto	u25170
 31296  00A034  0100               	movlb	0	; () banked
 31297  00A036  6B7B               	clrf	??_doFLiMFlash& (0+255),b
 31298  00A038  2B7B               	incf	??_doFLiMFlash& (0+255),f,b
 31299  00A03A  D002               	goto	u25188
 31300  00A03C                     u25170:
 31301  00A03C  0100               	movlb	0	; () banked
 31302  00A03E  6B7B               	clrf	??_doFLiMFlash& (0+255),b
 31303  00A040                     u25188:
 31304  00A040  3B7B               	swapf	??_doFLiMFlash& (0+255),f,b
 31305  00A042  477B               	rlncf	??_doFLiMFlash& (0+255),f,b
 31306  00A044  477B               	rlncf	??_doFLiMFlash& (0+255),f,b
 31307  00A046  508A               	movf	138,w,c	;volatile
 31308  00A048  197B               	xorwf	??_doFLiMFlash& (0+255),w,b
 31309  00A04A  0BBF               	andlw	-65
 31310  00A04C  197B               	xorwf	??_doFLiMFlash& (0+255),w,b
 31311  00A04E  6E8A               	movwf	138,c	;volatile
 31312                           
 31313                           ; BSR set to: 0
 31314                           ;StatusLeds.c: 111: flashTime.Val = tickGet();
 31315  00A050  EC9D  F04B         	call	_tickGet	;wreg free
 31316  00A054  C071  F1A4         	movff	?_tickGet,_flashTime
 31317  00A058  C072  F1A5         	movff	?_tickGet+1,_flashTime+1
 31318  00A05C  C073  F1A6         	movff	?_tickGet+2,_flashTime+2
 31319  00A060  C074  F1A7         	movff	?_tickGet+3,_flashTime+3
 31320                           
 31321                           ; BSR set to: 0
 31322  00A064  0012               	return		;funcret
 31323  00A066                     __end_of_doFLiMFlash:
 31324                           	callstack 0
 31325                           
 31326 ;; *************** function _setStatusLed *****************
 31327 ;; Defined at:
 31328 ;;		line 97 in file "../../github/CBUSlib/StatusLeds.c"
 31329 ;; Parameters:    Size  Location     Type
 31330 ;;  FLiMLED         1    wreg     unsigned char 
 31331 ;; Auto vars:     Size  Location     Type
 31332 ;;  FLiMLED         1   17[BANK0 ] unsigned char 
 31333 ;; Return value:  Size  Location     Type
 31334 ;;                  1    wreg      void 
 31335 ;; Registers used:
 31336 ;;		wreg, status,2, cstack
 31337 ;; Tracked objects:
 31338 ;;		On entry : 3E/1
 31339 ;;		On exit  : 3F/1
 31340 ;;		Unchanged: 0/0
 31341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31345 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31346 ;;Total ram usage:        1 bytes
 31347 ;; Hardware stack levels used: 1
 31348 ;; Hardware stack levels required when called: 9
 31349 ;; This function calls:
 31350 ;;		_setFLiMLed
 31351 ;;		_setSLiMLed
 31352 ;; This function is called by:
 31353 ;;		_flimInit
 31354 ;;		_FLiMSWCheck
 31355 ;; This function uses a non-reentrant model
 31356 ;;
 31357                           
 31358                           	psect	text150
 31359  00A58E                     __ptext150:
 31360                           	callstack 0
 31361  00A58E                     _setStatusLed:
 31362                           	callstack 18
 31363                           
 31364                           ; BSR set to: 0
 31365                           ;incstack = 0
 31366                           ;setStatusLed@FLiMLED stored from wreg
 31367  00A58E  0100               	movlb	0	; () banked
 31368  00A590  6F71               	movwf	setStatusLed@FLiMLED& (0+255),b
 31369                           
 31370                           ;StatusLeds.c: 99: if (FLiMLED)
 31371  00A592  0100               	movlb	0	; () banked
 31372  00A594  5171               	movf	setStatusLed@FLiMLED& (0+255),w,b
 31373  00A596  B4D8               	btfsc	status,2,c
 31374  00A598  D003               	goto	l19617
 31375                           
 31376                           ; BSR set to: 0
 31377                           ;StatusLeds.c: 100: setFLiMLed();
 31378  00A59A  EC4E  F053         	call	_setFLiMLed	;wreg free
 31379  00A59E  0012               	return	
 31380  00A5A0                     l19617:
 31381                           
 31382                           ; BSR set to: 0
 31383                           ;StatusLeds.c: 101: else;StatusLeds.c: 102: setSLiMLed();
 31384  00A5A0  EC48  F053         	call	_setSLiMLed	;wreg free
 31385                           
 31386                           ; BSR set to: 1
 31387  00A5A4  0012               	return		;funcret
 31388  00A5A6                     __end_of_setStatusLed:
 31389                           	callstack 0
 31390                           
 31391 ;; *************** function _setSLiMLed *****************
 31392 ;; Defined at:
 31393 ;;		line 77 in file "../../github/CBUSlib/StatusLeds.c"
 31394 ;; Parameters:    Size  Location     Type
 31395 ;;		None
 31396 ;; Auto vars:     Size  Location     Type
 31397 ;;		None
 31398 ;; Return value:  Size  Location     Type
 31399 ;;                  1    wreg      void 
 31400 ;; Registers used:
 31401 ;;		wreg, status,2
 31402 ;; Tracked objects:
 31403 ;;		On entry : 3F/0
 31404 ;;		On exit  : 3F/1
 31405 ;;		Unchanged: 0/0
 31406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31411 ;;Total ram usage:        0 bytes
 31412 ;; Hardware stack levels used: 1
 31413 ;; Hardware stack levels required when called: 8
 31414 ;; This function calls:
 31415 ;;		Nothing
 31416 ;; This function is called by:
 31417 ;;		_FLiMSWCheck
 31418 ;;		_setStatusLed
 31419 ;; This function uses a non-reentrant model
 31420 ;;
 31421                           
 31422                           	psect	text151
 31423  00A690                     __ptext151:
 31424                           	callstack 0
 31425  00A690                     _setSLiMLed:
 31426                           	callstack 18
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;StatusLeds.c: 79: LATBbits.LATB6 = 0;
 31430                           
 31431                           ; BSR set to: 1
 31432                           ;incstack = 0
 31433  00A690  9C8A               	bcf	138,6,c	;volatile
 31434                           
 31435                           ;StatusLeds.c: 80: LATBbits.LATB7 = 1;
 31436  00A692  8E8A               	bsf	138,7,c	;volatile
 31437                           
 31438                           ; BSR set to: 0
 31439                           ;StatusLeds.c: 81: flashState = flNone;
 31440  00A694  0E00               	movlw	0
 31441  00A696  0101               	movlb	1	; () banked
 31442  00A698  6FD3               	movwf	_flashState& (0+255),b
 31443                           
 31444                           ; BSR set to: 1
 31445  00A69A  0012               	return		;funcret
 31446  00A69C                     __end_of_setSLiMLed:
 31447                           	callstack 0
 31448                           
 31449 ;; *************** function _setFLiMLed *****************
 31450 ;; Defined at:
 31451 ;;		line 86 in file "../../github/CBUSlib/StatusLeds.c"
 31452 ;; Parameters:    Size  Location     Type
 31453 ;;		None
 31454 ;; Auto vars:     Size  Location     Type
 31455 ;;		None
 31456 ;; Return value:  Size  Location     Type
 31457 ;;                  1    wreg      void 
 31458 ;; Registers used:
 31459 ;;		wreg, status,2
 31460 ;; Tracked objects:
 31461 ;;		On entry : 3F/0
 31462 ;;		On exit  : 3F/1
 31463 ;;		Unchanged: 0/0
 31464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31469 ;;Total ram usage:        0 bytes
 31470 ;; Hardware stack levels used: 1
 31471 ;; Hardware stack levels required when called: 8
 31472 ;; This function calls:
 31473 ;;		Nothing
 31474 ;; This function is called by:
 31475 ;;		_doSnn
 31476 ;;		_setStatusLed
 31477 ;; This function uses a non-reentrant model
 31478 ;;
 31479                           
 31480                           	psect	text152
 31481  00A69C                     __ptext152:
 31482                           	callstack 0
 31483  00A69C                     _setFLiMLed:
 31484                           	callstack 18
 31485                           
 31486                           ; BSR set to: 0
 31487                           ;StatusLeds.c: 88: LATBbits.LATB6 = 1;
 31488                           
 31489                           ; BSR set to: 1
 31490                           ;incstack = 0
 31491  00A69C  8C8A               	bsf	138,6,c	;volatile
 31492                           
 31493                           ;StatusLeds.c: 89: LATBbits.LATB7 = 0;
 31494  00A69E  9E8A               	bcf	138,7,c	;volatile
 31495                           
 31496                           ; BSR set to: 0
 31497                           ;StatusLeds.c: 90: flashState = flNone;
 31498  00A6A0  0E00               	movlw	0
 31499  00A6A2  0101               	movlb	1	; () banked
 31500  00A6A4  6FD3               	movwf	_flashState& (0+255),b
 31501                           
 31502                           ; BSR set to: 1
 31503  00A6A6  0012               	return		;funcret
 31504  00A6A8                     __end_of_setFLiMLed:
 31505                           	callstack 0
 31506                           
 31507 ;; *************** function _requestNodeNumber *****************
 31508 ;; Defined at:
 31509 ;;		line 272 in file "../../github/CBUSlib/FliM.c"
 31510 ;; Parameters:    Size  Location     Type
 31511 ;;		None
 31512 ;; Auto vars:     Size  Location     Type
 31513 ;;  local_cbusMs    9   56[BANK0 ] unsigned char [9]
 31514 ;; Return value:  Size  Location     Type
 31515 ;;                  1    wreg      void 
 31516 ;; Registers used:
 31517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31518 ;; Tracked objects:
 31519 ;;		On entry : 0/0
 31520 ;;		On exit  : 3F/0
 31521 ;;		Unchanged: 0/0
 31522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31524 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31526 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31527 ;;Total ram usage:        9 bytes
 31528 ;; Hardware stack levels used: 1
 31529 ;; Hardware stack levels required when called: 14
 31530 ;; This function calls:
 31531 ;;		_cbusSendOpcNN
 31532 ;; This function is called by:
 31533 ;;		_FLiMSWCheck
 31534 ;; This function uses a non-reentrant model
 31535 ;;
 31536                           
 31537                           	psect	text153
 31538  00A5A6                     __ptext153:
 31539                           	callstack 0
 31540  00A5A6                     _requestNodeNumber:
 31541                           	callstack 15
 31542                           
 31543                           ;FliM.c: 274: BYTE local_cbusMsg[d0+3];;FliM.c: 277: cbusSendOpcNN(0xFF, 0x50, -1, local
      +                          _cbusMsg);
 31544                           
 31545                           ; BSR set to: 1
 31546                           ;incstack = 0
 31547  00A5A6  0E50               	movlw	80
 31548  00A5A8  0100               	movlb	0	; () banked
 31549  00A5AA  6F93               	movwf	cbusSendOpcNN@opc& (0+255),b
 31550  00A5AC  0EFF               	movlw	255
 31551  00A5AE  6F95               	movwf	(cbusSendOpcNN@nodeID+1)& (0+255),b
 31552  00A5B0  6994               	setf	cbusSendOpcNN@nodeID& (0+255),b
 31553  00A5B2  0E98               	movlw	low requestNodeNumber@local_cbusMsg
 31554  00A5B4  6F96               	movwf	cbusSendOpcNN@msg& (0+255),b
 31555  00A5B6  0EFF               	movlw	255
 31556  00A5B8  ECFD  F051         	call	_cbusSendOpcNN
 31557                           
 31558                           ; BSR set to: 0
 31559  00A5BC  0012               	return		;funcret
 31560  00A5BE                     __end_of_requestNodeNumber:
 31561                           	callstack 0
 31562                           
 31563 ;; *************** function _SaveNodeDetails *****************
 31564 ;; Defined at:
 31565 ;;		line 767 in file "../../github/CBUSlib/FliM.c"
 31566 ;; Parameters:    Size  Location     Type
 31567 ;;  nodeID          2   56[BANK0 ] unsigned int 
 31568 ;;  flimState       1   58[BANK0 ] enum E12263
 31569 ;; Auto vars:     Size  Location     Type
 31570 ;;		None
 31571 ;; Return value:  Size  Location     Type
 31572 ;;                  1    wreg      void 
 31573 ;; Registers used:
 31574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31575 ;; Tracked objects:
 31576 ;;		On entry : 3F/0
 31577 ;;		On exit  : 3F/0
 31578 ;;		Unchanged: 0/0
 31579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31580 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31583 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31584 ;;Total ram usage:        3 bytes
 31585 ;; Hardware stack levels used: 1
 31586 ;; Hardware stack levels required when called: 16
 31587 ;; This function calls:
 31588 ;;		_ee_write
 31589 ;;		_ee_write_short
 31590 ;;		_rebuildHashtable
 31591 ;; This function is called by:
 31592 ;;		_FLiMSWCheck
 31593 ;;		_doSnn
 31594 ;; This function uses a non-reentrant model
 31595 ;;
 31596                           
 31597                           	psect	text154
 31598  00A35E                     __ptext154:
 31599                           	callstack 0
 31600  00A35E                     _SaveNodeDetails:
 31601                           	callstack 10
 31602                           
 31603                           ; BSR set to: 0
 31604                           ;FliM.c: 769: ee_write_short((WORD)((WORD*)(0x3FF-3)), nodeID);
 31605                           
 31606                           ; BSR set to: 0
 31607                           ;incstack = 0
 31608  00A35E  0E03               	movlw	3
 31609  00A360  6F78               	movwf	(ee_write_short@addr+1)& (0+255),b
 31610  00A362  0EFC               	movlw	252
 31611  00A364  6F77               	movwf	ee_write_short@addr& (0+255),b
 31612  00A366  C098  F079         	movff	SaveNodeDetails@nodeID,ee_write_short@data
 31613  00A36A  C099  F07A         	movff	SaveNodeDetails@nodeID+1,ee_write_short@data+1
 31614  00A36E  EC6D  F051         	call	_ee_write_short	;wreg free
 31615                           
 31616                           ; BSR set to: 0
 31617                           ;FliM.c: 770: ee_write((WORD)((BYTE*)(0x3FF-4)), flimState);
 31618  00A372  0E03               	movlw	3
 31619  00A374  6F74               	movwf	(ee_write@addr+1)& (0+255),b
 31620  00A376  0EFB               	movlw	251
 31621  00A378  6F73               	movwf	ee_write@addr& (0+255),b
 31622  00A37A  C09A  F075         	movff	SaveNodeDetails@flimState,ee_write@data
 31623  00A37E  EC17  F04D         	call	_ee_write	;wreg free
 31624                           
 31625                           ; BSR set to: 0
 31626                           ;FliM.c: 772: rebuildHashtable();
 31627  00A382  ECB2  F034         	call	_rebuildHashtable	;wreg free
 31628                           
 31629                           ; BSR set to: 0
 31630  00A386  0012               	return		;funcret
 31631  00A388                     __end_of_SaveNodeDetails:
 31632                           	callstack 0
 31633                           
 31634 ;; *************** function _rebuildHashtable *****************
 31635 ;; Defined at:
 31636 ;;		line 905 in file "../../github/CBUSlib/events.c"
 31637 ;; Parameters:    Size  Location     Type
 31638 ;;		None
 31639 ;; Auto vars:     Size  Location     Type
 31640 ;;  e               1    0        unsigned char 
 31641 ;;  a               2   50[BANK0 ] int 
 31642 ;;  tableIndex      1   55[BANK0 ] unsigned char 
 31643 ;;  chainIdx        1   54[BANK0 ] unsigned char 
 31644 ;;  happening       1   53[BANK0 ] unsigned char 
 31645 ;;  hash            1   52[BANK0 ] unsigned char 
 31646 ;; Return value:  Size  Location     Type
 31647 ;;                  1    wreg      void 
 31648 ;; Registers used:
 31649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31650 ;; Tracked objects:
 31651 ;;		On entry : 3F/0
 31652 ;;		On exit  : 3F/0
 31653 ;;		Unchanged: 0/0
 31654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31656 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31657 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31658 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31659 ;;Total ram usage:       10 bytes
 31660 ;; Hardware stack levels used: 1
 31661 ;; Hardware stack levels required when called: 15
 31662 ;; This function calls:
 31663 ;;		_getEN
 31664 ;;		_getEv
 31665 ;;		_getHash
 31666 ;;		_getNN
 31667 ;;		_validStart
 31668 ;; This function is called by:
 31669 ;;		_APP_addEvent
 31670 ;;		_eventsInit
 31671 ;;		_clearAllEvents
 31672 ;;		_removeTableEntry
 31673 ;;		_addEvent
 31674 ;;		_SaveNodeDetails
 31675 ;;		_deleteHappeningRange
 31676 ;;		_deleteActionRange
 31677 ;; This function uses a non-reentrant model
 31678 ;;
 31679                           
 31680                           	psect	text155
 31681  006964                     __ptext155:
 31682                           	callstack 0
 31683  006964                     _rebuildHashtable:
 31684                           	callstack 11
 31685                           
 31686                           ; BSR set to: 0
 31687                           ;events.c: 907: unsigned char hash;;events.c: 908: unsigned char chainIdx;;events.c: 909
      +                          : unsigned char tableIndex;;events.c: 910: int a;;events.c: 913: unsigned char happening
      +                          ;;events.c: 914: for (happening=0; happening<(8U + 16U * 4U); happening++) {
 31688                           
 31689                           ; BSR set to: 0
 31690                           ;incstack = 0
 31691  006964  0E00               	movlw	0
 31692  006966  6F95               	movwf	rebuildHashtable@happening& (0+255),b
 31693  006968                     l17749:
 31694                           
 31695                           ; BSR set to: 0
 31696                           ;events.c: 915: happening2Event[happening] = 0xff;
 31697  006968  0E00               	movlw	low _happening2Event
 31698  00696A  2595               	addwf	rebuildHashtable@happening& (0+255),w,b
 31699  00696C  6ED9               	movwf	fsr2l,c
 31700  00696E  6ADA               	clrf	fsr2h,c
 31701  006970  0E03               	movlw	high _happening2Event
 31702  006972  22DA               	addwfc	fsr2h,f,c
 31703  006974  0EFF               	movlw	255
 31704  006976  6EDF               	movwf	indf2,c
 31705                           
 31706                           ; BSR set to: 0
 31707  006978  2B95               	incf	rebuildHashtable@happening& (0+255),f,b
 31708                           
 31709                           ; BSR set to: 0
 31710  00697A  0E47               	movlw	71
 31711  00697C  6595               	cpfsgt	rebuildHashtable@happening& (0+255),b
 31712  00697E  D7F4               	goto	l17749
 31713                           
 31714                           ; BSR set to: 0
 31715                           ;events.c: 916: };events.c: 918: for (hash=0; hash<32U; hash++) {
 31716  006980  0E00               	movlw	0
 31717  006982  6F94               	movwf	rebuildHashtable@hash& (0+255),b
 31718  006984                     l17761:
 31719                           
 31720                           ; BSR set to: 0
 31721                           ;events.c: 919: for (chainIdx=0; chainIdx < 20U; chainIdx++) {
 31722  006984  0E00               	movlw	0
 31723  006986  6F96               	movwf	rebuildHashtable@chainIdx& (0+255),b
 31724  006988                     l17767:
 31725                           
 31726                           ; BSR set to: 0
 31727                           ;events.c: 920: eventChains[hash][chainIdx] = 0xff;
 31728  006988  5194               	movf	rebuildHashtable@hash& (0+255),w,b
 31729  00698A  0D14               	mullw	20
 31730  00698C  0E00               	movlw	low _eventChains
 31731  00698E  6F8E               	movwf	??_rebuildHashtable& (0+255),b
 31732  006990  0E07               	movlw	high _eventChains
 31733  006992  6F8F               	movwf	(??_rebuildHashtable+1)& (0+255),b
 31734  006994  50F3               	movf	243,w,c
 31735  006996  278E               	addwf	??_rebuildHashtable& (0+255),f,b
 31736  006998  50F4               	movf	244,w,c
 31737  00699A  238F               	addwfc	(??_rebuildHashtable+1)& (0+255),f,b
 31738  00699C  5196               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 31739  00699E  258E               	addwf	??_rebuildHashtable& (0+255),w,b
 31740  0069A0  6ED9               	movwf	fsr2l,c
 31741  0069A2  0E00               	movlw	0
 31742  0069A4  218F               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 31743  0069A6  6EDA               	movwf	fsr2h,c
 31744  0069A8  0EFF               	movlw	255
 31745  0069AA  6EDF               	movwf	indf2,c
 31746                           
 31747                           ; BSR set to: 0
 31748  0069AC  2B96               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 31749                           
 31750                           ; BSR set to: 0
 31751  0069AE  0E13               	movlw	19
 31752  0069B0  6596               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 31753  0069B2  D7EA               	goto	l17767
 31754                           
 31755                           ; BSR set to: 0
 31756  0069B4  2B94               	incf	rebuildHashtable@hash& (0+255),f,b
 31757                           
 31758                           ; BSR set to: 0
 31759  0069B6  0E1F               	movlw	31
 31760  0069B8  6594               	cpfsgt	rebuildHashtable@hash& (0+255),b
 31761  0069BA  D7E4               	goto	l17761
 31762                           
 31763                           ; BSR set to: 0
 31764                           ;events.c: 921: };events.c: 922: };events.c: 925: for (tableIndex=0; tableIndex<255U; ta
      +                          bleIndex++) {
 31765  0069BC  0E00               	movlw	0
 31766  0069BE  6F97               	movwf	rebuildHashtable@tableIndex& (0+255),b
 31767  0069C0                     l17783:
 31768                           
 31769                           ; BSR set to: 0
 31770                           ;events.c: 926: if (validStart(tableIndex)) {
 31771  0069C0  5197               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 31772  0069C2  ECF8  F050         	call	_validStart
 31773  0069C6  0900               	iorlw	0
 31774  0069C8  B4D8               	btfsc	status,2,c
 31775  0069CA  D066               	goto	u21740
 31776                           
 31777                           ; BSR set to: 0
 31778                           ;events.c: 927: unsigned char e;;events.c: 932: a = getEv(tableIndex, 0);
 31779  0069CC  0E00               	movlw	0
 31780  0069CE  6F81               	movwf	getEv@evNum& (0+255),b
 31781  0069D0  5197               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 31782  0069D2  EC22  F038         	call	_getEv
 31783  0069D6  C081  F092         	movff	?_getEv,rebuildHashtable@a
 31784  0069DA  C082  F093         	movff	?_getEv+1,rebuildHashtable@a+1
 31785                           
 31786                           ; BSR set to: 0
 31787                           ;events.c: 933: if (a >= 0) {
 31788  0069DE  BF93               	btfsc	(rebuildHashtable@a+1)& (0+255),7,b
 31789  0069E0  D01E               	goto	l17797
 31790                           
 31791                           ; BSR set to: 0
 31792                           ;events.c: 934: happening = (unsigned char)a;
 31793  0069E2  C092  F095         	movff	rebuildHashtable@a,rebuildHashtable@happening
 31794                           
 31795                           ; BSR set to: 0
 31796                           ;events.c: 935: if ((happening >= 1U) && (happening-1U< (8U + 16U * 4U))) {
 31797  0069E6  5195               	movf	rebuildHashtable@happening& (0+255),w,b
 31798  0069E8  B4D8               	btfsc	status,2,c
 31799  0069EA  D019               	goto	l17797
 31800                           
 31801                           ; BSR set to: 0
 31802  0069EC  0EFF               	movlw	255
 31803  0069EE  6F8E               	movwf	??_rebuildHashtable& (0+255),b
 31804  0069F0  0EFF               	movlw	255
 31805  0069F2  6F8F               	movwf	(??_rebuildHashtable+1)& (0+255),b
 31806  0069F4  5195               	movf	rebuildHashtable@happening& (0+255),w,b
 31807  0069F6  6F90               	movwf	(??_rebuildHashtable+2)& (0+255),b
 31808  0069F8  6B91               	clrf	(??_rebuildHashtable+3)& (0+255),b
 31809  0069FA  518E               	movf	??_rebuildHashtable& (0+255),w,b
 31810  0069FC  2790               	addwf	(??_rebuildHashtable+2)& (0+255),f,b
 31811  0069FE  518F               	movf	(??_rebuildHashtable+1)& (0+255),w,b
 31812  006A00  2391               	addwfc	(??_rebuildHashtable+3)& (0+255),f,b
 31813  006A02  5191               	movf	(??_rebuildHashtable+3)& (0+255),w,b
 31814  006A04  E10C               	bnz	l17797
 31815  006A06  0E48               	movlw	72
 31816  006A08  5D90               	subwf	(??_rebuildHashtable+2)& (0+255),w,b
 31817  006A0A  B0D8               	btfsc	status,0,c
 31818  006A0C  D008               	goto	l17797
 31819                           
 31820                           ; BSR set to: 0
 31821                           ;events.c: 936: happening2Event[happening-1U] = tableIndex;
 31822  006A0E  0EFF               	movlw	low (_happening2Event+65535)
 31823  006A10  2595               	addwf	rebuildHashtable@happening& (0+255),w,b
 31824  006A12  6ED9               	movwf	fsr2l,c
 31825  006A14  6ADA               	clrf	fsr2h,c
 31826  006A16  0E02               	movlw	high (_happening2Event+65535)
 31827  006A18  22DA               	addwfc	fsr2h,f,c
 31828  006A1A  C097  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 31829  006A1E                     l17797:
 31830                           
 31831                           ; BSR set to: 0
 31832                           ;events.c: 937: };events.c: 938: };events.c: 940: hash = getHash(getNN(tableIndex), getE
      +                          N(tableIndex));
 31833  006A1E  5197               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 31834  006A20  ECA8  F043         	call	_getNN
 31835  006A24  C07D  F088         	movff	?_getNN,getHash@nn
 31836  006A28  C07E  F089         	movff	?_getNN+1,getHash@nn+1
 31837  006A2C  5197               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 31838  006A2E  EC19  F048         	call	_getEN
 31839  006A32  C07D  F08A         	movff	?_getEN,getHash@en
 31840  006A36  C07E  F08B         	movff	?_getEN+1,getHash@en+1
 31841  006A3A  EC74  F052         	call	_getHash	;wreg free
 31842  006A3E  6F94               	movwf	rebuildHashtable@hash& (0+255),b
 31843                           
 31844                           ; BSR set to: 0
 31845                           ;events.c: 942: for (chainIdx=0; chainIdx<20U; chainIdx++) {
 31846  006A40  0E00               	movlw	0
 31847  006A42  6F96               	movwf	rebuildHashtable@chainIdx& (0+255),b
 31848  006A44                     l17805:
 31849                           
 31850                           ; BSR set to: 0
 31851                           ;events.c: 943: if (eventChains[hash][chainIdx] == 0xff) {
 31852  006A44  5194               	movf	rebuildHashtable@hash& (0+255),w,b
 31853  006A46  0D14               	mullw	20
 31854  006A48  0E00               	movlw	low _eventChains
 31855  006A4A  6F8E               	movwf	??_rebuildHashtable& (0+255),b
 31856  006A4C  0E07               	movlw	high _eventChains
 31857  006A4E  6F8F               	movwf	(??_rebuildHashtable+1)& (0+255),b
 31858  006A50  50F3               	movf	243,w,c
 31859  006A52  278E               	addwf	??_rebuildHashtable& (0+255),f,b
 31860  006A54  50F4               	movf	244,w,c
 31861  006A56  238F               	addwfc	(??_rebuildHashtable+1)& (0+255),f,b
 31862  006A58  5196               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 31863  006A5A  258E               	addwf	??_rebuildHashtable& (0+255),w,b
 31864  006A5C  6ED9               	movwf	fsr2l,c
 31865  006A5E  0E00               	movlw	0
 31866  006A60  218F               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 31867  006A62  6EDA               	movwf	fsr2h,c
 31868  006A64  28DE               	incf	postinc2,w,c
 31869  006A66  A4D8               	btfss	status,2,c
 31870  006A68  D013               	goto	l17809
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;events.c: 945: eventChains[hash][chainIdx] = tableIndex;
 31874  006A6A  5194               	movf	rebuildHashtable@hash& (0+255),w,b
 31875  006A6C  0D14               	mullw	20
 31876  006A6E  0E00               	movlw	low _eventChains
 31877  006A70  6F8E               	movwf	??_rebuildHashtable& (0+255),b
 31878  006A72  0E07               	movlw	high _eventChains
 31879  006A74  6F8F               	movwf	(??_rebuildHashtable+1)& (0+255),b
 31880  006A76  50F3               	movf	243,w,c
 31881  006A78  278E               	addwf	??_rebuildHashtable& (0+255),f,b
 31882  006A7A  50F4               	movf	244,w,c
 31883  006A7C  238F               	addwfc	(??_rebuildHashtable+1)& (0+255),f,b
 31884  006A7E  5196               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 31885  006A80  258E               	addwf	??_rebuildHashtable& (0+255),w,b
 31886  006A82  6ED9               	movwf	fsr2l,c
 31887  006A84  0E00               	movlw	0
 31888  006A86  218F               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 31889  006A88  6EDA               	movwf	fsr2h,c
 31890  006A8A  C097  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 31891                           
 31892                           ;events.c: 946: break;
 31893  006A8E  D004               	goto	u21740
 31894  006A90                     l17809:
 31895                           
 31896                           ; BSR set to: 0
 31897  006A90  2B96               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 31898                           
 31899                           ; BSR set to: 0
 31900  006A92  0E13               	movlw	19
 31901  006A94  6596               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 31902  006A96  D7D6               	goto	l17805
 31903  006A98                     u21740:
 31904                           
 31905                           ; BSR set to: 0
 31906  006A98  2B97               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 31907                           
 31908                           ; BSR set to: 0
 31909  006A9A  2997               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 31910  006A9C  B4D8               	btfsc	status,2,c
 31911  006A9E  0012               	return	
 31912  006AA0  D78F               	goto	l17783
 31913  006AA2                     __end_of_rebuildHashtable:
 31914                           	callstack 0
 31915                           
 31916 ;; *************** function _getNN *****************
 31917 ;; Defined at:
 31918 ;;		line 763 in file "../../github/CBUSlib/events.c"
 31919 ;; Parameters:    Size  Location     Type
 31920 ;;  tableIndex      1    wreg     unsigned char 
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;  tableIndex      1   39[BANK0 ] unsigned char 
 31923 ;;  lo              2   36[BANK0 ] unsigned int 
 31924 ;;  hi              2   34[BANK0 ] unsigned int 
 31925 ;;  f               1   38[BANK0 ] struct .
 31926 ;; Return value:  Size  Location     Type
 31927 ;;                  2   29[BANK0 ] unsigned int 
 31928 ;; Registers used:
 31929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31930 ;; Tracked objects:
 31931 ;;		On entry : 3F/0
 31932 ;;		On exit  : 3F/0
 31933 ;;		Unchanged: 0/0
 31934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31938 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31939 ;;Total ram usage:       11 bytes
 31940 ;; Hardware stack levels used: 1
 31941 ;; Hardware stack levels required when called: 13
 31942 ;; This function calls:
 31943 ;;		_readFlashBlock
 31944 ;; This function is called by:
 31945 ;;		_doNenrd
 31946 ;;		_findEvent
 31947 ;;		_rebuildHashtable
 31948 ;;		_getProducedEvent
 31949 ;;		_doTimedResponse
 31950 ;; This function uses a non-reentrant model
 31951 ;;
 31952                           
 31953                           	psect	text156
 31954  008750                     __ptext156:
 31955                           	callstack 0
 31956  008750                     _getNN:
 31957                           	callstack 13
 31958                           
 31959                           ; BSR set to: 0
 31960                           ;incstack = 0
 31961                           ;getNN@tableIndex stored from wreg
 31962  008750  6F87               	movwf	getNN@tableIndex& (0+255),b
 31963                           
 31964                           ;events.c: 764: WORD hi;;events.c: 765: WORD lo;;events.c: 766: EventTableFlags f;;event
      +                          s.c: 768: f.asByte = readFlashBlock((WORD)(&(eventTable[tableIndex].flags.asByte)));
 31965  008752  0100               	movlb	0	; () banked
 31966  008754  5187               	movf	getNN@tableIndex& (0+255),w,b
 31967  008756  0D10               	mullw	16
 31968  008758  CFF3 F07F          	movff	prodl,??_getNN
 31969  00875C  CFF4 F080          	movff	prodh,??_getNN+1
 31970  008760  51E9               	movf	_eventTable& (0+255),w,b
 31971  008762  257F               	addwf	??_getNN& (0+255),w,b
 31972  008764  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 31973  008766  51EA               	movf	(_eventTable+1)& (0+255),w,b
 31974  008768  2180               	addwfc	(??_getNN+1)& (0+255),w,b
 31975  00876A  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 31976  00876C  EC8D  F03D         	call	_readFlashBlock	;wreg free
 31977  008770  6F86               	movwf	getNN@f& (0+255),b
 31978                           
 31979                           ; BSR set to: 0
 31980                           ;events.c: 769: if (f.forceOwnNN) {
 31981  008772  AD86               	btfss	getNN@f& (0+255),6,b
 31982  008774  D005               	goto	l17693
 31983                           
 31984                           ; BSR set to: 0
 31985                           ;events.c: 770: return nodeID;
 31986  008776  C001  F07D         	movff	_nodeID,?_getNN
 31987  00877A  C002  F07E         	movff	_nodeID+1,?_getNN+1
 31988  00877E  0012               	return	
 31989  008780                     l17693:
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;events.c: 771: };events.c: 772: lo=readFlashBlock((WORD)(&(eventTable[tableIndex].event
      +                          .NN)));
 31993  008780  5187               	movf	getNN@tableIndex& (0+255),w,b
 31994  008782  0D10               	mullw	16
 31995  008784  CFF3 F07F          	movff	prodl,??_getNN
 31996  008788  CFF4 F080          	movff	prodh,??_getNN+1
 31997  00878C  51E9               	movf	_eventTable& (0+255),w,b
 31998  00878E  277F               	addwf	??_getNN& (0+255),f,b
 31999  008790  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32000  008792  2380               	addwfc	(??_getNN+1)& (0+255),f,b
 32001  008794  0E02               	movlw	2
 32002  008796  257F               	addwf	??_getNN& (0+255),w,b
 32003  008798  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32004  00879A  0E00               	movlw	0
 32005  00879C  2180               	addwfc	(??_getNN+1)& (0+255),w,b
 32006  00879E  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32007  0087A0  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32008  0087A4  6F81               	movwf	(??_getNN+2)& (0+255),b
 32009  0087A6  5181               	movf	(??_getNN+2)& (0+255),w,b
 32010  0087A8  6F84               	movwf	getNN@lo& (0+255),b
 32011  0087AA  6B85               	clrf	(getNN@lo+1)& (0+255),b
 32012                           
 32013                           ;events.c: 773: hi = readFlashBlock((WORD)(&(eventTable[tableIndex].event.NN))+1);
 32014  0087AC  5187               	movf	getNN@tableIndex& (0+255),w,b
 32015  0087AE  0D10               	mullw	16
 32016  0087B0  CFF3 F07F          	movff	prodl,??_getNN
 32017  0087B4  CFF4 F080          	movff	prodh,??_getNN+1
 32018  0087B8  51E9               	movf	_eventTable& (0+255),w,b
 32019  0087BA  277F               	addwf	??_getNN& (0+255),f,b
 32020  0087BC  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32021  0087BE  2380               	addwfc	(??_getNN+1)& (0+255),f,b
 32022  0087C0  0E03               	movlw	3
 32023  0087C2  257F               	addwf	??_getNN& (0+255),w,b
 32024  0087C4  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32025  0087C6  0E00               	movlw	0
 32026  0087C8  2180               	addwfc	(??_getNN+1)& (0+255),w,b
 32027  0087CA  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32028  0087CC  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32029  0087D0  6F81               	movwf	(??_getNN+2)& (0+255),b
 32030  0087D2  5181               	movf	(??_getNN+2)& (0+255),w,b
 32031  0087D4  6F82               	movwf	getNN@hi& (0+255),b
 32032  0087D6  6B83               	clrf	(getNN@hi+1)& (0+255),b
 32033                           
 32034                           ; BSR set to: 0
 32035                           ;events.c: 774: return lo | (hi << 8);
 32036  0087D8  5182               	movf	getNN@hi& (0+255),w,b
 32037  0087DA  6F80               	movwf	(??_getNN+1)& (0+255),b
 32038  0087DC  6B7F               	clrf	??_getNN& (0+255),b
 32039  0087DE  5184               	movf	getNN@lo& (0+255),w,b
 32040  0087E0  117F               	iorwf	??_getNN& (0+255),w,b
 32041  0087E2  6F7D               	movwf	?_getNN& (0+255),b
 32042  0087E4  5185               	movf	(getNN@lo+1)& (0+255),w,b
 32043  0087E6  1180               	iorwf	(??_getNN+1)& (0+255),w,b
 32044  0087E8  6F7E               	movwf	(?_getNN+1)& (0+255),b
 32045                           
 32046                           ; BSR set to: 0
 32047  0087EA  0012               	return		;funcret
 32048  0087EC                     __end_of_getNN:
 32049                           	callstack 0
 32050                           
 32051 ;; *************** function _getHash *****************
 32052 ;; Defined at:
 32053 ;;		line 891 in file "../../github/CBUSlib/events.c"
 32054 ;; Parameters:    Size  Location     Type
 32055 ;;  nn              2   40[BANK0 ] unsigned int 
 32056 ;;  en              2   42[BANK0 ] unsigned int 
 32057 ;; Auto vars:     Size  Location     Type
 32058 ;;  hash            1   45[BANK0 ] unsigned char 
 32059 ;; Return value:  Size  Location     Type
 32060 ;;                  1    wreg      unsigned char 
 32061 ;; Registers used:
 32062 ;;		wreg, status,2, status,0, prodl, prodh
 32063 ;; Tracked objects:
 32064 ;;		On entry : 3F/0
 32065 ;;		On exit  : 3F/0
 32066 ;;		Unchanged: 0/0
 32067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32072 ;;Total ram usage:        6 bytes
 32073 ;; Hardware stack levels used: 1
 32074 ;; Hardware stack levels required when called: 8
 32075 ;; This function calls:
 32076 ;;		Nothing
 32077 ;; This function is called by:
 32078 ;;		_findEvent
 32079 ;;		_rebuildHashtable
 32080 ;; This function uses a non-reentrant model
 32081 ;;
 32082                           
 32083                           	psect	text157
 32084  00A4E8                     __ptext157:
 32085                           	callstack 0
 32086  00A4E8                     _getHash:
 32087                           	callstack 17
 32088                           
 32089                           ; BSR set to: 0
 32090                           ;events.c: 892: unsigned char hash;;events.c: 894: hash = nn ^ (nn >> 8U);
 32091                           
 32092                           ; BSR set to: 0
 32093                           ;incstack = 0
 32094  00A4E8  5189               	movf	(getHash@nn+1)& (0+255),w,b
 32095  00A4EA  1988               	xorwf	getHash@nn& (0+255),w,b
 32096  00A4EC  6F8D               	movwf	getHash@hash& (0+255),b
 32097                           
 32098                           ; BSR set to: 0
 32099                           ;events.c: 895: hash = 7U*hash + (en ^ (en>>8U));
 32100  00A4EE  518B               	movf	(getHash@en+1)& (0+255),w,b
 32101  00A4F0  198A               	xorwf	getHash@en& (0+255),w,b
 32102  00A4F2  6F8C               	movwf	??_getHash& (0+255),b
 32103  00A4F4  518D               	movf	getHash@hash& (0+255),w,b
 32104  00A4F6  0D07               	mullw	7
 32105  00A4F8  50F3               	movf	243,w,c
 32106  00A4FA  258C               	addwf	??_getHash& (0+255),w,b
 32107  00A4FC  6F8D               	movwf	getHash@hash& (0+255),b
 32108                           
 32109                           ; BSR set to: 0
 32110                           ;events.c: 897: hash %= 32U;
 32111  00A4FE  0E1F               	movlw	31
 32112  00A500  178D               	andwf	getHash@hash& (0+255),f,b
 32113                           
 32114                           ; BSR set to: 0
 32115                           ;events.c: 898: return hash;
 32116  00A502  518D               	movf	getHash@hash& (0+255),w,b
 32117                           
 32118                           ; BSR set to: 0
 32119  00A504  0012               	return		;funcret
 32120  00A506                     __end_of_getHash:
 32121                           	callstack 0
 32122                           
 32123 ;; *************** function _getEv *****************
 32124 ;; Defined at:
 32125 ;;		line 665 in file "../../github/CBUSlib/events.c"
 32126 ;; Parameters:    Size  Location     Type
 32127 ;;  tableIndex      1    wreg     unsigned char 
 32128 ;;  evNum           1   33[BANK0 ] unsigned char 
 32129 ;; Auto vars:     Size  Location     Type
 32130 ;;  tableIndex      1   41[BANK0 ] unsigned char 
 32131 ;;  f               1   40[BANK0 ] struct .
 32132 ;; Return value:  Size  Location     Type
 32133 ;;                  2   33[BANK0 ] int 
 32134 ;; Registers used:
 32135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32136 ;; Tracked objects:
 32137 ;;		On entry : 3F/0
 32138 ;;		On exit  : 3F/0
 32139 ;;		Unchanged: 0/0
 32140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32143 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32144 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32145 ;;Total ram usage:        9 bytes
 32146 ;; Hardware stack levels used: 1
 32147 ;; Hardware stack levels required when called: 14
 32148 ;; This function calls:
 32149 ;;		_readFlashBlock
 32150 ;;		_validStart
 32151 ;; This function is called by:
 32152 ;;		_initialise
 32153 ;;		_rebuildHashtable
 32154 ;;		_doReval
 32155 ;;		_doReqev
 32156 ;;		_doAreq
 32157 ;; This function uses a non-reentrant model
 32158 ;;
 32159                           
 32160                           	psect	text158
 32161  007044                     __ptext158:
 32162                           	callstack 0
 32163  007044                     _getEv:
 32164                           	callstack 11
 32165                           
 32166                           ; BSR set to: 0
 32167                           ;incstack = 0
 32168                           ;getEv@tableIndex stored from wreg
 32169  007044  6F89               	movwf	getEv@tableIndex& (0+255),b
 32170                           
 32171                           ;events.c: 666: EventTableFlags f;;events.c: 667: if ( ! validStart(tableIndex)) {
 32172  007046  0100               	movlb	0	; () banked
 32173  007048  5189               	movf	getEv@tableIndex& (0+255),w,b
 32174  00704A  ECF8  F050         	call	_validStart
 32175  00704E  0900               	iorlw	0
 32176  007050  A4D8               	btfss	status,2,c
 32177  007052  D005               	goto	l17651
 32178  007054                     u21530:
 32179                           
 32180                           ; BSR set to: 0
 32181                           ;events.c: 669: return -7;
 32182  007054  0EFF               	movlw	255
 32183  007056  6F82               	movwf	(?_getEv+1)& (0+255),b
 32184  007058  0EF9               	movlw	249
 32185  00705A  6F81               	movwf	?_getEv& (0+255),b
 32186  00705C  0012               	return	
 32187  00705E                     l17651:
 32188                           
 32189                           ; BSR set to: 0
 32190                           ;events.c: 670: };events.c: 671: if (evNum >= 20U) {
 32191  00705E  0E13               	movlw	19
 32192  007060  6581               	cpfsgt	getEv@evNum& (0+255),b
 32193  007062  D005               	goto	l17657
 32194                           
 32195                           ; BSR set to: 0
 32196                           ;events.c: 672: return -6;
 32197  007064  0EFF               	movlw	255
 32198  007066  6F82               	movwf	(?_getEv+1)& (0+255),b
 32199  007068  0EFA               	movlw	250
 32200  00706A  6F81               	movwf	?_getEv& (0+255),b
 32201  00706C  0012               	return	
 32202  00706E                     l17657:
 32203                           
 32204                           ; BSR set to: 0
 32205                           ;events.c: 673: };events.c: 674: f.asByte = readFlashBlock((WORD)(&(eventTable[tableInde
      +                          x].flags.asByte)));
 32206  00706E  5189               	movf	getEv@tableIndex& (0+255),w,b
 32207  007070  0D10               	mullw	16
 32208  007072  CFF3 F083          	movff	prodl,??_getEv
 32209  007076  CFF4 F084          	movff	prodh,??_getEv+1
 32210  00707A  51E9               	movf	_eventTable& (0+255),w,b
 32211  00707C  2583               	addwf	??_getEv& (0+255),w,b
 32212  00707E  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32213  007080  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32214  007082  2184               	addwfc	(??_getEv+1)& (0+255),w,b
 32215  007084  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32216  007086  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32217  00708A  6F88               	movwf	getEv@f& (0+255),b
 32218                           
 32219                           ;events.c: 675: while (evNum >= 10U) {
 32220  00708C  D02E               	goto	l17675
 32221  00708E                     l1919:
 32222                           
 32223                           ; BSR set to: 0
 32224                           ;events.c: 677: if (! f.continued) {
 32225  00708E  B988               	btfsc	getEv@f& (0+255),4,b
 32226  007090  D005               	goto	l17663
 32227  007092                     u21550:
 32228                           
 32229                           ; BSR set to: 0
 32230                           ;events.c: 678: return -5;
 32231  007092  0EFF               	movlw	255
 32232  007094  6F82               	movwf	(?_getEv+1)& (0+255),b
 32233  007096  0EFB               	movlw	251
 32234  007098  6F81               	movwf	?_getEv& (0+255),b
 32235  00709A  0012               	return	
 32236  00709C                     l17663:
 32237                           
 32238                           ; BSR set to: 0
 32239                           ;events.c: 679: };events.c: 680: tableIndex = readFlashBlock((WORD)(&(eventTable[tableIn
      +                          dex].next)));
 32240  00709C  5189               	movf	getEv@tableIndex& (0+255),w,b
 32241  00709E  0D10               	mullw	16
 32242  0070A0  CFF3 F083          	movff	prodl,??_getEv
 32243  0070A4  CFF4 F084          	movff	prodh,??_getEv+1
 32244  0070A8  51E9               	movf	_eventTable& (0+255),w,b
 32245  0070AA  2783               	addwf	??_getEv& (0+255),f,b
 32246  0070AC  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32247  0070AE  2384               	addwfc	(??_getEv+1)& (0+255),f,b
 32248  0070B0  0E01               	movlw	1
 32249  0070B2  2583               	addwf	??_getEv& (0+255),w,b
 32250  0070B4  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32251  0070B6  0E00               	movlw	0
 32252  0070B8  2184               	addwfc	(??_getEv+1)& (0+255),w,b
 32253  0070BA  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32254  0070BC  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32255  0070C0  6F89               	movwf	getEv@tableIndex& (0+255),b
 32256                           
 32257                           ; BSR set to: 0
 32258                           ;events.c: 681: if (tableIndex == 0xff) {
 32259  0070C2  2989               	incf	getEv@tableIndex& (0+255),w,b
 32260  0070C4  B4D8               	btfsc	status,2,c
 32261  0070C6  D7C6               	goto	u21530
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;events.c: 683: };events.c: 684: f.asByte = readFlashBlock((WORD)(&(eventTable[tableInde
      +                          x].flags.asByte)));
 32265  0070C8  5189               	movf	getEv@tableIndex& (0+255),w,b
 32266  0070CA  0D10               	mullw	16
 32267  0070CC  CFF3 F083          	movff	prodl,??_getEv
 32268  0070D0  CFF4 F084          	movff	prodh,??_getEv+1
 32269  0070D4  51E9               	movf	_eventTable& (0+255),w,b
 32270  0070D6  2583               	addwf	??_getEv& (0+255),w,b
 32271  0070D8  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32272  0070DA  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32273  0070DC  2184               	addwfc	(??_getEv+1)& (0+255),w,b
 32274  0070DE  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32275  0070E0  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32276  0070E4  6F88               	movwf	getEv@f& (0+255),b
 32277                           
 32278                           ; BSR set to: 0
 32279                           ;events.c: 685: evNum -= 10U;
 32280  0070E6  0E0A               	movlw	10
 32281  0070E8  5F81               	subwf	getEv@evNum& (0+255),f,b
 32282  0070EA                     l17675:
 32283                           
 32284                           ; BSR set to: 0
 32285  0070EA  0E0A               	movlw	10
 32286  0070EC  6181               	cpfslt	getEv@evNum& (0+255),b
 32287  0070EE  D7CF               	goto	l1919
 32288                           
 32289                           ; BSR set to: 0
 32290                           ;events.c: 686: };events.c: 687: if (evNum+1 > f.eVsUsed) {
 32291  0070F0  5181               	movf	getEv@evNum& (0+255),w,b
 32292  0070F2  6F83               	movwf	??_getEv& (0+255),b
 32293  0070F4  6B84               	clrf	(??_getEv+1)& (0+255),b
 32294  0070F6  0E01               	movlw	1
 32295  0070F8  2783               	addwf	??_getEv& (0+255),f,b
 32296  0070FA  0E00               	movlw	0
 32297  0070FC  2384               	addwfc	(??_getEv+1)& (0+255),f,b
 32298  0070FE  5188               	movf	getEv@f& (0+255),w,b
 32299  007100  0B0F               	andlw	15
 32300  007102  6F85               	movwf	(??_getEv+2)& (0+255),b
 32301  007104  6B86               	clrf	(??_getEv+3)& (0+255),b
 32302  007106  5183               	movf	??_getEv& (0+255),w,b
 32303  007108  5D85               	subwf	(??_getEv+2)& (0+255),w,b
 32304  00710A  5186               	movf	(??_getEv+3)& (0+255),w,b
 32305  00710C  0A80               	xorlw	128
 32306  00710E  6F87               	movwf	(??_getEv+4)& (0+255),b
 32307  007110  5184               	movf	(??_getEv+1)& (0+255),w,b
 32308  007112  0A80               	xorlw	128
 32309  007114  5987               	subwfb	(??_getEv+4)& (0+255),w,b
 32310  007116  A0D8               	btfss	status,0,c
 32311  007118  D7BC               	goto	u21550
 32312                           
 32313                           ; BSR set to: 0
 32314                           ;events.c: 689: };events.c: 691: return readFlashBlock((WORD)(&(eventTable[tableIndex].e
      +                          vs[evNum])));
 32315  00711A  5189               	movf	getEv@tableIndex& (0+255),w,b
 32316  00711C  0D10               	mullw	16
 32317  00711E  CFF3 F083          	movff	prodl,??_getEv
 32318  007122  CFF4 F084          	movff	prodh,??_getEv+1
 32319  007126  5181               	movf	getEv@evNum& (0+255),w,b
 32320  007128  2783               	addwf	??_getEv& (0+255),f,b
 32321  00712A  0E00               	movlw	0
 32322  00712C  2384               	addwfc	(??_getEv+1)& (0+255),f,b
 32323  00712E  51E9               	movf	_eventTable& (0+255),w,b
 32324  007130  2783               	addwf	??_getEv& (0+255),f,b
 32325  007132  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32326  007134  2384               	addwfc	(??_getEv+1)& (0+255),f,b
 32327  007136  0E06               	movlw	6
 32328  007138  2583               	addwf	??_getEv& (0+255),w,b
 32329  00713A  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32330  00713C  0E00               	movlw	0
 32331  00713E  2184               	addwfc	(??_getEv+1)& (0+255),w,b
 32332  007140  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32333  007142  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32334  007146  6F85               	movwf	(??_getEv+2)& (0+255),b
 32335  007148  5185               	movf	(??_getEv+2)& (0+255),w,b
 32336  00714A  6F81               	movwf	?_getEv& (0+255),b
 32337  00714C  6B82               	clrf	(?_getEv+1)& (0+255),b
 32338                           
 32339                           ; BSR set to: 0
 32340  00714E  0012               	return		;funcret
 32341  007150                     __end_of_getEv:
 32342                           	callstack 0
 32343                           
 32344 ;; *************** function _validStart *****************
 32345 ;; Defined at:
 32346 ;;		line 287 in file "../../github/CBUSlib/events.c"
 32347 ;; Parameters:    Size  Location     Type
 32348 ;;  tableIndex      1    wreg     unsigned char 
 32349 ;; Auto vars:     Size  Location     Type
 32350 ;;  tableIndex      1   31[BANK0 ] unsigned char 
 32351 ;;  f               1   32[BANK0 ] struct .
 32352 ;; Return value:  Size  Location     Type
 32353 ;;                  1    wreg      unsigned char 
 32354 ;; Registers used:
 32355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32356 ;; Tracked objects:
 32357 ;;		On entry : 3F/0
 32358 ;;		On exit  : 3F/0
 32359 ;;		Unchanged: 0/0
 32360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32362 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32365 ;;Total ram usage:        4 bytes
 32366 ;; Hardware stack levels used: 1
 32367 ;; Hardware stack levels required when called: 13
 32368 ;; This function calls:
 32369 ;;		_readFlashBlock
 32370 ;; This function is called by:
 32371 ;;		_doNenrd
 32372 ;;		_doRqevn
 32373 ;;		_removeTableEntry
 32374 ;;		_getEv
 32375 ;;		_numEv
 32376 ;;		_getEVs
 32377 ;;		_checkRemoveTableEntry
 32378 ;;		_rebuildHashtable
 32379 ;;		_doReval
 32380 ;;		_deleteHappeningRange
 32381 ;;		_deleteActionRange
 32382 ;;		_doTimedResponse
 32383 ;; This function uses a non-reentrant model
 32384 ;;
 32385                           
 32386                           	psect	text159
 32387  00A1F0                     __ptext159:
 32388                           	callstack 0
 32389  00A1F0                     _validStart:
 32390                           	callstack 14
 32391                           
 32392                           ; BSR set to: 0
 32393                           ;incstack = 0
 32394                           ;validStart@tableIndex stored from wreg
 32395  00A1F0  6F7F               	movwf	validStart@tableIndex& (0+255),b
 32396                           
 32397                           ;events.c: 288: EventTableFlags f;;events.c: 292: f.asByte = readFlashBlock((WORD)(& (ev
      +                          entTable[tableIndex].flags.asByte)));
 32398  00A1F2  0100               	movlb	0	; () banked
 32399  00A1F4  517F               	movf	validStart@tableIndex& (0+255),w,b
 32400  00A1F6  0D10               	mullw	16
 32401  00A1F8  CFF3 F07D          	movff	prodl,??_validStart
 32402  00A1FC  CFF4 F07E          	movff	prodh,??_validStart+1
 32403  00A200  51E9               	movf	_eventTable& (0+255),w,b
 32404  00A202  257D               	addwf	??_validStart& (0+255),w,b
 32405  00A204  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32406  00A206  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32407  00A208  217E               	addwfc	(??_validStart+1)& (0+255),w,b
 32408  00A20A  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32409  00A20C  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32410  00A210  6F80               	movwf	validStart@f& (0+255),b
 32411                           
 32412                           ; BSR set to: 0
 32413                           ;events.c: 293: if (( !f.freeEntry) && ( ! f.continuation)) {
 32414  00A212  AF80               	btfss	validStart@f& (0+255),7,b
 32415                           
 32416                           ; BSR set to: 0
 32417  00A214  BB80               	btfsc	validStart@f& (0+255),5,b
 32418  00A216  D002               	goto	l17641
 32419                           
 32420                           ; BSR set to: 0
 32421                           ;events.c: 294: return 1;
 32422  00A218  0E01               	movlw	1
 32423  00A21A  0012               	return	
 32424  00A21C                     l17641:
 32425                           
 32426                           ; BSR set to: 0
 32427                           ;events.c: 296: return 0;
 32428  00A21C  0E00               	movlw	0
 32429                           
 32430                           ; BSR set to: 0
 32431  00A21E  0012               	return		;funcret
 32432  00A220                     __end_of_validStart:
 32433                           	callstack 0
 32434                           
 32435 ;; *************** function _getEN *****************
 32436 ;; Defined at:
 32437 ;;		line 784 in file "../../github/CBUSlib/events.c"
 32438 ;; Parameters:    Size  Location     Type
 32439 ;;  tableIndex      1    wreg     unsigned char 
 32440 ;; Auto vars:     Size  Location     Type
 32441 ;;  tableIndex      1   38[BANK0 ] unsigned char 
 32442 ;;  lo              2   36[BANK0 ] unsigned int 
 32443 ;;  hi              2   34[BANK0 ] unsigned int 
 32444 ;; Return value:  Size  Location     Type
 32445 ;;                  2   29[BANK0 ] unsigned int 
 32446 ;; Registers used:
 32447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32448 ;; Tracked objects:
 32449 ;;		On entry : 3F/0
 32450 ;;		On exit  : 3F/0
 32451 ;;		Unchanged: 0/0
 32452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32454 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32455 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32456 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32457 ;;Total ram usage:       10 bytes
 32458 ;; Hardware stack levels used: 1
 32459 ;; Hardware stack levels required when called: 13
 32460 ;; This function calls:
 32461 ;;		_readFlashBlock
 32462 ;; This function is called by:
 32463 ;;		_doNenrd
 32464 ;;		_findEvent
 32465 ;;		_rebuildHashtable
 32466 ;;		_getProducedEvent
 32467 ;;		_doTimedResponse
 32468 ;; This function uses a non-reentrant model
 32469 ;;
 32470                           
 32471                           	psect	text160
 32472  009032                     __ptext160:
 32473                           	callstack 0
 32474  009032                     _getEN:
 32475                           	callstack 13
 32476                           
 32477                           ; BSR set to: 0
 32478                           ;incstack = 0
 32479                           ;getEN@tableIndex stored from wreg
 32480  009032  6F86               	movwf	getEN@tableIndex& (0+255),b
 32481                           
 32482                           ;events.c: 785: WORD hi;;events.c: 786: WORD lo;;events.c: 788: lo=readFlashBlock((WORD)
      +                          (&(eventTable[tableIndex].event.EN)));
 32483  009034  0100               	movlb	0	; () banked
 32484  009036  5186               	movf	getEN@tableIndex& (0+255),w,b
 32485  009038  0D10               	mullw	16
 32486  00903A  CFF3 F07F          	movff	prodl,??_getEN
 32487  00903E  CFF4 F080          	movff	prodh,??_getEN+1
 32488  009042  51E9               	movf	_eventTable& (0+255),w,b
 32489  009044  277F               	addwf	??_getEN& (0+255),f,b
 32490  009046  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32491  009048  2380               	addwfc	(??_getEN+1)& (0+255),f,b
 32492  00904A  0E04               	movlw	4
 32493  00904C  257F               	addwf	??_getEN& (0+255),w,b
 32494  00904E  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32495  009050  0E00               	movlw	0
 32496  009052  2180               	addwfc	(??_getEN+1)& (0+255),w,b
 32497  009054  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32498  009056  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32499  00905A  6F81               	movwf	(??_getEN+2)& (0+255),b
 32500  00905C  5181               	movf	(??_getEN+2)& (0+255),w,b
 32501  00905E  6F84               	movwf	getEN@lo& (0+255),b
 32502  009060  6B85               	clrf	(getEN@lo+1)& (0+255),b
 32503                           
 32504                           ;events.c: 789: hi = readFlashBlock((WORD)(&(eventTable[tableIndex].event.EN))+1);
 32505  009062  5186               	movf	getEN@tableIndex& (0+255),w,b
 32506  009064  0D10               	mullw	16
 32507  009066  CFF3 F07F          	movff	prodl,??_getEN
 32508  00906A  CFF4 F080          	movff	prodh,??_getEN+1
 32509  00906E  51E9               	movf	_eventTable& (0+255),w,b
 32510  009070  277F               	addwf	??_getEN& (0+255),f,b
 32511  009072  51EA               	movf	(_eventTable+1)& (0+255),w,b
 32512  009074  2380               	addwfc	(??_getEN+1)& (0+255),f,b
 32513  009076  0E05               	movlw	5
 32514  009078  257F               	addwf	??_getEN& (0+255),w,b
 32515  00907A  6F76               	movwf	readFlashBlock@flashAddr& (0+255),b
 32516  00907C  0E00               	movlw	0
 32517  00907E  2180               	addwfc	(??_getEN+1)& (0+255),w,b
 32518  009080  6F77               	movwf	(readFlashBlock@flashAddr+1)& (0+255),b
 32519  009082  EC8D  F03D         	call	_readFlashBlock	;wreg free
 32520  009086  6F81               	movwf	(??_getEN+2)& (0+255),b
 32521  009088  5181               	movf	(??_getEN+2)& (0+255),w,b
 32522  00908A  6F82               	movwf	getEN@hi& (0+255),b
 32523  00908C  6B83               	clrf	(getEN@hi+1)& (0+255),b
 32524                           
 32525                           ; BSR set to: 0
 32526                           ;events.c: 790: return lo | (hi << 8);
 32527  00908E  5182               	movf	getEN@hi& (0+255),w,b
 32528  009090  6F80               	movwf	(??_getEN+1)& (0+255),b
 32529  009092  6B7F               	clrf	??_getEN& (0+255),b
 32530  009094  5184               	movf	getEN@lo& (0+255),w,b
 32531  009096  117F               	iorwf	??_getEN& (0+255),w,b
 32532  009098  6F7D               	movwf	?_getEN& (0+255),b
 32533  00909A  5185               	movf	(getEN@lo+1)& (0+255),w,b
 32534  00909C  1180               	iorwf	(??_getEN+1)& (0+255),w,b
 32535  00909E  6F7E               	movwf	(?_getEN+1)& (0+255),b
 32536                           
 32537                           ; BSR set to: 0
 32538  0090A0  0012               	return		;funcret
 32539  0090A2                     __end_of_getEN:
 32540                           	callstack 0
 32541                           
 32542 ;; *************** function _readFlashBlock *****************
 32543 ;; Defined at:
 32544 ;;		line 243 in file "../../github/CBUSlib/romops.c"
 32545 ;; Parameters:    Size  Location     Type
 32546 ;;  flashAddr       2   22[BANK0 ] unsigned int 
 32547 ;; Auto vars:     Size  Location     Type
 32548 ;;  i               1   28[BANK0 ] unsigned char 
 32549 ;;  ptr             2    0        unsigned int 
 32550 ;; Return value:  Size  Location     Type
 32551 ;;                  1    wreg      unsigned char 
 32552 ;; Registers used:
 32553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32554 ;; Tracked objects:
 32555 ;;		On entry : 3F/0
 32556 ;;		On exit  : 3F/0
 32557 ;;		Unchanged: 0/0
 32558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32561 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32562 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32563 ;;Total ram usage:        7 bytes
 32564 ;; Hardware stack levels used: 1
 32565 ;; Hardware stack levels required when called: 12
 32566 ;; This function calls:
 32567 ;;		_flushFlashImage
 32568 ;; This function is called by:
 32569 ;;		_loadNvCache
 32570 ;;		_validStart
 32571 ;;		_doNnevn
 32572 ;;		_removeTableEntry
 32573 ;;		_addEvent
 32574 ;;		_writeEv
 32575 ;;		_getEv
 32576 ;;		_numEv
 32577 ;;		_getEVs
 32578 ;;		_getNN
 32579 ;;		_getEN
 32580 ;;		_doNvrd
 32581 ;;		_deleteHappeningRange
 32582 ;;		_writeFlashImage
 32583 ;; This function uses a non-reentrant model
 32584 ;;
 32585                           
 32586                           	psect	text161
 32587  007B1A                     __ptext161:
 32588                           	callstack 0
 32589  007B1A                     _readFlashBlock:
 32590                           	callstack 13
 32591                           
 32592                           ; BSR set to: 0
 32593                           ;romops.c: 245: WORD ptr;;romops.c: 247: if ((flashAddr < (0xEF80U&0xFFC0)) || (flashAdd
      +                          r > 0xFFFF)) {
 32594                           
 32595                           ; BSR set to: 0
 32596                           ;incstack = 0
 32597  007B1A  0E80               	movlw	128
 32598  007B1C  5D76               	subwf	readFlashBlock@flashAddr& (0+255),w,b
 32599  007B1E  0EEF               	movlw	239
 32600  007B20  5977               	subwfb	(readFlashBlock@flashAddr+1)& (0+255),w,b
 32601  007B22  B0D8               	btfsc	status,0,c
 32602  007B24  D002               	goto	l17589
 32603                           
 32604                           ; BSR set to: 0
 32605                           ;romops.c: 250: return 0xff;
 32606  007B26  0EFF               	movlw	255
 32607  007B28  0012               	return	
 32608  007B2A                     l17589:
 32609                           
 32610                           ; BSR set to: 0
 32611                           ;romops.c: 251: };romops.c: 253: if(flashFlags.valid !=5)
 32612  007B2A  5005               	movf	_flashFlags^0,w,c
 32613  007B2C  0B07               	andlw	7
 32614  007B2E  0A05               	xorlw	5
 32615  007B30  B4D8               	btfsc	status,2,c
 32616  007B32  D002               	goto	l17593
 32617                           
 32618                           ; BSR set to: 0
 32619                           ;romops.c: 254: {;romops.c: 255: flashFlags.asByte=5;
 32620  007B34  0E05               	movlw	5
 32621  007B36  6E05               	movwf	_flashFlags^0,c
 32622  007B38                     l17593:
 32623                           
 32624                           ; BSR set to: 0
 32625                           ;romops.c: 256: };romops.c: 258: if(flashFlags.loaded && flashblock!=(flashAddr & 0XFFC0
      +                          ))
 32626  007B38  A605               	btfss	_flashFlags^0,3,c
 32627  007B3A  D01B               	goto	l17601
 32628                           
 32629                           ; BSR set to: 0
 32630  007B3C  0EC0               	movlw	192
 32631  007B3E  6F78               	movwf	??_readFlashBlock& (0+255),b
 32632  007B40  0EFF               	movlw	255
 32633  007B42  6F79               	movwf	(??_readFlashBlock+1)& (0+255),b
 32634  007B44  C076  F07A         	movff	readFlashBlock@flashAddr,??_readFlashBlock+2
 32635  007B48  C077  F07B         	movff	readFlashBlock@flashAddr+1,??_readFlashBlock+3
 32636  007B4C  5178               	movf	??_readFlashBlock& (0+255),w,b
 32637  007B4E  177A               	andwf	(??_readFlashBlock+2)& (0+255),f,b
 32638  007B50  5179               	movf	(??_readFlashBlock+1)& (0+255),w,b
 32639  007B52  177B               	andwf	(??_readFlashBlock+3)& (0+255),f,b
 32640  007B54  0101               	movlb	1	; () banked
 32641  007B56  51F6               	movf	_flashblock& (0+255),w,b
 32642  007B58  0100               	movlb	0	; () banked
 32643  007B5A  197A               	xorwf	(??_readFlashBlock+2)& (0+255),w,b
 32644  007B5C  E106               	bnz	u21480
 32645  007B5E  0101               	movlb	1	; () banked
 32646  007B60  51F7               	movf	(_flashblock+1)& (0+255),w,b
 32647  007B62  0100               	movlb	0	; () banked
 32648  007B64  197B               	xorwf	(??_readFlashBlock+3)& (0+255),w,b
 32649  007B66  B4D8               	btfsc	status,2,c
 32650  007B68  D004               	goto	l17601
 32651  007B6A                     u21480:
 32652                           
 32653                           ; BSR set to: 0
 32654                           ;romops.c: 259: {;romops.c: 261: flushFlashImage();
 32655  007B6A  EC0D  F053         	call	_flushFlashImage	;wreg free
 32656                           
 32657                           ; BSR set to: 0
 32658                           ;romops.c: 262: flashFlags.asByte=5;
 32659  007B6E  0E05               	movlw	5
 32660  007B70  6E05               	movwf	_flashFlags^0,c
 32661  007B72                     l17601:
 32662                           
 32663                           ; BSR set to: 0
 32664                           ;romops.c: 263: };romops.c: 265: if(!flashFlags.loaded)
 32665  007B72  B605               	btfsc	_flashFlags^0,3,c
 32666  007B74  D024               	goto	l17625
 32667                           
 32668                           ; BSR set to: 0
 32669                           ;romops.c: 266: {;romops.c: 268: flashblock = flashAddr & 0xFFC0;
 32670  007B76  0EC0               	movlw	192
 32671  007B78  1576               	andwf	readFlashBlock@flashAddr& (0+255),w,b
 32672  007B7A  0101               	movlb	1	; () banked
 32673  007B7C  6FF6               	movwf	_flashblock& (0+255),b
 32674  007B7E  0EFF               	movlw	255
 32675  007B80  0100               	movlb	0	; () banked
 32676  007B82  1577               	andwf	(readFlashBlock@flashAddr+1)& (0+255),w,b
 32677  007B84  0101               	movlb	1	; () banked
 32678  007B86  6FF7               	movwf	(_flashblock+1)& (0+255),b
 32679                           
 32680                           ; BSR set to: 1
 32681                           ;romops.c: 270: EECON1=0X80;
 32682  007B88  0E80               	movlw	128
 32683  007B8A  6E7F               	movwf	127,c	;volsfr
 32684                           
 32685                           ; BSR set to: 1
 32686                           ;romops.c: 271: TBLPTR = flashblock;
 32687  007B8C  C1F6  FFF6         	movff	_flashblock,tblptrl	;volatile
 32688  007B90  C1F7  FFF7         	movff	_flashblock+1,tblptrh	;volatile
 32689  007B94  6AF8               	clrf	248,c	;volatile
 32690                           
 32691                           ; BSR set to: 1
 32692                           ;romops.c: 272: for (unsigned char i=0; i<64; i++) {
 32693  007B96  0E00               	movlw	0
 32694  007B98  0100               	movlb	0	; () banked
 32695  007B9A  6F7C               	movwf	readFlashBlock@i& (0+255),b
 32696  007B9C                     l2466:
 32697                           
 32698                           ; BSR set to: 0
 32699  007B9C  0009               	tblrd		*+	;# 
 32700                           
 32701                           ;romops.c: 274: flashbuf[i] = TABLAT;
 32702  007B9E  0E48               	movlw	low _flashbuf
 32703  007BA0  0100               	movlb	0	; () banked
 32704  007BA2  257C               	addwf	readFlashBlock@i& (0+255),w,b
 32705  007BA4  6ED9               	movwf	fsr2l,c
 32706  007BA6  6ADA               	clrf	fsr2h,c
 32707  007BA8  0E03               	movlw	high _flashbuf
 32708  007BAA  22DA               	addwfc	fsr2h,f,c
 32709  007BAC  CFF5 FFDF          	movff	tablat,indf2	;volatile
 32710                           
 32711                           ; BSR set to: 0
 32712  007BB0  2B7C               	incf	readFlashBlock@i& (0+255),f,b
 32713                           
 32714                           ; BSR set to: 0
 32715  007BB2  0E3F               	movlw	63
 32716  007BB4  657C               	cpfsgt	readFlashBlock@i& (0+255),b
 32717  007BB6  D7F2               	goto	l2466
 32718                           
 32719                           ; BSR set to: 0
 32720                           ;romops.c: 275: };romops.c: 295: TBLPTRU = 0x00;
 32721  007BB8  0E00               	movlw	0
 32722  007BBA  6EF8               	movwf	248,c	;volatile
 32723                           
 32724                           ; BSR set to: 0
 32725                           ;romops.c: 296: flashFlags.loaded = 1;
 32726  007BBC  8605               	bsf	_flashFlags^0,3,c
 32727  007BBE                     l17625:
 32728                           
 32729                           ; BSR set to: 0
 32730                           ;romops.c: 298: };romops.c: 299: return flashbuf[flashAddr & 0X3F];
 32731  007BBE  0E3F               	movlw	63
 32732  007BC0  1576               	andwf	readFlashBlock@flashAddr& (0+255),w,b
 32733  007BC2  6F78               	movwf	??_readFlashBlock& (0+255),b
 32734  007BC4  0E00               	movlw	0
 32735  007BC6  1577               	andwf	(readFlashBlock@flashAddr+1)& (0+255),w,b
 32736  007BC8  6F79               	movwf	(??_readFlashBlock+1)& (0+255),b
 32737  007BCA  0E48               	movlw	low _flashbuf
 32738  007BCC  2578               	addwf	??_readFlashBlock& (0+255),w,b
 32739  007BCE  6ED9               	movwf	fsr2l,c
 32740  007BD0  0E03               	movlw	high _flashbuf
 32741  007BD2  2179               	addwfc	(??_readFlashBlock+1)& (0+255),w,b
 32742  007BD4  6EDA               	movwf	fsr2h,c
 32743  007BD6  50DF               	movf	indf2,w,c
 32744                           
 32745                           ; BSR set to: 0
 32746  007BD8  0012               	return		;funcret
 32747  007BDA                     __end_of_readFlashBlock:
 32748                           	callstack 0
 32749                           
 32750 ;; *************** function _flushFlashImage *****************
 32751 ;; Defined at:
 32752 ;;		line 217 in file "../../github/CBUSlib/romops.c"
 32753 ;; Parameters:    Size  Location     Type
 32754 ;;		None
 32755 ;; Auto vars:     Size  Location     Type
 32756 ;;		None
 32757 ;; Return value:  Size  Location     Type
 32758 ;;                  1    wreg      void 
 32759 ;; Registers used:
 32760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32761 ;; Tracked objects:
 32762 ;;		On entry : 3F/0
 32763 ;;		On exit  : 3F/0
 32764 ;;		Unchanged: 0/0
 32765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32770 ;;Total ram usage:        0 bytes
 32771 ;; Hardware stack levels used: 1
 32772 ;; Hardware stack levels required when called: 11
 32773 ;; This function calls:
 32774 ;;		_writeFlashShort
 32775 ;;		_writeFlashWithErase
 32776 ;; This function is called by:
 32777 ;;		_factoryResetFlash
 32778 ;;		_clearAllEvents
 32779 ;;		_removeTableEntry
 32780 ;;		_addEvent
 32781 ;;		_deleteHappeningRange
 32782 ;;		_deleteActionRange
 32783 ;;		_readFlashBlock
 32784 ;;		_writeFlashByte
 32785 ;; This function uses a non-reentrant model
 32786 ;;
 32787                           
 32788                           	psect	text162
 32789  00A61A                     __ptext162:
 32790                           	callstack 0
 32791  00A61A                     _flushFlashImage:
 32792                           	callstack 13
 32793                           
 32794                           ; BSR set to: 0
 32795                           ;romops.c: 219: if (flashFlags.modified)
 32796                           
 32797                           ; BSR set to: 0
 32798                           ;incstack = 0
 32799  00A61A  A805               	btfss	_flashFlags^0,4,c
 32800  00A61C  0012               	return	
 32801                           
 32802                           ; BSR set to: 0
 32803                           ;romops.c: 220: {;romops.c: 221: if(flashFlags.zeroto1)
 32804  00A61E  AA05               	btfss	_flashFlags^0,5,c
 32805  00A620  D003               	goto	l17581
 32806                           
 32807                           ; BSR set to: 0
 32808                           ;romops.c: 222: writeFlashWithErase();
 32809  00A622  EC33  F050         	call	_writeFlashWithErase	;wreg free
 32810  00A626  0012               	return	
 32811  00A628                     l17581:
 32812                           
 32813                           ; BSR set to: 0
 32814                           ;romops.c: 223: else;romops.c: 224: writeFlashShort();
 32815  00A628  ECF5  F046         	call	_writeFlashShort	;wreg free
 32816                           
 32817                           ; BSR set to: 0
 32818  00A62C  0012               	return		;funcret
 32819  00A62E                     __end_of_flushFlashImage:
 32820                           	callstack 0
 32821                           
 32822 ;; *************** function _writeFlashWithErase *****************
 32823 ;; Defined at:
 32824 ;;		line 192 in file "../../github/CBUSlib/romops.c"
 32825 ;; Parameters:    Size  Location     Type
 32826 ;;		None
 32827 ;; Auto vars:     Size  Location     Type
 32828 ;;		None
 32829 ;; Return value:  Size  Location     Type
 32830 ;;                  1    wreg      void 
 32831 ;; Registers used:
 32832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32833 ;; Tracked objects:
 32834 ;;		On entry : 3F/0
 32835 ;;		On exit  : 3F/0
 32836 ;;		Unchanged: 0/0
 32837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32842 ;;Total ram usage:        0 bytes
 32843 ;; Hardware stack levels used: 1
 32844 ;; Hardware stack levels required when called: 10
 32845 ;; This function calls:
 32846 ;;		_isSuitableTimeToWriteFlash
 32847 ;;		_writeFlashShort
 32848 ;; This function is called by:
 32849 ;;		_flushFlashImage
 32850 ;; This function uses a non-reentrant model
 32851 ;;
 32852                           
 32853                           	psect	text163
 32854  00A066                     __ptext163:
 32855                           	callstack 0
 32856  00A066                     _writeFlashWithErase:
 32857                           	callstack 13
 32858                           
 32859                           ; BSR set to: 0
 32860                           ;romops.c: 196: while (! isSuitableTimeToWriteFlash());
 32861                           
 32862                           ; BSR set to: 0
 32863                           ;incstack = 0
 32864  00A066  EC86  F053         	call	_isSuitableTimeToWriteFlash	;wreg free
 32865  00A06A  0900               	iorlw	0
 32866  00A06C  B4D8               	btfsc	status,2,c
 32867  00A06E  D7FB               	goto	__ptext163
 32868                           
 32869                           ;romops.c: 198: TBLPTR=flashblock;
 32870  00A070  C1F6  FFF6         	movff	_flashblock,tblptrl	;volatile
 32871  00A074  C1F7  FFF7         	movff	_flashblock+1,tblptrh	;volatile
 32872  00A078  6AF8               	clrf	248,c	;volatile
 32873                           
 32874                           ;romops.c: 199: TBLPTRU = 0x00;
 32875  00A07A  0E00               	movlw	0
 32876  00A07C  6EF8               	movwf	248,c	;volatile
 32877                           
 32878                           ;romops.c: 200: EECON1bits.EEPGD = 1;
 32879  00A07E  8E7F               	bsf	127,7,c	;volsfr
 32880                           
 32881                           ;romops.c: 201: EECON1bits.CFGS = 0;
 32882  00A080  9C7F               	bcf	127,6,c	;volsfr
 32883                           
 32884                           ;romops.c: 202: EECON1bits.WREN = 1;
 32885  00A082  847F               	bsf	127,2,c	;volsfr
 32886                           
 32887                           ;romops.c: 203: EECON1bits.FREE = 1;
 32888  00A084  887F               	bsf	127,4,c	;volsfr
 32889                           
 32890                           ;romops.c: 204: (INTCONbits.GIE = 0);
 32891  00A086  9EF2               	bcf	242,7,c	;volatile
 32892                           
 32893                           ;romops.c: 205: EECON2 = 0x55;
 32894  00A088  0E55               	movlw	85
 32895  00A08A  6E7E               	movwf	126,c	;volsfr
 32896                           
 32897                           ;romops.c: 206: EECON2 = 0xaa;
 32898  00A08C  0EAA               	movlw	170
 32899  00A08E  6E7E               	movwf	126,c	;volsfr
 32900                           
 32901                           ;romops.c: 207: EECON1bits.WR = 1;
 32902  00A090  827F               	bsf	127,1,c	;volsfr
 32903                           
 32904                           ;romops.c: 208: (INTCONbits.GIE = 1);
 32905  00A092  8EF2               	bsf	242,7,c	;volatile
 32906                           
 32907                           ;romops.c: 209: EECON1bits.WREN = 0;
 32908  00A094  947F               	bcf	127,2,c	;volsfr
 32909                           
 32910                           ;romops.c: 211: writeFlashShort();
 32911  00A096  ECF5  F046         	call	_writeFlashShort	;wreg free
 32912                           
 32913                           ; BSR set to: 0
 32914  00A09A  0012               	return		;funcret
 32915  00A09C                     __end_of_writeFlashWithErase:
 32916                           	callstack 0
 32917                           
 32918 ;; *************** function _writeFlashShort *****************
 32919 ;; Defined at:
 32920 ;;		line 101 in file "../../github/CBUSlib/romops.c"
 32921 ;; Parameters:    Size  Location     Type
 32922 ;;		None
 32923 ;; Auto vars:     Size  Location     Type
 32924 ;;  i               1   21[BANK0 ] unsigned char 
 32925 ;; Return value:  Size  Location     Type
 32926 ;;                  1    wreg      void 
 32927 ;; Registers used:
 32928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32929 ;; Tracked objects:
 32930 ;;		On entry : 0/0
 32931 ;;		On exit  : 3F/0
 32932 ;;		Unchanged: 0/0
 32933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32937 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32938 ;;Total ram usage:        5 bytes
 32939 ;; Hardware stack levels used: 1
 32940 ;; Hardware stack levels required when called: 8
 32941 ;; This function calls:
 32942 ;;		Nothing
 32943 ;; This function is called by:
 32944 ;;		_writeFlashWithErase
 32945 ;;		_flushFlashImage
 32946 ;; This function uses a non-reentrant model
 32947 ;;
 32948                           
 32949                           	psect	text164
 32950  008DEA                     __ptext164:
 32951                           	callstack 0
 32952  008DEA                     _writeFlashShort:
 32953                           	callstack 14
 32954                           
 32955                           ;romops.c: 105: TBLPTR = flashblock & ~(64 - 1);
 32956                           
 32957                           ; BSR set to: 0
 32958                           ;incstack = 0
 32959  008DEA  0EC0               	movlw	192
 32960  008DEC  0100               	movlb	0	; () banked
 32961  008DEE  6F71               	movwf	??_writeFlashShort& (0+255),b
 32962  008DF0  0EFF               	movlw	255
 32963  008DF2  6F72               	movwf	(??_writeFlashShort+1)& (0+255),b
 32964  008DF4  C1F6  F073         	movff	_flashblock,??_writeFlashShort+2
 32965  008DF8  C1F7  F074         	movff	_flashblock+1,??_writeFlashShort+3
 32966  008DFC  5171               	movf	??_writeFlashShort& (0+255),w,b
 32967  008DFE  1773               	andwf	(??_writeFlashShort+2)& (0+255),f,b
 32968  008E00  5172               	movf	(??_writeFlashShort+1)& (0+255),w,b
 32969  008E02  1774               	andwf	(??_writeFlashShort+3)& (0+255),f,b
 32970  008E04  C073  FFF6         	movff	??_writeFlashShort+2,tblptrl	;volatile
 32971  008E08  C074  FFF7         	movff	??_writeFlashShort+3,tblptrh	;volatile
 32972  008E0C  6AF8               	clrf	248,c	;volatile
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;romops.c: 106: (INTCONbits.GIE = 0);
 32976  008E0E  9EF2               	bcf	242,7,c	;volatile
 32977                           
 32978                           ; BSR set to: 0
 32979                           ;romops.c: 107: for (unsigned char i=0; i<64; i++) {
 32980  008E10  0E00               	movlw	0
 32981  008E12  6F75               	movwf	writeFlashShort@i& (0+255),b
 32982  008E14                     l17517:
 32983                           
 32984                           ; BSR set to: 0
 32985                           ;romops.c: 108: TABLAT = flashbuf[i];
 32986  008E14  0E48               	movlw	low _flashbuf
 32987  008E16  2575               	addwf	writeFlashShort@i& (0+255),w,b
 32988  008E18  6ED9               	movwf	fsr2l,c
 32989  008E1A  6ADA               	clrf	fsr2h,c
 32990  008E1C  0E03               	movlw	high _flashbuf
 32991  008E1E  22DA               	addwfc	fsr2h,f,c
 32992  008E20  50DF               	movf	indf2,w,c
 32993  008E22  6EF5               	movwf	245,c	;volatile
 32994  008E24  000D               	tblwt		*+	;# 
 32995  008E26  0100               	movlb	0	; () banked
 32996  008E28  2B75               	incf	writeFlashShort@i& (0+255),f,b
 32997                           
 32998                           ; BSR set to: 0
 32999  008E2A  0E3F               	movlw	63
 33000  008E2C  6575               	cpfsgt	writeFlashShort@i& (0+255),b
 33001  008E2E  D7F2               	goto	l17517
 33002                           
 33003                           ; BSR set to: 0
 33004                           ;romops.c: 110: };romops.c: 117: TBLPTR = flashblock & ~(64 - 1);
 33005  008E30  0EC0               	movlw	192
 33006  008E32  6F71               	movwf	??_writeFlashShort& (0+255),b
 33007  008E34  0EFF               	movlw	255
 33008  008E36  6F72               	movwf	(??_writeFlashShort+1)& (0+255),b
 33009  008E38  C1F6  F073         	movff	_flashblock,??_writeFlashShort+2
 33010  008E3C  C1F7  F074         	movff	_flashblock+1,??_writeFlashShort+3
 33011  008E40  5171               	movf	??_writeFlashShort& (0+255),w,b
 33012  008E42  1773               	andwf	(??_writeFlashShort+2)& (0+255),f,b
 33013  008E44  5172               	movf	(??_writeFlashShort+1)& (0+255),w,b
 33014  008E46  1774               	andwf	(??_writeFlashShort+3)& (0+255),f,b
 33015  008E48  C073  FFF6         	movff	??_writeFlashShort+2,tblptrl	;volatile
 33016  008E4C  C074  FFF7         	movff	??_writeFlashShort+3,tblptrh	;volatile
 33017  008E50  6AF8               	clrf	248,c	;volatile
 33018                           
 33019                           ; BSR set to: 0
 33020                           ;romops.c: 118: EECON1bits.EEPGD = 1;
 33021  008E52  8E7F               	bsf	127,7,c	;volsfr
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;romops.c: 119: EECON1bits.CFGS = 0;
 33025  008E54  9C7F               	bcf	127,6,c	;volsfr
 33026                           
 33027                           ; BSR set to: 0
 33028                           ;romops.c: 120: EECON1bits.FREE = 0;
 33029  008E56  987F               	bcf	127,4,c	;volsfr
 33030                           
 33031                           ; BSR set to: 0
 33032                           ;romops.c: 121: EECON1bits.WREN = 1;
 33033  008E58  847F               	bsf	127,2,c	;volsfr
 33034                           
 33035                           ; BSR set to: 0
 33036                           ;romops.c: 123: EECON2 = 0x55;
 33037  008E5A  0E55               	movlw	85
 33038  008E5C  6E7E               	movwf	126,c	;volsfr
 33039                           
 33040                           ; BSR set to: 0
 33041                           ;romops.c: 124: EECON2 = 0xAA;
 33042  008E5E  0EAA               	movlw	170
 33043  008E60  6E7E               	movwf	126,c	;volsfr
 33044                           
 33045                           ; BSR set to: 0
 33046                           ;romops.c: 125: EECON1bits.WR = 1;
 33047  008E62  827F               	bsf	127,1,c	;volsfr
 33048                           
 33049                           ; BSR set to: 0
 33050                           ;romops.c: 126: (INTCONbits.GIE = 1);
 33051  008E64  8EF2               	bsf	242,7,c	;volatile
 33052                           
 33053                           ; BSR set to: 0
 33054                           ;romops.c: 127: EECON1bits.WREN = 0;
 33055  008E66  947F               	bcf	127,2,c	;volsfr
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;romops.c: 184: (INTCONbits.GIE = 1);
 33059  008E68  8EF2               	bsf	242,7,c	;volatile
 33060                           
 33061                           ; BSR set to: 0
 33062  008E6A  0012               	return		;funcret
 33063  008E6C                     __end_of_writeFlashShort:
 33064                           	callstack 0
 33065                           
 33066 ;; *************** function _isSuitableTimeToWriteFlash *****************
 33067 ;; Defined at:
 33068 ;;		line 580 in file "../../github/CANMIOfirmware/main.c"
 33069 ;; Parameters:    Size  Location     Type
 33070 ;;		None
 33071 ;; Auto vars:     Size  Location     Type
 33072 ;;		None
 33073 ;; Return value:  Size  Location     Type
 33074 ;;                  1    wreg      unsigned char 
 33075 ;; Registers used:
 33076 ;;		wreg, cstack
 33077 ;; Tracked objects:
 33078 ;;		On entry : 0/0
 33079 ;;		On exit  : 0/0
 33080 ;;		Unchanged: 0/0
 33081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33086 ;;Total ram usage:        0 bytes
 33087 ;; Hardware stack levels used: 1
 33088 ;; Hardware stack levels required when called: 9
 33089 ;; This function calls:
 33090 ;;		_isNoServoPulses
 33091 ;; This function is called by:
 33092 ;;		_writeFlashWithErase
 33093 ;; This function uses a non-reentrant model
 33094 ;;
 33095                           
 33096                           	psect	text165
 33097  00A70C                     __ptext165:
 33098                           	callstack 0
 33099  00A70C                     _isSuitableTimeToWriteFlash:
 33100                           	callstack 13
 33101                           
 33102                           ;main.c: 582: return isNoServoPulses();
 33103                           
 33104                           ; BSR set to: 0
 33105                           ;incstack = 0
 33106  00A70C  EC3A  F053         	call	_isNoServoPulses	;wreg free
 33107  00A710  0012               	return		;funcret
 33108  00A712                     __end_of_isSuitableTimeToWriteFlash:
 33109                           	callstack 0
 33110                           
 33111 ;; *************** function _isNoServoPulses *****************
 33112 ;; Defined at:
 33113 ;;		line 628 in file "../../github/CANMIOfirmware/servo.c"
 33114 ;; Parameters:    Size  Location     Type
 33115 ;;		None
 33116 ;; Auto vars:     Size  Location     Type
 33117 ;;		None
 33118 ;; Return value:  Size  Location     Type
 33119 ;;                  1    wreg      unsigned char 
 33120 ;; Registers used:
 33121 ;;		wreg
 33122 ;; Tracked objects:
 33123 ;;		On entry : 0/0
 33124 ;;		On exit  : 0/0
 33125 ;;		Unchanged: 0/0
 33126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33131 ;;Total ram usage:        0 bytes
 33132 ;; Hardware stack levels used: 1
 33133 ;; Hardware stack levels required when called: 8
 33134 ;; This function calls:
 33135 ;;		Nothing
 33136 ;; This function is called by:
 33137 ;;		_isSuitableTimeToWriteFlash
 33138 ;; This function uses a non-reentrant model
 33139 ;;
 33140                           
 33141                           	psect	text166
 33142  00A674                     __ptext166:
 33143                           	callstack 0
 33144  00A674                     _isNoServoPulses:
 33145                           	callstack 13
 33146                           
 33147                           ;servo.c: 630: if (T1CONbits.TMR1ON) return 0;
 33148                           
 33149                           ;incstack = 0
 33150  00A674  A0CD               	btfss	205,0,c	;volatile
 33151  00A676  D002               	goto	l1374
 33152  00A678                     u21390:
 33153  00A678  0E00               	movlw	0
 33154  00A67A  0012               	return	
 33155  00A67C                     l1374:
 33156                           
 33157                           ;servo.c: 631: if (T3CONbits.TMR3ON) return 0;
 33158  00A67C  B0B1               	btfsc	177,0,c	;volatile
 33159  00A67E  D7FC               	goto	u21390
 33160                           
 33161                           ;servo.c: 632: return 1;
 33162  00A680  0E01               	movlw	1
 33163  00A682  0012               	return		;funcret
 33164  00A684                     __end_of_isNoServoPulses:
 33165                           	callstack 0
 33166                           
 33167 ;; *************** function _ee_write_short *****************
 33168 ;; Defined at:
 33169 ;;		line 463 in file "../../github/CBUSlib/romops.c"
 33170 ;; Parameters:    Size  Location     Type
 33171 ;;  addr            2   23[BANK0 ] unsigned int 
 33172 ;;  data            2   25[BANK0 ] unsigned int 
 33173 ;; Auto vars:     Size  Location     Type
 33174 ;;  ee_addr         2   27[BANK0 ] unsigned int 
 33175 ;; Return value:  Size  Location     Type
 33176 ;;                  1    wreg      void 
 33177 ;; Registers used:
 33178 ;;		wreg, status,2, status,0, cstack
 33179 ;; Tracked objects:
 33180 ;;		On entry : 3F/0
 33181 ;;		On exit  : 3F/0
 33182 ;;		Unchanged: 0/0
 33183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;Total ram usage:        6 bytes
 33189 ;; Hardware stack levels used: 1
 33190 ;; Hardware stack levels required when called: 10
 33191 ;; This function calls:
 33192 ;;		_ee_write
 33193 ;; This function is called by:
 33194 ;;		_factoryResetEE
 33195 ;;		_SaveNodeDetails
 33196 ;; This function uses a non-reentrant model
 33197 ;;
 33198                           
 33199                           	psect	text167
 33200  00A2DA                     __ptext167:
 33201                           	callstack 0
 33202  00A2DA                     _ee_write_short:
 33203                           	callstack 18
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;romops.c: 464: WORD ee_addr = addr;
 33207                           
 33208                           ;incstack = 0
 33209  00A2DA  C077  F07B         	movff	ee_write_short@addr,ee_write_short@ee_addr
 33210  00A2DE  C078  F07C         	movff	ee_write_short@addr+1,ee_write_short@ee_addr+1
 33211                           
 33212                           ; BSR set to: 0
 33213                           ;romops.c: 465: ee_write(ee_addr++, (BYTE)(data&0xFF));
 33214  00A2E2  C07B  F073         	movff	ee_write_short@ee_addr,ee_write@addr
 33215  00A2E6  C07C  F074         	movff	ee_write_short@ee_addr+1,ee_write@addr+1
 33216  00A2EA  C079  F075         	movff	ee_write_short@data,ee_write@data
 33217  00A2EE  EC17  F04D         	call	_ee_write	;wreg free
 33218                           
 33219                           ; BSR set to: 0
 33220  00A2F2  4B7B               	infsnz	ee_write_short@ee_addr& (0+255),f,b
 33221  00A2F4  2B7C               	incf	(ee_write_short@ee_addr+1)& (0+255),f,b
 33222                           
 33223                           ; BSR set to: 0
 33224                           ;romops.c: 466: ee_write(ee_addr, (BYTE)(data>>8));
 33225  00A2F6  C07B  F073         	movff	ee_write_short@ee_addr,ee_write@addr
 33226  00A2FA  C07C  F074         	movff	ee_write_short@ee_addr+1,ee_write@addr+1
 33227  00A2FE  C07A  F075         	movff	ee_write_short@data+1,ee_write@data
 33228  00A302  EC17  F04D         	call	_ee_write	;wreg free
 33229                           
 33230                           ; BSR set to: 0
 33231  00A306  0012               	return		;funcret
 33232  00A308                     __end_of_ee_write_short:
 33233                           	callstack 0
 33234                           
 33235 ;; *************** function _ee_write *****************
 33236 ;; Defined at:
 33237 ;;		line 409 in file "../../github/CBUSlib/romops.c"
 33238 ;; Parameters:    Size  Location     Type
 33239 ;;  addr            2   19[BANK0 ] unsigned int 
 33240 ;;  data            1   21[BANK0 ] unsigned char 
 33241 ;; Auto vars:     Size  Location     Type
 33242 ;;  interruptEna    1   22[BANK0 ] unsigned char 
 33243 ;; Return value:  Size  Location     Type
 33244 ;;                  1    wreg      void 
 33245 ;; Registers used:
 33246 ;;		wreg, status,2, cstack
 33247 ;; Tracked objects:
 33248 ;;		On entry : 3F/0
 33249 ;;		On exit  : 3F/0
 33250 ;;		Unchanged: 0/0
 33251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33252 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;Total ram usage:        4 bytes
 33257 ;; Hardware stack levels used: 1
 33258 ;; Hardware stack levels required when called: 9
 33259 ;; This function calls:
 33260 ;;		_ee_read
 33261 ;; This function is called by:
 33262 ;;		_startDigitalOutput
 33263 ;;		_inputScan
 33264 ;;		_initialise
 33265 ;;		_factoryResetEE
 33266 ;;		_configIO
 33267 ;;		_pollServos
 33268 ;;		_canInit
 33269 ;;		_setNewCanId
 33270 ;;		_parseFLiMCmd
 33271 ;;		_SaveNodeDetails
 33272 ;;		_sendProducedEvent
 33273 ;;		_ee_write_short
 33274 ;; This function uses a non-reentrant model
 33275 ;;
 33276                           
 33277                           	psect	text168
 33278  009A2E                     __ptext168:
 33279                           	callstack 0
 33280  009A2E                     _ee_write:
 33281                           	callstack 18
 33282                           
 33283                           ; BSR set to: 0
 33284                           ;romops.c: 410: BYTE interruptEnabled;;romops.c: 411: interruptEnabled = INTCONbits.GIE;
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;incstack = 0
 33288  009A2E  0E00               	movlw	0
 33289  009A30  BEF2               	btfsc	242,7,c	;volatile
 33290  009A32  0E01               	movlw	1
 33291  009A34  6F76               	movwf	ee_write@interruptEnabled& (0+255),b
 33292  009A36                     l18289:
 33293                           
 33294                           ; BSR set to: 0
 33295                           ;romops.c: 413: EEADRH = addr >> 8;
 33296  009A36  C074  FF75         	movff	ee_write@addr+1,3957	;volatile
 33297                           
 33298                           ; BSR set to: 0
 33299                           ;romops.c: 414: EEADR = addr & 0xFF;
 33300  009A3A  C073  FF74         	movff	ee_write@addr,3956	;volatile
 33301                           
 33302                           ; BSR set to: 0
 33303                           ;romops.c: 415: EEDATA = data;
 33304  009A3E  C075  FF73         	movff	ee_write@data,3955	;volatile
 33305                           
 33306                           ; BSR set to: 0
 33307                           ;romops.c: 416: EECON1bits.EEPGD = 0;
 33308  009A42  9E7F               	bcf	127,7,c	;volsfr
 33309                           
 33310                           ; BSR set to: 0
 33311                           ;romops.c: 417: EECON1bits.CFGS = 0;
 33312  009A44  9C7F               	bcf	127,6,c	;volsfr
 33313                           
 33314                           ; BSR set to: 0
 33315                           ;romops.c: 418: EECON1bits.WREN = 1;
 33316  009A46  847F               	bsf	127,2,c	;volsfr
 33317                           
 33318                           ; BSR set to: 0
 33319                           ;romops.c: 419: (INTCONbits.GIE = 0);
 33320  009A48  9EF2               	bcf	242,7,c	;volatile
 33321                           
 33322                           ; BSR set to: 0
 33323                           ;romops.c: 420: EECON2 = 0x55;
 33324  009A4A  0E55               	movlw	85
 33325  009A4C  6E7E               	movwf	126,c	;volsfr
 33326                           
 33327                           ; BSR set to: 0
 33328                           ;romops.c: 421: EECON2 = 0xAA;
 33329  009A4E  0EAA               	movlw	170
 33330  009A50  6E7E               	movwf	126,c	;volsfr
 33331                           
 33332                           ; BSR set to: 0
 33333                           ;romops.c: 422: EECON1bits.WR = 1;
 33334  009A52  827F               	bsf	127,1,c	;volsfr
 33335  009A54                     l2502:
 33336                           
 33337                           ; BSR set to: 0
 33338  009A54  B27F               	btfsc	127,1,c	;volsfr
 33339  009A56  D7FE               	goto	l2502
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;romops.c: 431: if (interruptEnabled) {
 33343  009A58  5176               	movf	ee_write@interruptEnabled& (0+255),w,b
 33344  009A5A  A4D8               	btfss	status,2,c
 33345                           
 33346                           ; BSR set to: 0
 33347                           ;romops.c: 432: (INTCONbits.GIE = 1);
 33348  009A5C  8EF2               	bsf	242,7,c	;volatile
 33349  009A5E                     l2506:
 33350                           
 33351                           ; BSR set to: 0
 33352  009A5E  ACB7               	btfss	183,6,c	;volatile
 33353  009A60  D7FE               	goto	l2506
 33354                           
 33355                           ; BSR set to: 0
 33356                           ;romops.c: 436: PIR4bits.EEIF = 0;
 33357  009A62  9CB7               	bcf	183,6,c	;volatile
 33358                           
 33359                           ;romops.c: 437: EECON1bits.WREN = 0;
 33360  009A64  947F               	bcf	127,2,c	;volsfr
 33361                           
 33362                           ; BSR set to: 0
 33363                           ;romops.c: 438: } while (ee_read(addr) != data);
 33364  009A66  C073  F071         	movff	ee_write@addr,ee_read@addr
 33365  009A6A  C074  F072         	movff	ee_write@addr+1,ee_read@addr+1
 33366  009A6E  EC91  F052         	call	_ee_read	;wreg free
 33367  009A72  0100               	movlb	0	; () banked
 33368  009A74  1975               	xorwf	ee_write@data& (0+255),w,b
 33369  009A76  B4D8               	btfsc	status,2,c
 33370  009A78  0012               	return	
 33371  009A7A  D7DD               	goto	l18289
 33372  009A7C                     __end_of_ee_write:
 33373                           	callstack 0
 33374                           
 33375 ;; *************** function _ee_read *****************
 33376 ;; Defined at:
 33377 ;;		line 382 in file "../../github/CBUSlib/romops.c"
 33378 ;; Parameters:    Size  Location     Type
 33379 ;;  addr            2   17[BANK0 ] unsigned int 
 33380 ;; Auto vars:     Size  Location     Type
 33381 ;;		None
 33382 ;; Return value:  Size  Location     Type
 33383 ;;                  1    wreg      unsigned char 
 33384 ;; Registers used:
 33385 ;;		wreg, status,2
 33386 ;; Tracked objects:
 33387 ;;		On entry : 3F/0
 33388 ;;		On exit  : 0/0
 33389 ;;		Unchanged: 0/0
 33390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33394 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33395 ;;Total ram usage:        2 bytes
 33396 ;; Hardware stack levels used: 1
 33397 ;; Hardware stack levels required when called: 8
 33398 ;; This function calls:
 33399 ;;		Nothing
 33400 ;; This function is called by:
 33401 ;;		_initInputScan
 33402 ;;		_initialise
 33403 ;;		_configIO
 33404 ;;		_APP_doSOD
 33405 ;;		_initServos
 33406 ;;		_canInit
 33407 ;;		_flimInit
 33408 ;;		_sendProducedEvent
 33409 ;;		_doAreq
 33410 ;;		_ee_write
 33411 ;;		_ee_read_short
 33412 ;; This function uses a non-reentrant model
 33413 ;;
 33414                           
 33415                           	psect	text169
 33416  00A522                     __ptext169:
 33417                           	callstack 0
 33418  00A522                     _ee_read:
 33419                           	callstack 18
 33420                           
 33421                           ; BSR set to: 0
 33422                           
 33423                           ; BSR set to: 0
 33424                           ;romops.c: 384: ;
 33425                           
 33426                           ; BSR set to: 0
 33427                           ;incstack = 0
 33428  00A522  B27F               	btfsc	127,1,c	;volsfr
 33429  00A524  D7FE               	goto	__ptext169
 33430                           
 33431                           ; BSR set to: 0
 33432                           ;romops.c: 386: EEADRH = addr >> 8;
 33433  00A526  C072  FF75         	movff	ee_read@addr+1,3957	;volatile
 33434                           
 33435                           ;romops.c: 387: EEADR = addr & 0xFF;
 33436  00A52A  C071  FF74         	movff	ee_read@addr,3956	;volatile
 33437                           
 33438                           ;romops.c: 388: EECON1bits.EEPGD = 0;
 33439  00A52E  9E7F               	bcf	127,7,c	;volsfr
 33440                           
 33441                           ;romops.c: 389: EECON1bits.CFGS = 0;
 33442  00A530  9C7F               	bcf	127,6,c	;volsfr
 33443                           
 33444                           ;romops.c: 390: EECON1bits.RD = 1;
 33445  00A532  807F               	bsf	127,0,c	;volsfr
 33446  00A534                     l2495:
 33447                           
 33448                           ; BSR set to: 0
 33449  00A534  B07F               	btfsc	127,0,c	;volsfr
 33450  00A536  D7FE               	goto	l2495
 33451                           
 33452                           ; BSR set to: 0
 33453  00A538  F000               	nop		;# 
 33454                           
 33455                           ;romops.c: 400: return EEDATA;
 33456  00A53A  5073               	movf	115,w,c	;volatile
 33457  00A53C  0012               	return		;funcret
 33458  00A53E                     __end_of_ee_read:
 33459                           	callstack 0
 33460                           
 33461 ;; *************** function _SLiMRevert *****************
 33462 ;; Defined at:
 33463 ;;		line 286 in file "../../github/CBUSlib/FliM.c"
 33464 ;; Parameters:    Size  Location     Type
 33465 ;;		None
 33466 ;; Auto vars:     Size  Location     Type
 33467 ;;		None
 33468 ;; Return value:  Size  Location     Type
 33469 ;;                  1    wreg      void 
 33470 ;; Registers used:
 33471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33472 ;; Tracked objects:
 33473 ;;		On entry : 0/0
 33474 ;;		On exit  : 3F/0
 33475 ;;		Unchanged: 0/0
 33476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33481 ;;Total ram usage:        0 bytes
 33482 ;; Hardware stack levels used: 1
 33483 ;; Hardware stack levels required when called: 14
 33484 ;; This function calls:
 33485 ;;		_cbusSendOpcNN
 33486 ;; This function is called by:
 33487 ;;		_FLiMSWCheck
 33488 ;; This function uses a non-reentrant model
 33489 ;;
 33490                           
 33491                           	psect	text170
 33492  00A5BE                     __ptext170:
 33493                           	callstack 0
 33494  00A5BE                     _SLiMRevert:
 33495                           	callstack 15
 33496                           
 33497                           ;FliM.c: 290: cbusSendOpcNN(0xFF, 0x51, -1, cbusMsg);
 33498                           
 33499                           ;incstack = 0
 33500  00A5BE  0E51               	movlw	81
 33501  00A5C0  0100               	movlb	0	; () banked
 33502  00A5C2  6F93               	movwf	cbusSendOpcNN@opc& (0+255),b
 33503  00A5C4  0EFF               	movlw	255
 33504  00A5C6  6F95               	movwf	(cbusSendOpcNN@nodeID+1)& (0+255),b
 33505  00A5C8  6994               	setf	cbusSendOpcNN@nodeID& (0+255),b
 33506  00A5CA  0E1C               	movlw	low _cbusMsg
 33507  00A5CC  6F96               	movwf	cbusSendOpcNN@msg& (0+255),b
 33508  00A5CE  0EFF               	movlw	255
 33509  00A5D0  ECFD  F051         	call	_cbusSendOpcNN
 33510                           
 33511                           ; BSR set to: 0
 33512  00A5D4  0012               	return		;funcret
 33513  00A5D6                     __end_of_SLiMRevert:
 33514                           	callstack 0
 33515                           
 33516 ;; *************** function _cbusSendOpcNN *****************
 33517 ;; Defined at:
 33518 ;;		line 166 in file "../../github/CBUSlib/cbus.c"
 33519 ;; Parameters:    Size  Location     Type
 33520 ;;  cbusNum         1    wreg     unsigned char 
 33521 ;;  opc             1   51[BANK0 ] unsigned char 
 33522 ;;  nodeID          2   52[BANK0 ] unsigned int 
 33523 ;;  msg             1   54[BANK0 ] PTR unsigned char 
 33524 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusMsg(16), 
 33525 ;; Auto vars:     Size  Location     Type
 33526 ;;  cbusNum         1   55[BANK0 ] unsigned char 
 33527 ;; Return value:  Size  Location     Type
 33528 ;;                  1    wreg      unsigned char 
 33529 ;; Registers used:
 33530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33531 ;; Tracked objects:
 33532 ;;		On entry : 3F/0
 33533 ;;		On exit  : 3F/0
 33534 ;;		Unchanged: 0/0
 33535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33539 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33540 ;;Total ram usage:        5 bytes
 33541 ;; Hardware stack levels used: 1
 33542 ;; Hardware stack levels required when called: 13
 33543 ;; This function calls:
 33544 ;;		_cbusSendMsgNN
 33545 ;; This function is called by:
 33546 ;;		_pollAnalogue
 33547 ;;		_requestNodeNumber
 33548 ;;		_SLiMRevert
 33549 ;; This function uses a non-reentrant model
 33550 ;;
 33551                           
 33552                           	psect	text171
 33553  00A3FA                     __ptext171:
 33554                           	callstack 0
 33555  00A3FA                     _cbusSendOpcNN:
 33556                           	callstack 16
 33557                           
 33558                           ; BSR set to: 0
 33559                           ;incstack = 0
 33560                           ;cbusSendOpcNN@cbusNum stored from wreg
 33561  00A3FA  6F97               	movwf	cbusSendOpcNN@cbusNum& (0+255),b
 33562                           
 33563                           ;cbus.c: 168: msg[d0] = opc;
 33564  00A3FC  0100               	movlb	0	; () banked
 33565  00A3FE  5196               	movf	cbusSendOpcNN@msg& (0+255),w,b
 33566  00A400  6ED9               	movwf	fsr2l,c
 33567  00A402  6ADA               	clrf	fsr2h,c
 33568  00A404  0E06               	movlw	6
 33569  00A406  26D9               	addwf	fsr2l,f,c
 33570  00A408  C093  FFDF         	movff	cbusSendOpcNN@opc,indf2
 33571                           
 33572                           ; BSR set to: 0
 33573                           ;cbus.c: 169: return cbusSendMsgNN(cbusNum, nodeID, msg);;	Return value of _cbusSendOpcN
      +                          N is never used
 33574  00A40C  C094  F08F         	movff	cbusSendOpcNN@nodeID,cbusSendMsgNN@eventNode
 33575  00A410  C095  F090         	movff	cbusSendOpcNN@nodeID+1,cbusSendMsgNN@eventNode+1
 33576  00A414  C096  F091         	movff	cbusSendOpcNN@msg,cbusSendMsgNN@msg
 33577  00A418  5197               	movf	cbusSendOpcNN@cbusNum& (0+255),w,b
 33578  00A41A  EC4C  F04F         	call	_cbusSendMsgNN
 33579                           
 33580                           ; BSR set to: 0
 33581  00A41E  0012               	return		;funcret
 33582  00A420                     __end_of_cbusSendOpcNN:
 33583                           	callstack 0
 33584                           
 33585 ;; *************** function _cbusSendMsgNN *****************
 33586 ;; Defined at:
 33587 ;;		line 270 in file "../../github/CBUSlib/cbus.c"
 33588 ;; Parameters:    Size  Location     Type
 33589 ;;  cbusNum         1    wreg     unsigned char 
 33590 ;;  eventNode       2   47[BANK0 ] unsigned int 
 33591 ;;  msg             1   49[BANK0 ] PTR unsigned char 
 33592 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 33593 ;;		 -> cbusMsg(16), 
 33594 ;; Auto vars:     Size  Location     Type
 33595 ;;  cbusNum         1   50[BANK0 ] unsigned char 
 33596 ;; Return value:  Size  Location     Type
 33597 ;;                  1    wreg      unsigned char 
 33598 ;; Registers used:
 33599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33600 ;; Tracked objects:
 33601 ;;		On entry : 3F/0
 33602 ;;		On exit  : 3F/0
 33603 ;;		Unchanged: 0/0
 33604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33605 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33608 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33609 ;;Total ram usage:        4 bytes
 33610 ;; Hardware stack levels used: 1
 33611 ;; Hardware stack levels required when called: 12
 33612 ;; This function calls:
 33613 ;;		_cbusSendMsg
 33614 ;; This function is called by:
 33615 ;;		_cbusSendOpcNN
 33616 ;;		_cbusSendEventWithData
 33617 ;;		_QNNrespond
 33618 ;;		_doRqnpn
 33619 ;;		_doError
 33620 ;; This function uses a non-reentrant model
 33621 ;;
 33622                           
 33623                           	psect	text172
 33624  009E98                     __ptext172:
 33625                           	callstack 0
 33626  009E98                     _cbusSendMsgNN:
 33627                           	callstack 13
 33628                           
 33629                           ; BSR set to: 0
 33630                           ;incstack = 0
 33631                           ;cbusSendMsgNN@cbusNum stored from wreg
 33632  009E98  6F92               	movwf	cbusSendMsgNN@cbusNum& (0+255),b
 33633                           
 33634                           ;cbus.c: 272: if (eventNode == -1)
 33635  009E9A  0100               	movlb	0	; () banked
 33636  009E9C  298F               	incf	cbusSendMsgNN@eventNode& (0+255),w,b
 33637  009E9E  E107               	bnz	l18435
 33638  009EA0  2990               	incf	(cbusSendMsgNN@eventNode+1)& (0+255),w,b
 33639  009EA2  A4D8               	btfss	status,2,c
 33640  009EA4  D004               	goto	l18435
 33641                           
 33642                           ; BSR set to: 0
 33643                           ;cbus.c: 273: eventNode = nodeID;
 33644  009EA6  C001  F08F         	movff	_nodeID,cbusSendMsgNN@eventNode
 33645  009EAA  C002  F090         	movff	_nodeID+1,cbusSendMsgNN@eventNode+1
 33646  009EAE                     l18435:
 33647                           
 33648                           ; BSR set to: 0
 33649                           ;cbus.c: 275: msg[d1] = eventNode>>8;
 33650  009EAE  5191               	movf	cbusSendMsgNN@msg& (0+255),w,b
 33651  009EB0  6ED9               	movwf	fsr2l,c
 33652  009EB2  6ADA               	clrf	fsr2h,c
 33653  009EB4  0E07               	movlw	7
 33654  009EB6  26D9               	addwf	fsr2l,f,c
 33655  009EB8  C090  FFDF         	movff	cbusSendMsgNN@eventNode+1,indf2
 33656                           
 33657                           ;cbus.c: 276: msg[d2] = eventNode & 0xFF;
 33658  009EBC  5191               	movf	cbusSendMsgNN@msg& (0+255),w,b
 33659  009EBE  6ED9               	movwf	fsr2l,c
 33660  009EC0  6ADA               	clrf	fsr2h,c
 33661  009EC2  0E08               	movlw	8
 33662  009EC4  26D9               	addwf	fsr2l,f,c
 33663  009EC6  C08F  FFDF         	movff	cbusSendMsgNN@eventNode,indf2
 33664                           
 33665                           ; BSR set to: 0
 33666                           ;cbus.c: 277: return cbusSendMsg(cbusNum, msg);
 33667  009ECA  C091  F08B         	movff	cbusSendMsgNN@msg,cbusSendMsg@msg
 33668  009ECE  5192               	movf	cbusSendMsgNN@cbusNum& (0+255),w,b
 33669  009ED0  ECA7  F04F         	call	_cbusSendMsg
 33670                           
 33671                           ; BSR set to: 0
 33672  009ED4  0012               	return		;funcret
 33673  009ED6                     __end_of_cbusSendMsgNN:
 33674                           	callstack 0
 33675                           
 33676 ;; *************** function _cbusSendMsg *****************
 33677 ;; Defined at:
 33678 ;;		line 290 in file "../../github/CBUSlib/cbus.c"
 33679 ;; Parameters:    Size  Location     Type
 33680 ;;  cbusNum         1    wreg     unsigned char 
 33681 ;;  msg             1   43[BANK0 ] PTR unsigned char 
 33682 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 33683 ;;		 -> cbusMsg(16), 
 33684 ;; Auto vars:     Size  Location     Type
 33685 ;;  cbusNum         1   46[BANK0 ] unsigned char 
 33686 ;; Return value:  Size  Location     Type
 33687 ;;                  1    wreg      unsigned char 
 33688 ;; Registers used:
 33689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33690 ;; Tracked objects:
 33691 ;;		On entry : 3F/0
 33692 ;;		On exit  : 3F/0
 33693 ;;		Unchanged: 0/0
 33694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33695 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33699 ;;Total ram usage:        4 bytes
 33700 ;; Hardware stack levels used: 1
 33701 ;; Hardware stack levels required when called: 11
 33702 ;; This function calls:
 33703 ;;		_canSend
 33704 ;; This function is called by:
 33705 ;;		_cbusSendMsgMyNN
 33706 ;;		_cbusSendMsgNN
 33707 ;;		_doRqnp
 33708 ;;		_doRqmn
 33709 ;;		_doAreq
 33710 ;; This function uses a non-reentrant model
 33711 ;;
 33712                           
 33713                           	psect	text173
 33714  009F4E                     __ptext173:
 33715                           	callstack 0
 33716  009F4E                     _cbusSendMsg:
 33717                           	callstack 13
 33718                           
 33719                           ; BSR set to: 0
 33720                           ;incstack = 0
 33721                           ;cbusSendMsg@cbusNum stored from wreg
 33722  009F4E  6F8E               	movwf	cbusSendMsg@cbusNum& (0+255),b
 33723                           
 33724                           ;cbus.c: 293: if ((cbusNum == 0) || (cbusNum == 0xFF) )
 33725  009F50  0100               	movlb	0	; () banked
 33726  009F52  518E               	movf	cbusSendMsg@cbusNum& (0+255),w,b
 33727  009F54  B4D8               	btfsc	status,2,c
 33728  009F56  D003               	goto	u22450
 33729                           
 33730                           ; BSR set to: 0
 33731  009F58  298E               	incf	cbusSendMsg@cbusNum& (0+255),w,b
 33732  009F5A  A4D8               	btfss	status,2,c
 33733  009F5C  D014               	goto	l18249
 33734  009F5E                     u22450:
 33735                           
 33736                           ; BSR set to: 0
 33737                           ;cbus.c: 294: return canSend( msg, (unsigned char)((unsigned char)(msg[d0] >> 5U)+1U));
 33738  009F5E  C08B  F088         	movff	cbusSendMsg@msg,canSend@msg
 33739  009F62  518B               	movf	cbusSendMsg@msg& (0+255),w,b
 33740  009F64  6ED9               	movwf	fsr2l,c
 33741  009F66  6ADA               	clrf	fsr2h,c
 33742  009F68  0E06               	movlw	6
 33743  009F6A  26D9               	addwf	fsr2l,f,c
 33744  009F6C  50DF               	movf	indf2,w,c
 33745  009F6E  6F8C               	movwf	??_cbusSendMsg& (0+255),b
 33746  009F70  0E05               	movlw	5
 33747  009F72  6F8D               	movwf	(??_cbusSendMsg+1)& (0+255),b
 33748  009F74                     u22465:
 33749  009F74  90D8               	bcf	status,0,c
 33750  009F76  338C               	rrcf	??_cbusSendMsg& (0+255),f,b
 33751  009F78  2F8D               	decfsz	(??_cbusSendMsg+1)& (0+255),f,b
 33752  009F7A  D7FC               	goto	u22465
 33753  009F7C  298C               	incf	??_cbusSendMsg& (0+255),w,b
 33754  009F7E  6F89               	movwf	canSend@msgLen& (0+255),b
 33755  009F80  EC9F  F052         	call	_canSend	;wreg free
 33756  009F84  0012               	return	
 33757  009F86                     l18249:
 33758                           
 33759                           ; BSR set to: 0
 33760                           ;cbus.c: 305: return 1;
 33761  009F86  0E01               	movlw	1
 33762                           
 33763                           ; BSR set to: 0
 33764  009F88  0012               	return		;funcret
 33765  009F8A                     __end_of_cbusSendMsg:
 33766                           	callstack 0
 33767                           
 33768 ;; *************** function _canSend *****************
 33769 ;; Defined at:
 33770 ;;		line 334 in file "../../github/CBUSlib/can18.c"
 33771 ;; Parameters:    Size  Location     Type
 33772 ;;  msg             1   40[BANK0 ] PTR unsigned char 
 33773 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 33774 ;;		 -> cbusMsg(16), 
 33775 ;;  msgLen          1   41[BANK0 ] unsigned char 
 33776 ;; Auto vars:     Size  Location     Type
 33777 ;;  success         1   42[BANK0 ] unsigned char 
 33778 ;; Return value:  Size  Location     Type
 33779 ;;                  1    wreg      unsigned char 
 33780 ;; Registers used:
 33781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33782 ;; Tracked objects:
 33783 ;;		On entry : 3F/0
 33784 ;;		On exit  : 3F/0
 33785 ;;		Unchanged: 0/0
 33786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33787 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33791 ;;Total ram usage:        3 bytes
 33792 ;; Hardware stack levels used: 1
 33793 ;; Hardware stack levels required when called: 10
 33794 ;; This function calls:
 33795 ;;		_canTX
 33796 ;; This function is called by:
 33797 ;;		_cbusSendMsg
 33798 ;; This function uses a non-reentrant model
 33799 ;;
 33800                           
 33801                           	psect	text174
 33802  00A53E                     __ptext174:
 33803                           	callstack 0
 33804  00A53E                     _canSend:
 33805                           	callstack 13
 33806                           
 33807                           ; BSR set to: 0
 33808                           ;can18.c: 337: BOOL success;;can18.c: 342: msg[dlc] = msgLen;
 33809                           
 33810                           ; BSR set to: 0
 33811                           ;incstack = 0
 33812  00A53E  5188               	movf	canSend@msg& (0+255),w,b
 33813  00A540  6ED9               	movwf	fsr2l,c
 33814  00A542  6ADA               	clrf	fsr2h,c
 33815  00A544  0E05               	movlw	5
 33816  00A546  26D9               	addwf	fsr2l,f,c
 33817  00A548  C089  FFDF         	movff	canSend@msgLen,indf2
 33818                           
 33819                           ; BSR set to: 0
 33820                           ;can18.c: 343: success = canTX((CanPacket*)msg);
 33821  00A54C  C088  F07C         	movff	canSend@msg,canTX@msg
 33822  00A550  ECB8  F030         	call	_canTX	;wreg free
 33823  00A554  6F8A               	movwf	canSend@success& (0+255),b
 33824                           
 33825                           ; BSR set to: 0
 33826                           ;can18.c: 344: return( success );
 33827  00A556  518A               	movf	canSend@success& (0+255),w,b
 33828                           
 33829                           ; BSR set to: 0
 33830  00A558  0012               	return		;funcret
 33831  00A55A                     __end_of_canSend:
 33832                           	callstack 0
 33833                           
 33834 ;; *************** function _canTX *****************
 33835 ;; Defined at:
 33836 ;;		line 350 in file "../../github/CBUSlib/can18.c"
 33837 ;; Parameters:    Size  Location     Type
 33838 ;;  msg             1   28[BANK0 ] PTR struct .
 33839 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 33840 ;;		 -> cbusMsg(16), 
 33841 ;; Auto vars:     Size  Location     Type
 33842 ;;  ptr             2   34[BANK0 ] PTR unsigned char 
 33843 ;;		 -> TXB0CON(1), 
 33844 ;;  hiIndex         1   39[BANK0 ] unsigned char 
 33845 ;;  fullUp          1   38[BANK0 ] unsigned char 
 33846 ;; Return value:  Size  Location     Type
 33847 ;;                  1    wreg      unsigned char 
 33848 ;; Registers used:
 33849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33850 ;; Tracked objects:
 33851 ;;		On entry : 3F/0
 33852 ;;		On exit  : 3F/0
 33853 ;;		Unchanged: 0/0
 33854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33855 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33856 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33857 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33858 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33859 ;;Total ram usage:       12 bytes
 33860 ;; Hardware stack levels used: 1
 33861 ;; Hardware stack levels required when called: 9
 33862 ;; This function calls:
 33863 ;;		_memcpy
 33864 ;;		_tickGet
 33865 ;; This function is called by:
 33866 ;;		_canSend
 33867 ;; This function uses a non-reentrant model
 33868 ;;
 33869                           
 33870                           	psect	text175
 33871  006170                     __ptext175:
 33872                           	callstack 0
 33873  006170                     _canTX:
 33874                           	callstack 13
 33875                           
 33876                           ; BSR set to: 0
 33877                           ;can18.c: 352: BYTE* ptr;;can18.c: 353: BOOL fullUp;;can18.c: 354: BYTE hiIndex;;can18.c
      +                          : 356: msg->buffer[con] = 0;
 33878                           
 33879                           ; BSR set to: 0
 33880                           ;incstack = 0
 33881  006170  517C               	movf	canTX@msg& (0+255),w,b
 33882  006172  6ED9               	movwf	fsr2l,c
 33883  006174  6ADA               	clrf	fsr2h,c
 33884  006176  0E00               	movlw	0
 33885  006178  6EDF               	movwf	indf2,c
 33886                           
 33887                           ; BSR set to: 0
 33888                           ;can18.c: 357: msg->buffer[dlc] &= 0x0F;
 33889  00617A  517C               	movf	canTX@msg& (0+255),w,b
 33890  00617C  6ED9               	movwf	fsr2l,c
 33891  00617E  6ADA               	clrf	fsr2h,c
 33892  006180  0E05               	movlw	5
 33893  006182  26D9               	addwf	fsr2l,f,c
 33894  006184  0E0F               	movlw	15
 33895  006186  16DF               	andwf	indf2,f,c
 33896                           
 33897                           ; BSR set to: 0
 33898                           ;can18.c: 358: msg->buffer[sidh] = 0b10110000 | ((canID & 0x78U) >>3U);
 33899  006188  517C               	movf	canTX@msg& (0+255),w,b
 33900  00618A  6ED9               	movwf	fsr2l,c
 33901  00618C  6ADA               	clrf	fsr2h,c
 33902  00618E  0E01               	movlw	1
 33903  006190  26D9               	addwf	fsr2l,f,c
 33904  006192  382C               	swapf	_canID^0,w,c
 33905  006194  46E8               	rlncf	wreg,f,c
 33906  006196  0B1F               	andlw	31
 33907  006198  0B0F               	andlw	15
 33908  00619A  09B0               	iorlw	176
 33909  00619C  6EDF               	movwf	indf2,c
 33910                           
 33911                           ; BSR set to: 0
 33912                           ;can18.c: 359: msg->buffer[sidl] = (canID & 0x07U) << 5U;
 33913  00619E  517C               	movf	canTX@msg& (0+255),w,b
 33914  0061A0  6ED9               	movwf	fsr2l,c
 33915  0061A2  6ADA               	clrf	fsr2h,c
 33916  0061A4  0E02               	movlw	2
 33917  0061A6  26D9               	addwf	fsr2l,f,c
 33918  0061A8  C02C  F07D         	movff	_canID,??_canTX
 33919  0061AC  0E07               	movlw	7
 33920  0061AE  177D               	andwf	??_canTX& (0+255),f,b
 33921  0061B0  0E05               	movlw	5
 33922  0061B2  6F7E               	movwf	(??_canTX+1)& (0+255),b
 33923  0061B4                     u21935:
 33924  0061B4  90D8               	bcf	status,0,c
 33925  0061B6  377D               	rlcf	??_canTX& (0+255),f,b
 33926  0061B8  2F7E               	decfsz	(??_canTX+1)& (0+255),f,b
 33927  0061BA  D7FC               	goto	u21935
 33928  0061BC  517D               	movf	??_canTX& (0+255),w,b
 33929  0061BE  6EDF               	movwf	indf2,c
 33930                           
 33931                           ; BSR set to: 0
 33932                           ;can18.c: 361: if (msg->buffer[dlc] > 8)
 33933  0061C0  517C               	movf	canTX@msg& (0+255),w,b
 33934  0061C2  6ED9               	movwf	fsr2l,c
 33935  0061C4  6ADA               	clrf	fsr2h,c
 33936  0061C6  0E05               	movlw	5
 33937  0061C8  26D9               	addwf	fsr2l,f,c
 33938  0061CA  0E08               	movlw	8
 33939  0061CC  64DF               	cpfsgt	indf2,c
 33940  0061CE  D007               	goto	l17979
 33941                           
 33942                           ; BSR set to: 0
 33943                           ;can18.c: 362: msg->buffer[dlc] = 8;
 33944  0061D0  517C               	movf	canTX@msg& (0+255),w,b
 33945  0061D2  6ED9               	movwf	fsr2l,c
 33946  0061D4  6ADA               	clrf	fsr2h,c
 33947  0061D6  0E05               	movlw	5
 33948  0061D8  26D9               	addwf	fsr2l,f,c
 33949  0061DA  0E08               	movlw	8
 33950  0061DC  6EDF               	movwf	indf2,c
 33951  0061DE                     l17979:
 33952                           
 33953                           ; BSR set to: 0
 33954                           ;can18.c: 365: PIE5bits.TXBnIE = 0;
 33955  0061DE  9876               	bcf	118,4,c	;volatile
 33956                           
 33957                           ; BSR set to: 0
 33958                           ;can18.c: 369: if (((txIndexNextUsed == txIndexNextFree) || canTransmitFailed) && (!TXB0
      +                          CONbits.TXREQ))
 33959  0061E0  5011               	movf	_txIndexNextFree^0,w,c
 33960  0061E2  1810               	xorwf	_txIndexNextUsed^0,w,c
 33961  0061E4  B4D8               	btfsc	status,2,c
 33962  0061E6  D003               	goto	u21960
 33963                           
 33964                           ; BSR set to: 0
 33965  0061E8  500C               	movf	_canTransmitFailed^0,w,c
 33966  0061EA  B4D8               	btfsc	status,2,c
 33967  0061EC  D032               	goto	l17999
 33968  0061EE                     u21960:
 33969                           
 33970                           ; BSR set to: 0
 33971  0061EE  010F               	movlb	15	; () banked
 33972  0061F0  B720               	btfsc	32,3,b	;volatile
 33973  0061F2  D02F               	goto	l17999
 33974                           
 33975                           ; BSR set to: 15
 33976                           ;can18.c: 370: {;can18.c: 371: ptr = (BYTE*) & TXB0CON;
 33977  0061F4  0E20               	movlw	32
 33978  0061F6  0100               	movlb	0	; () banked
 33979  0061F8  6F82               	movwf	canTX@ptr& (0+255),b
 33980  0061FA  0E0F               	movlw	15
 33981  0061FC  6F83               	movwf	(canTX@ptr+1)& (0+255),b
 33982                           
 33983                           ; BSR set to: 0
 33984                           ;can18.c: 372: memcpy(ptr, (void *) msg->buffer, msg->buffer[dlc] + 6U);
 33985  0061FE  C082  F071         	movff	canTX@ptr,memcpy@d1
 33986  006202  C083  F072         	movff	canTX@ptr+1,memcpy@d1+1
 33987  006206  C07C  F073         	movff	canTX@msg,memcpy@s1
 33988  00620A  6B74               	clrf	(memcpy@s1+1)& (0+255),b
 33989  00620C  517C               	movf	canTX@msg& (0+255),w,b
 33990  00620E  6ED9               	movwf	fsr2l,c
 33991  006210  6ADA               	clrf	fsr2h,c
 33992  006212  0E05               	movlw	5
 33993  006214  26D9               	addwf	fsr2l,f,c
 33994  006216  50DF               	movf	indf2,w,c
 33995  006218  6F7D               	movwf	??_canTX& (0+255),b
 33996  00621A  0E06               	movlw	6
 33997  00621C  257D               	addwf	??_canTX& (0+255),w,b
 33998  00621E  6F75               	movwf	memcpy@n& (0+255),b
 33999  006220  6B76               	clrf	(memcpy@n+1)& (0+255),b
 34000  006222  0E00               	movlw	0
 34001  006224  2376               	addwfc	(memcpy@n+1)& (0+255),f,b
 34002  006226  EC65  F04E         	call	_memcpy	;wreg free
 34003                           
 34004                           ; BSR set to: 0
 34005                           ;can18.c: 374: larbRetryCount = 10;
 34006  00622A  0E0A               	movlw	10
 34007  00622C  6E0D               	movwf	_larbRetryCount^0,c
 34008                           
 34009                           ; BSR set to: 0
 34010                           ;can18.c: 375: canTransmitTimeout.Val = tickGet();
 34011  00622E  EC9D  F04B         	call	_tickGet	;wreg free
 34012  006232  C071  F1B4         	movff	?_tickGet,_canTransmitTimeout
 34013  006236  C072  F1B5         	movff	?_tickGet+1,_canTransmitTimeout+1
 34014  00623A  C073  F1B6         	movff	?_tickGet+2,_canTransmitTimeout+2
 34015  00623E  C074  F1B7         	movff	?_tickGet+3,_canTransmitTimeout+3
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;can18.c: 376: canTransmitFailed = 0;
 34019  006242  0E00               	movlw	0
 34020  006244  6E0C               	movwf	_canTransmitFailed^0,c
 34021                           
 34022                           ; BSR set to: 0
 34023                           ;can18.c: 378: TXB0CONbits.TXREQ = 1;
 34024  006246  010F               	movlb	15	; () banked
 34025  006248  8720               	bsf	32,3,b	;volatile
 34026                           
 34027                           ; BSR set to: 15
 34028                           ;can18.c: 379: fullUp = 0;
 34029  00624A  0E00               	movlw	0
 34030  00624C  0100               	movlb	0	; () banked
 34031  00624E  6F86               	movwf	canTX@fullUp& (0+255),b
 34032                           
 34033                           ;can18.c: 380: }
 34034  006250  D05F               	goto	l18023
 34035  006252                     l17999:
 34036                           
 34037                           ;can18.c: 381: else;can18.c: 382: {;can18.c: 383: if (!(fullUp = (unsigned char)(txIndex
      +                          NextFree == 0xFFU)))
 34038  006252  2811               	incf	_txIndexNextFree^0,w,c
 34039  006254  A4D8               	btfss	status,2,c
 34040  006256  D002               	goto	u21980
 34041  006258  0E01               	movlw	1
 34042  00625A  D001               	goto	u21990
 34043  00625C                     u21980:
 34044  00625C  0E00               	movlw	0
 34045  00625E                     u21990:
 34046  00625E  0100               	movlb	0	; () banked
 34047  006260  6F86               	movwf	canTX@fullUp& (0+255),b
 34048  006262  5186               	movf	canTX@fullUp& (0+255),w,b
 34049  006264  A4D8               	btfss	status,2,c
 34050  006266  D027               	goto	l18011
 34051                           
 34052                           ; BSR set to: 0
 34053                           ;can18.c: 384: {;can18.c: 385: memcpy( canTxFifo[txIndexNextFree].buffer, msg->buffer, m
      +                          sg->buffer[dlc] + 6U);
 34054  006268  5011               	movf	_txIndexNextFree^0,w,c
 34055  00626A  0D10               	mullw	16
 34056  00626C  0E00               	movlw	low _canTxFifo
 34057  00626E  24F3               	addwf	243,w,c
 34058  006270  6F71               	movwf	memcpy@d1& (0+255),b
 34059  006272  0E06               	movlw	high _canTxFifo
 34060  006274  20F4               	addwfc	prodh,w,c
 34061  006276  6F72               	movwf	(memcpy@d1+1)& (0+255),b
 34062  006278  C07C  F073         	movff	canTX@msg,memcpy@s1
 34063  00627C  6B74               	clrf	(memcpy@s1+1)& (0+255),b
 34064  00627E  517C               	movf	canTX@msg& (0+255),w,b
 34065  006280  6ED9               	movwf	fsr2l,c
 34066  006282  6ADA               	clrf	fsr2h,c
 34067  006284  0E05               	movlw	5
 34068  006286  26D9               	addwf	fsr2l,f,c
 34069  006288  50DF               	movf	indf2,w,c
 34070  00628A  6F7D               	movwf	??_canTX& (0+255),b
 34071  00628C  0E06               	movlw	6
 34072  00628E  257D               	addwf	??_canTX& (0+255),w,b
 34073  006290  6F75               	movwf	memcpy@n& (0+255),b
 34074  006292  6B76               	clrf	(memcpy@n+1)& (0+255),b
 34075  006294  0E00               	movlw	0
 34076  006296  2376               	addwfc	(memcpy@n+1)& (0+255),f,b
 34077  006298  EC65  F04E         	call	_memcpy	;wreg free
 34078                           
 34079                           ; BSR set to: 0
 34080                           ;can18.c: 387: if (++txIndexNextFree == 16U )
 34081  00629C  2A11               	incf	_txIndexNextFree^0,f,c
 34082  00629E  0E10               	movlw	16
 34083  0062A0  1811               	xorwf	_txIndexNextFree^0,w,c
 34084  0062A2  A4D8               	btfss	status,2,c
 34085  0062A4  D002               	goto	l18007
 34086                           
 34087                           ; BSR set to: 0
 34088                           ;can18.c: 388: txIndexNextFree = 0U;
 34089  0062A6  0E00               	movlw	0
 34090  0062A8  6E11               	movwf	_txIndexNextFree^0,c
 34091  0062AA                     l18007:
 34092                           
 34093                           ; BSR set to: 0
 34094                           ;can18.c: 390: if (txIndexNextUsed == txIndexNextFree)
 34095  0062AA  5011               	movf	_txIndexNextFree^0,w,c
 34096  0062AC  1810               	xorwf	_txIndexNextUsed^0,w,c
 34097  0062AE  A4D8               	btfss	status,2,c
 34098  0062B0  D004               	goto	l1596
 34099                           
 34100                           ; BSR set to: 0
 34101                           ;can18.c: 391: txIndexNextFree = 0xFFU;
 34102  0062B2  6811               	setf	_txIndexNextFree^0,c
 34103  0062B4  D002               	goto	l1596
 34104  0062B6                     l18011:
 34105                           
 34106                           ; BSR set to: 0
 34107                           ;can18.c: 393: else;can18.c: 394: txOflowCount++;
 34108  0062B6  0101               	movlb	1	; () banked
 34109  0062B8  2BDB               	incf	_txOflowCount& (0+255),f,b
 34110  0062BA                     l1596:
 34111                           
 34112                           ;can18.c: 398: txFifoUsage++;
 34113  0062BA  0101               	movlb	1	; () banked
 34114  0062BC  2BD9               	incf	_txFifoUsage& (0+255),f,b
 34115                           
 34116                           ; BSR set to: 1
 34117                           ;can18.c: 399: hiIndex = ( txIndexNextFree < txIndexNextUsed ? txIndexNextFree + 16U : t
      +                          xIndexNextFree);
 34118  0062BE  5010               	movf	_txIndexNextUsed^0,w,c
 34119  0062C0  5C11               	subwf	_txIndexNextFree^0,w,c
 34120  0062C2  A0D8               	btfss	status,0,c
 34121  0062C4  D005               	goto	l18017
 34122                           
 34123                           ; BSR set to: 1
 34124  0062C6  C011  F084         	movff	_txIndexNextFree,_canTX$3451
 34125  0062CA  0100               	movlb	0	; () banked
 34126  0062CC  6B85               	clrf	(_canTX$3451+1)& (0+255),b
 34127  0062CE  D007               	goto	l18019
 34128  0062D0                     l18017:
 34129                           
 34130                           ; BSR set to: 1
 34131  0062D0  0E10               	movlw	16
 34132  0062D2  2411               	addwf	_txIndexNextFree^0,w,c
 34133  0062D4  0100               	movlb	0	; () banked
 34134  0062D6  6F84               	movwf	_canTX$3451& (0+255),b
 34135  0062D8  6B85               	clrf	(_canTX$3451+1)& (0+255),b
 34136  0062DA  0E00               	movlw	0
 34137  0062DC  2385               	addwfc	(_canTX$3451+1)& (0+255),f,b
 34138  0062DE                     l18019:
 34139                           
 34140                           ; BSR set to: 0
 34141  0062DE  C084  F087         	movff	_canTX$3451,canTX@hiIndex
 34142                           
 34143                           ;can18.c: 400: if ((hiIndex - txIndexNextUsed) > maxCanTxFifo )
 34144  0062E2  5010               	movf	_txIndexNextUsed^0,w,c
 34145  0062E4  C087  F07D         	movff	canTX@hiIndex,??_canTX
 34146  0062E8  6B7E               	clrf	(??_canTX+1)& (0+255),b
 34147  0062EA  5F7D               	subwf	??_canTX& (0+255),f,b
 34148  0062EC  0E00               	movlw	0
 34149  0062EE  5B7E               	subwfb	(??_canTX+1)& (0+255),f,b
 34150  0062F0  500B               	movf	_maxCanTxFifo^0,w,c
 34151  0062F2  6F7F               	movwf	(??_canTX+2)& (0+255),b
 34152  0062F4  6B80               	clrf	(??_canTX+3)& (0+255),b
 34153  0062F6  517D               	movf	??_canTX& (0+255),w,b
 34154  0062F8  5D7F               	subwf	(??_canTX+2)& (0+255),w,b
 34155  0062FA  5180               	movf	(??_canTX+3)& (0+255),w,b
 34156  0062FC  0A80               	xorlw	128
 34157  0062FE  6F81               	movwf	(??_canTX+4)& (0+255),b
 34158  006300  517E               	movf	(??_canTX+1)& (0+255),w,b
 34159  006302  0A80               	xorlw	128
 34160  006304  5981               	subwfb	(??_canTX+4)& (0+255),w,b
 34161  006306  B0D8               	btfsc	status,0,c
 34162  006308  D003               	goto	l18023
 34163                           
 34164                           ; BSR set to: 0
 34165                           ;can18.c: 401: maxCanTxFifo = (unsigned char)(hiIndex - txIndexNextUsed);
 34166  00630A  5010               	movf	_txIndexNextUsed^0,w,c
 34167  00630C  5D87               	subwf	canTX@hiIndex& (0+255),w,b
 34168  00630E  6E0B               	movwf	_maxCanTxFifo^0,c
 34169  006310                     l18023:
 34170                           
 34171                           ; BSR set to: 0
 34172                           ;can18.c: 402: };can18.c: 404: PIE5bits.TXBnIE = 1;
 34173  006310  8876               	bsf	118,4,c	;volatile
 34174                           
 34175                           ; BSR set to: 0
 34176                           ;can18.c: 406: return (unsigned char)( ! fullUp);
 34177  006312  5186               	movf	canTX@fullUp& (0+255),w,b
 34178  006314  A4D8               	btfss	status,2,c
 34179  006316  D002               	goto	u22050
 34180  006318  0E01               	movlw	1
 34181  00631A  0012               	return	
 34182  00631C                     u22050:
 34183  00631C  0E00               	movlw	0
 34184                           
 34185                           ; BSR set to: 0
 34186  00631E  0012               	return		;funcret
 34187  006320                     __end_of_canTX:
 34188                           	callstack 0
 34189                           
 34190 ;; *************** function _tickGet *****************
 34191 ;; Defined at:
 34192 ;;		line 160 in file "../../github/CBUSlib/ticktime.c"
 34193 ;; Parameters:    Size  Location     Type
 34194 ;;		None
 34195 ;; Auto vars:     Size  Location     Type
 34196 ;;  currentTime     4   23[BANK0 ] struct _TickValue
 34197 ;;  IntFlag1        1   22[BANK0 ] unsigned char 
 34198 ;;  IntFlag2        1   21[BANK0 ] unsigned char 
 34199 ;; Return value:  Size  Location     Type
 34200 ;;                  4   17[BANK0 ] unsigned long 
 34201 ;; Registers used:
 34202 ;;		wreg, status,2, status,0
 34203 ;; Tracked objects:
 34204 ;;		On entry : 0/0
 34205 ;;		On exit  : 3F/0
 34206 ;;		Unchanged: 0/0
 34207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34209 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34211 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34212 ;;Total ram usage:       10 bytes
 34213 ;; Hardware stack levels used: 1
 34214 ;; Hardware stack levels required when called: 8
 34215 ;; This function calls:
 34216 ;;		Nothing
 34217 ;; This function is called by:
 34218 ;;		_main
 34219 ;;		_doWait
 34220 ;;		_initServos
 34221 ;;		_pollServos
 34222 ;;		_canInit
 34223 ;;		_canTX
 34224 ;;		_processEnumeration
 34225 ;;		_checkIncomingPacket
 34226 ;;		_FLiMSWCheck
 34227 ;;		_doFLiMFlash
 34228 ;;		_checkFlashing
 34229 ;;		_shortFlicker
 34230 ;;		_longFlicker
 34231 ;; This function uses a non-reentrant model
 34232 ;;
 34233                           
 34234                           	psect	text176
 34235  00973A                     __ptext176:
 34236                           	callstack 0
 34237  00973A                     _tickGet:
 34238                           	callstack 22
 34239                           
 34240                           ;ticktime.c: 162: TickValue currentTime;;ticktime.c: 166: BYTE IntFlag1;;ticktime.c: 167
      +                          : BYTE IntFlag2;;ticktime.c: 170: currentTime.byte.b2 = 0;
 34241                           
 34242                           ; BSR set to: 0
 34243                           ;incstack = 0
 34244  00973A  0E00               	movlw	0
 34245  00973C  0100               	movlb	0	; () banked
 34246  00973E  6F79               	movwf	(tickGet@currentTime+2)& (0+255),b
 34247                           
 34248                           ;ticktime.c: 171: currentTime.byte.b3 = 0;
 34249  009740  0E00               	movlw	0
 34250  009742  6F7A               	movwf	(tickGet@currentTime+3)& (0+255),b
 34251                           
 34252                           ; BSR set to: 0
 34253                           ;ticktime.c: 173: INTCONbits.TMR0IE = 0;
 34254  009744  9AF2               	bcf	242,5,c	;volatile
 34255  009746                     l17821:
 34256                           
 34257                           ; BSR set to: 0
 34258                           ;ticktime.c: 176: {;ticktime.c: 177: IntFlag1 = INTCONbits.TMR0IF;
 34259  009746  0E00               	movlw	0
 34260  009748  B4F2               	btfsc	242,2,c	;volatile
 34261  00974A  0E01               	movlw	1
 34262  00974C  6F76               	movwf	tickGet@IntFlag1& (0+255),b
 34263                           
 34264                           ; BSR set to: 0
 34265                           ;ticktime.c: 178: currentTime.byte.b0 = TMR0L;
 34266  00974E  CFD6 F077          	movff	4054,tickGet@currentTime	;volatile
 34267                           
 34268                           ; BSR set to: 0
 34269                           ;ticktime.c: 179: currentTime.byte.b1 = TMR0H;
 34270  009752  CFD7 F078          	movff	4055,tickGet@currentTime+1	;volatile
 34271                           
 34272                           ; BSR set to: 0
 34273                           ;ticktime.c: 180: IntFlag2 = INTCONbits.TMR0IF;
 34274  009756  0E00               	movlw	0
 34275  009758  B4F2               	btfsc	242,2,c	;volatile
 34276  00975A  0E01               	movlw	1
 34277  00975C  6F75               	movwf	tickGet@IntFlag2& (0+255),b
 34278                           
 34279                           ; BSR set to: 0
 34280                           ;ticktime.c: 181: } while(IntFlag1 != IntFlag2);
 34281  00975E  5175               	movf	tickGet@IntFlag2& (0+255),w,b
 34282  009760  1976               	xorwf	tickGet@IntFlag1& (0+255),w,b
 34283  009762  A4D8               	btfss	status,2,c
 34284  009764  D7F0               	goto	l17821
 34285                           
 34286                           ; BSR set to: 0
 34287                           ;ticktime.c: 183: if( IntFlag1 > 0 )
 34288  009766  5176               	movf	tickGet@IntFlag1& (0+255),w,b
 34289  009768  B4D8               	btfsc	status,2,c
 34290  00976A  D005               	goto	l17841
 34291                           
 34292                           ; BSR set to: 0
 34293                           ;ticktime.c: 184: {;ticktime.c: 185: INTCONbits.TMR0IF = 0;
 34294  00976C  94F2               	bcf	242,2,c	;volatile
 34295                           
 34296                           ; BSR set to: 0
 34297                           ;ticktime.c: 186: timerExtension1++;
 34298  00976E  2A04               	incf	_timerExtension1^0,f,c	;volatile
 34299                           
 34300                           ; BSR set to: 0
 34301                           ;ticktime.c: 187: if(timerExtension1 == 0)
 34302  009770  5004               	movf	_timerExtension1^0,w,c	;volatile
 34303  009772  B4D8               	btfsc	status,2,c
 34304                           
 34305                           ; BSR set to: 0
 34306                           ;ticktime.c: 188: {;ticktime.c: 189: timerExtension2++;
 34307  009774  2A03               	incf	_timerExtension2^0,f,c	;volatile
 34308  009776                     l17841:
 34309                           
 34310                           ; BSR set to: 0
 34311                           ;ticktime.c: 190: };ticktime.c: 191: };ticktime.c: 221: currentTime.byte.b2 += timerExte
      +                          nsion1;
 34312  009776  5004               	movf	_timerExtension1^0,w,c	;volatile
 34313  009778  2779               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 34314                           
 34315                           ; BSR set to: 0
 34316                           ;ticktime.c: 222: currentTime.byte.b3 += timerExtension2;
 34317  00977A  5003               	movf	_timerExtension2^0,w,c	;volatile
 34318  00977C  277A               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 34319                           
 34320                           ; BSR set to: 0
 34321                           ;ticktime.c: 225: INTCONbits.TMR0IE = 1;
 34322  00977E  8AF2               	bsf	242,5,c	;volatile
 34323                           
 34324                           ; BSR set to: 0
 34325                           ;ticktime.c: 238: return currentTime.Val;
 34326  009780  C077  F071         	movff	tickGet@currentTime,?_tickGet
 34327  009784  C078  F072         	movff	tickGet@currentTime+1,?_tickGet+1
 34328  009788  C079  F073         	movff	tickGet@currentTime+2,?_tickGet+2
 34329  00978C  C07A  F074         	movff	tickGet@currentTime+3,?_tickGet+3
 34330                           
 34331                           ; BSR set to: 0
 34332  009790  0012               	return		;funcret
 34333  009792                     __end_of_tickGet:
 34334                           	callstack 0
 34335                           
 34336 ;; *************** function _memcpy *****************
 34337 ;; Defined at:
 34338 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memcpy.c"
 34339 ;; Parameters:    Size  Location     Type
 34340 ;;  d1              2   17[BANK0 ] PTR void 
 34341 ;;		 -> canRxFifo(256), canTxFifo(256), TXB0CON(1), checkCBUS@msg(20), 
 34342 ;;  s1              2   19[BANK0 ] PTR const void 
 34343 ;;		 -> cbusMsg.buffer(14), cbusSendMyEvent@msg.buffer(14), cbusSendEvent@msg.buffer(14), cbusSendDataEvent@msg.buffer(1
      +4), 
 34344 ;;		 -> requestNodeNumber@local_cbusMsg.buffer(14), requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusS
      +endEvent@msg(10), 
 34345 ;;		 -> cbusSendMyEvent@msg(10), canRxFifo.buffer(14), canRxFifo(256), canTxFifo(256), 
 34346 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 34347 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 34348 ;;		 -> cbusMsg(16), 
 34349 ;;  n               2   21[BANK0 ] unsigned int 
 34350 ;; Auto vars:     Size  Location     Type
 34351 ;;  s               2   26[BANK0 ] PTR const unsigned char 
 34352 ;;		 -> cbusMsg.buffer(14), cbusSendMyEvent@msg.buffer(14), cbusSendEvent@msg.buffer(14), cbusSendDataEvent@msg.buffer(1
      +4), 
 34353 ;;		 -> requestNodeNumber@local_cbusMsg.buffer(14), requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusS
      +endEvent@msg(10), 
 34354 ;;		 -> cbusSendMyEvent@msg(10), canRxFifo.buffer(14), canRxFifo(256), canTxFifo(256), 
 34355 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 34356 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 34357 ;;		 -> cbusMsg(16), 
 34358 ;;  d               2   24[BANK0 ] PTR unsigned char 
 34359 ;;		 -> canRxFifo(256), canTxFifo(256), TXB0CON(1), checkCBUS@msg(20), 
 34360 ;;  tmp             1   23[BANK0 ] unsigned char 
 34361 ;; Return value:  Size  Location     Type
 34362 ;;                  2   17[BANK0 ] PTR void 
 34363 ;; Registers used:
 34364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34365 ;; Tracked objects:
 34366 ;;		On entry : 3F/0
 34367 ;;		On exit  : 3F/0
 34368 ;;		Unchanged: 0/0
 34369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34370 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34371 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34373 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34374 ;;Total ram usage:       11 bytes
 34375 ;; Hardware stack levels used: 1
 34376 ;; Hardware stack levels required when called: 8
 34377 ;; This function calls:
 34378 ;;		Nothing
 34379 ;; This function is called by:
 34380 ;;		_canTX
 34381 ;;		_canbusRecv
 34382 ;;		_insertIntoRxFifo
 34383 ;; This function uses a non-reentrant model
 34384 ;;
 34385                           
 34386                           	psect	text177
 34387  009CCA                     __ptext177:
 34388                           	callstack 0
 34389  009CCA                     _memcpy:
 34390                           	callstack 13
 34391                           
 34392                           ; BSR set to: 0
 34393                           
 34394                           ; BSR set to: 0
 34395                           ;incstack = 0
 34396  009CCA  C073  F07A         	movff	memcpy@s1,memcpy@s
 34397  009CCE  C074  F07B         	movff	memcpy@s1+1,memcpy@s+1
 34398  009CD2  C071  F078         	movff	memcpy@d1,memcpy@d
 34399  009CD6  C072  F079         	movff	memcpy@d1+1,memcpy@d+1
 34400  009CDA  D010               	goto	l17919
 34401  009CDC                     l17911:
 34402                           
 34403                           ; BSR set to: 0
 34404  009CDC  C07A  FFD9         	movff	memcpy@s,fsr2l
 34405  009CE0  C07B  FFDA         	movff	memcpy@s+1,fsr2h
 34406  009CE4  50DF               	movf	indf2,w,c
 34407  009CE6  6F77               	movwf	memcpy@tmp& (0+255),b
 34408                           
 34409                           ; BSR set to: 0
 34410  009CE8  4B7A               	infsnz	memcpy@s& (0+255),f,b
 34411  009CEA  2B7B               	incf	(memcpy@s+1)& (0+255),f,b
 34412                           
 34413                           ; BSR set to: 0
 34414  009CEC  C078  FFD9         	movff	memcpy@d,fsr2l
 34415  009CF0  C079  FFDA         	movff	memcpy@d+1,fsr2h
 34416  009CF4  C077  FFDF         	movff	memcpy@tmp,indf2
 34417                           
 34418                           ; BSR set to: 0
 34419  009CF8  4B78               	infsnz	memcpy@d& (0+255),f,b
 34420  009CFA  2B79               	incf	(memcpy@d+1)& (0+255),f,b
 34421  009CFC                     l17919:
 34422                           
 34423                           ; BSR set to: 0
 34424  009CFC  0775               	decf	memcpy@n& (0+255),f,b
 34425  009CFE  A0D8               	btfss	status,0,c
 34426  009D00  0776               	decf	(memcpy@n+1)& (0+255),f,b
 34427  009D02  2975               	incf	memcpy@n& (0+255),w,b
 34428  009D04  E1EB               	bnz	l17911
 34429  009D06  2976               	incf	(memcpy@n+1)& (0+255),w,b
 34430  009D08  B4D8               	btfsc	status,2,c
 34431  009D0A  0012               	return	
 34432  009D0C  D7E7               	goto	l17911
 34433  009D0E                     __end_of_memcpy:
 34434                           	callstack 0
 34435                           
 34436 ;; *************** function _low_isr *****************
 34437 ;; Defined at:
 34438 ;;		line 756 in file "../../github/CANMIOfirmware/main.c"
 34439 ;; Parameters:    Size  Location     Type
 34440 ;;		None
 34441 ;; Auto vars:     Size  Location     Type
 34442 ;;		None
 34443 ;; Return value:  Size  Location     Type
 34444 ;;                  1    wreg      void 
 34445 ;; Registers used:
 34446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34447 ;; Tracked objects:
 34448 ;;		On entry : 0/0
 34449 ;;		On exit  : 31/1
 34450 ;;		Unchanged: 0/0
 34451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34454 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34455 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34456 ;;Total ram usage:        7 bytes
 34457 ;; Hardware stack levels used: 1
 34458 ;; Hardware stack levels required when called: 7
 34459 ;; This function calls:
 34460 ;;		_canInterruptHandler
 34461 ;;		_tickISR
 34462 ;; This function is called by:
 34463 ;;		Interrupt level 1
 34464 ;; This function uses a non-reentrant model
 34465 ;;
 34466                           
 34467                           	psect	intcodelo
 34468  000858                     __pintcodelo:
 34469                           	callstack 0
 34470  000858                     _low_isr:
 34471                           	callstack 3
 34472                           
 34473                           ; BSR set to: 0
 34474                           ;incstack = 0
 34475  000858  804F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 34476  00085A  CFD8 F06A          	movff	status,??_low_isr
 34477  00085E  CFE8 F06B          	movff	wreg,??_low_isr+1
 34478  000862  CFE0 F06C          	movff	bsr,??_low_isr+2
 34479  000866  CFD9 F06D          	movff	fsr2l,??_low_isr+3
 34480  00086A  CFDA F06E          	movff	fsr2h,??_low_isr+4
 34481  00086E  CFF3 F06F          	movff	prodl,??_low_isr+5
 34482  000872  CFF4 F070          	movff	prodh,??_low_isr+6
 34483                           
 34484                           ;main.c: 758: tickISR();
 34485  000876  EC02  F053         	call	_tickISR	;wreg free
 34486                           
 34487                           ;main.c: 759: canInterruptHandler();
 34488  00087A  ECEB  F052         	call	_canInterruptHandler	;wreg free
 34489  00087E  C070  FFF4         	movff	??_low_isr+6,prodh
 34490  000882  C06F  FFF3         	movff	??_low_isr+5,prodl
 34491  000886  C06E  FFDA         	movff	??_low_isr+4,fsr2h
 34492  00088A  C06D  FFD9         	movff	??_low_isr+3,fsr2l
 34493  00088E  C06C  FFE0         	movff	??_low_isr+2,bsr
 34494  000892  C06B  FFE8         	movff	??_low_isr+1,wreg
 34495  000896  C06A  FFD8         	movff	??_low_isr,status
 34496  00089A  904F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 34497  00089C  0010               	retfie	
 34498  00089E                     __end_of_low_isr:
 34499                           	callstack 0
 34500                           
 34501 ;; *************** function _tickISR *****************
 34502 ;; Defined at:
 34503 ;;		line 244 in file "../../github/CBUSlib/ticktime.c"
 34504 ;; Parameters:    Size  Location     Type
 34505 ;;		None
 34506 ;; Auto vars:     Size  Location     Type
 34507 ;;		None
 34508 ;; Return value:  Size  Location     Type
 34509 ;;                  1    wreg      void 
 34510 ;; Registers used:
 34511 ;;		wreg, status,2, status,0
 34512 ;; Tracked objects:
 34513 ;;		On entry : 0/0
 34514 ;;		On exit  : 0/0
 34515 ;;		Unchanged: 0/0
 34516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34521 ;;Total ram usage:        0 bytes
 34522 ;; Hardware stack levels used: 1
 34523 ;; Hardware stack levels required when called: 3
 34524 ;; This function calls:
 34525 ;;		Nothing
 34526 ;; This function is called by:
 34527 ;;		_low_isr
 34528 ;; This function uses a non-reentrant model
 34529 ;;
 34530                           
 34531                           	psect	text179
 34532  00A604                     __ptext179:
 34533                           	callstack 0
 34534  00A604                     _tickISR:
 34535                           	callstack 6
 34536                           
 34537                           ;ticktime.c: 247: if(INTCONbits.TMR0IF)
 34538                           
 34539                           ;incstack = 0
 34540  00A604  A4F2               	btfss	242,2,c	;volatile
 34541  00A606  0012               	return	
 34542                           
 34543                           ;ticktime.c: 248: {;ticktime.c: 249: if(INTCONbits.TMR0IE)
 34544  00A608  AAF2               	btfss	242,5,c	;volatile
 34545  00A60A  0012               	return	
 34546                           
 34547                           ;ticktime.c: 250: {;ticktime.c: 252: INTCONbits.TMR0IF = 0;
 34548  00A60C  94F2               	bcf	242,2,c	;volatile
 34549                           
 34550                           ;ticktime.c: 253: timerExtension1++;
 34551  00A60E  2A04               	incf	_timerExtension1^0,f,c	;volatile
 34552                           
 34553                           ;ticktime.c: 254: if(timerExtension1 == 0) {
 34554  00A610  5004               	movf	_timerExtension1^0,w,c	;volatile
 34555  00A612  A4D8               	btfss	status,2,c
 34556  00A614  0012               	return	
 34557                           
 34558                           ;ticktime.c: 255: timerExtension2++;
 34559  00A616  2A03               	incf	_timerExtension2^0,f,c	;volatile
 34560  00A618  0012               	return	
 34561  00A61A                     __end_of_tickISR:
 34562                           	callstack 0
 34563                           
 34564 ;; *************** function _canInterruptHandler *****************
 34565 ;; Defined at:
 34566 ;;		line 775 in file "../../github/CBUSlib/can18.c"
 34567 ;; Parameters:    Size  Location     Type
 34568 ;;		None
 34569 ;; Auto vars:     Size  Location     Type
 34570 ;;		None
 34571 ;; Return value:  Size  Location     Type
 34572 ;;                  1    wreg      void 
 34573 ;; Registers used:
 34574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34575 ;; Tracked objects:
 34576 ;;		On entry : 0/0
 34577 ;;		On exit  : 31/1
 34578 ;;		Unchanged: 0/0
 34579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34584 ;;Total ram usage:        0 bytes
 34585 ;; Hardware stack levels used: 1
 34586 ;; Hardware stack levels required when called: 6
 34587 ;; This function calls:
 34588 ;;		_canFillRxFifo
 34589 ;;		_canTxError
 34590 ;;		_checkCANTimeout
 34591 ;;		_checkTxFifo
 34592 ;; This function is called by:
 34593 ;;		_low_isr
 34594 ;; This function uses a non-reentrant model
 34595 ;;
 34596                           
 34597                           	psect	text180
 34598  00A5D6                     __ptext180:
 34599                           	callstack 0
 34600  00A5D6                     _canInterruptHandler:
 34601                           	callstack 3
 34602                           
 34603                           ;can18.c: 777: if (PIR5bits.FIFOWMIF)
 34604                           
 34605                           ;incstack = 0
 34606  00A5D6  B077               	btfsc	119,0,c	;volatile
 34607                           
 34608                           ;can18.c: 778: canFillRxFifo();
 34609  00A5D8  EC0A  F043         	call	_canFillRxFifo	;wreg free
 34610                           
 34611                           ;can18.c: 780: if (PIR5bits.ERRIF)
 34612  00A5DC  BA77               	btfsc	119,5,c	;volatile
 34613                           
 34614                           ;can18.c: 781: canTxError();
 34615  00A5DE  EC28  F049         	call	_canTxError	;wreg free
 34616                           
 34617                           ;can18.c: 783: if (PIR5bits.TXBnIF)
 34618  00A5E2  B877               	btfsc	119,4,c	;volatile
 34619                           
 34620                           ;can18.c: 784: checkTxFifo();
 34621  00A5E4  ECAB  F03E         	call	_checkTxFifo	;wreg free
 34622                           
 34623                           ;can18.c: 786: checkCANTimeout();
 34624  00A5E8  EC3E  F04D         	call	_checkCANTimeout	;wreg free
 34625  00A5EC  0012               	return		;funcret
 34626  00A5EE                     __end_of_canInterruptHandler:
 34627                           	callstack 0
 34628                           
 34629 ;; *************** function _checkCANTimeout *****************
 34630 ;; Defined at:
 34631 ;;		line 478 in file "../../github/CBUSlib/can18.c"
 34632 ;; Parameters:    Size  Location     Type
 34633 ;;		None
 34634 ;; Auto vars:     Size  Location     Type
 34635 ;;		None
 34636 ;; Return value:  Size  Location     Type
 34637 ;;                  1    wreg      void 
 34638 ;; Registers used:
 34639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34640 ;; Tracked objects:
 34641 ;;		On entry : 0/0
 34642 ;;		On exit  : 31/1
 34643 ;;		Unchanged: 0/0
 34644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34649 ;;Total ram usage:        4 bytes
 34650 ;; Hardware stack levels used: 1
 34651 ;; Hardware stack levels required when called: 5
 34652 ;; This function calls:
 34653 ;;		_checkTxFifo
 34654 ;;		i1_tickGet
 34655 ;; This function is called by:
 34656 ;;		_canInterruptHandler
 34657 ;; This function uses a non-reentrant model
 34658 ;;
 34659                           
 34660                           	psect	text181
 34661  009A7C                     __ptext181:
 34662                           	callstack 0
 34663  009A7C                     _checkCANTimeout:
 34664                           	callstack 3
 34665                           
 34666                           ;can18.c: 480: if (canTransmitTimeout.Val != 0)
 34667                           
 34668                           ;incstack = 0
 34669  009A7C  0101               	movlb	1	; () banked
 34670  009A7E  51B4               	movf	_canTransmitTimeout& (0+255),w,b
 34671  009A80  11B5               	iorwf	(_canTransmitTimeout+1)& (0+255),w,b
 34672  009A82  11B6               	iorwf	(_canTransmitTimeout+2)& (0+255),w,b
 34673  009A84  11B7               	iorwf	(_canTransmitTimeout+3)& (0+255),w,b
 34674  009A86  B4D8               	btfsc	status,2,c
 34675  009A88  0012               	return	
 34676                           
 34677                           ; BSR set to: 1
 34678                           ;can18.c: 481: if ((tickGet() - canTransmitTimeout.Val) > 62500)
 34679  009A8A  EC20  F04C         	call	i1_tickGet	;wreg free
 34680  009A8E  0101               	movlb	1	; () banked
 34681  009A90  51B4               	movf	_canTransmitTimeout& (0+255),w,b
 34682  009A92  5C3D               	subwf	?i1_tickGet^0,w,c
 34683  009A94  6E4B               	movwf	??_checkCANTimeout^0,c
 34684  009A96  51B5               	movf	(_canTransmitTimeout+1)& (0+255),w,b
 34685  009A98  583E               	subwfb	(?i1_tickGet+1)^0,w,c
 34686  009A9A  6E4C               	movwf	(??_checkCANTimeout+1)^0,c
 34687  009A9C  51B6               	movf	(_canTransmitTimeout+2)& (0+255),w,b
 34688  009A9E  583F               	subwfb	(?i1_tickGet+2)^0,w,c
 34689  009AA0  6E4D               	movwf	(??_checkCANTimeout+2)^0,c
 34690  009AA2  51B7               	movf	(_canTransmitTimeout+3)& (0+255),w,b
 34691  009AA4  5840               	subwfb	(?i1_tickGet+3)^0,w,c
 34692  009AA6  6E4E               	movwf	(??_checkCANTimeout+3)^0,c
 34693  009AA8  504E               	movf	(??_checkCANTimeout+3)^0,w,c
 34694  009AAA  104D               	iorwf	(??_checkCANTimeout+2)^0,w,c
 34695  009AAC  E106               	bnz	i1u2641_20
 34696  009AAE  0E25               	movlw	37
 34697  009AB0  5C4B               	subwf	??_checkCANTimeout^0,w,c
 34698  009AB2  0EF4               	movlw	244
 34699  009AB4  584C               	subwfb	(??_checkCANTimeout+1)^0,w,c
 34700  009AB6  A0D8               	btfss	status,0,c
 34701  009AB8  0012               	return	
 34702  009ABA                     i1u2641_20:
 34703                           
 34704                           ; BSR set to: 1
 34705                           ;can18.c: 482: {;can18.c: 483: canTransmitFailed = 1;
 34706  009ABA  0E01               	movlw	1
 34707  009ABC  6E0C               	movwf	_canTransmitFailed^0,c
 34708                           
 34709                           ; BSR set to: 1
 34710                           ;can18.c: 484: txTimeoutCount++;
 34711  009ABE  2BDC               	incf	_txTimeoutCount& (0+255),f,b
 34712                           
 34713                           ; BSR set to: 1
 34714                           ;can18.c: 485: TXB0CONbits.TXREQ = 0;
 34715  009AC0  010F               	movlb	15	; () banked
 34716  009AC2  9720               	bcf	32,3,b	;volatile
 34717                           
 34718                           ; BSR set to: 15
 34719                           ;can18.c: 486: checkTxFifo();
 34720  009AC4  ECAB  F03E         	call	_checkTxFifo	;wreg free
 34721  009AC8  0012               	return		;funcret
 34722  009ACA                     __end_of_checkCANTimeout:
 34723                           	callstack 0
 34724                           
 34725 ;; *************** function _canTxError *****************
 34726 ;; Defined at:
 34727 ;;		line 740 in file "../../github/CBUSlib/can18.c"
 34728 ;; Parameters:    Size  Location     Type
 34729 ;;		None
 34730 ;; Auto vars:     Size  Location     Type
 34731 ;;		None
 34732 ;; Return value:  Size  Location     Type
 34733 ;;                  1    wreg      void 
 34734 ;; Registers used:
 34735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34736 ;; Tracked objects:
 34737 ;;		On entry : 0/0
 34738 ;;		On exit  : 31/1
 34739 ;;		Unchanged: 0/0
 34740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34745 ;;Total ram usage:        0 bytes
 34746 ;; Hardware stack levels used: 1
 34747 ;; Hardware stack levels required when called: 5
 34748 ;; This function calls:
 34749 ;;		_checkTxFifo
 34750 ;; This function is called by:
 34751 ;;		_canInterruptHandler
 34752 ;; This function uses a non-reentrant model
 34753 ;;
 34754                           
 34755                           	psect	text182
 34756  009250                     __ptext182:
 34757                           	callstack 0
 34758  009250                     _canTxError:
 34759                           	callstack 3
 34760                           
 34761                           ;can18.c: 742: if (TXB0CONbits.TXLARB) {
 34762                           
 34763                           ;incstack = 0
 34764  009250  010F               	movlb	15	; () banked
 34765  009252  AB20               	btfss	32,5,b	;volatile
 34766  009254  D019               	goto	i1l20953
 34767                           
 34768                           ; BSR set to: 15
 34769                           ;can18.c: 743: if (larbRetryCount == 0) {
 34770  009256  500D               	movf	_larbRetryCount^0,w,c
 34771  009258  A4D8               	btfss	status,2,c
 34772  00925A  D010               	goto	i1l1687
 34773                           
 34774                           ; BSR set to: 15
 34775                           ;can18.c: 744: canTransmitFailed = 1;
 34776  00925C  0E01               	movlw	1
 34777  00925E  6E0C               	movwf	_canTransmitFailed^0,c
 34778                           
 34779                           ;can18.c: 745: canTransmitTimeout.Val = 0;
 34780  009260  0E00               	movlw	0
 34781  009262  0101               	movlb	1	; () banked
 34782  009264  6FB4               	movwf	_canTransmitTimeout& (0+255),b
 34783  009266  0E00               	movlw	0
 34784  009268  6FB5               	movwf	(_canTransmitTimeout+1)& (0+255),b
 34785  00926A  0E00               	movlw	0
 34786  00926C  6FB6               	movwf	(_canTransmitTimeout+2)& (0+255),b
 34787  00926E  0E00               	movlw	0
 34788  009270  6FB7               	movwf	(_canTransmitTimeout+3)& (0+255),b
 34789                           
 34790                           ; BSR set to: 1
 34791                           ;can18.c: 747: TXB0CONbits.TXREQ = 0;
 34792  009272  010F               	movlb	15	; () banked
 34793  009274  9720               	bcf	32,3,b	;volatile
 34794                           
 34795                           ; BSR set to: 15
 34796                           ;can18.c: 748: larbCount++;
 34797  009276  0101               	movlb	1	; () banked
 34798  009278  2BDE               	incf	_larbCount& (0+255),f,b
 34799                           
 34800                           ;can18.c: 749: }
 34801  00927A  D006               	goto	i1l20953
 34802  00927C                     i1l1687:
 34803                           
 34804                           ; BSR set to: 15
 34805                           ;can18.c: 750: else if ( --larbRetryCount == 0) {
 34806  00927C  2E0D               	decfsz	_larbRetryCount^0,f,c
 34807  00927E  D004               	goto	i1l20953
 34808                           
 34809                           ; BSR set to: 15
 34810                           ;can18.c: 751: TXB0CONbits.TXREQ = 0;
 34811  009280  9720               	bcf	32,3,b	;volatile
 34812                           
 34813                           ; BSR set to: 15
 34814                           ;can18.c: 752: TXB0SIDH &= 0b00111111;
 34815  009282  0E3F               	movlw	63
 34816  009284  1721               	andwf	33,f,b	;volatile
 34817                           
 34818                           ; BSR set to: 15
 34819                           ;can18.c: 753: TXB0CONbits.TXREQ = 1;
 34820  009286  8720               	bsf	32,3,b	;volatile
 34821  009288                     i1l20953:
 34822                           
 34823                           ;can18.c: 754: };can18.c: 755: };can18.c: 756: if (TXB0CONbits.TXERR) {
 34824  009288  010F               	movlb	15	; () banked
 34825  00928A  A920               	btfss	32,4,b	;volatile
 34826  00928C  D00F               	goto	i1l20961
 34827                           
 34828                           ; BSR set to: 15
 34829                           ;can18.c: 757: canTransmitFailed = 1;
 34830  00928E  0E01               	movlw	1
 34831  009290  6E0C               	movwf	_canTransmitFailed^0,c
 34832                           
 34833                           ;can18.c: 758: canTransmitTimeout.Val = 0;
 34834  009292  0E00               	movlw	0
 34835  009294  0101               	movlb	1	; () banked
 34836  009296  6FB4               	movwf	_canTransmitTimeout& (0+255),b
 34837  009298  0E00               	movlw	0
 34838  00929A  6FB5               	movwf	(_canTransmitTimeout+1)& (0+255),b
 34839  00929C  0E00               	movlw	0
 34840  00929E  6FB6               	movwf	(_canTransmitTimeout+2)& (0+255),b
 34841  0092A0  0E00               	movlw	0
 34842  0092A2  6FB7               	movwf	(_canTransmitTimeout+3)& (0+255),b
 34843                           
 34844                           ; BSR set to: 1
 34845                           ;can18.c: 759: TXB0CONbits.TXREQ = 0;
 34846  0092A4  010F               	movlb	15	; () banked
 34847  0092A6  9720               	bcf	32,3,b	;volatile
 34848                           
 34849                           ; BSR set to: 15
 34850                           ;can18.c: 760: txErrCount++;
 34851  0092A8  0101               	movlb	1	; () banked
 34852  0092AA  2BDD               	incf	_txErrCount& (0+255),f,b
 34853  0092AC                     i1l20961:
 34854                           
 34855                           ;can18.c: 761: };can18.c: 763: if (canTransmitFailed)
 34856  0092AC  500C               	movf	_canTransmitFailed^0,w,c
 34857  0092AE  A4D8               	btfss	status,2,c
 34858                           
 34859                           ;can18.c: 764: checkTxFifo();
 34860  0092B0  ECAB  F03E         	call	_checkTxFifo	;wreg free
 34861                           
 34862                           ;can18.c: 766: PIR5bits.ERRIF = 0;
 34863  0092B4  9A77               	bcf	119,5,c	;volatile
 34864  0092B6  0012               	return		;funcret
 34865  0092B8                     __end_of_canTxError:
 34866                           	callstack 0
 34867                           
 34868 ;; *************** function _checkTxFifo *****************
 34869 ;; Defined at:
 34870 ;;		line 428 in file "../../github/CBUSlib/can18.c"
 34871 ;; Parameters:    Size  Location     Type
 34872 ;;		None
 34873 ;; Auto vars:     Size  Location     Type
 34874 ;;  ptr             2   28[COMRAM] PTR unsigned char 
 34875 ;;		 -> TXB0CON(1), 
 34876 ;; Return value:  Size  Location     Type
 34877 ;;                  1    wreg      void 
 34878 ;; Registers used:
 34879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34880 ;; Tracked objects:
 34881 ;;		On entry : 0/0
 34882 ;;		On exit  : 3F/F
 34883 ;;		Unchanged: 0/0
 34884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34889 ;;Total ram usage:        3 bytes
 34890 ;; Hardware stack levels used: 1
 34891 ;; Hardware stack levels required when called: 4
 34892 ;; This function calls:
 34893 ;;		i1_memcpy
 34894 ;;		i1_tickGet
 34895 ;; This function is called by:
 34896 ;;		_checkCANTimeout
 34897 ;;		_canTxError
 34898 ;;		_canInterruptHandler
 34899 ;; This function uses a non-reentrant model
 34900 ;;
 34901                           
 34902                           	psect	text183
 34903  007D56                     __ptext183:
 34904                           	callstack 0
 34905  007D56                     _checkTxFifo:
 34906                           	callstack 4
 34907                           
 34908                           ;can18.c: 430: BYTE* ptr;;can18.c: 432: canTransmitFailed = 0;
 34909                           
 34910                           ;incstack = 0
 34911  007D56  0E00               	movlw	0
 34912  007D58  6E0C               	movwf	_canTransmitFailed^0,c
 34913                           
 34914                           ;can18.c: 433: PIR5bits.TXBnIF = 0;
 34915  007D5A  9877               	bcf	119,4,c	;volatile
 34916                           
 34917                           ;can18.c: 435: if (!TXB0CONbits.TXREQ)
 34918  007D5C  010F               	movlb	15	; () banked
 34919  007D5E  B720               	btfsc	32,3,b	;volatile
 34920  007D60  D054               	goto	i1l1608
 34921                           
 34922                           ; BSR set to: 15
 34923                           ;can18.c: 436: {;can18.c: 437: canTransmitTimeout.Val = 0;
 34924  007D62  0E00               	movlw	0
 34925  007D64  0101               	movlb	1	; () banked
 34926  007D66  6FB4               	movwf	_canTransmitTimeout& (0+255),b
 34927  007D68  0E00               	movlw	0
 34928  007D6A  6FB5               	movwf	(_canTransmitTimeout+1)& (0+255),b
 34929  007D6C  0E00               	movlw	0
 34930  007D6E  6FB6               	movwf	(_canTransmitTimeout+2)& (0+255),b
 34931  007D70  0E00               	movlw	0
 34932  007D72  6FB7               	movwf	(_canTransmitTimeout+3)& (0+255),b
 34933                           
 34934                           ; BSR set to: 1
 34935                           ;can18.c: 439: if (txIndexNextUsed != txIndexNextFree)
 34936  007D74  5011               	movf	_txIndexNextFree^0,w,c
 34937  007D76  1810               	xorwf	_txIndexNextUsed^0,w,c
 34938  007D78  B4D8               	btfsc	status,2,c
 34939  007D7A  D041               	goto	i1l20121
 34940                           
 34941                           ; BSR set to: 1
 34942                           ;can18.c: 440: {;can18.c: 441: ptr = (BYTE*) & TXB0CON;
 34943  007D7C  0E20               	movlw	32
 34944  007D7E  6E49               	movwf	checkTxFifo@ptr^0,c
 34945  007D80  0E0F               	movlw	15
 34946  007D82  6E4A               	movwf	(checkTxFifo@ptr+1)^0,c
 34947                           
 34948                           ; BSR set to: 1
 34949                           ;can18.c: 442: memcpy(ptr, canTxFifo[txIndexNextUsed].buffer, canTxFifo[txIndexNextUsed]
      +                          .buffer[dlc] + 6U);
 34950  007D84  C049  F03D         	movff	checkTxFifo@ptr,i1memcpy@d1
 34951  007D88  C04A  F03E         	movff	checkTxFifo@ptr+1,i1memcpy@d1+1
 34952  007D8C  5010               	movf	_txIndexNextUsed^0,w,c
 34953  007D8E  0D10               	mullw	16
 34954  007D90  0E00               	movlw	low _canTxFifo
 34955  007D92  24F3               	addwf	243,w,c
 34956  007D94  6E3F               	movwf	i1memcpy@s1^0,c
 34957  007D96  0E06               	movlw	high _canTxFifo
 34958  007D98  20F4               	addwfc	prodh,w,c
 34959  007D9A  6E40               	movwf	(i1memcpy@s1+1)^0,c
 34960  007D9C  5010               	movf	_txIndexNextUsed^0,w,c
 34961  007D9E  0D10               	mullw	16
 34962  007DA0  0E05               	movlw	low (_canTxFifo+5)
 34963  007DA2  24F3               	addwf	243,w,c
 34964  007DA4  6ED9               	movwf	fsr2l,c
 34965  007DA6  0E06               	movlw	high (_canTxFifo+5)
 34966  007DA8  20F4               	addwfc	prodh,w,c
 34967  007DAA  6EDA               	movwf	fsr2h,c
 34968  007DAC  50DF               	movf	indf2,w,c
 34969  007DAE  6E48               	movwf	??_checkTxFifo^0,c
 34970  007DB0  0E06               	movlw	6
 34971  007DB2  2448               	addwf	??_checkTxFifo^0,w,c
 34972  007DB4  6E41               	movwf	i1memcpy@n^0,c
 34973  007DB6  6A42               	clrf	(i1memcpy@n+1)^0,c
 34974  007DB8  0E00               	movlw	0
 34975  007DBA  2242               	addwfc	(i1memcpy@n+1)^0,f,c
 34976  007DBC  EC87  F04E         	call	i1_memcpy	;wreg free
 34977                           
 34978                           ;can18.c: 443: txFifoUsage--;
 34979  007DC0  0101               	movlb	1	; () banked
 34980  007DC2  07D9               	decf	_txFifoUsage& (0+255),f,b
 34981                           
 34982                           ; BSR set to: 1
 34983                           ;can18.c: 445: larbRetryCount = 10;
 34984  007DC4  0E0A               	movlw	10
 34985  007DC6  6E0D               	movwf	_larbRetryCount^0,c
 34986                           
 34987                           ; BSR set to: 1
 34988                           ;can18.c: 446: canTransmitTimeout.Val = tickGet();
 34989  007DC8  EC20  F04C         	call	i1_tickGet	;wreg free
 34990  007DCC  C03D  F1B4         	movff	?i1_tickGet,_canTransmitTimeout
 34991  007DD0  C03E  F1B5         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 34992  007DD4  C03F  F1B6         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 34993  007DD8  C040  F1B7         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 34994                           
 34995                           ;can18.c: 447: canTransmitFailed = 0;
 34996  007DDC  0E00               	movlw	0
 34997  007DDE  6E0C               	movwf	_canTransmitFailed^0,c
 34998                           
 34999                           ;can18.c: 449: TXB0CONbits.TXREQ = 1;
 35000  007DE0  010F               	movlb	15	; () banked
 35001  007DE2  8720               	bsf	32,3,b	;volatile
 35002                           
 35003                           ; BSR set to: 15
 35004                           ;can18.c: 451: if (txIndexNextFree == 0xFF)
 35005  007DE4  2811               	incf	_txIndexNextFree^0,w,c
 35006  007DE6  B4D8               	btfsc	status,2,c
 35007                           
 35008                           ; BSR set to: 15
 35009                           ;can18.c: 452: txIndexNextFree = txIndexNextUsed;
 35010  007DE8  C010  F011         	movff	_txIndexNextUsed,_txIndexNextFree
 35011                           
 35012                           ; BSR set to: 15
 35013                           ;can18.c: 454: if (++txIndexNextUsed == 16U )
 35014  007DEC  2A10               	incf	_txIndexNextUsed^0,f,c
 35015  007DEE  0E10               	movlw	16
 35016  007DF0  1810               	xorwf	_txIndexNextUsed^0,w,c
 35017  007DF2  A4D8               	btfss	status,2,c
 35018  007DF4  D002               	goto	i1l20119
 35019                           
 35020                           ; BSR set to: 15
 35021                           ;can18.c: 455: txIndexNextUsed = 0;
 35022  007DF6  0E00               	movlw	0
 35023  007DF8  6E10               	movwf	_txIndexNextUsed^0,c
 35024  007DFA                     i1l20119:
 35025                           
 35026                           ; BSR set to: 15
 35027                           ;can18.c: 457: PIE5bits.TXBnIE = 1;
 35028  007DFA  8876               	bsf	118,4,c	;volatile
 35029                           
 35030                           ;can18.c: 458: }
 35031  007DFC  0012               	return	
 35032  007DFE                     i1l20121:
 35033                           
 35034                           ; BSR set to: 1
 35035                           ;can18.c: 459: else;can18.c: 460: {;can18.c: 461: TXB0CON = 0;
 35036  007DFE  0E00               	movlw	0
 35037  007E00  010F               	movlb	15	; () banked
 35038  007E02  6F20               	movwf	32,b	;volatile
 35039                           
 35040                           ; BSR set to: 15
 35041                           ;can18.c: 462: PIR5bits.TXBnIF = 0;
 35042  007E04  9877               	bcf	119,4,c	;volatile
 35043                           
 35044                           ; BSR set to: 15
 35045                           ;can18.c: 463: PIE5bits.TXBnIE = 0;
 35046  007E06  9876               	bcf	118,4,c	;volatile
 35047  007E08  0012               	return	
 35048  007E0A                     i1l1608:
 35049                           
 35050                           ; BSR set to: 15
 35051                           ;can18.c: 466: else;can18.c: 467: {;can18.c: 468: PIR5bits.TXBnIF = 0;
 35052  007E0A  9877               	bcf	119,4,c	;volatile
 35053                           
 35054                           ;can18.c: 469: PIE5bits.TXBnIE = 1;
 35055  007E0C  8876               	bsf	118,4,c	;volatile
 35056                           
 35057                           ; BSR set to: 15
 35058  007E0E  0012               	return		;funcret
 35059  007E10                     __end_of_checkTxFifo:
 35060                           	callstack 0
 35061                           
 35062 ;; *************** function _canFillRxFifo *****************
 35063 ;; Defined at:
 35064 ;;		line 589 in file "../../github/CBUSlib/can18.c"
 35065 ;; Parameters:    Size  Location     Type
 35066 ;;		None
 35067 ;; Auto vars:     Size  Location     Type
 35068 ;;  ptr             2    8[BANK0 ] PTR struct .
 35069 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 35070 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 35071 ;;  hiIndex         1    7[BANK0 ] unsigned char 
 35072 ;; Return value:  Size  Location     Type
 35073 ;;                  1    wreg      void 
 35074 ;; Registers used:
 35075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35076 ;; Tracked objects:
 35077 ;;		On entry : 0/0
 35078 ;;		On exit  : 0/0
 35079 ;;		Unchanged: 0/0
 35080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35082 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35083 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35084 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35085 ;;Total ram usage:       10 bytes
 35086 ;; Hardware stack levels used: 1
 35087 ;; Hardware stack levels required when called: 5
 35088 ;; This function calls:
 35089 ;;		i1__PointBuffer
 35090 ;;		i1_checkIncomingPacket
 35091 ;;		i1_insertIntoRxFifo
 35092 ;; This function is called by:
 35093 ;;		_canInterruptHandler
 35094 ;; This function uses a non-reentrant model
 35095 ;;
 35096                           
 35097                           	psect	text184
 35098  008614                     __ptext184:
 35099                           	callstack 0
 35100  008614                     _canFillRxFifo:
 35101                           	callstack 3
 35102                           
 35103                           ;can18.c: 591: CanPacket *ptr;;can18.c: 592: BYTE hiIndex;;can18.c: 595: while (COMSTATb
      +                          its.NOT_FIFOEMPTY)
 35104                           
 35105                           ; BSR set to: 15
 35106                           ;incstack = 0
 35107  008614  D04B               	goto	i1l20935
 35108  008616                     i1l20907:
 35109                           
 35110                           ;can18.c: 596: {;can18.c: 598: ptr = (CanPacket*) _PointBuffer(CANCON & 0x07U);
 35111  008616  506F               	movf	111,w,c	;volatile
 35112  008618  0B07               	andlw	7
 35113  00861A  EC5C  F049         	call	i1__PointBuffer
 35114  00861E  C03D  F068         	movff	?i1__PointBuffer,canFillRxFifo@ptr
 35115  008622  C03E  F069         	movff	?i1__PointBuffer+1,canFillRxFifo@ptr+1
 35116                           
 35117                           ;can18.c: 599: PIR5bits.RXBnIF = 0;
 35118  008626  9277               	bcf	119,1,c	;volatile
 35119                           
 35120                           ;can18.c: 600: if (COMSTATbits.RXB1OVFL) {
 35121  008628  BC71               	btfsc	113,6,c	;volatile
 35122                           
 35123                           ;can18.c: 604: COMSTATbits.RXB1OVFL = 0;
 35124  00862A  9C71               	bcf	113,6,c	;volatile
 35125                           
 35126                           ;can18.c: 605: };can18.c: 607: if (checkIncomingPacket(ptr))
 35127  00862C  C068  F047         	movff	canFillRxFifo@ptr,i1checkIncomingPacket@ptr
 35128  008630  C069  F048         	movff	canFillRxFifo@ptr+1,i1checkIncomingPacket@ptr+1
 35129  008634  EC27  F039         	call	i1_checkIncomingPacket	;wreg free
 35130  008638  0900               	iorlw	0
 35131  00863A  B4D8               	btfsc	status,2,c
 35132  00863C  D006               	goto	i1l20919
 35133                           
 35134                           ;can18.c: 608: {;can18.c: 609: insertIntoRxFifo( ptr );
 35135  00863E  C068  F048         	movff	canFillRxFifo@ptr,i1insertIntoRxFifo@ptr
 35136  008642  C069  F049         	movff	canFillRxFifo@ptr+1,i1insertIntoRxFifo@ptr+1
 35137  008646  EC57  F04A         	call	i1_insertIntoRxFifo	;wreg free
 35138  00864A                     i1l20919:
 35139                           
 35140                           ;can18.c: 613: };can18.c: 616: if (PIR5bits.IRXIF)
 35141  00864A  BE77               	btfsc	119,7,c	;volatile
 35142                           
 35143                           ;can18.c: 617: PIR5bits.IRXIF = 0;
 35144  00864C  9E77               	bcf	119,7,c	;volatile
 35145                           
 35146                           ;can18.c: 620: ptr->buffer[con] &= 0x7f;
 35147  00864E  C068  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 35148  008652  C069  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 35149  008656  0E7F               	movlw	127
 35150  008658  16DF               	andwf	indf2,f,c
 35151                           
 35152                           ;can18.c: 625: hiIndex = ( rxIndexNextFree < rxIndexNextUsed ? rxIndexNextFree + 16U : r
      +                          xIndexNextFree);
 35153  00865A  500E               	movf	_rxIndexNextUsed^0,w,c
 35154  00865C  5C0F               	subwf	_rxIndexNextFree^0,w,c
 35155  00865E  A0D8               	btfss	status,0,c
 35156  008660  D005               	goto	i1l20929
 35157  008662  C00F  F065         	movff	_rxIndexNextFree,_canFillRxFifo$3504
 35158  008666  0100               	movlb	0	; () banked
 35159  008668  6B66               	clrf	(_canFillRxFifo$3504+1)& (0+255),b
 35160  00866A  D007               	goto	i1l20931
 35161  00866C                     i1l20929:
 35162  00866C  0E10               	movlw	16
 35163  00866E  240F               	addwf	_rxIndexNextFree^0,w,c
 35164  008670  0100               	movlb	0	; () banked
 35165  008672  6F65               	movwf	_canFillRxFifo$3504& (0+255),b
 35166  008674  6B66               	clrf	(_canFillRxFifo$3504+1)& (0+255),b
 35167  008676  0E00               	movlw	0
 35168  008678  2366               	addwfc	(_canFillRxFifo$3504+1)& (0+255),f,b
 35169  00867A                     i1l20931:
 35170                           
 35171                           ; BSR set to: 0
 35172  00867A  C065  F067         	movff	_canFillRxFifo$3504,canFillRxFifo@hiIndex
 35173                           
 35174                           ;can18.c: 626: if ((hiIndex - rxIndexNextUsed) > maxCanRxFifo )
 35175  00867E  500E               	movf	_rxIndexNextUsed^0,w,c
 35176  008680  C067  F060         	movff	canFillRxFifo@hiIndex,??_canFillRxFifo
 35177  008684  6B61               	clrf	(??_canFillRxFifo+1)& (0+255),b
 35178  008686  5F60               	subwf	??_canFillRxFifo& (0+255),f,b
 35179  008688  0E00               	movlw	0
 35180  00868A  5B61               	subwfb	(??_canFillRxFifo+1)& (0+255),f,b
 35181  00868C  500A               	movf	_maxCanRxFifo^0,w,c
 35182  00868E  6F62               	movwf	(??_canFillRxFifo+2)& (0+255),b
 35183  008690  6B63               	clrf	(??_canFillRxFifo+3)& (0+255),b
 35184  008692  5160               	movf	??_canFillRxFifo& (0+255),w,b
 35185  008694  5D62               	subwf	(??_canFillRxFifo+2)& (0+255),w,b
 35186  008696  5163               	movf	(??_canFillRxFifo+3)& (0+255),w,b
 35187  008698  0A80               	xorlw	128
 35188  00869A  6F64               	movwf	(??_canFillRxFifo+4)& (0+255),b
 35189  00869C  5161               	movf	(??_canFillRxFifo+1)& (0+255),w,b
 35190  00869E  0A80               	xorlw	128
 35191  0086A0  5964               	subwfb	(??_canFillRxFifo+4)& (0+255),w,b
 35192  0086A2  B0D8               	btfsc	status,0,c
 35193  0086A4  D003               	goto	i1l20935
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;can18.c: 627: maxCanRxFifo = (unsigned char)(hiIndex - rxIndexNextUsed);
 35197  0086A6  500E               	movf	_rxIndexNextUsed^0,w,c
 35198  0086A8  5D67               	subwf	canFillRxFifo@hiIndex& (0+255),w,b
 35199  0086AA  6E0A               	movwf	_maxCanRxFifo^0,c
 35200  0086AC                     i1l20935:
 35201  0086AC  BE71               	btfsc	113,7,c	;volatile
 35202  0086AE  D7B3               	goto	i1l20907
 35203                           
 35204                           ;can18.c: 629: };can18.c: 630: PIR5bits.FIFOWMIF = 0;
 35205  0086B0  9077               	bcf	119,0,c	;volatile
 35206  0086B2  0012               	return		;funcret
 35207  0086B4                     __end_of_canFillRxFifo:
 35208                           	callstack 0
 35209                           
 35210 ;; *************** function i1_insertIntoRxFifo *****************
 35211 ;; Defined at:
 35212 ;;		line 561 in file "../../github/CBUSlib/can18.c"
 35213 ;; Parameters:    Size  Location     Type
 35214 ;;  ptr             2   27[COMRAM] PTR struct .
 35215 ;;		 -> cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), B5CON(1), 
 35216 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 35217 ;;		 -> B0CON(1), RXB1CON(1), RXB0CON(1), 
 35218 ;; Auto vars:     Size  Location     Type
 35219 ;;		None
 35220 ;; Return value:  Size  Location     Type
 35221 ;;                  1    wreg      unsigned char 
 35222 ;; Registers used:
 35223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35224 ;; Tracked objects:
 35225 ;;		On entry : 0/0
 35226 ;;		On exit  : 3F/1
 35227 ;;		Unchanged: 0/0
 35228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35233 ;;Total ram usage:        3 bytes
 35234 ;; Hardware stack levels used: 1
 35235 ;; Hardware stack levels required when called: 4
 35236 ;; This function calls:
 35237 ;;		i1_memcpy
 35238 ;; This function is called by:
 35239 ;;		_canFillRxFifo
 35240 ;; This function uses a non-reentrant model
 35241 ;;
 35242                           
 35243                           	psect	text185
 35244  0094AE                     __ptext185:
 35245                           	callstack 0
 35246  0094AE                     i1_insertIntoRxFifo:
 35247                           	callstack 3
 35248                           
 35249                           ;can18.c: 564: memcpy(canRxFifo[rxIndexNextFree].buffer, ptr, ptr->buffer[dlc] + 6U);
 35250                           
 35251                           ;incstack = 0
 35252  0094AE  500F               	movf	_rxIndexNextFree^0,w,c
 35253  0094B0  0D10               	mullw	16
 35254  0094B2  0E00               	movlw	low _canRxFifo
 35255  0094B4  24F3               	addwf	243,w,c
 35256  0094B6  6E3D               	movwf	i1memcpy@d1^0,c
 35257  0094B8  0E05               	movlw	high _canRxFifo
 35258  0094BA  20F4               	addwfc	prodh,w,c
 35259  0094BC  6E3E               	movwf	(i1memcpy@d1+1)^0,c
 35260  0094BE  C048  F03F         	movff	i1insertIntoRxFifo@ptr,i1memcpy@s1
 35261  0094C2  C049  F040         	movff	i1insertIntoRxFifo@ptr+1,i1memcpy@s1+1
 35262  0094C6  EE20 F005          	lfsr	2,5
 35263  0094CA  5048               	movf	i1insertIntoRxFifo@ptr^0,w,c
 35264  0094CC  26D9               	addwf	fsr2l,f,c
 35265  0094CE  5049               	movf	(i1insertIntoRxFifo@ptr+1)^0,w,c
 35266  0094D0  22DA               	addwfc	fsr2h,f,c
 35267  0094D2  50DF               	movf	indf2,w,c
 35268  0094D4  6E4A               	movwf	??i1_insertIntoRxFifo^0,c
 35269  0094D6  0E06               	movlw	6
 35270  0094D8  244A               	addwf	??i1_insertIntoRxFifo^0,w,c
 35271  0094DA  6E41               	movwf	i1memcpy@n^0,c
 35272  0094DC  6A42               	clrf	(i1memcpy@n+1)^0,c
 35273  0094DE  0E00               	movlw	0
 35274  0094E0  2242               	addwfc	(i1memcpy@n+1)^0,f,c
 35275  0094E2  EC87  F04E         	call	i1_memcpy	;wreg free
 35276                           
 35277                           ;can18.c: 565: rxFifoUsage++;
 35278  0094E6  0101               	movlb	1	; () banked
 35279  0094E8  2BD8               	incf	_rxFifoUsage& (0+255),f,b
 35280                           
 35281                           ; BSR set to: 1
 35282                           ;can18.c: 567: if (++rxIndexNextFree >= 16U)
 35283  0094EA  2A0F               	incf	_rxIndexNextFree^0,f,c
 35284  0094EC  0E0F               	movlw	15
 35285  0094EE  640F               	cpfsgt	_rxIndexNextFree^0,c
 35286  0094F0  D002               	goto	i1l20315
 35287                           
 35288                           ; BSR set to: 1
 35289                           ;can18.c: 568: {;can18.c: 569: rxIndexNextFree = 0;
 35290  0094F2  0E00               	movlw	0
 35291  0094F4  6E0F               	movwf	_rxIndexNextFree^0,c
 35292  0094F6                     i1l20315:
 35293                           
 35294                           ; BSR set to: 1
 35295                           ;can18.c: 570: };can18.c: 572: if (rxIndexNextFree == rxIndexNextUsed)
 35296  0094F6  500E               	movf	_rxIndexNextUsed^0,w,c
 35297  0094F8  180F               	xorwf	_rxIndexNextFree^0,w,c
 35298  0094FA  A4D8               	btfss	status,2,c
 35299  0094FC  0012               	return	
 35300                           
 35301                           ; BSR set to: 1
 35302                           ;can18.c: 573: {;can18.c: 574: rxOflowCount++;
 35303  0094FE  2BDA               	incf	_rxOflowCount& (0+255),f,b
 35304                           
 35305                           ; BSR set to: 1
 35306                           ;can18.c: 575: if (rxIndexNextFree == 0)
 35307  009500  500F               	movf	_rxIndexNextFree^0,w,c
 35308  009502  A4D8               	btfss	status,2,c
 35309  009504  D003               	goto	i1l20323
 35310                           
 35311                           ; BSR set to: 1
 35312                           ;can18.c: 576: rxIndexNextFree = 16U - 1;
 35313  009506  0E0F               	movlw	15
 35314  009508  6E0F               	movwf	_rxIndexNextFree^0,c
 35315  00950A  0012               	return	
 35316  00950C                     i1l20323:
 35317                           
 35318                           ; BSR set to: 1
 35319                           ;can18.c: 577: else;can18.c: 578: rxIndexNextFree--;
 35320  00950C  060F               	decf	_rxIndexNextFree^0,f,c
 35321                           
 35322                           ; BSR set to: 1
 35323  00950E  0012               	return		;funcret
 35324  009510                     __end_ofi1_insertIntoRxFifo:
 35325                           	callstack 0
 35326                           
 35327 ;; *************** function i1_memcpy *****************
 35328 ;; Defined at:
 35329 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\memcpy.c"
 35330 ;; Parameters:    Size  Location     Type
 35331 ;;  d1              2   16[COMRAM] PTR void 
 35332 ;;		 -> canRxFifo(256), canTxFifo(256), TXB0CON(1), checkCBUS@msg(20), 
 35333 ;;  s1              2   18[COMRAM] PTR const void 
 35334 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 35335 ;;		 -> canRxFifo(256), canTxFifo.buffer(14), canTxFifo(256), B5CON(1), 
 35336 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 35337 ;;		 -> B0CON(1), RXB1CON(1), RXB0CON(1), cbusMsg(16), 
 35338 ;;  n               2   20[COMRAM] unsigned int 
 35339 ;; Auto vars:     Size  Location     Type
 35340 ;;  s               2   25[COMRAM] PTR const unsigned char 
 35341 ;;		 -> requestNodeNumber@local_cbusMsg(9), cbusSendDataEvent@msg(14), cbusSendEvent@msg(10), cbusSendMyEvent@msg(10), 
 35342 ;;		 -> canRxFifo(256), canTxFifo.buffer(14), canTxFifo(256), B5CON(1), 
 35343 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 35344 ;;		 -> B0CON(1), RXB1CON(1), RXB0CON(1), cbusMsg(16), 
 35345 ;;  d               2   23[COMRAM] PTR unsigned char 
 35346 ;;		 -> canRxFifo(256), canTxFifo(256), TXB0CON(1), checkCBUS@msg(20), 
 35347 ;;  tmp             1   22[COMRAM] unsigned char 
 35348 ;; Return value:  Size  Location     Type
 35349 ;;                  2   16[COMRAM] PTR void 
 35350 ;; Registers used:
 35351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35352 ;; Tracked objects:
 35353 ;;		On entry : 0/1
 35354 ;;		On exit  : 0/0
 35355 ;;		Unchanged: 0/0
 35356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35357 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35358 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35360 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35361 ;;Total ram usage:       11 bytes
 35362 ;; Hardware stack levels used: 1
 35363 ;; Hardware stack levels required when called: 3
 35364 ;; This function calls:
 35365 ;;		Nothing
 35366 ;; This function is called by:
 35367 ;;		_checkTxFifo
 35368 ;;		i1_insertIntoRxFifo
 35369 ;; This function uses a non-reentrant model
 35370 ;;
 35371                           
 35372                           	psect	text186
 35373  009D0E                     __ptext186:
 35374                           	callstack 0
 35375  009D0E                     i1_memcpy:
 35376                           	callstack 4
 35377                           
 35378                           ; BSR set to: 1
 35379                           ;incstack = 0
 35380  009D0E  C03F  F046         	movff	i1memcpy@s1,i1memcpy@s
 35381  009D12  C040  F047         	movff	i1memcpy@s1+1,i1memcpy@s+1
 35382  009D16  C03D  F044         	movff	i1memcpy@d1,i1memcpy@d
 35383  009D1A  C03E  F045         	movff	i1memcpy@d1+1,i1memcpy@d+1
 35384  009D1E  D010               	goto	i1l19917
 35385  009D20                     i1l19909:
 35386  009D20  C046  FFD9         	movff	i1memcpy@s,fsr2l
 35387  009D24  C047  FFDA         	movff	i1memcpy@s+1,fsr2h
 35388  009D28  50DF               	movf	indf2,w,c
 35389  009D2A  6E43               	movwf	i1memcpy@tmp^0,c
 35390  009D2C  4A46               	infsnz	i1memcpy@s^0,f,c
 35391  009D2E  2A47               	incf	(i1memcpy@s+1)^0,f,c
 35392  009D30  C044  FFD9         	movff	i1memcpy@d,fsr2l
 35393  009D34  C045  FFDA         	movff	i1memcpy@d+1,fsr2h
 35394  009D38  C043  FFDF         	movff	i1memcpy@tmp,indf2
 35395  009D3C  4A44               	infsnz	i1memcpy@d^0,f,c
 35396  009D3E  2A45               	incf	(i1memcpy@d+1)^0,f,c
 35397  009D40                     i1l19917:
 35398  009D40  0641               	decf	i1memcpy@n^0,f,c
 35399  009D42  A0D8               	btfss	status,0,c
 35400  009D44  0642               	decf	(i1memcpy@n+1)^0,f,c
 35401  009D46  2841               	incf	i1memcpy@n^0,w,c
 35402  009D48  E1EB               	bnz	i1l19909
 35403  009D4A  2842               	incf	(i1memcpy@n+1)^0,w,c
 35404  009D4C  B4D8               	btfsc	status,2,c
 35405  009D4E  0012               	return	
 35406  009D50  D7E7               	goto	i1l19909
 35407  009D52                     __end_ofi1_memcpy:
 35408                           	callstack 0
 35409                           
 35410 ;; *************** function i1_checkIncomingPacket *****************
 35411 ;; Defined at:
 35412 ;;		line 700 in file "../../github/CBUSlib/can18.c"
 35413 ;; Parameters:    Size  Location     Type
 35414 ;;  ptr             2   26[COMRAM] PTR struct .
 35415 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 35416 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 35417 ;; Auto vars:     Size  Location     Type
 35418 ;;  incomingCanI    1   33[COMRAM] unsigned char 
 35419 ;;  msgFound        1   32[COMRAM] unsigned char 
 35420 ;; Return value:  Size  Location     Type
 35421 ;;                  1    wreg      unsigned char 
 35422 ;; Registers used:
 35423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35424 ;; Tracked objects:
 35425 ;;		On entry : 0/0
 35426 ;;		On exit  : 0/0
 35427 ;;		Unchanged: 0/0
 35428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35432 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35433 ;;Total ram usage:        8 bytes
 35434 ;; Hardware stack levels used: 1
 35435 ;; Hardware stack levels required when called: 4
 35436 ;; This function calls:
 35437 ;;		i1_doEnum
 35438 ;;		i1_tickGet
 35439 ;; This function is called by:
 35440 ;;		_canFillRxFifo
 35441 ;; This function uses a non-reentrant model
 35442 ;;
 35443                           
 35444                           	psect	text187
 35445  00724E                     __ptext187:
 35446                           	callstack 0
 35447  00724E                     i1_checkIncomingPacket:
 35448                           	callstack 3
 35449                           
 35450                           ;can18.c: 703: BYTE incomingCanId;;can18.c: 704: BOOL msgFound;;can18.c: 706: msgFound =
      +                           0;
 35451                           
 35452                           ;incstack = 0
 35453  00724E  0E00               	movlw	0
 35454  007250  6E4D               	movwf	i1checkIncomingPacket@msgFound^0,c
 35455                           
 35456                           ;can18.c: 707: incomingCanId = (unsigned char)((unsigned char)((unsigned char)(ptr->buff
      +                          er[(unsigned char)sidh] << 3U) + (unsigned char)(ptr->buffer[(unsigned char)sidl] >> 5U)
      +                          ) & 0x7fU);
 35457  007252  EE20 F002          	lfsr	2,2
 35458  007256  5047               	movf	i1checkIncomingPacket@ptr^0,w,c
 35459  007258  26D9               	addwf	fsr2l,f,c
 35460  00725A  5048               	movf	(i1checkIncomingPacket@ptr+1)^0,w,c
 35461  00725C  22DA               	addwfc	fsr2h,f,c
 35462  00725E  50DF               	movf	indf2,w,c
 35463  007260  6E49               	movwf	??i1_checkIncomingPacket^0,c
 35464  007262  0E05               	movlw	5
 35465  007264  6E4A               	movwf	(??i1_checkIncomingPacket+1)^0,c
 35466  007266                     i1u1847_25:
 35467  007266  90D8               	bcf	status,0,c
 35468  007268  3249               	rrcf	??i1_checkIncomingPacket^0,f,c
 35469  00726A  2E4A               	decfsz	(??i1_checkIncomingPacket+1)^0,f,c
 35470  00726C  D7FC               	goto	i1u1847_25
 35471  00726E  EE20 F001          	lfsr	2,1
 35472  007272  5047               	movf	i1checkIncomingPacket@ptr^0,w,c
 35473  007274  26D9               	addwf	fsr2l,f,c
 35474  007276  5048               	movf	(i1checkIncomingPacket@ptr+1)^0,w,c
 35475  007278  22DA               	addwfc	fsr2h,f,c
 35476  00727A  50DF               	movf	indf2,w,c
 35477  00727C  0D08               	mullw	8
 35478  00727E  50F3               	movf	243,w,c
 35479  007280  2449               	addwf	??i1_checkIncomingPacket^0,w,c
 35480  007282  0B7F               	andlw	127
 35481  007284  6E4E               	movwf	i1checkIncomingPacket@incomingCanId^0,c
 35482                           
 35483                           ;can18.c: 709: if (enumerationInProgress) {
 35484  007286  5007               	movf	_enumerationInProgress^0,w,c
 35485  007288  B4D8               	btfsc	status,2,c
 35486  00728A  D01A               	goto	i1l15935
 35487                           
 35488                           ;can18.c: 710: ( enumerationResults[incomingCanId>>3] |= ( 1<<(incomingCanId & 0x07) ) )
      +                          ;
 35489  00728C  C04E  F049         	movff	i1checkIncomingPacket@incomingCanId,??i1_checkIncomingPacket
 35490  007290  0E07               	movlw	7
 35491  007292  1649               	andwf	??i1_checkIncomingPacket^0,f,c
 35492  007294  0E01               	movlw	1
 35493  007296  6E4A               	movwf	(??i1_checkIncomingPacket+1)^0,c
 35494  007298  2A49               	incf	??i1_checkIncomingPacket^0,f,c
 35495  00729A  D002               	goto	i1u1849_24
 35496  00729C                     i1u1849_25:
 35497  00729C  90D8               	bcf	status,0,c
 35498  00729E  364A               	rlcf	(??i1_checkIncomingPacket+1)^0,f,c
 35499  0072A0                     i1u1849_24:
 35500  0072A0  2E49               	decfsz	??i1_checkIncomingPacket^0,f,c
 35501  0072A2  D7FC               	goto	i1u1849_25
 35502  0072A4  384E               	swapf	i1checkIncomingPacket@incomingCanId^0,w,c
 35503  0072A6  46E8               	rlncf	wreg,f,c
 35504  0072A8  0B1F               	andlw	31
 35505  0072AA  6E4B               	movwf	(??i1_checkIncomingPacket+2)^0,c
 35506  0072AC  6A4C               	clrf	(??i1_checkIncomingPacket+3)^0,c
 35507  0072AE  0E54               	movlw	low _enumerationResults
 35508  0072B0  244B               	addwf	(??i1_checkIncomingPacket+2)^0,w,c
 35509  0072B2  6ED9               	movwf	fsr2l,c
 35510  0072B4  0E02               	movlw	high _enumerationResults
 35511  0072B6  204C               	addwfc	(??i1_checkIncomingPacket+3)^0,w,c
 35512  0072B8  6EDA               	movwf	fsr2h,c
 35513  0072BA  504A               	movf	(??i1_checkIncomingPacket+1)^0,w,c
 35514  0072BC  12DF               	iorwf	indf2,f,c
 35515                           
 35516                           ;can18.c: 711: } else if (!enumerationRequired && (incomingCanId == canID))
 35517  0072BE  D014               	goto	i1l15943
 35518  0072C0                     i1l15935:
 35519  0072C0  5009               	movf	_enumerationRequired^0,w,c
 35520  0072C2  A4D8               	btfss	status,2,c
 35521  0072C4  D011               	goto	i1l15943
 35522  0072C6  502C               	movf	_canID^0,w,c
 35523  0072C8  184E               	xorwf	i1checkIncomingPacket@incomingCanId^0,w,c
 35524  0072CA  A4D8               	btfss	status,2,c
 35525  0072CC  D00D               	goto	i1l15943
 35526                           
 35527                           ;can18.c: 712: {;can18.c: 715: doEnum(0);
 35528  0072CE  0E00               	movlw	0
 35529  0072D0  EC29  F053         	call	i1_doEnum
 35530                           
 35531                           ;can18.c: 716: enumerationStartTime.Val = tickGet();
 35532  0072D4  EC20  F04C         	call	i1_tickGet	;wreg free
 35533  0072D8  C03D  F1B0         	movff	?i1_tickGet,_enumerationStartTime
 35534  0072DC  C03E  F1B1         	movff	?i1_tickGet+1,_enumerationStartTime+1
 35535  0072E0  C03F  F1B2         	movff	?i1_tickGet+2,_enumerationStartTime+2
 35536  0072E4  C040  F1B3         	movff	?i1_tickGet+3,_enumerationStartTime+3
 35537  0072E8                     i1l15943:
 35538                           
 35539                           ;can18.c: 717: };can18.c: 721: if (ptr->buffer[dlc] & 0x40 )
 35540  0072E8  EE20 F005          	lfsr	2,5
 35541  0072EC  5047               	movf	i1checkIncomingPacket@ptr^0,w,c
 35542  0072EE  26D9               	addwf	fsr2l,f,c
 35543  0072F0  5048               	movf	(i1checkIncomingPacket@ptr+1)^0,w,c
 35544  0072F2  22DA               	addwfc	fsr2h,f,c
 35545  0072F4  ACDF               	btfss	indf2,6,c
 35546  0072F6  D00D               	goto	i1l15949
 35547                           
 35548                           ;can18.c: 722: {;can18.c: 723: TXB2CONbits.TXREQ = 1;
 35549  0072F8  010F               	movlb	15	; () banked
 35550  0072FA  8700               	bsf	0,3,b	;volatile
 35551                           
 35552                           ; BSR set to: 15
 35553                           ;can18.c: 724: enumerationStartTime.Val = tickGet();
 35554  0072FC  EC20  F04C         	call	i1_tickGet	;wreg free
 35555  007300  C03D  F1B0         	movff	?i1_tickGet,_enumerationStartTime
 35556  007304  C03E  F1B1         	movff	?i1_tickGet+1,_enumerationStartTime+1
 35557  007308  C03F  F1B2         	movff	?i1_tickGet+2,_enumerationStartTime+2
 35558  00730C  C040  F1B3         	movff	?i1_tickGet+3,_enumerationStartTime+3
 35559                           
 35560                           ;can18.c: 725: }
 35561  007310  D01A               	goto	i1l15953
 35562  007312                     i1l15949:
 35563                           
 35564                           ;can18.c: 726: else;can18.c: 727: {;can18.c: 728: msgFound = ptr->buffer[dlc] & 0x0FU;
 35565  007312  EE20 F005          	lfsr	2,5
 35566  007316  5047               	movf	i1checkIncomingPacket@ptr^0,w,c
 35567  007318  26D9               	addwf	fsr2l,f,c
 35568  00731A  5048               	movf	(i1checkIncomingPacket@ptr+1)^0,w,c
 35569  00731C  22DA               	addwfc	fsr2h,f,c
 35570  00731E  50DF               	movf	indf2,w,c
 35571  007320  0B0F               	andlw	15
 35572  007322  6E4D               	movwf	i1checkIncomingPacket@msgFound^0,c
 35573                           
 35574                           ;can18.c: 729: if (ptr->buffer[dlc] > 8)
 35575  007324  EE20 F005          	lfsr	2,5
 35576  007328  5047               	movf	i1checkIncomingPacket@ptr^0,w,c
 35577  00732A  26D9               	addwf	fsr2l,f,c
 35578  00732C  5048               	movf	(i1checkIncomingPacket@ptr+1)^0,w,c
 35579  00732E  22DA               	addwfc	fsr2h,f,c
 35580  007330  0E08               	movlw	8
 35581  007332  64DF               	cpfsgt	indf2,c
 35582  007334  D008               	goto	i1l15953
 35583                           
 35584                           ;can18.c: 730: ptr->buffer[dlc] = 8;
 35585  007336  EE20 F005          	lfsr	2,5
 35586  00733A  5047               	movf	i1checkIncomingPacket@ptr^0,w,c
 35587  00733C  26D9               	addwf	fsr2l,f,c
 35588  00733E  5048               	movf	(i1checkIncomingPacket@ptr+1)^0,w,c
 35589  007340  22DA               	addwfc	fsr2h,f,c
 35590  007342  0E08               	movlw	8
 35591  007344  6EDF               	movwf	indf2,c
 35592  007346                     i1l15953:
 35593                           
 35594                           ;can18.c: 731: };can18.c: 733: return( msgFound );
 35595  007346  504D               	movf	i1checkIncomingPacket@msgFound^0,w,c
 35596  007348  0012               	return		;funcret
 35597  00734A                     __end_ofi1_checkIncomingPacket:
 35598                           	callstack 0
 35599                           
 35600 ;; *************** function i1_tickGet *****************
 35601 ;; Defined at:
 35602 ;;		line 160 in file "../../github/CBUSlib/ticktime.c"
 35603 ;; Parameters:    Size  Location     Type
 35604 ;;		None
 35605 ;; Auto vars:     Size  Location     Type
 35606 ;;  currentTime     4   22[COMRAM] struct _TickValue
 35607 ;;  IntFlag1        1   21[COMRAM] unsigned char 
 35608 ;;  IntFlag2        1   20[COMRAM] unsigned char 
 35609 ;; Return value:  Size  Location     Type
 35610 ;;                  4   16[COMRAM] unsigned long 
 35611 ;; Registers used:
 35612 ;;		wreg, status,2, status,0
 35613 ;; Tracked objects:
 35614 ;;		On entry : 0/1
 35615 ;;		On exit  : 0/0
 35616 ;;		Unchanged: 0/0
 35617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35619 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35621 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35622 ;;Total ram usage:       10 bytes
 35623 ;; Hardware stack levels used: 1
 35624 ;; Hardware stack levels required when called: 3
 35625 ;; This function calls:
 35626 ;;		Nothing
 35627 ;; This function is called by:
 35628 ;;		_checkTxFifo
 35629 ;;		_checkCANTimeout
 35630 ;;		i1_checkIncomingPacket
 35631 ;; This function uses a non-reentrant model
 35632 ;;
 35633                           
 35634                           	psect	text188
 35635  009840                     __ptext188:
 35636                           	callstack 0
 35637  009840                     i1_tickGet:
 35638                           	callstack 4
 35639                           
 35640                           ;ticktime.c: 162: TickValue currentTime;;ticktime.c: 166: BYTE IntFlag1;;ticktime.c: 167
      +                          : BYTE IntFlag2;;ticktime.c: 170: currentTime.byte.b2 = 0;
 35641                           
 35642                           ;incstack = 0
 35643  009840  0E00               	movlw	0
 35644  009842  6E45               	movwf	(i1tickGet@currentTime+2)^0,c
 35645                           
 35646                           ;ticktime.c: 171: currentTime.byte.b3 = 0;
 35647  009844  0E00               	movlw	0
 35648  009846  6E46               	movwf	(i1tickGet@currentTime+3)^0,c
 35649                           
 35650                           ;ticktime.c: 173: INTCONbits.TMR0IE = 0;
 35651  009848  9AF2               	bcf	242,5,c	;volatile
 35652  00984A                     i1l15451:
 35653                           
 35654                           ;ticktime.c: 176: {;ticktime.c: 177: IntFlag1 = INTCONbits.TMR0IF;
 35655  00984A  0E00               	movlw	0
 35656  00984C  B4F2               	btfsc	242,2,c	;volatile
 35657  00984E  0E01               	movlw	1
 35658  009850  6E42               	movwf	i1tickGet@IntFlag1^0,c
 35659                           
 35660                           ;ticktime.c: 178: currentTime.byte.b0 = TMR0L;
 35661  009852  CFD6 F043          	movff	4054,i1tickGet@currentTime	;volatile
 35662                           
 35663                           ;ticktime.c: 179: currentTime.byte.b1 = TMR0H;
 35664  009856  CFD7 F044          	movff	4055,i1tickGet@currentTime+1	;volatile
 35665                           
 35666                           ;ticktime.c: 180: IntFlag2 = INTCONbits.TMR0IF;
 35667  00985A  0E00               	movlw	0
 35668  00985C  B4F2               	btfsc	242,2,c	;volatile
 35669  00985E  0E01               	movlw	1
 35670  009860  6E41               	movwf	i1tickGet@IntFlag2^0,c
 35671                           
 35672                           ;ticktime.c: 181: } while(IntFlag1 != IntFlag2);
 35673  009862  5041               	movf	i1tickGet@IntFlag2^0,w,c
 35674  009864  1842               	xorwf	i1tickGet@IntFlag1^0,w,c
 35675  009866  A4D8               	btfss	status,2,c
 35676  009868  D7F0               	goto	i1l15451
 35677                           
 35678                           ;ticktime.c: 183: if( IntFlag1 > 0 )
 35679  00986A  5042               	movf	i1tickGet@IntFlag1^0,w,c
 35680  00986C  B4D8               	btfsc	status,2,c
 35681  00986E  D005               	goto	i1l15471
 35682                           
 35683                           ;ticktime.c: 184: {;ticktime.c: 185: INTCONbits.TMR0IF = 0;
 35684  009870  94F2               	bcf	242,2,c	;volatile
 35685                           
 35686                           ;ticktime.c: 186: timerExtension1++;
 35687  009872  2A04               	incf	_timerExtension1^0,f,c	;volatile
 35688                           
 35689                           ;ticktime.c: 187: if(timerExtension1 == 0)
 35690  009874  5004               	movf	_timerExtension1^0,w,c	;volatile
 35691  009876  B4D8               	btfsc	status,2,c
 35692                           
 35693                           ;ticktime.c: 188: {;ticktime.c: 189: timerExtension2++;
 35694  009878  2A03               	incf	_timerExtension2^0,f,c	;volatile
 35695  00987A                     i1l15471:
 35696                           
 35697                           ;ticktime.c: 190: };ticktime.c: 191: };ticktime.c: 221: currentTime.byte.b2 += timerExte
      +                          nsion1;
 35698  00987A  5004               	movf	_timerExtension1^0,w,c	;volatile
 35699  00987C  2645               	addwf	(i1tickGet@currentTime+2)^0,f,c
 35700                           
 35701                           ;ticktime.c: 222: currentTime.byte.b3 += timerExtension2;
 35702  00987E  5003               	movf	_timerExtension2^0,w,c	;volatile
 35703  009880  2646               	addwf	(i1tickGet@currentTime+3)^0,f,c
 35704                           
 35705                           ;ticktime.c: 225: INTCONbits.TMR0IE = 1;
 35706  009882  8AF2               	bsf	242,5,c	;volatile
 35707                           
 35708                           ;ticktime.c: 238: return currentTime.Val;
 35709  009884  C043  F03D         	movff	i1tickGet@currentTime,?i1_tickGet
 35710  009888  C044  F03E         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 35711  00988C  C045  F03F         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 35712  009890  C046  F040         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 35713  009894  0012               	return		;funcret
 35714  009896                     __end_ofi1_tickGet:
 35715                           	callstack 0
 35716                           
 35717 ;; *************** function i1_doEnum *****************
 35718 ;; Defined at:
 35719 ;;		line 635 in file "../../github/CBUSlib/can18.c"
 35720 ;; Parameters:    Size  Location     Type
 35721 ;;  sendResult      1    wreg     unsigned char 
 35722 ;; Auto vars:     Size  Location     Type
 35723 ;;  sendResult      1   16[COMRAM] unsigned char 
 35724 ;; Return value:  Size  Location     Type
 35725 ;;                  1    wreg      void 
 35726 ;; Registers used:
 35727 ;;		wreg, status,2
 35728 ;; Tracked objects:
 35729 ;;		On entry : 0/0
 35730 ;;		On exit  : 0/0
 35731 ;;		Unchanged: 0/0
 35732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35737 ;;Total ram usage:        1 bytes
 35738 ;; Hardware stack levels used: 1
 35739 ;; Hardware stack levels required when called: 3
 35740 ;; This function calls:
 35741 ;;		Nothing
 35742 ;; This function is called by:
 35743 ;;		i1_checkIncomingPacket
 35744 ;; This function uses a non-reentrant model
 35745 ;;
 35746                           
 35747                           	psect	text189
 35748  00A652                     __ptext189:
 35749                           	callstack 0
 35750  00A652                     i1_doEnum:
 35751                           	callstack 3
 35752                           
 35753                           ;incstack = 0
 35754                           ;i1doEnum@sendResult stored from wreg
 35755  00A652  6E3D               	movwf	i1doEnum@sendResult^0,c
 35756                           
 35757                           ;can18.c: 636: resultRequired = sendResult;
 35758  00A654  C03D  F008         	movff	i1doEnum@sendResult,_resultRequired
 35759                           
 35760                           ;can18.c: 637: if (! enumerationInProgress) {
 35761  00A658  5007               	movf	_enumerationInProgress^0,w,c
 35762  00A65A  A4D8               	btfss	status,2,c
 35763  00A65C  0012               	return	
 35764                           
 35765                           ;can18.c: 638: enumerationRequired = 1;
 35766  00A65E  0E01               	movlw	1
 35767  00A660  6E09               	movwf	_enumerationRequired^0,c
 35768  00A662  0012               	return		;funcret
 35769  00A664                     __end_ofi1_doEnum:
 35770                           	callstack 0
 35771                           
 35772 ;; *************** function i1__PointBuffer *****************
 35773 ;; Defined at:
 35774 ;;		line 792 in file "../../github/CBUSlib/can18.c"
 35775 ;; Parameters:    Size  Location     Type
 35776 ;;  b               1    wreg     unsigned char 
 35777 ;; Auto vars:     Size  Location     Type
 35778 ;;  b               1   18[COMRAM] unsigned char 
 35779 ;;  pt              2   19[COMRAM] PTR unsigned char 
 35780 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 35781 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 35782 ;; Return value:  Size  Location     Type
 35783 ;;                  2   16[COMRAM] PTR unsigned char 
 35784 ;; Registers used:
 35785 ;;		wreg, status,2, status,0
 35786 ;; Tracked objects:
 35787 ;;		On entry : 0/0
 35788 ;;		On exit  : 0/0
 35789 ;;		Unchanged: 0/0
 35790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35792 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35795 ;;Total ram usage:        5 bytes
 35796 ;; Hardware stack levels used: 1
 35797 ;; Hardware stack levels required when called: 3
 35798 ;; This function calls:
 35799 ;;		Nothing
 35800 ;; This function is called by:
 35801 ;;		_canFillRxFifo
 35802 ;; This function uses a non-reentrant model
 35803 ;;
 35804                           
 35805                           	psect	text190
 35806  0092B8                     __ptext190:
 35807                           	callstack 0
 35808  0092B8                     i1__PointBuffer:
 35809                           	callstack 4
 35810                           
 35811                           ;incstack = 0
 35812                           ;i1__PointBuffer@b stored from wreg
 35813  0092B8  6E3F               	movwf	i1__PointBuffer@b^0,c
 35814                           
 35815                           ;can18.c: 793: BYTE* pt;;can18.c: 795: switch (b) {
 35816  0092BA  D016               	goto	i1l15977
 35817  0092BC                     i1l15959:
 35818                           
 35819                           ;can18.c: 797: pt = (BYTE*) & RXB0CON;
 35820  0092BC  0E60               	movlw	96
 35821  0092BE  D001               	goto	L31
 35822  0092C0                     i1l15961:
 35823                           
 35824                           ;can18.c: 800: pt = (BYTE*) & RXB1CON;
 35825  0092C0  0E30               	movlw	48
 35826  0092C2                     L31:
 35827  0092C2  6E40               	movwf	i1__PointBuffer@pt^0,c
 35828  0092C4  0E0F               	movlw	15
 35829  0092C6  D002               	goto	L32
 35830  0092C8                     i1l15963:
 35831                           
 35832                           ;can18.c: 803: pt = (BYTE*) & B0CON;
 35833  0092C8  0E80               	movlw	128
 35834  0092CA  D00B               	goto	L37
 35835  0092CC                     L32:
 35836  0092CC  6E41               	movwf	(i1__PointBuffer@pt+1)^0,c
 35837                           
 35838                           ;can18.c: 804: break;
 35839  0092CE  D023               	goto	i1l1703
 35840  0092D0                     i1l15965:
 35841                           
 35842                           ;can18.c: 806: pt = (BYTE*) & B1CON;
 35843  0092D0  0E90               	movlw	144
 35844  0092D2  D007               	goto	L37
 35845  0092D4                     i1l15967:
 35846                           
 35847                           ;can18.c: 809: pt = (BYTE*) & B2CON;
 35848  0092D4  0EA0               	movlw	160
 35849  0092D6  D005               	goto	L37
 35850  0092D8                     i1l15969:
 35851                           
 35852                           ;can18.c: 812: pt = (BYTE*) & B3CON;
 35853  0092D8  0EB0               	movlw	176
 35854  0092DA  D003               	goto	L37
 35855  0092DC                     i1l15971:
 35856                           
 35857                           ;can18.c: 815: pt = (BYTE*) & B4CON;
 35858  0092DC  0EC0               	movlw	192
 35859  0092DE  D001               	goto	L37
 35860  0092E0                     i1l15973:
 35861                           
 35862                           ;can18.c: 818: pt = (BYTE*) & B5CON;
 35863  0092E0  0ED0               	movlw	208
 35864  0092E2                     L37:
 35865  0092E2  6E40               	movwf	i1__PointBuffer@pt^0,c
 35866  0092E4  0E0E               	movlw	14
 35867  0092E6  D7F2               	goto	L32
 35868  0092E8                     i1l15977:
 35869  0092E8  503F               	movf	i1__PointBuffer@b^0,w,c
 35870                           
 35871                           ; Switch size 1, requested type "simple"
 35872                           ; Number of cases is 7, Range of values is 0 to 6
 35873                           ; switch strategies available:
 35874                           ; Name         Instructions Cycles
 35875                           ; simple_byte           22    12 (average)
 35876                           ;	Chosen strategy is simple_byte
 35877  0092EA  0A00               	xorlw	0	; case 0
 35878  0092EC  B4D8               	btfsc	status,2,c
 35879  0092EE  D7E6               	goto	i1l15959
 35880  0092F0  0A01               	xorlw	1	; case 1
 35881  0092F2  B4D8               	btfsc	status,2,c
 35882  0092F4  D7E5               	goto	i1l15961
 35883  0092F6  0A03               	xorlw	3	; case 2
 35884  0092F8  B4D8               	btfsc	status,2,c
 35885  0092FA  D7E6               	goto	i1l15963
 35886  0092FC  0A01               	xorlw	1	; case 3
 35887  0092FE  B4D8               	btfsc	status,2,c
 35888  009300  D7E7               	goto	i1l15965
 35889  009302  0A07               	xorlw	7	; case 4
 35890  009304  B4D8               	btfsc	status,2,c
 35891  009306  D7E6               	goto	i1l15967
 35892  009308  0A01               	xorlw	1	; case 5
 35893  00930A  B4D8               	btfsc	status,2,c
 35894  00930C  D7E5               	goto	i1l15969
 35895  00930E  0A03               	xorlw	3	; case 6
 35896  009310  B4D8               	btfsc	status,2,c
 35897  009312  D7E4               	goto	i1l15971
 35898  009314  D7E5               	goto	i1l15973
 35899  009316                     i1l1703:
 35900                           
 35901                           ;can18.c: 821: return (pt);
 35902  009316  C040  F03D         	movff	i1__PointBuffer@pt,?i1__PointBuffer
 35903  00931A  C041  F03E         	movff	i1__PointBuffer@pt+1,?i1__PointBuffer+1
 35904  00931E  0012               	return		;funcret
 35905  009320                     __end_ofi1__PointBuffer:
 35906                           	callstack 0
 35907                           
 35908 ;; *************** function _high_isr *****************
 35909 ;; Defined at:
 35910 ;;		line 772 in file "../../github/CANMIOfirmware/main.c"
 35911 ;; Parameters:    Size  Location     Type
 35912 ;;		None
 35913 ;; Auto vars:     Size  Location     Type
 35914 ;;		None
 35915 ;; Return value:  Size  Location     Type
 35916 ;;                  1    wreg      void 
 35917 ;; Registers used:
 35918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35919 ;; Tracked objects:
 35920 ;;		On entry : 0/0
 35921 ;;		On exit  : 0/0
 35922 ;;		Unchanged: 0/0
 35923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35926 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35928 ;;Total ram usage:        8 bytes
 35929 ;; Hardware stack levels used: 1
 35930 ;; Hardware stack levels required when called: 2
 35931 ;; This function calls:
 35932 ;;		_timer1DoneInterruptHandler
 35933 ;;		_timer3DoneInterruptHandler
 35934 ;; This function is called by:
 35935 ;;		Interrupt level 2
 35936 ;; This function uses a non-reentrant model
 35937 ;;
 35938                           
 35939                           	psect	intcode
 35940  000848                     __pintcode:
 35941                           	callstack 0
 35942  000848                     _high_isr:
 35943                           	callstack 3
 35944                           
 35945                           ;incstack = 0
 35946  000848  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 35947  00084A  EFC9  F04B         	goto	int_func
 35948                           
 35949                           	psect	intcode_body
 35950  009792                     __pintcode_body:
 35951                           	callstack 3
 35952  009792                     int_func:
 35953                           	callstack 3
 35954  009792  CFD9 F035          	movff	fsr2l,??_high_isr
 35955  009796  CFDA F036          	movff	fsr2h,??_high_isr+1
 35956  00979A  CFF3 F037          	movff	prodl,??_high_isr+2
 35957  00979E  CFF4 F038          	movff	prodh,??_high_isr+3
 35958  0097A2  CFF6 F039          	movff	tblptrl,??_high_isr+4
 35959  0097A6  CFF7 F03A          	movff	tblptrh,??_high_isr+5
 35960  0097AA  CFF8 F03B          	movff	tblptru,??_high_isr+6
 35961  0097AE  CFF5 F03C          	movff	tablat,??_high_isr+7
 35962                           
 35963                           ;main.c: 777: if (PIR1bits.TMR1IF) {
 35964  0097B2  A09E               	btfss	158,0,c	;volatile
 35965  0097B4  D003               	goto	i2l12963
 35966                           
 35967                           ;main.c: 778: timer1DoneInterruptHandler();
 35968  0097B6  EC10  F051         	call	_timer1DoneInterruptHandler	;wreg free
 35969                           
 35970                           ;main.c: 779: PIR1bits.TMR1IF = 0;
 35971  0097BA  909E               	bcf	158,0,c	;volatile
 35972  0097BC                     i2l12963:
 35973                           
 35974                           ;main.c: 780: };main.c: 781: if (PIR2bits.TMR3IF) {
 35975  0097BC  A2A1               	btfss	161,1,c	;volatile
 35976  0097BE  D003               	goto	i2l649
 35977                           
 35978                           ;main.c: 782: timer3DoneInterruptHandler();
 35979  0097C0  EC67  F050         	call	_timer3DoneInterruptHandler	;wreg free
 35980                           
 35981                           ;main.c: 783: PIR2bits.TMR3IF = 0;
 35982  0097C4  92A1               	bcf	161,1,c	;volatile
 35983  0097C6                     i2l649:
 35984  0097C6  C03C  FFF5         	movff	??_high_isr+7,tablat
 35985  0097CA  C03B  FFF8         	movff	??_high_isr+6,tblptru
 35986  0097CE  C03A  FFF7         	movff	??_high_isr+5,tblptrh
 35987  0097D2  C039  FFF6         	movff	??_high_isr+4,tblptrl
 35988  0097D6  C038  FFF4         	movff	??_high_isr+3,prodh
 35989  0097DA  C037  FFF3         	movff	??_high_isr+2,prodl
 35990  0097DE  C036  FFDA         	movff	??_high_isr+1,fsr2h
 35991  0097E2  C035  FFD9         	movff	??_high_isr,fsr2l
 35992  0097E6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35993  0097E8  0011               	retfie		f
 35994  0097EA                     __end_of_high_isr:
 35995                           	callstack 0
 35996                           
 35997 ;; *************** function _timer3DoneInterruptHandler *****************
 35998 ;; Defined at:
 35999 ;;		line 214 in file "../../github/CANMIOfirmware/servo.c"
 36000 ;; Parameters:    Size  Location     Type
 36001 ;;		None
 36002 ;; Auto vars:     Size  Location     Type
 36003 ;;		None
 36004 ;; Return value:  Size  Location     Type
 36005 ;;                  1    wreg      void 
 36006 ;; Registers used:
 36007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36008 ;; Tracked objects:
 36009 ;;		On entry : 0/0
 36010 ;;		On exit  : 0/0
 36011 ;;		Unchanged: 0/0
 36012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36017 ;;Total ram usage:        2 bytes
 36018 ;; Hardware stack levels used: 1
 36019 ;; Hardware stack levels required when called: 1
 36020 ;; This function calls:
 36021 ;;		i2_setOutputPin
 36022 ;; This function is called by:
 36023 ;;		_high_isr
 36024 ;; This function uses a non-reentrant model
 36025 ;;
 36026                           
 36027                           	psect	text192
 36028  00A0CE                     __ptext192:
 36029                           	callstack 0
 36030  00A0CE                     _timer3DoneInterruptHandler:
 36031                           	callstack 3
 36032                           
 36033                           ;servo.c: 215: T3CONbits.TMR3ON = 0;
 36034                           
 36035                           ;incstack = 0
 36036  00A0CE  90B1               	bcf	177,0,c	;volatile
 36037                           
 36038                           ;servo.c: 216: setOutputPin(servoInBlock+8U, NV->io[servoInBlock+8U].flags & 0x20U);
 36039  00A0D0  5012               	movf	_servoInBlock^0,w,c
 36040  00A0D2  0D07               	mullw	7
 36041  00A0D4  C0EC  F033         	movff	_NV,??_timer3DoneInterruptHandler
 36042  00A0D8  C0ED  F034         	movff	_NV+1,??_timer3DoneInterruptHandler+1
 36043  00A0DC  50F3               	movf	243,w,c
 36044  00A0DE  2633               	addwf	??_timer3DoneInterruptHandler^0,f,c
 36045  00A0E0  50F4               	movf	244,w,c
 36046  00A0E2  2234               	addwfc	(??_timer3DoneInterruptHandler+1)^0,f,c
 36047  00A0E4  0E49               	movlw	73
 36048  00A0E6  2433               	addwf	??_timer3DoneInterruptHandler^0,w,c
 36049  00A0E8  6ED9               	movwf	fsr2l,c
 36050  00A0EA  0E00               	movlw	0
 36051  00A0EC  2034               	addwfc	(??_timer3DoneInterruptHandler+1)^0,w,c
 36052  00A0EE  6EDA               	movwf	fsr2h,c
 36053  00A0F0  50DF               	movf	indf2,w,c
 36054  00A0F2  0B20               	andlw	32
 36055  00A0F4  6E2D               	movwf	i2setOutputPin@state^0,c
 36056  00A0F6  5012               	movf	_servoInBlock^0,w,c
 36057  00A0F8  0F08               	addlw	8
 36058  00A0FA  EC67  F032         	call	i2_setOutputPin
 36059  00A0FE  0012               	return		;funcret
 36060  00A100                     __end_of_timer3DoneInterruptHandler:
 36061                           	callstack 0
 36062                           
 36063 ;; *************** function _timer1DoneInterruptHandler *****************
 36064 ;; Defined at:
 36065 ;;		line 209 in file "../../github/CANMIOfirmware/servo.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;		None
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;		None
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  1    wreg      void 
 36072 ;; Registers used:
 36073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36074 ;; Tracked objects:
 36075 ;;		On entry : 0/0
 36076 ;;		On exit  : 0/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36083 ;;Total ram usage:        2 bytes
 36084 ;; Hardware stack levels used: 1
 36085 ;; Hardware stack levels required when called: 1
 36086 ;; This function calls:
 36087 ;;		i2_setOutputPin
 36088 ;; This function is called by:
 36089 ;;		_high_isr
 36090 ;; This function uses a non-reentrant model
 36091 ;;
 36092                           
 36093                           	psect	text193
 36094  00A220                     __ptext193:
 36095                           	callstack 0
 36096  00A220                     _timer1DoneInterruptHandler:
 36097                           	callstack 3
 36098                           
 36099                           ;servo.c: 210: T1CONbits.TMR1ON = 0;
 36100                           
 36101                           ;incstack = 0
 36102  00A220  90CD               	bcf	205,0,c	;volatile
 36103                           
 36104                           ;servo.c: 211: setOutputPin(servoInBlock, NV->io[servoInBlock].flags & 0x20U);
 36105  00A222  5012               	movf	_servoInBlock^0,w,c
 36106  00A224  0D07               	mullw	7
 36107  00A226  C0EC  F033         	movff	_NV,??_timer1DoneInterruptHandler
 36108  00A22A  C0ED  F034         	movff	_NV+1,??_timer1DoneInterruptHandler+1
 36109  00A22E  50F3               	movf	243,w,c
 36110  00A230  2633               	addwf	??_timer1DoneInterruptHandler^0,f,c
 36111  00A232  50F4               	movf	244,w,c
 36112  00A234  2234               	addwfc	(??_timer1DoneInterruptHandler+1)^0,f,c
 36113  00A236  0E11               	movlw	17
 36114  00A238  2433               	addwf	??_timer1DoneInterruptHandler^0,w,c
 36115  00A23A  6ED9               	movwf	fsr2l,c
 36116  00A23C  0E00               	movlw	0
 36117  00A23E  2034               	addwfc	(??_timer1DoneInterruptHandler+1)^0,w,c
 36118  00A240  6EDA               	movwf	fsr2h,c
 36119  00A242  50DF               	movf	indf2,w,c
 36120  00A244  0B20               	andlw	32
 36121  00A246  6E2D               	movwf	i2setOutputPin@state^0,c
 36122  00A248  5012               	movf	_servoInBlock^0,w,c
 36123  00A24A  EC67  F032         	call	i2_setOutputPin
 36124  00A24E  0012               	return		;funcret
 36125  00A250                     __end_of_timer1DoneInterruptHandler:
 36126                           	callstack 0
 36127                           
 36128 ;; *************** function i2_setOutputPin *****************
 36129 ;; Defined at:
 36130 ;;		line 257 in file "../../github/CANMIOfirmware/digitalOut.c"
 36131 ;; Parameters:    Size  Location     Type
 36132 ;;  io              1    wreg     unsigned char 
 36133 ;;  state           1    0[COMRAM] unsigned char 
 36134 ;; Auto vars:     Size  Location     Type
 36135 ;;  io              1    5[COMRAM] unsigned char 
 36136 ;; Return value:  Size  Location     Type
 36137 ;;                  1    wreg      void 
 36138 ;; Registers used:
 36139 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36140 ;; Tracked objects:
 36141 ;;		On entry : 0/0
 36142 ;;		On exit  : 0/0
 36143 ;;		Unchanged: 0/0
 36144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36145 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36148 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36149 ;;Total ram usage:        6 bytes
 36150 ;; Hardware stack levels used: 1
 36151 ;; This function calls:
 36152 ;;		Nothing
 36153 ;; This function is called by:
 36154 ;;		_timer1DoneInterruptHandler
 36155 ;;		_timer3DoneInterruptHandler
 36156 ;; This function uses a non-reentrant model
 36157 ;;
 36158                           
 36159                           	psect	text194
 36160  0064CE                     __ptext194:
 36161                           	callstack 0
 36162  0064CE                     i2_setOutputPin:
 36163                           	callstack 3
 36164                           
 36165                           ;incstack = 0
 36166                           ;i2setOutputPin@io stored from wreg
 36167  0064CE  6E32               	movwf	i2setOutputPin@io^0,c
 36168                           
 36169                           ;digitalOut.c: 258: switch (configs[io].port) {
 36170  0064D0  D0B4               	goto	i2l12163
 36171  0064D2                     i2l12143:
 36172                           
 36173                           ;digitalOut.c: 260: if (state) {
 36174  0064D2  502D               	movf	i2setOutputPin@state^0,w,c
 36175  0064D4  B4D8               	btfsc	status,2,c
 36176  0064D6  D01C               	goto	i2l12147
 36177                           
 36178                           ;digitalOut.c: 262: LATA |= (1U<<configs[io].no);
 36179  0064D8  5032               	movf	i2setOutputPin@io^0,w,c
 36180  0064DA  0D04               	mullw	4
 36181  0064DC  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36182  0064E0  0E02               	movlw	2
 36183  0064E2  262E               	addwf	??i2_setOutputPin^0,f,c
 36184  0064E4  502E               	movf	??i2_setOutputPin^0,w,c
 36185  0064E6  0F01               	addlw	low _configs
 36186  0064E8  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36187  0064EA  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36188  0064EE                     	if	1	;There is more than 1 active tblptr byte
 36189  0064EE  0E0F               	movlw	high __smallconst
 36190  0064F0  6EF7               	movwf	tblptrh,c
 36191  0064F2                     	endif
 36192  0064F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36193  0064F2  6AF8               	clrf	tblptru,c
 36194  0064F4                     	endif
 36195  0064F4                     	if	0	;tblptru may be non-zero
 36196  0064F4                     	endif
 36197  0064F4  0008               	tblrd		*
 36198  0064F6  CFF5 F030          	movff	tablat,??i2_setOutputPin+2
 36199  0064FA  0E01               	movlw	1
 36200  0064FC  6E31               	movwf	(??i2_setOutputPin+3)^0,c
 36201  0064FE  2A30               	incf	(??i2_setOutputPin+2)^0,f,c
 36202  006500  D002               	goto	i2u1298_44
 36203  006502                     i2u1298_45:
 36204  006502  90D8               	bcf	status,0,c
 36205  006504  3631               	rlcf	(??i2_setOutputPin+3)^0,f,c
 36206  006506                     i2u1298_44:
 36207  006506  2E30               	decfsz	(??i2_setOutputPin+2)^0,f,c
 36208  006508  D7FC               	goto	i2u1298_45
 36209  00650A  5031               	movf	(??i2_setOutputPin+3)^0,w,c
 36210  00650C  1289               	iorwf	137,f,c	;volatile
 36211                           
 36212                           ;digitalOut.c: 263: } else {
 36213  00650E  0012               	return	
 36214  006510                     i2l12147:
 36215                           
 36216                           ;digitalOut.c: 265: LATA &= ~(1U<<configs[io].no);
 36217  006510  5032               	movf	i2setOutputPin@io^0,w,c
 36218  006512  0D04               	mullw	4
 36219  006514  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36220  006518  0E02               	movlw	2
 36221  00651A  262E               	addwf	??i2_setOutputPin^0,f,c
 36222  00651C  502E               	movf	??i2_setOutputPin^0,w,c
 36223  00651E  0F01               	addlw	low _configs
 36224  006520  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36225  006522  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36226  006526                     	if	1	;There is more than 1 active tblptr byte
 36227  006526  0E0F               	movlw	high __smallconst
 36228  006528  6EF7               	movwf	tblptrh,c
 36229  00652A                     	endif
 36230  00652A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36231  00652A  6AF8               	clrf	tblptru,c
 36232  00652C                     	endif
 36233  00652C                     	if	0	;tblptru may be non-zero
 36234  00652C                     	endif
 36235  00652C  0008               	tblrd		*
 36236  00652E  CFF5 F030          	movff	tablat,??i2_setOutputPin+2
 36237  006532  0E01               	movlw	1
 36238  006534  6E31               	movwf	(??i2_setOutputPin+3)^0,c
 36239  006536  2A30               	incf	(??i2_setOutputPin+2)^0,f,c
 36240  006538  D002               	goto	i2u1299_44
 36241  00653A                     i2u1299_45:
 36242  00653A  90D8               	bcf	status,0,c
 36243  00653C  3631               	rlcf	(??i2_setOutputPin+3)^0,f,c
 36244  00653E                     i2u1299_44:
 36245  00653E  2E30               	decfsz	(??i2_setOutputPin+2)^0,f,c
 36246  006540  D7FC               	goto	i2u1299_45
 36247  006542  5031               	movf	(??i2_setOutputPin+3)^0,w,c
 36248  006544  0AFF               	xorlw	255
 36249  006546  1689               	andwf	137,f,c	;volatile
 36250  006548  0012               	return	
 36251  00654A                     i2l12149:
 36252                           
 36253                           ;digitalOut.c: 269: if (state) {
 36254  00654A  502D               	movf	i2setOutputPin@state^0,w,c
 36255  00654C  B4D8               	btfsc	status,2,c
 36256  00654E  D01C               	goto	i2l12153
 36257                           
 36258                           ;digitalOut.c: 271: LATB |= (1U<<configs[io].no);
 36259  006550  5032               	movf	i2setOutputPin@io^0,w,c
 36260  006552  0D04               	mullw	4
 36261  006554  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36262  006558  0E02               	movlw	2
 36263  00655A  262E               	addwf	??i2_setOutputPin^0,f,c
 36264  00655C  502E               	movf	??i2_setOutputPin^0,w,c
 36265  00655E  0F01               	addlw	low _configs
 36266  006560  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36267  006562  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36268  006566                     	if	1	;There is more than 1 active tblptr byte
 36269  006566  0E0F               	movlw	high __smallconst
 36270  006568  6EF7               	movwf	tblptrh,c
 36271  00656A                     	endif
 36272  00656A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36273  00656A  6AF8               	clrf	tblptru,c
 36274  00656C                     	endif
 36275  00656C                     	if	0	;tblptru may be non-zero
 36276  00656C                     	endif
 36277  00656C  0008               	tblrd		*
 36278  00656E  CFF5 F030          	movff	tablat,??i2_setOutputPin+2
 36279  006572  0E01               	movlw	1
 36280  006574  6E31               	movwf	(??i2_setOutputPin+3)^0,c
 36281  006576  2A30               	incf	(??i2_setOutputPin+2)^0,f,c
 36282  006578  D002               	goto	i2u1301_44
 36283  00657A                     i2u1301_45:
 36284  00657A  90D8               	bcf	status,0,c
 36285  00657C  3631               	rlcf	(??i2_setOutputPin+3)^0,f,c
 36286  00657E                     i2u1301_44:
 36287  00657E  2E30               	decfsz	(??i2_setOutputPin+2)^0,f,c
 36288  006580  D7FC               	goto	i2u1301_45
 36289  006582  5031               	movf	(??i2_setOutputPin+3)^0,w,c
 36290  006584  128A               	iorwf	138,f,c	;volatile
 36291                           
 36292                           ;digitalOut.c: 272: } else {
 36293  006586  0012               	return	
 36294  006588                     i2l12153:
 36295                           
 36296                           ;digitalOut.c: 274: LATB &= ~(1U<<configs[io].no);
 36297  006588  5032               	movf	i2setOutputPin@io^0,w,c
 36298  00658A  0D04               	mullw	4
 36299  00658C  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36300  006590  0E02               	movlw	2
 36301  006592  262E               	addwf	??i2_setOutputPin^0,f,c
 36302  006594  502E               	movf	??i2_setOutputPin^0,w,c
 36303  006596  0F01               	addlw	low _configs
 36304  006598  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36305  00659A  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36306  00659E                     	if	1	;There is more than 1 active tblptr byte
 36307  00659E  0E0F               	movlw	high __smallconst
 36308  0065A0  6EF7               	movwf	tblptrh,c
 36309  0065A2                     	endif
 36310  0065A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36311  0065A2  6AF8               	clrf	tblptru,c
 36312  0065A4                     	endif
 36313  0065A4                     	if	0	;tblptru may be non-zero
 36314  0065A4                     	endif
 36315  0065A4  0008               	tblrd		*
 36316  0065A6  CFF5 F030          	movff	tablat,??i2_setOutputPin+2
 36317  0065AA  0E01               	movlw	1
 36318  0065AC  6E31               	movwf	(??i2_setOutputPin+3)^0,c
 36319  0065AE  2A30               	incf	(??i2_setOutputPin+2)^0,f,c
 36320  0065B0  D002               	goto	i2u1302_44
 36321  0065B2                     i2u1302_45:
 36322  0065B2  90D8               	bcf	status,0,c
 36323  0065B4  3631               	rlcf	(??i2_setOutputPin+3)^0,f,c
 36324  0065B6                     i2u1302_44:
 36325  0065B6  2E30               	decfsz	(??i2_setOutputPin+2)^0,f,c
 36326  0065B8  D7FC               	goto	i2u1302_45
 36327  0065BA  5031               	movf	(??i2_setOutputPin+3)^0,w,c
 36328  0065BC  0AFF               	xorlw	255
 36329  0065BE  168A               	andwf	138,f,c	;volatile
 36330  0065C0  0012               	return	
 36331  0065C2                     i2l12155:
 36332                           
 36333                           ;digitalOut.c: 278: if (state) {
 36334  0065C2  502D               	movf	i2setOutputPin@state^0,w,c
 36335  0065C4  B4D8               	btfsc	status,2,c
 36336  0065C6  D01C               	goto	i2l12159
 36337                           
 36338                           ;digitalOut.c: 280: LATC |= (1U<<configs[io].no);
 36339  0065C8  5032               	movf	i2setOutputPin@io^0,w,c
 36340  0065CA  0D04               	mullw	4
 36341  0065CC  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36342  0065D0  0E02               	movlw	2
 36343  0065D2  262E               	addwf	??i2_setOutputPin^0,f,c
 36344  0065D4  502E               	movf	??i2_setOutputPin^0,w,c
 36345  0065D6  0F01               	addlw	low _configs
 36346  0065D8  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36347  0065DA  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36348  0065DE                     	if	1	;There is more than 1 active tblptr byte
 36349  0065DE  0E0F               	movlw	high __smallconst
 36350  0065E0  6EF7               	movwf	tblptrh,c
 36351  0065E2                     	endif
 36352  0065E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36353  0065E2  6AF8               	clrf	tblptru,c
 36354  0065E4                     	endif
 36355  0065E4                     	if	0	;tblptru may be non-zero
 36356  0065E4                     	endif
 36357  0065E4  0008               	tblrd		*
 36358  0065E6  CFF5 F030          	movff	tablat,??i2_setOutputPin+2
 36359  0065EA  0E01               	movlw	1
 36360  0065EC  6E31               	movwf	(??i2_setOutputPin+3)^0,c
 36361  0065EE  2A30               	incf	(??i2_setOutputPin+2)^0,f,c
 36362  0065F0  D002               	goto	i2u1304_44
 36363  0065F2                     i2u1304_45:
 36364  0065F2  90D8               	bcf	status,0,c
 36365  0065F4  3631               	rlcf	(??i2_setOutputPin+3)^0,f,c
 36366  0065F6                     i2u1304_44:
 36367  0065F6  2E30               	decfsz	(??i2_setOutputPin+2)^0,f,c
 36368  0065F8  D7FC               	goto	i2u1304_45
 36369  0065FA  5031               	movf	(??i2_setOutputPin+3)^0,w,c
 36370  0065FC  128B               	iorwf	139,f,c	;volatile
 36371                           
 36372                           ;digitalOut.c: 281: } else {
 36373  0065FE  0012               	return	
 36374  006600                     i2l12159:
 36375                           
 36376                           ;digitalOut.c: 283: LATC &= ~(1U<<configs[io].no);
 36377  006600  5032               	movf	i2setOutputPin@io^0,w,c
 36378  006602  0D04               	mullw	4
 36379  006604  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36380  006608  0E02               	movlw	2
 36381  00660A  262E               	addwf	??i2_setOutputPin^0,f,c
 36382  00660C  502E               	movf	??i2_setOutputPin^0,w,c
 36383  00660E  0F01               	addlw	low _configs
 36384  006610  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36385  006612  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36386  006616                     	if	1	;There is more than 1 active tblptr byte
 36387  006616  0E0F               	movlw	high __smallconst
 36388  006618  6EF7               	movwf	tblptrh,c
 36389  00661A                     	endif
 36390  00661A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36391  00661A  6AF8               	clrf	tblptru,c
 36392  00661C                     	endif
 36393  00661C                     	if	0	;tblptru may be non-zero
 36394  00661C                     	endif
 36395  00661C  0008               	tblrd		*
 36396  00661E  CFF5 F030          	movff	tablat,??i2_setOutputPin+2
 36397  006622  0E01               	movlw	1
 36398  006624  6E31               	movwf	(??i2_setOutputPin+3)^0,c
 36399  006626  2A30               	incf	(??i2_setOutputPin+2)^0,f,c
 36400  006628  D002               	goto	i2u1305_44
 36401  00662A                     i2u1305_45:
 36402  00662A  90D8               	bcf	status,0,c
 36403  00662C  3631               	rlcf	(??i2_setOutputPin+3)^0,f,c
 36404  00662E                     i2u1305_44:
 36405  00662E  2E30               	decfsz	(??i2_setOutputPin+2)^0,f,c
 36406  006630  D7FC               	goto	i2u1305_45
 36407  006632  5031               	movf	(??i2_setOutputPin+3)^0,w,c
 36408  006634  0AFF               	xorlw	255
 36409  006636  168B               	andwf	139,f,c	;volatile
 36410  006638  0012               	return	
 36411  00663A                     i2l12163:
 36412  00663A  5032               	movf	i2setOutputPin@io^0,w,c
 36413  00663C  0D04               	mullw	4
 36414  00663E  CFF3 F02E          	movff	prodl,??i2_setOutputPin
 36415  006642  0E01               	movlw	1
 36416  006644  262E               	addwf	??i2_setOutputPin^0,f,c
 36417  006646  502E               	movf	??i2_setOutputPin^0,w,c
 36418  006648  0F01               	addlw	low _configs
 36419  00664A  6E2F               	movwf	(??i2_setOutputPin+1)^0,c
 36420  00664C  C02F  FFF6         	movff	??i2_setOutputPin+1,tblptrl
 36421  006650                     	if	1	;There is more than 1 active tblptr byte
 36422  006650  0E0F               	movlw	high __smallconst
 36423  006652  6EF7               	movwf	tblptrh,c
 36424  006654                     	endif
 36425  006654                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36426  006654  6AF8               	clrf	tblptru,c
 36427  006656                     	endif
 36428  006656                     	if	0	;tblptru may be non-zero
 36429  006656                     	endif
 36430  006656  0008               	tblrd		*
 36431  006658  50F5               	movf	tablat,w,c
 36432                           
 36433                           ; Switch size 1, requested type "simple"
 36434                           ; Number of cases is 3, Range of values is 65 to 67
 36435                           ; switch strategies available:
 36436                           ; Name         Instructions Cycles
 36437                           ; simple_byte           10     6 (average)
 36438                           ;	Chosen strategy is simple_byte
 36439  00665A  0A41               	xorlw	65	; case 65
 36440  00665C  B4D8               	btfsc	status,2,c
 36441  00665E  D739               	goto	i2l12143
 36442  006660  0A03               	xorlw	3	; case 66
 36443  006662  B4D8               	btfsc	status,2,c
 36444  006664  D772               	goto	i2l12149
 36445  006666  0A01               	xorlw	1	; case 67
 36446  006668  A4D8               	btfss	status,2,c
 36447  00666A  0012               	return	
 36448  00666C  D7AA               	goto	i2l12155
 36449  00666E                     __end_ofi2_setOutputPin:
 36450                           	callstack 0
 36451                           
 36452                           	psect	rparam
 36453  0000                     
 36454                           	psect	temp
 36455  00004F                     btemp:
 36456                           	callstack 0
 36457  00004F                     	ds	1
 36458  0000                     int$flags	set	btemp
 36459  0000                     wtemp8	set	btemp+1
 36460  0000                     ttemp5	set	btemp+1
 36461  0000                     ttemp6	set	btemp+4
 36462  0000                     ttemp7	set	btemp+8
 36463                           
 36464                           	psect	idloc
 36465                           
 36466                           ;Config register IDLOC0 @ 0x200000
 36467                           ;	unspecified, using default values
 36468  200000                     	org	2097152
 36469  200000  FF                 	db	255
 36470                           
 36471                           ;Config register IDLOC1 @ 0x200001
 36472                           ;	unspecified, using default values
 36473  200001                     	org	2097153
 36474  200001  FF                 	db	255
 36475                           
 36476                           ;Config register IDLOC2 @ 0x200002
 36477                           ;	unspecified, using default values
 36478  200002                     	org	2097154
 36479  200002  FF                 	db	255
 36480                           
 36481                           ;Config register IDLOC3 @ 0x200003
 36482                           ;	unspecified, using default values
 36483  200003                     	org	2097155
 36484  200003  FF                 	db	255
 36485                           
 36486                           ;Config register IDLOC4 @ 0x200004
 36487                           ;	unspecified, using default values
 36488  200004                     	org	2097156
 36489  200004  FF                 	db	255
 36490                           
 36491                           ;Config register IDLOC5 @ 0x200005
 36492                           ;	unspecified, using default values
 36493  200005                     	org	2097157
 36494  200005  FF                 	db	255
 36495                           
 36496                           ;Config register IDLOC6 @ 0x200006
 36497                           ;	unspecified, using default values
 36498  200006                     	org	2097158
 36499  200006  FF                 	db	255
 36500                           
 36501                           ;Config register IDLOC7 @ 0x200007
 36502                           ;	unspecified, using default values
 36503  200007                     	org	2097159
 36504  200007  FF                 	db	255
 36505                           
 36506                           	psect	config
 36507                           
 36508                           ;Config register CONFIG1L @ 0x300000
 36509                           ;	VREG Sleep Enable bit
 36510                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 36511                           ;	LF-INTOSC Low-power Enable bit
 36512                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 36513                           ;	SOSC Power Selection and mode Configuration bits
 36514                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 36515                           ;	Extended Instruction Set
 36516                           ;	XINST = OFF, Disabled
 36517  300000                     	org	3145728
 36518  300000  15                 	db	21
 36519                           
 36520                           ;Config register CONFIG1H @ 0x300001
 36521                           ;	Oscillator
 36522                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 36523                           ;	PLL x4 Enable bit
 36524                           ;	PLLCFG = OFF, Disabled
 36525                           ;	Fail-Safe Clock Monitor
 36526                           ;	FCMEN = OFF, Disabled
 36527                           ;	Internal External Oscillator Switch Over Mode
 36528                           ;	IESO = OFF, Disabled
 36529  300001                     	org	3145729
 36530  300001  03                 	db	3
 36531                           
 36532                           ;Config register CONFIG2L @ 0x300002
 36533                           ;	Power Up Timer
 36534                           ;	PWRTEN = ON, Enabled
 36535                           ;	Brown Out Detect
 36536                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 36537                           ;	Brown-out Reset Voltage bits
 36538                           ;	BORV = 0, 3.0V
 36539                           ;	BORMV Power level
 36540                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 36541  300002                     	org	3145730
 36542  300002  66                 	db	102
 36543                           
 36544                           ;Config register CONFIG2H @ 0x300003
 36545                           ;	Watchdog Timer
 36546                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 36547                           ;	Watchdog Postscaler
 36548                           ;	WDTPS = 1048576, 1:1048576
 36549  300003                     	org	3145731
 36550  300003  7C                 	db	124
 36551                           
 36552                           ; Padding undefined space
 36553  300004                     	org	3145732
 36554  300004  FF                 	db	255
 36555                           
 36556                           ;Config register CONFIG3H @ 0x300005
 36557                           ;	ECAN Mux bit
 36558                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 36559                           ;	MSSP address masking
 36560                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 36561                           ;	Master Clear Enable
 36562                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 36563  300005                     	org	3145733
 36564  300005  89                 	db	137
 36565                           
 36566                           ;Config register CONFIG4L @ 0x300006
 36567                           ;	Stack Overflow Reset
 36568                           ;	STVREN = ON, Enabled
 36569                           ;	Boot Block Size
 36570                           ;	BBSIZ = BB1K, 1K word Boot Block size
 36571  300006                     	org	3145734
 36572  300006  81                 	db	129
 36573                           
 36574                           ; Padding undefined space
 36575  300007                     	org	3145735
 36576  300007  FF                 	db	255
 36577                           
 36578                           ;Config register CONFIG5L @ 0x300008
 36579                           ;	Code Protect 00800-03FFF
 36580                           ;	CP0 = OFF, Disabled
 36581                           ;	Code Protect 04000-07FFF
 36582                           ;	CP1 = OFF, Disabled
 36583                           ;	Code Protect 08000-0BFFF
 36584                           ;	CP2 = OFF, Disabled
 36585                           ;	Code Protect 0C000-0FFFF
 36586                           ;	CP3 = OFF, Disabled
 36587  300008                     	org	3145736
 36588  300008  0F                 	db	15
 36589                           
 36590                           ;Config register CONFIG5H @ 0x300009
 36591                           ;	Code Protect Boot
 36592                           ;	CPB = OFF, Disabled
 36593                           ;	Data EE Read Protect
 36594                           ;	CPD = OFF, Disabled
 36595  300009                     	org	3145737
 36596  300009  C0                 	db	192
 36597                           
 36598                           ;Config register CONFIG6L @ 0x30000A
 36599                           ;	Table Write Protect 00800-03FFF
 36600                           ;	WRT0 = OFF, Disabled
 36601                           ;	Table Write Protect 04000-07FFF
 36602                           ;	WRT1 = OFF, Disabled
 36603                           ;	Table Write Protect 08000-0BFFF
 36604                           ;	WRT2 = OFF, Disabled
 36605                           ;	Table Write Protect 0C000-0FFFF
 36606                           ;	WRT3 = OFF, Disabled
 36607  30000A                     	org	3145738
 36608  30000A  0F                 	db	15
 36609                           
 36610                           ;Config register CONFIG6H @ 0x30000B
 36611                           ;	Config. Write Protect
 36612                           ;	WRTC = OFF, Disabled
 36613                           ;	Table Write Protect Boot
 36614                           ;	WRTB = OFF, Disabled
 36615                           ;	Data EE Write Protect
 36616                           ;	WRTD = OFF, Disabled
 36617  30000B                     	org	3145739
 36618  30000B  E0                 	db	224
 36619                           
 36620                           ;Config register CONFIG7L @ 0x30000C
 36621                           ;	Table Read Protect 00800-03FFF
 36622                           ;	EBTR0 = OFF, Disabled
 36623                           ;	Table Read Protect 04000-07FFF
 36624                           ;	EBTR1 = OFF, Disabled
 36625                           ;	Table Read Protect 08000-0BFFF
 36626                           ;	EBTR2 = OFF, Disabled
 36627                           ;	Table Read Protect 0C000-0FFFF
 36628                           ;	EBTR3 = OFF, Disabled
 36629  30000C                     	org	3145740
 36630  30000C  0F                 	db	15
 36631                           
 36632                           ;Config register CONFIG7H @ 0x30000D
 36633                           ;	Table Read Protect Boot
 36634                           ;	EBTRB = OFF, Disabled
 36635  30000D                     	org	3145741
 36636  30000D  40                 	db	64
 36637                           tosu	equ	0xFFF
 36638                           tosh	equ	0xFFE
 36639                           tosl	equ	0xFFD
 36640                           stkptr	equ	0xFFC
 36641                           pclatu	equ	0xFFB
 36642                           pclath	equ	0xFFA
 36643                           pcl	equ	0xFF9
 36644                           tblptru	equ	0xFF8
 36645                           tblptrh	equ	0xFF7
 36646                           tblptrl	equ	0xFF6
 36647                           tablat	equ	0xFF5
 36648                           prodh	equ	0xFF4
 36649                           prodl	equ	0xFF3
 36650                           indf0	equ	0xFEF
 36651                           postinc0	equ	0xFEE
 36652                           postdec0	equ	0xFED
 36653                           preinc0	equ	0xFEC
 36654                           plusw0	equ	0xFEB
 36655                           fsr0h	equ	0xFEA
 36656                           fsr0l	equ	0xFE9
 36657                           wreg	equ	0xFE8
 36658                           indf1	equ	0xFE7
 36659                           postinc1	equ	0xFE6
 36660                           postdec1	equ	0xFE5
 36661                           preinc1	equ	0xFE4
 36662                           plusw1	equ	0xFE3
 36663                           fsr1h	equ	0xFE2
 36664                           fsr1l	equ	0xFE1
 36665                           bsr	equ	0xFE0
 36666                           indf2	equ	0xFDF
 36667                           postinc2	equ	0xFDE
 36668                           postdec2	equ	0xFDD
 36669                           preinc2	equ	0xFDC
 36670                           plusw2	equ	0xFDB
 36671                           fsr2h	equ	0xFDA
 36672                           fsr2l	equ	0xFD9
 36673                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    76
    Data        6
    BSS         1968
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      78
    BANK0           160    134     142
    BANK1           256      6     248
    BANK2           256     29     233
    BANK3           256      0     200
    BANK4           256      0     128
    BANK5           256      0     256
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> canRxFifo(BANK5[256]), canTxFifo(BANK6[256]), TXB0CON(BITBIGSFRllllhhllll[1]), checkCBUS@msg(BANK2[20]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> canRxFifo(BANK5[256]), canTxFifo(BANK6[256]), TXB0CON(BITBIGSFRllllhhllll[1]), checkCBUS@msg(BANK2[20]), 

    memcpy@s1	PTR const void  size(2) Largest target is 256
		 -> cbusMsg.buffer(UNKNOWN), cbusSendMyEvent@msg.buffer(COMRAM[14]), cbusSendEvent@msg.buffer(COMRAM[14]), cbusSendDataEvent@msg.buffer(COMRAM[14]), 
		 -> requestNodeNumber@local_cbusMsg.buffer(COMRAM[14]), requestNodeNumber@local_cbusMsg(BANK0[9]), cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), 
		 -> cbusSendMyEvent@msg(COMRAM[10]), canRxFifo.buffer(BANK5[14]), canRxFifo(BANK5[256]), canTxFifo(BANK6[256]), 
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 
		 -> cbusMsg(COMRAM[16]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 256
		 -> cbusMsg.buffer(UNKNOWN), cbusSendMyEvent@msg.buffer(COMRAM[14]), cbusSendEvent@msg.buffer(COMRAM[14]), cbusSendDataEvent@msg.buffer(COMRAM[14]), 
		 -> requestNodeNumber@local_cbusMsg.buffer(COMRAM[14]), requestNodeNumber@local_cbusMsg(BANK0[9]), cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), 
		 -> cbusSendMyEvent@msg(COMRAM[10]), canRxFifo.buffer(BANK5[14]), canRxFifo(BANK5[256]), canTxFifo(BANK6[256]), 
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 
		 -> cbusMsg(COMRAM[16]), 

    setFlashWord@flashAddr	PTR unsigned int  size(3) Largest target is 0
		 -> ROM(CODE[65535]), NULL(NULL[0]), 

    writeFlashByte@flashAddr	PTR unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), NULL(NULL[0]), RAM(DATA[3648]), 

    writeFlashImage@offset	PTR unsigned char  size(2) Largest target is 64
		 -> flashbuf(BANK3[64]), 

    writeFlashImage@addr	PTR unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), NULL(NULL[0]), RAM(DATA[3648]), 

    thisNN@rx_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    doSnn@rx_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    doRqmn@namptr	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    doRqnp@paramptr	PTR struct . size(3) Largest target is 20
		 -> FLiMparams(CODE[20]), 

    doRqnpn@paramptr	PTR struct . size(3) Largest target is 20
		 -> FLiMparams(CODE[20]), 

    QNNrespond@paramptr	PTR struct . size(3) Largest target is 20
		 -> FLiMparams(CODE[20]), 

    getParFlags@paramptr	PTR struct . size(3) Largest target is 20
		 -> FLiMparams(CODE[20]), 

    parseFLiMCmd@rx_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    parseCBUSMsg@msg	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    parseCbusEvent@msg	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    cbusSendMsg@msg	PTR unsigned char  size(1) Largest target is 16
		 -> requestNodeNumber@local_cbusMsg(BANK0[9]), cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), 
		 -> cbusMsg(COMRAM[16]), 

    cbusSendMsgNN@msg	PTR unsigned char  size(1) Largest target is 16
		 -> requestNodeNumber@local_cbusMsg(BANK0[9]), cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), 
		 -> cbusMsg(COMRAM[16]), 

    cbusSendMsgMyNN@msg	PTR unsigned char  size(1) Largest target is 16
		 -> cbusMsg(COMRAM[16]), 

    cbusSendEventWithData@msg	PTR unsigned char  size(1) Largest target is 10
		 -> cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), 

    cbusSendOpcNN@msg	PTR unsigned char  size(1) Largest target is 16
		 -> requestNodeNumber@local_cbusMsg(BANK0[9]), cbusMsg(COMRAM[16]), 

    cbusSendOpcMyNN@msg	PTR unsigned char  size(1) Largest target is 16
		 -> cbusMsg(COMRAM[16]), 

    cbusMsgReceived@msg	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    _PointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 

    checkIncomingPacket@ptr	PTR struct . size(2) Largest target is 1
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 

    canFillRxFifo@ptr	PTR struct . size(2) Largest target is 1
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 

    insertIntoRxFifo@ptr	PTR struct . size(2) Largest target is 14
		 -> cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), B5CON(BITBIGSFRllllhllhhhhhl[1]), 
		 -> B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), B1CON(BITBIGSFRllllhllhl[1]), 
		 -> B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 

    sp___PointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 

    canbusRecv@ptr	PTR struct . size(2) Largest target is 1
		 -> B5CON(BITBIGSFRllllhllhhhhhl[1]), B4CON(BITBIGSFRllllhllhhhhl[1]), B3CON(BITBIGSFRllllhllhhhl[1]), B2CON(BITBIGSFRllllhllhhl[1]), 
		 -> B1CON(BITBIGSFRllllhllhl[1]), B0CON(ABS[1]), RXB1CON(BITBIGSFRllllhhllll[1]), RXB0CON(BITBIGSFRlllhhlll[1]), 

    canbusRecv@msg	PTR struct . size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    checkTxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB0CON(BITBIGSFRllllhhllll[1]), 

    canQueueRx@msg	PTR struct . size(1) Largest target is 14
		 -> cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> canRxFifo(BANK5[256]), canTxFifo(BANK6[256]), TXB0CON(BITBIGSFRllllhhllll[1]), checkCBUS@msg(BANK2[20]), 

    canTX@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB0CON(BITBIGSFRllllhhllll[1]), 

    canTX@msg	PTR struct . size(1) Largest target is 16
		 -> requestNodeNumber@local_cbusMsg(BANK0[9]), cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), 
		 -> cbusMsg(COMRAM[16]), 

    canSend@msg	PTR unsigned char  size(1) Largest target is 16
		 -> requestNodeNumber@local_cbusMsg(BANK0[9]), cbusSendDataEvent@msg(COMRAM[14]), cbusSendEvent@msg(BANK0[10]), cbusSendMyEvent@msg(COMRAM[10]), 
		 -> cbusMsg(COMRAM[16]), 

    delete@q.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    delete@q	PTR struct Queue size(2) Largest target is 6
		 -> expeditedQueue(BANK1[5]), normalQueue(BANK1[5]), 

    quantity@q.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    quantity@q	PTR struct Queue size(2) Largest target is 6
		 -> expeditedQueue(BANK1[5]), normalQueue(BANK1[5]), 

    peek@q.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    peek@q	PTR struct Queue size(2) Largest target is 6
		 -> expeditedQueue(BANK1[5]), normalQueue(BANK1[5]), 

    pop@q.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    pop@q	PTR struct Queue size(2) Largest target is 6
		 -> expeditedQueue(BANK1[5]), normalQueue(BANK1[5]), 

    push@q.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    push@q	PTR struct Queue size(2) Largest target is 6
		 -> expeditedQueue(BANK1[5]), normalQueue(BANK1[5]), 

    NvBytePtr	PTR const unsigned char  size(3) Largest target is 128
		 -> nodeVarTable(CODE[128]), 

    loadNvCache@np	PTR unsigned char  size(2) Largest target is 128
		 -> nvCache(BANK4[128]), 

    processEvent@msg	PTR unsigned char  size(2) Largest target is 20
		 -> checkCBUS@msg(BANK2[20]), 

    sp__loadNvCache	PTR struct . size(2) Largest target is 128
		 -> nvCache(BANK4[128]), 

    eventTable	PTR const struct . size(3) Largest target is 65535
		 -> ROM(CODE[65535]), NULL(NULL[0]), 

    NV	PTR struct . size(2) Largest target is 128
		 -> nvCache(BANK4[128]), NULL(NULL[0]), 

    expeditedQueue.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    S41Queue$queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 

    normalQueue.queue	PTR unsigned char  size(2) Largest target is 64
		 -> expeditedQueueBuf(BANK2[8]), normalQueueBuf(BANK3[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _canInterruptHandler->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_memcpy
    _canFillRxFifo->i1_checkIncomingPacket
    i1_insertIntoRxFifo->i1_memcpy
    i1_checkIncomingPacket->i1_tickGet

Critical Paths under _high_isr in COMRAM

    _high_isr->_timer1DoneInterruptHandler
    _high_isr->_timer3DoneInterruptHandler
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin

Critical Paths under _main in BANK0

    _startServos->_pollServos
    _setupTimer3->___wmul
    _setupTimer3->_setOutputPin
    _setupTimer1->___wmul
    _setupTimer1->_setOutputPin
    _pollServos->_sendProducedEvent
    _bounceDown->___awdiv
    ___awdiv->___wmul
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _setOutputState->_setMultiState
    _getAction->_peekActionQueue
    _peekActionQueue->_quantity
    _doWait->___lmul
    _doneAction->_popAction
    _popAction->_pop
    _deleteActionQueue->_quantity
    _pollAnalogue->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _eventsInit->_rebuildHashtable
    _cbusInit->_canInit
    _ee_read_short->_ee_read
    _canInit->_tickGet
    _initServos->_setOutputPosition
    _setOutputPosition->_setDigitalOutput
    _initInputScan->_readInput
    _doTimedResponse->_APP_doSOD
    _APP_doSOD->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _sendProducedEvent->_cbusSendEvent
    _getProducedEvent->_getNN
    _cbusSendEvent->_cbusSendEventWithData
    _cbusSendEventWithData->_cbusSendMsgNN
    _canQueueRx->_insertIntoRxFifo
    _insertIntoRxFifo->_memcpy
    _checkFlashing->_doFLiMFlash
    _checkCBUS->_parseCBUSMsg
    _shortFlicker->_tickGet
    _parseCBUSMsg->_parseFLiMCmd
    _parseFLiMCmd->_doNvset
    _doSnn->_SaveNodeDetails
    _doRqnpn->_doError
    _doRqnp->_cbusSendMsg
    _doRqmn->_cbusSendMsg
    _doRqevn->_cbusSendOpcMyNN
    _doReval->_cbusSendOpcMyNN
    _doReqev->_findEvent
    _numEv->_validStart
    _doNvset->_actUponNVchange
    _validateNV->___lwdiv
    _actUponNVchange->_setType
    _doNvrd->_doError
    _doNnevn->_cbusSendOpcMyNN
    _doNnclr->_clearAllEvents
    _doNenrd->_cbusSendOpcMyNN
    _doNenrd->_doError
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _doAreq->_findEvent
    _QNNrespond->_cbusSendMsgNN
    _parseCbusEvent->_findEvent
    _processEvent->_getEVs
    _pushAction->_push
    _longFlicker->_tickGet
    _factoryResetFlash->_setType
    _setType->_defaultEvents
    _defaultNVs->_writeFlashByte
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _setFlashWord->_writeFlashImage
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _getEVs->_validStart
    _findEvent->_getHash
    _configIO->_setDigitalOutput
    _setDigitalOutput->_setOutputPin
    _factoryResetGlobalNv->_writeFlashByte
    _loadNvCache->_readFlashBlock
    _clearAllEvents->_rebuildHashtable
    _writeFlashByte->_writeFlashImage
    _writeFlashImage->_readFlashBlock
    _factoryResetEE->_ee_write_short
    _cbusMsgReceived->_canbusRecv
    _canbusRecv->_processEnumeration
    _processEnumeration->_cbusSendOpcMyNN
    _processEnumeration->_doError
    _setNewCanId->_ee_write
    _doError->_cbusSendMsgNN
    _cbusSendOpcMyNN->_cbusSendMsgMyNN
    _cbusSendMsgMyNN->_cbusSendMsg
    _checkIncomingPacket->_tickGet
    _FLiMSWCheck->_requestNodeNumber
    _startFLiMFlash->_doFLiMFlash
    _doFLiMFlash->_tickGet
    _requestNodeNumber->_cbusSendOpcNN
    _SaveNodeDetails->_rebuildHashtable
    _rebuildHashtable->_getHash
    _getNN->_readFlashBlock
    _getHash->_getNN
    _getEv->_validStart
    _validStart->_readFlashBlock
    _getEN->_readFlashBlock
    _flushFlashImage->_writeFlashShort
    _writeFlashWithErase->_writeFlashShort
    _ee_write_short->_ee_write
    _ee_write->_ee_read
    _SLiMRevert->_cbusSendOpcNN
    _cbusSendOpcNN->_cbusSendMsgNN
    _cbusSendMsgNN->_cbusSendMsg
    _cbusSendMsg->_canSend
    _canSend->_canTX
    _canTX->_memcpy

Critical Paths under _low_isr in BANK0

    _canInterruptHandler->_canFillRxFifo

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _parseCBUSMsg->_parseFLiMCmd

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_checkCBUS

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0 3408369
                                             20 BANK2      9     9      0
                        _FLiMSWCheck
                             ___lmul
                          _checkCBUS
                      _checkFlashing
                    _doTimedResponse
                         _initRomOps
                     _initStatusLeds
                         _initialise
                          _inputScan
                        _loadNvCache
                       _pollAnalogue
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (1) _startServos                                          3     3      0   64691
                                             97 BANK0      3     3      0
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (2) _setupTimer3                                          5     5      0    5690
                                             23 BANK0      5     5      0
                             ___wmul
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _setupTimer1                                          5     5      0    5690
                                             23 BANK0      5     5      0
                             ___wmul
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _pollServos                                          12    12      0   53047
                                             85 BANK0     12    12      0
                         _bounceDown
                           _bounceUp
                           _ee_write
                         _initBounce
                  _sendProducedEvent
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _initBounce                                           1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bounceUp                                            10    10      0     750
                                             17 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _bounceDown                                          11    11      0    6744
                                             31 BANK0     11    11      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1516
                                             23 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _processOutputs                                       5     5      0   34360
                                             85 BANK0      4     4      0
                         _doneAction
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (1) _processActions                                      11    11      0   62124
                                            104 BANK0     11    11      0
                            ___lwdiv
                            ___lwmod
                          _completed
                  _deleteActionQueue
                              _doSOD
                             _doWait
                         _doneAction
                          _getAction
                      _needsStarting
                    _peekActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (2) _startOutput                                          3     1      2   45817
                                            101 BANK0      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (3) _startDigitalOutput                                   8     7      1   42715
                                             93 BANK0      8     7      1
                           _ee_write
          _sendInvertedProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _setOutputState                                       3     1      2    3270
                                             22 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (2) _needsStarting                                        5     3      2     515
                                             17 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _getAction                                            0     0      0    1346
                    _peekActionQueue
 ---------------------------------------------------------------------------------
 (2) _peekActionQueue                                      1     1      0    1346
                                             23 BANK0      1     1      0
                               _peek
                           _quantity
 ---------------------------------------------------------------------------------
 (3) _peek                                                 5     2      3     676
                                             17 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _doWait                                               6     4      2    2001
                                             29 BANK0      6     4      2
                             ___lmul
                         _doneAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _doneAction                                           0     0      0     513
                          _popAction
 ---------------------------------------------------------------------------------
 (3) _popAction                                            1     1      0     513
                                             23 BANK0      1     1      0
                                _pop
 ---------------------------------------------------------------------------------
 (4) _pop                                                  6     4      2     462
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     566
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _doSOD                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _deleteActionQueue                                    2     2      0    1253
                                             23 BANK0      2     2      0
                             _delete
                           _quantity
 ---------------------------------------------------------------------------------
 (3) _quantity                                             6     4      2     543
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _delete                                               5     2      3     614
                                             17 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _completed                                            6     4      2     583
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _pollAnalogue                                        13    13      0   57742
                                             85 BANK0     13    13      0
                             ___wmul
                      _cbusSendOpcNN
                  _sendProducedEvent
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (1) _inputScan                                            6     6      0   37423
                                             85 BANK0      6     6      0
                           _ee_write
                          _readInput
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (1) _initialise                                          13    13      0  981516
                                            114 BANK0     13    13      0
                    _actionQueueInit
                           _addEvent
                           _configIO
                            _ee_read
                           _ee_write
                     _factoryResetEE
                  _factoryResetFlash
                              _getEv
                   _getProducedEvent
                       _initAnalogue
                      _initInputScan
                        _initOutputs
                         _initServos
                         _initTicker
                  _initTimedResponse
                        _loadNvCache
                      _mioEventsInit
                        _mioFlimInit
                            _writeEv
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (2) _mioFlimInit                                          0     0      0   34306
                           _flimInit
                          _mioNvInit
 ---------------------------------------------------------------------------------
 (3) _mioNvInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _flimInit                                             0     0      0   34306
                           _cbusInit
                            _ee_read
                         _eventsInit
                       _setStatusLed
 ---------------------------------------------------------------------------------
 (4) _eventsInit                                           0     0      0   22542
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (4) _cbusInit                                             2     0      2   10254
                                             30 BANK0      2     0      2
                            _canInit
                      _ee_read_short
 ---------------------------------------------------------------------------------
 (5) _ee_read_short                                        9     7      2    1808
                                             19 BANK0      9     7      2
                            _ee_read
 ---------------------------------------------------------------------------------
 (5) _canInit                                              4     3      1    8298
                                             27 BANK0      3     2      1
                            _ee_read
                           _ee_write
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _mioEventsInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0      92
                                             17 BANK0      3     3      0
                          _setclkMHz
 ---------------------------------------------------------------------------------
 (3) _setclkMHz                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    8054
                                             33 BANK0      5     5      0
                            _ee_read
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    5     3      2    5362
                                             28 BANK0      5     3      2
                            _ee_read (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     164
                                             17 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0     130
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    1716
                                             22 BANK0      3     3      0
                            _ee_read
                          _readInput
 ---------------------------------------------------------------------------------
 (2) _readInput                                            5     5      0     110
                                             17 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _initAnalogue                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionQueueInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initStatusLeds                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doTimedResponse                                      2     2      0   58398
                                            115 BANK0      2     2      0
                          _APP_doSOD
                    _cbusSendOpcMyNN
                              _getEN
                              _getNN
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (2) _tableIndexToEvtIdx                                   1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _APP_doSOD                                           22    22      0   36867
                                             93 BANK0     22    22      0
                            _ee_read
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   32981
                                             85 BANK0      8     4      4
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (3) _sendProducedEvent                                    7     6      1   30847
                                             78 BANK0      7     6      1
                      _cbusSendEvent
                            _ee_read
                           _ee_write
            _getDefaultProducedEvent
                   _getProducedEvent
 ---------------------------------------------------------------------------------
 (4) _getProducedEvent                                     2     2      0    8184
                                             40 BANK0      2     2      0
                              _getEN
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getDefaultProducedEvent                              1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _cbusSendEvent                                       16    11      5   11297
                                             62 BANK0     16    11      5
              _cbusSendEventWithData
 ---------------------------------------------------------------------------------
 (5) _cbusSendEventWithData                               11     4      7   10235
                                             51 BANK0     11     4      7
                         _canQueueRx
                      _cbusSendMsgNN
 ---------------------------------------------------------------------------------
 (6) _canQueueRx                                           1     0      1    2535
                                             31 BANK0      1     0      1
                   _insertIntoRxFifo
 ---------------------------------------------------------------------------------
 (7) _insertIntoRxFifo                                     3     1      2    2310
                                             28 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _checkFlashing                                        4     4      0     912
                                             28 BANK0      4     4      0
                        _doFLiMFlash
                            _tickGet
 ---------------------------------------------------------------------------------
 (1) _checkCBUS                                           20    20      0 2023772
                                              0 BANK2     20    20      0
                    _cbusMsgReceived
                    _cbusSendOpcMyNN
                       _factoryReset
                        _longFlicker
                       _parseCBUSMsg
                       _shortFlicker
                             _thisNN
 ---------------------------------------------------------------------------------
 (2) _shortFlicker                                         4     4      0     456
                                             27 BANK0      4     4      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _parseCBUSMsg                                         2     0      2 1348185
                                            132 BANK0      2     0      2
                     _parseCbusEvent
                       _parseFLiMCmd
 ---------------------------------------------------------------------------------
 (3) _parseFLiMCmd                                         9     7      2 1321981
                                            129 BANK0      3     1      2
                                              0 BANK1      6     6      0
                         _QNNrespond
                             _doAreq
                             _doEnum
                            _doError
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                             _doNvrd
                            _doNvset
                            _doReqev
                            _doReval
                            _doRqevn
                             _doRqmn
                             _doRqnp
                            _doRqnpn
                              _doSnn
                           _ee_write
                        _setNewCanId
                             _thisNN
 ---------------------------------------------------------------------------------
 (2) _thisNN                                               6     4      2     444
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _doSnn                                                3     1      2   45709
                                             59 BANK0      3     1      2
                    _SaveNodeDetails
                    _cbusSendOpcMyNN
                         _setFLiMLed
 ---------------------------------------------------------------------------------
 (4) _doRqnpn                                             11    11      0   12364
                                             52 BANK0     11    11      0
                      _cbusSendMsgNN
                            _doError
                        _readCPUType
 ---------------------------------------------------------------------------------
 (5) _readCPUType                                          2     0      2       0
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _doRqnp                                              10    10      0    4767
                                             47 BANK0     10    10      0
                        _cbusSendMsg
                        _getParFlags
 ---------------------------------------------------------------------------------
 (4) _doRqmn                                               9     9      0    4689
                                             47 BANK0      8     8      0
                        _cbusSendMsg
 ---------------------------------------------------------------------------------
 (4) _doRqevn                                              2     2      0   13535
                                             52 BANK0      2     2      0
                    _cbusSendOpcMyNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _doReval                                              7     6      1   30845
                                             52 BANK0      7     6      1
                    _cbusSendOpcMyNN
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _doReqev                                              9     4      5   37491
                                             59 BANK0      9     4      5
                    _cbusSendOpcMyNN
                          _findEvent
                              _getEv
                              _numEv
 ---------------------------------------------------------------------------------
 (5) _numEv                                                5     5      0    8028
                                             33 BANK0      5     5      0
                     _readFlashBlock
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _doNvset                                              7     6      1  616788
                                            122 BANK0      7     6      1
                    _actUponNVchange
                    _cbusSendOpcMyNN
                            _doError
                        _loadNvCache
                         _validateNV
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (5) _validateNV                                           6     4      2    3850
                                             24 BANK0      6     4      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) _actUponNVchange                                      9     7      2  577558
                                            114 BANK0      8     6      2
                            ___lbdiv
                            ___lwdiv
                            ___lwmod
                     _setBounceState
                      _setMultiState
                      _setServoState
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (3) _startServoOutput                                     4     3      1     864
                                             17 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _startMultiOutput                                     3     2      1     908
                                             17 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _startBounceOutput                                    2     1      1     528
                                             17 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setServoState                                        4     3      1     780
                                             17 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _setMultiState                                        5     4      1     992
                                             17 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _setBounceState                                       4     3      1     780
                                             17 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) ___lbdiv                                              4     3      1     448
                                             17 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _doNvrd                                               3     3      0   14824
                                             52 BANK0      3     3      0
                    _cbusSendMsgMyNN
                            _doError
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (4) _doNnevn                                              5     5      0   13451
                                             52 BANK0      5     5      0
                    _cbusSendOpcMyNN
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (4) _doNnclr                                              0     0      0   47707
                    _cbusSendOpcMyNN
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _doNerd                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _doNenrd                                              4     4      0   27778
                                             52 BANK0      4     4      0
                    _cbusSendOpcMyNN
                            _doError
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _evtIdxToTableIndex                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _doEvuln                                              4     0      4   57176
                                             68 BANK0      4     0      4
                        _removeEvent
 ---------------------------------------------------------------------------------
 (5) _removeEvent                                          5     1      4   56880
                                             63 BANK0      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (4) _doEvlrn                                              7     1      6  334941
                                            112 BANK0      7     1      6
                       _APP_addEvent
                    _cbusSendOpcMyNN
 ---------------------------------------------------------------------------------
 (5) _APP_addEvent                                         8     1      7  324338
                                            104 BANK0      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (4) _doAreq                                              19    15      4   32468
                                             59 BANK0     19    15      4
                        _cbusSendMsg
                            _doError
                            _ee_read
                          _findEvent
                              _getEv
 ---------------------------------------------------------------------------------
 (4) _QNNrespond                                           3     3      0    6149
                                             51 BANK0      3     3      0
                      _cbusSendMsgNN
                        _getParFlags
 ---------------------------------------------------------------------------------
 (5) _getParFlags                                          3     3      0      90
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _parseCbusEvent                                       8     6      2   25930
                                             59 BANK0      8     6      2
                          _findEvent
                       _processEvent
 ---------------------------------------------------------------------------------
 (4) _processEvent                                        16    14      2   14908
                                             40 BANK0     15    13      2
                            ___lwdiv
                            ___lwmod
                             _getEVs
                         _pushAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (5) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pushAction                                           1     1      0     928
                                             28 BANK0      1     1      0
                               _push
 ---------------------------------------------------------------------------------
 (6) _push                                                11     8      3     844
                                             17 BANK0     11     8      3
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1808
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1614
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _longFlicker                                          0     0      0     456
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _factoryReset                                         0     0      0  637388
                     _factoryResetEE
                  _factoryResetFlash
 ---------------------------------------------------------------------------------
 (2) _factoryResetFlash                                    2     2      0  624368
                     _clearAllEvents
           _factoryResetGlobalEvents
               _factoryResetGlobalNv
                    _flushFlashImage
                            _setType
 ---------------------------------------------------------------------------------
 (3) _setType                                              6     5      1  566488
                                            108 BANK0      6     5      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                   _initAnaloguePort
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (4) _initAnaloguePort                                     1     1      0      84
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _defaultNVs                                           4     3      1   24146
                                             43 BANK0      4     3      1
                             ___wmul
                        _loadNvCache
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3656
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _defaultEvents                                        4     3      1  514048
                                            104 BANK0      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (5) _clearEvents                                          1     1      0  357192
                                             93 BANK0      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (6) _deleteHappeningRange                                10     9      1  176128
                                             83 BANK0      9     8      1
              _checkRemoveTableEntry
                    _flushFlashImage
                     _readFlashBlock
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (6) _deleteActionRange                                   10     9      1  180938
                                             83 BANK0     10     9      1
              _checkRemoveTableEntry
                    _flushFlashImage
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            21    14      7  155778
                                             83 BANK0     21    14      7
                          _findEvent
                    _flushFlashImage
                     _readFlashBlock
                   _rebuildHashtable
                       _setFlashWord
                            _writeEv
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (2) _writeEv                                             18    16      2   86404
                                             65 BANK0     18    16      2
              _checkRemoveTableEntry
                     _readFlashBlock
                       _setFlashWord
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (3) _setFlashWord                                         7     2      5    6032
                                             39 BANK0      7     2      5
                    _writeFlashImage
 ---------------------------------------------------------------------------------
 (3) _checkRemoveTableEntry                                2     2      0   58616
                                             63 BANK0      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _removeTableEntry                                     7     7      0   46130
                                             56 BANK0      7     7      0
                    _flushFlashImage
                     _readFlashBlock
                   _rebuildHashtable
                         _validStart
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (4) _getEVs                                               7     7      0    8328
                                             33 BANK0      7     7      0
                     _readFlashBlock
                         _validStart
 ---------------------------------------------------------------------------------
 (6) _findEvent                                           13     9      4   10364
                                             46 BANK0     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _configIO                                             8     8      0   11976
                                             28 BANK0      8     8      0
                            _ee_read
                           _ee_write
                   _setDigitalOutput
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     5     4      1    2668
                                             23 BANK0      5     4      1
                            _ee_read (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setOutputPin                                         6     5      1    1812
                                             17 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalNv                                 0     0      0   19292
                        _loadNvCache
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (1) _loadNvCache                                          6     4      2    3990
                                             29 BANK0      6     4      2
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearAllEvents                                       6     6      0   38258
                                             56 BANK0      6     6      0
                    _flushFlashImage
                   _rebuildHashtable
                     _writeFlashByte
 ---------------------------------------------------------------------------------
 (2) _writeFlashByte                                       4     0      4   15302
                                             39 BANK0      4     0      4
                             ___wmul (ARG)
                    _flushFlashImage
                    _writeFlashImage
 ---------------------------------------------------------------------------------
 (3) _writeFlashImage                                     10     6      4    4978
                                             29 BANK0     10     6      4
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (2) _factoryResetEE                                       0     0      0   13020
                           _ee_write
                     _ee_write_short
 ---------------------------------------------------------------------------------
 (2) _cbusMsgReceived                                      3     1      2   26854
                                             65 BANK0      3     1      2
                         _canbusRecv
 ---------------------------------------------------------------------------------
 (3) _canbusRecv                                           6     4      2   26664
                                             59 BANK0      6     4      2
                       __PointBuffer
                _checkIncomingPacket
                             _memcpy
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (4) _processEnumeration                                   7     7      0   22946
                                             52 BANK0      7     7      0
                    _cbusSendOpcMyNN
                            _doError
                        _setNewCanId
                            _tickGet
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          3     3      0    6520
                                             23 BANK0      3     3      0
                           _ee_write
 ---------------------------------------------------------------------------------
 (5) _doError                                              1     1      0    6011
                                             51 BANK0      1     1      0
                      _cbusSendMsgNN
 ---------------------------------------------------------------------------------
 (2) _cbusSendOpcMyNN                                      3     1      2    9449
                                             49 BANK0      3     1      2
                    _cbusSendMsgMyNN
 ---------------------------------------------------------------------------------
 (3) _cbusSendMsgMyNN                                      2     1      1    4829
                                             47 BANK0      2     1      1
                        _cbusSendMsg
 ---------------------------------------------------------------------------------
 (4) _checkIncomingPacket                                  8     6      2    1102
                                             27 BANK0      8     6      2
                             _doEnum
                            _tickGet
 ---------------------------------------------------------------------------------
 (4) _doEnum                                               1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) __PointBuffer                                         5     3      2     132
                                             17 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _FLiMSWCheck                                          4     4      0   51572
                                             65 BANK0      4     4      0
                         _SLiMRevert
                    _SaveNodeDetails
                  _requestNodeNumber
                         _setSLiMLed
                       _setStatusLed
                     _startFLiMFlash
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startFLiMFlash                                       3     3      0     552
                                             28 BANK0      3     3      0
                        _doFLiMFlash
 ---------------------------------------------------------------------------------
 (2) _doFLiMFlash                                          1     1      0     456
                                             27 BANK0      1     1      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (4) _setStatusLed                                         1     1      0      42
                                             17 BANK0      1     1      0
                         _setFLiMLed
                         _setSLiMLed
 ---------------------------------------------------------------------------------
 (5) _setSLiMLed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _setFLiMLed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _requestNodeNumber                                    9     9      0    7319
                                             56 BANK0      9     9      0
                      _cbusSendOpcNN
 ---------------------------------------------------------------------------------
 (5) _SaveNodeDetails                                      3     0      3   36070
                                             56 BANK0      3     0      3
                           _ee_write
                     _ee_write_short
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (5) _rebuildHashtable                                    11    11      0   22542
                                             46 BANK0     10    10      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _getNN                                               11     9      2    4032
                                             29 BANK0     11     9      2
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (6) _getHash                                              6     2      4     706
                                             40 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (6) _getEv                                                9     7      2    8714
                                             33 BANK0      9     7      2
                     _readFlashBlock
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           4     4      0    3894
                                             29 BANK0      4     4      0
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (5) _getEN                                               10     8      2    3942
                                             29 BANK0     10     8      2
                     _readFlashBlock
 ---------------------------------------------------------------------------------
 (6) _readFlashBlock                                       9     7      2    3762
                                             22 BANK0      7     5      2
                    _flushFlashImage
 ---------------------------------------------------------------------------------
 (7) _flushFlashImage                                      0     0      0     276
                    _writeFlashShort
                _writeFlashWithErase
 ---------------------------------------------------------------------------------
 (8) _writeFlashWithErase                                  0     0      0     138
         _isSuitableTimeToWriteFlash
                    _writeFlashShort
 ---------------------------------------------------------------------------------
 (9) _writeFlashShort                                      5     5      0     138
                                             17 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (9) _isSuitableTimeToWriteFlash                           0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (10) _isNoServoPulses                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ee_write_short                                       6     2      4    6836
                                             23 BANK0      6     2      4
                           _ee_write
 ---------------------------------------------------------------------------------
 (4) _ee_write                                             4     1      3    6184
                                             19 BANK0      4     1      3
                            _ee_read
 ---------------------------------------------------------------------------------
 (5) _ee_read                                              2     0      2    1468
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SLiMRevert                                           0     0      0    7133
                      _cbusSendOpcNN
 ---------------------------------------------------------------------------------
 (2) _cbusSendOpcNN                                        5     1      4    7133
                                             51 BANK0      5     1      4
                      _cbusSendMsgNN
 ---------------------------------------------------------------------------------
 (6) _cbusSendMsgNN                                        4     1      3    5969
                                             47 BANK0      4     1      3
                        _cbusSendMsg
 ---------------------------------------------------------------------------------
 (7) _cbusSendMsg                                          4     3      1    4449
                                             43 BANK0      4     3      1
                            _canSend
 ---------------------------------------------------------------------------------
 (8) _canSend                                              3     1      2    3674
                                             40 BANK0      3     1      2
                              _canTX
 ---------------------------------------------------------------------------------
 (9) _canTX                                               12    11      1    3288
                                             28 BANK0     12    11      1
                             _memcpy
                            _tickGet
 ---------------------------------------------------------------------------------
 (1) _tickGet                                             10     6      4     456
                                             17 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (10) _memcpy                                             11     5      6    2060
                                             17 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _low_isr                                             7     7      0    4875
                                             10 BANK0      7     7      0
                _canInterruptHandler
                            _tickISR
 ---------------------------------------------------------------------------------
 (22) _tickISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _canInterruptHandler                                 0     0      0    4875
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (23) _checkCANTimeout                                     4     4      0    1250
                                             30 COMRAM     4     4      0
                        _checkTxFifo
                          i1_tickGet
 ---------------------------------------------------------------------------------
 (23) _canTxError                                          0     0      0     932
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (23) _checkTxFifo                                         3     3      0     932
                                             27 COMRAM     3     3      0
                           i1_memcpy
                          i1_tickGet
 ---------------------------------------------------------------------------------
 (23) _canFillRxFifo                                      10    10      0    1761
                                              0 BANK0     10    10      0
                     i1__PointBuffer
              i1_checkIncomingPacket
                 i1_insertIntoRxFifo
 ---------------------------------------------------------------------------------
 (24) i1_insertIntoRxFifo                                  3     1      2     696
                                             27 COMRAM     3     1      2
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (24) i1_memcpy                                           11     5      6     566
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (24) i1_checkIncomingPacket                               8     6      2     703
                                             26 COMRAM     8     6      2
                           i1_doEnum
                          i1_tickGet
 ---------------------------------------------------------------------------------
 (24) i1_tickGet                                          10     6      4     318
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (25) i1_doEnum                                            1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (24) i1__PointBuffer                                      5     3      2      86
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _high_isr                                            8     8      0     544
                                              8 COMRAM     8     8      0
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          2     2      0     272
                                              6 COMRAM     2     2      0
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          2     2      0     272
                                              6 COMRAM     2     2      0
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      6     5      1     272
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLiMSWCheck
     _SLiMRevert
       _cbusSendOpcNN
         _cbusSendMsgNN
           _cbusSendMsg
             _canSend
               _canTX
                 _memcpy
                 _tickGet
     _SaveNodeDetails
       _ee_write
         _ee_read
       _ee_write_short
         _ee_write
       _rebuildHashtable
         _getEN
           _readFlashBlock
             _flushFlashImage
               _writeFlashShort
               _writeFlashWithErase
                 _isSuitableTimeToWriteFlash
                   _isNoServoPulses
                 _writeFlashShort
         _getEv
           _readFlashBlock
           _validStart
             _readFlashBlock
         _getHash
           _getEN (ARG)
           _getNN (ARG)
             _readFlashBlock
         _getNN
         _validStart
     _requestNodeNumber
       _cbusSendOpcNN
     _setSLiMLed
     _setStatusLed
       _setFLiMLed
       _setSLiMLed
     _startFLiMFlash
       _doFLiMFlash
         _tickGet
     _tickGet
   ___lmul
   _checkCBUS
     _cbusMsgReceived
       _canbusRecv
         __PointBuffer
         _checkIncomingPacket
           _doEnum
           _tickGet
         _memcpy
         _processEnumeration
           _cbusSendOpcMyNN
             _cbusSendMsgMyNN
               _cbusSendMsg
           _doError
             _cbusSendMsgNN
           _setNewCanId
             _ee_write
           _tickGet
     _cbusSendOpcMyNN
     _factoryReset
       _factoryResetEE
         _ee_write
         _ee_write_short
       _factoryResetFlash
         _clearAllEvents
           _flushFlashImage
           _rebuildHashtable
           _writeFlashByte
             ___wmul (ARG)
             _flushFlashImage (ARG)
             _writeFlashImage (ARG)
               _readFlashBlock
         _factoryResetGlobalEvents
         _factoryResetGlobalNv
           _loadNvCache
             _readFlashBlock
           _writeFlashByte
         _flushFlashImage
         _setType
           _configIO
             _ee_read
             _ee_write
             _setDigitalOutput
               _ee_read (ARG)
               _setOutputPin (ARG)
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                 _getHash
                 _getNN
               _flushFlashImage
               _readFlashBlock
               _rebuildHashtable
               _setFlashWord
                 _writeFlashImage
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readFlashBlock
                     _validStart
                   _removeTableEntry
                     _flushFlashImage
                     _readFlashBlock
                     _rebuildHashtable
                     _validStart
                     _writeFlashByte
                   _validStart
                 _readFlashBlock
                 _setFlashWord
                 _writeFlashByte
               _writeFlashByte
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashImage
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashImage
                 _readFlashBlock
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             ___wmul
             _loadNvCache
             _writeFlashByte
           _initAnaloguePort
           _writeFlashByte
     _longFlicker
       _tickGet
     _parseCBUSMsg
       _parseCbusEvent
         _findEvent
         _processEvent
           ___lwdiv
           ___lwmod
           _getEVs
           _pushAction
             _push
           _setExpeditedActions
           _setNormalActions
       _parseFLiMCmd
         _QNNrespond
           _cbusSendMsgNN
           _getParFlags
         _doAreq
           _cbusSendMsg
           _doError
           _ee_read
           _findEvent
           _getEv
         _doEnum
         _doError
         _doEvlrn
           _APP_addEvent
             _addEvent
             _checkRemoveTableEntry
             _rebuildHashtable
             _writeEv
           _cbusSendOpcMyNN
         _doEvuln
           _removeEvent
             _findEvent
             _removeTableEntry
         _doNenrd
           _cbusSendOpcMyNN
           _doError
           _evtIdxToTableIndex
           _getEN
           _getNN
           _validStart
         _doNerd
         _doNnclr
           _cbusSendOpcMyNN
           _clearAllEvents
         _doNnevn
           _cbusSendOpcMyNN
           _readFlashBlock
         _doNvrd
           _cbusSendMsgMyNN
           _doError
           _readFlashBlock
         _doNvset
           _actUponNVchange
             ___lbdiv
             ___lwdiv
             ___lwmod
             _setBounceState
             _setMultiState
             _setServoState
             _setType
             _startBounceOutput
             _startMultiOutput
             _startServoOutput
           _cbusSendOpcMyNN
           _doError
           _loadNvCache
           _validateNV
             ___lwdiv
             ___lwmod
           _writeFlashByte
         _doReqev
           _cbusSendOpcMyNN
           _findEvent
           _getEv
           _numEv
             _readFlashBlock
             _validStart
         _doReval
           _cbusSendOpcMyNN
           _evtIdxToTableIndex
           _getEv
           _numEv
           _validStart
         _doRqevn
           _cbusSendOpcMyNN
           _validStart
         _doRqmn
           _cbusSendMsg
         _doRqnp
           _cbusSendMsg
           _getParFlags
         _doRqnpn
           _cbusSendMsgNN
           _doError
           _readCPUType
         _doSnn
           _SaveNodeDetails
           _cbusSendOpcMyNN
           _setFLiMLed
         _ee_write
         _setNewCanId
         _thisNN
     _shortFlicker
       _tickGet
     _thisNN
   _checkFlashing
     _doFLiMFlash
     _tickGet
   _doTimedResponse
     _APP_doSOD
       _ee_read
       _sendInvertedProducedEvent
         _sendProducedEvent
           _cbusSendEvent
             _cbusSendEventWithData
               _canQueueRx
                 _insertIntoRxFifo
                   _memcpy
               _cbusSendMsgNN
           _ee_read
           _ee_write
           _getDefaultProducedEvent
           _getProducedEvent
             _getEN
             _getNN
     _cbusSendOpcMyNN
     _getEN
     _getNN
     _tableIndexToEvtIdx
     _validStart
   _initRomOps
   _initStatusLeds
   _initialise
     _actionQueueInit
     _addEvent
     _configIO
     _ee_read
     _ee_write
     _factoryResetEE
     _factoryResetFlash
     _getEv
     _getProducedEvent
     _initAnalogue
     _initInputScan
       _ee_read
       _readInput
     _initOutputs
     _initServos
       _ee_read
       _setOutputPosition
         _ee_read (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _initTicker
       _setclkMHz
     _initTimedResponse
     _loadNvCache
     _mioEventsInit
     _mioFlimInit
       _flimInit
         _cbusInit
           _canInit
             _ee_read
             _ee_write
             _tickGet
           _ee_read_short
             _ee_read
         _ee_read
         _eventsInit
           _rebuildHashtable
         _setStatusLed
       _mioNvInit
     _writeEv
     _writeFlashByte
   _inputScan
     _ee_write
     _readInput
     _sendProducedEvent
   _loadNvCache
   _pollAnalogue
     ___wmul
     _cbusSendOpcNN
     _sendProducedEvent
     _writeFlashByte
   _processActions
     ___lwdiv
     ___lwmod
     _completed
     _deleteActionQueue
       _delete
       _quantity
     _doSOD
     _doWait
       ___lmul
       _doneAction
         _popAction
           _pop
       _tickGet
     _doneAction
     _getAction
       _peekActionQueue
         _peek
         _quantity
     _needsStarting
     _peekActionQueue
     _setOutputState
       _setBounceState
       _setMultiState
       _setServoState
     _startOutput
       _startBounceOutput
       _startDigitalOutput
         _ee_write
         _sendInvertedProducedEvent
         _setOutputPin
       _startMultiOutput
       _startServoOutput
   _processOutputs
     _doneAction
     _sendProducedEvent
     _setOutputPin
   _sendProducedEvent
   _startServos
     _pollServos
       _bounceDown
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _bounceUp
       _ee_write
       _initBounce
       _sendProducedEvent
       _tickGet
     _setupTimer1
       ___wmul
       _setOutputPin
     _setupTimer3
       ___wmul
       _setOutputPin
   _tickGet

 _low_isr (ROOT)
   _canInterruptHandler
     _canFillRxFifo
       i1__PointBuffer
       i1_checkIncomingPacket
         i1_doEnum
         i1_tickGet
       i1_insertIntoRxFifo
         i1_memcpy
     _canTxError
       _checkTxFifo
         i1_memcpy
         i1_tickGet
     _checkCANTimeout
       _checkTxFifo
       i1_tickGet
     _checkTxFifo
   _tickISR

 _high_isr (ROOT)
   _timer1DoneInterruptHandler
     i2_setOutputPin
   _timer3DoneInterruptHandler
     i2_setOutputPin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     280      68       17.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      66        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      65        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      64        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      63        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      62        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      61        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      60        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      59        0.0%
BANK6              100      0     100      15      100.0%
BITBANK5           100      0       0      58        0.0%
BANK5              100      0     100      14      100.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      80      13       50.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     1D      E9       9       91.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      4E       1       83.0%
BITBANK14           41      0       0      67        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRlllllh     2B      0       0      55        0.0%
BITBIGSFRllllhh     2A      0       0      41        0.0%
BITBIGSFRhhhlh      19      0       0      26        0.0%
BITBIGSFRllllhl     16      0       0      48        0.0%
BITBIGSFRllllhl     10      0       0      49        0.0%
BITBIGSFRllllhl      F      0       0      50        0.0%
BITBIGSFRllllhl      F      0       0      51        0.0%
BITBIGSFRllllhl      F      0       0      52        0.0%
BITBIGSFRllllhl      F      0       0      53        0.0%
BITBIGSFRllllhl      F      0       0      54        0.0%
BITBIGSFRlllhhl      D      0       0      39        0.0%
BITBIGSFRllllhh      A      0       0      46        0.0%
BITBIGSFRllllhh      A      0       0      44        0.0%
BITBIGSFRllllhh      A      0       0      42        0.0%
BITBIGSFRlhhhhh      8      0       0      29        0.0%
BITBIGSFRlhhhhl      8      0       0      32        0.0%
BITBIGSFRhhll        8      0       0      28        0.0%
BITBIGSFRhhhhh       7      0       0      24        0.0%
BITBIGSFRlhlh        6      0       0      35        0.0%
BITBIGSFRllh         6      0       0      37        0.0%
BITBIGSFRlhll        6      0       0      36        0.0%
BITBIGSFRlllhhh      5      0       0      38        0.0%
BITBIGSFRlhhhhh      5      0       0      31        0.0%
BITBIGSFRhhhll       4      0       0      27        0.0%
BITBIGSFRlhhhhh      3      0       0      30        0.0%
BITBIGSFRllllhh      2      0       0      45        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRllllhh      2      0       0      47        0.0%
BITBIGSFRlllhhl      2      0       0      40        0.0%
BITBIGSFRhhhhl       2      0       0      25        0.0%
BITBIGSFRllllll      2      0       0      56        0.0%
BITBIGSFRlhhhl       1      0       0      33        0.0%
BITBIGSFRlhhl        1      0       0      34        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     605      57        0.0%
DATA                 0      0     885       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Apr 10 16:25:04 2022

                   findEvent@tableIndex 009A                      cbusMsgReceived@msg 00A1  
                        _txTimeoutCount 01DC                          doNvset@NVindex 00E0  
                       parseCBUSMsg@msg 00E4                          doNvset@NVvalue 00DA  
                   findEvent@nodeNumber 008E                          _startFLiMFlash A468  
                        _completed$2368 0075                           ?_APP_addEvent 00C8  
                                    _NV 00EC                            ___awdiv@sign 007C  
                                    _io 00E7                                      bsr 000FE0  
                   ___wmul@multiplicand 0073          _sendInvertedProducedEvent$1832 00BA  
       __end_of_getDefaultProducedEvent A716                        ?_flushFlashImage 002D  
                           _startServos 7BDA            processEvent@nextSimultaneous 0090  
                                   l216 4EE8               __end_of_deleteActionRange 8384  
                                   l316 4582                                     l236 5764  
                           _startOutput 96E2                                     l732 5FFA  
                                   l742 96C0                                     l753 549A  
                                   l594 8DD4                                     l757 5490  
                                   l778 55E4                                     l962 5178  
                                   l947 856E                                     l788 5582  
                            _QNNrespond 98EA                      _enumerationResults 0254  
                    processEvent@action 0095               __end_of_deleteActionQueue 9B16  
                cbusMsgReceived@cbusNum 00A3                   setFlashWord@flashAddr 0087  
                 setFlashWord@flashData 008A                                     _evs 0240  
                                   _pop 87EC                          cbusSendMsg@msg 008B  
                        doRqnp@paramptr 0095                                     prod 000FF3  
                                   wreg 000FE8            tableIndexToEvtIdx@tableIndex 0071  
  sendInvertedProducedEvent@can_send_on 00B7                    _moduleNvDefs_absaddr 00FF80  
                       ?i1__PointBuffer 003D                              _SLiMRevert A5BE  
                        _larbRetryCount 000D                                    l1100 88F0  
                                  l1118 8C28                                    l1127 9426  
                                  l2142 6670                                    l2302 8120  
                                  l2151 6744                                    l2145 669A  
                                  l2155 677C                                    l1292 1B42  
                                  l2157 6786                                    l2149 673E  
                                  l2502 9A54                                    l1374 A67C  
                                  l1703 91DE                                    l1623 782A  
                                  l3143 99D6                                    l3153 9DCC  
                                  l2506 9A5E                                    l2610 9E7A  
                                  l1571 5E42                                    l2380 6FE8  
                                  l2381 6FF0                                    l1574 5F14  
                                  l2377 7042                                    l1761 7F2E  
                                  l2466 7B9C                                    l2378 6F70  
                                  l1596 62BA                                    l2572 73EC  
                                  l2495 A534                                    l1919 708E  
                                  l2577 7426                                    _BIE0 000E7E  
                    doEvuln@eventNumber 00A6                                    ?_pop 0071  
                   _enumerationRequired 0009                        setOutputState@io 0078  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _IPR5 000F78  
                     doEvuln@nodeNumber 00A4                  cbusSendMsgNN@eventNode 008F  
                        configIO@action 0082                  deleteHappeningRange@pa 00BA  
                            _NV_changed 01D5                       _FCUparams_absaddr 000838  
                                  _WPUB 000F5B                             APP_doSOD@io 00D2  
                     setOutputPin@state 0071                          i2_setOutputPin 64CE  
                           _outputState 0150                            ?_readCPUType 0071  
        getDefaultProducedEvent@paction 002D                    _actUponNVchange$2139 00D6  
                                  _main 47B2                                    _peek 8BD8  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                        ??_writeFlashByte 008B  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    _push 797E  
                   setMultiState@action 0071                                    btemp 004F  
                     ?_removeTableEntry 002D                            ?_mioFlimInit 002D  
                                  pop@q 0071                                    prodh 000FF4  
                                  prodl 000FF3                                    start 089E  
                          ?_loadNvCache 007D                      bounceDown@reversed 0086  
                deleteActionQueue@index 0078                           setupTimer1@io 007B  
                   _setExpeditedActions A706                           setupTimer3@io 007B  
                      ?_peekActionQueue 002D              __end_of_startDigitalOutput 50AC  
                        _setBounceState 6CFE                      ??_removeTableEntry 0098  
                __end_of_startFLiMFlash A48C                   _enumerationInProgress 0007  
                       getEN@tableIndex 0086                            ___param_bank 000000  
                      doAreq@tableIndex 00AA                          ??_APP_addEvent 00CF  
                      doAreq@nodeNumber 009B                   __end_of_ee_read_short 9A2E  
                    canbusRecv@msgFound 009E                   __end_of_defaultEvents 6170  
                           completed@io 0076                                   ??_pop 0073  
                                 l20001 4F98                                   l20005 4FA6  
                                 l20023 506C                                   l20015 4FF8  
                                 _B0CON 000E80                                   l20009 4FC2  
                                 l20043 A2C4                                   l20211 3158  
                                 l20203 3060                                   l20141 7832  
                                 l20213 31DE                                   l20205 3066  
                                 l20221 3294                                   l10701 8CA2  
                                 l20055 A2D4                                   l20039 A2BC  
                                 l20215 3254                                   l20207 306C  
                                 l21111 55F4                                   l10711 8CC2  
                                 _B1CON 000E90                                   l20153 7892  
                                 l20241 32F8                                   l20233 32D2  
                                 l20209 30D2                                   l20073 8E70  
                                 l11433 9E6C                                   l21041 2760  
                                 l21121 56A6                                   l20243 330C  
                                 l20235 32D8                                   l20227 32B2  
                                 l20219 325A                                   l21211 4710  
                                 l21027 26A0                                   l11283 980E  
                                 l21131 5740                                   l10715 8CCC  
                                 l20253 3386                                   l20245 3330  
                                 l20237 32DE                                   l20229 32C6  
                                 l20341 7CEE                                   l20333 7CA4  
                                 l20077 8E7C                                   l20085 8EB4  
                                 l21301 3BAE                                   l21205 46C8  
                                 l21213 4722                                   l21221 479C  
                                 l21029 26B8                                   l21141 57B0  
                                 l20159 78A2                                   l20175 81CE  
                                 l20263 3434                                   l20255 338E  
                                 l20247 3354                                   l20239 32F2  
                                 l21207 46DA                                   l21223 47AC  
                                 l21055 2850                                   l21039 274C  
                                 l21047 27DA                                   l11279 97FA  
                                 l21127 571A                                   l21151 5830  
                                 l10719 8CDA                                   l10903 4DA2  
                                 _B2CON 000EA0                                   l20417 A51E  
                                 l20169 819E                                   l20273 34A8  
                                 l20281 34C6                                   l20257 33F2  
                                 l20249 3366                                   l21401 8D9C  
                                 l20601 40C4                                   l20505 3DCE  
                                 l20329 7C9C                                   l21313 3C24  
                                 l21241 3A40                                   l21217 476E  
                                 l21161 44A8                                   l21057 2868  
                                 l21145 580C                                   l10905 4DC2  
                                 l20291 34E6                                   l20259 33F6  
                                 l20267 343A                                   l20435 9B9E  
                                 l20611 4138                                   l20523 3E1E  
                                 l20347 7D40                                   l20363 5A46  
                                 l21331 3CCC                                   l21307 3BE8  
                                 l21251 3A64                                   l21219 478C  
                                 l21067 28FC                                   l20451 86D8  
                                 l21139 57A6                                   l21147 5810  
                                 l20189 822C                                   l20293 34F4  
                                 l20269 349E                                   l21405 8DB0  
                                 l20605 40DC                                   l20541 3E58  
                                 l20533 3E3E                                   l20381 5B8A  
                                 l21325 3C96                                   l21341 3D30  
                                 l21157 44A0                                   l21085 29B8  
                                 l21069 2910                                   l20461 989A  
                                 l10693 8C84                                   l10853 4B16  
                                 l20701 13A6                                   l20287 34DA  
                                 l20279 34B2                                   l20199 304E  
                                 l21415 8DD8                                   l20383 5BD8  
                                 l20367 5A7A                                   l21319 3C60  
                                 l21351 3D56                                   l21175 4538  
                                 l21095 29DA                                   l21087 29BC  
                                 l10687 8C74                                   l20711 146C  
                                 _B3CON 000EB0                                   l20289 34E0  
                                 l20297 34FA                                   l21409 8DBE  
                                 l20553 3EA4                                   l20609 40EC  
                                 l20529 3E36                                   l21273 3B12  
                                 l21257 3A68                                   l21345 3D34  
                                 l21089 29CC                                   l20465 98A6  
                                 l10873 4C4E                                   l10865 4BB6  
                                 l20713 14A4                                   l20641 105E  
                                 l20633 0FB2                                   l21451 6754  
                                 l21443 6738                                   l21435 66EA  
                                 l21427 6684                                   l20299 351C  
                                 l20571 3FAE                                   l20563 3F7C  
                                 l20555 3EAE                                   l20539 3E48  
                                 l20547 3E74                                   l21339 3CE4  
                                 l21347 3D38                                   l21283 3B26  
                                 l21195 464C                                   l21187 45DA  
                                 l20475 98BE                                   l20491 970A  
                                 l20483 96F2                                   l21531 586E  
                                 l10699 8C9A                                   l10891 4D24  
                                 l20557 3ECA                                   l20565 3F90  
                                 l20549 3E84                                   l21613 8A46  
                                 l21269 3B06                                   l21197 465C  
                                 l20469 98B2                                   l21525 5858  
                                 l21517 584C                                   l10877 4C76  
                                 l20805 19E4                                   l20725 150E  
                                 l20661 1176                                   l20653 110A  
                                 l20637 101A                                   l20717 14CA  
                                 l20629 0F58                                   l21471 67DE  
                                 l20583 402A                                   l20575 3FB8  
                                 l20567 3F9A                                   l20559 3F00  
                                 l21615 8A5A                                   l21607 8A3C  
                                 l10983 6EC4                                   l10975 6E50  
                                 l10991 6F30                                   l21375 3D98  
                                 l21295 3B74                                   l21287 3B2E  
                                 l14343 8810                                   l20487 96FE  
                                 l20479 96E6                                   l21543 589A  
                                 l10879 4C8E                                   l20719 14E8  
                                 l20655 112C                                   l20647 1096  
                                 l20671 1206                                   l20639 104C  
                                 l21711 4830                                   _B4CON 000EC0  
                                 l20593 40A4                                   l20577 3FD0  
                                 l21641 8AB2                                   l21385 3DAC  
                                 l21289 3B3C                                   l20497 9716  
                                 l21537 5884                                   l20841 1C70  
                                 l20825 1B22                                   l20817 1AB6  
                                 l20809 1A22                                   l20665 11B2  
                                 l21475 67E4                                   l21651 7390  
                                 l20579 3FE8                                   l21643 8AC0  
                                 l10979 6E8A                                   l21379 3DA0  
                                 l16211 88A4                                   l16203 8886  
                                 l21563 5954                                   l20819 1AD8  
                                 l20771 1734                                   l20755 1688  
                                 l20739 15B8                                   l20691 131E  
                                 l20683 12B2                                   l20589 4088  
                                 l10989 6EFE                                   l14349 887E  
                                 l21565 595C                                   l21549 58B0  
                                 l20853 1D52                                   l20845 1CDE  
                                 l20837 1C02                                   l20685 12D4  
                                 l20677 123E                                   l21485 7BEA  
                                 l21671 7428                                   l21663 73EE  
                                 l21647 734C                                   l20599 40AC  
                                 l16207 888A                                   l21591 5A06  
                                 l20783 186A                                   l20775 179A  
                                 l20695 135A                                   l21743 4A12  
                                 l21751 4ABA                                   l21719 48E8  
                                 _B5CON 000ED0                                   l21665 73F4  
                                 l21649 738A                                   l21657 73D0  
                                 l16225 88F4                                   l15505 9626  
                                 l16161 8D06                                   l16153 8CE8  
                                 l20769 1718                                   l20857 1D6E  
                                 l21497 7C40                                   l21737 49B0  
                                 l21729 494C                                   l18011 62B6  
                                 l20971 A47A                                   l21659 73E2  
                                 l21675 7430                                   l14803 8BFC  
                                 l21595 5A22                                   l20859 1DA6  
                                 l20787 18D2                                   l20779 1802  
                                 l20867 1E2A                                   l16157 8CEC  
                                 l16173 8D42                                   l21597 5A24  
                                 l20869 1E44                                   l20797 1978  
                                 l20789 18E4                                   l21749 4AB6  
                                 l18007 62AA                                   l18023 6310  
                                 l20799 199A                                   l18017 62D0  
                                 l18019 62DE                                   l18131 63A0  
                                 l18107 448C                                   l18203 8238  
                                 l19003 5288                                   l18141 645C  
                                 l18125 6324                                   l18053 41CE  
                                 l18213 82CA                                   l18135 63E0  
                                 l18063 41DE                                   l18039 4178  
                                 l19015 52F4                                   l19023 532A  
                                 l17601 7B72                                   l18137 641C  
                                 l18129 6364                                   l18145 6498  
                                 l19009 52BE                                   l18075 42D2  
                                 l18059 41D8                                   l19115 5F28  
                                 l15499 95F6                                   l17517 8E14  
                                 l18325 7FC8                                   l18317 7F7C  
                                 l18333 8010                                   l18501 2DF2  
                                 l18261 89C6                                   l18413 5DE6  
                                 l18181 835E                                   l18173 8304  
                                 l18237 94AA                                   l18229 9494  
                                 l19301 9B5E                                   l18343 9E26  
                                 l18327 7FD4                                   l18319 7F80  
                                 l18087 43B2                                   l18407 5DCE  
                                 l18159 82E4                                   l19231 8950  
                                 l18249 9F86                                   l17625 7BBE  
                                 l17641 A21C                                   l18505 2E2E  
                                 l18089 43B4                                   l18097 43C4  
                                 l18601 79E2                                   l18435 9EAE  
                                 l17651 705E                                   l17723 83A2  
                                 l18523 2FD6                                   l18515 2F10  
                                 l18507 2E60                                   l18363 5C44  
                                 l18531 1F0A                                   l19243 899E  
                                 l17821 9746                                   l17581 A628  
                                 l17805 6A44                                   l19501 9182  
                                 l18461 2ADA                                   l18453 2A6E  
                                 l18269 89F4                                   l18189 8372  
                                 l18541 2310                                   l18533 1F84  
                                 l19333 5388                                   l19229 8930  
                                 l19317 9382                                   l17911 9CDC  
                                 l17663 709C                                   l19511 919E  
                                 l19503 9186                                   l18519 2F74  
                                 l18471 2B34                                   l18279 8A30  
                                 l18535 2076                                   l18607 7A50  
                                 l19423 5592                                   l19431 55AA  
                                 l19407 5506                                   l19263 996A  
                                 l18711 6D58                                   l17841 9776  
                                 l18289 9A36                                   l17593 7B38  
                                 l17657 706E                                   l17809 6A90  
                                 l17761 6984                                   l19513 91A2  
                                 l19505 918E                                   l17729 83E0  
                                 l18481 2C1A                                   l18473 2B6A  
                                 l18457 2AAE                                   l18385 5D54  
                                 l18369 5C4C                                   l18561 60F0  
                                 l18553 5FD0                                   l18537 21A4  
                                 l18529 1E90                                   l18545 243E  
                                 l19417 5574                                   l19409 5540  
                                 l19361 5442                                   l19353 5428  
                                 l18713 6D8A                                   l18721 6E12  
                                 l17675 70EA                                   l19515 91A6  
                                 l19507 9196                                   l19179 8BD4  
                                 l18491 2D06                                   l18483 2C56  
                                 l18555 6022                                   l18539 2296  
                                 l18547 246A                                   l18811 99AC  
                                 l19427 55A0                                   l19347 53C8  
                                 l18707 6D02                                   l18731 93B8  
                                 l18619 9584                                   l15995 A282  
                                 l15987 9AF6                                   l17589 7B2A  
                                 l17693 8780                                   l17749 6968  
                                 l19509 919A                                   l18493 2D42  
                                 l18469 2B06                                   l17933 74F2  
                                 l17925 74A4                                   l17941 7530  
                                 l18397 5DBC                                   l18557 604A  
                                 l18565 6142                                   l18821 99CC  
                                 l19365 544E                                   l19357 5432  
                                 l19349 5402                                   l19269 998A  
                                 l18717 6DE0                                   l18741 6B0A  
                                 l18733 93C8                                   l18725 938A  
                                 l19605 A138                                   l19701 7582  
                                 l19285 9B26                                   l17919 9CFC  
                                 l17783 69C0                                   l17767 6988  
                                 l19519 91AE                                   l19543 7216  
                                 l19447 6854                                   l17863 770C  
                                 l17935 7524                                   l18831 9DAA  
                                 l19623 A17C                                   l18751 6BBA  
                                 l18671 6C32                                   l18727 939E  
                                 l18591 7F72                                   l18575 7EF6  
                                 l19617 A5A0                                   l19537 71EC  
                                 l19529 71C4                                   l19465 68DE  
                                 l17857 7708                                   l18657 7EA4  
                                 l18809 99A4                                   l19369 5456  
                                 l18745 6B62                                   l18737 6AA6  
                                 l18673 6C64                                   l18681 6CEC  
                                 l19547 724A                                   l19475 6918  
                                 l19467 68E0                                   l19459 6894  
                                 l17891 7796                                   l19379 54A4  
                                 l18739 6AD8                                   l18667 6BDC  
                                 l18691 7662                                   l19715 75FA  
                                 l19707 75B2                                   l18579 7F0A  
                                 l17797 6A1E                                   l19493 694E  
                                 l17885 7782                                   l17869 7710  
                                 l17957 9DF6                                   l18837 9DC2  
                                 l18829 9DA2                                   l19389 54CE  
                                 l19637 9202                                   l19725 9BC4  
                                 l18677 6CBA                                   l18693 7672  
                                 l18685 7618                                   l19709 75EC  
                                 l19717 760C                                   l19557 A0C2  
                                 l19479 691E                                   l17895 779A  
                                 l18847 A1AC                                   l19567 9C46  
                                 l18783 9EEA                                   l18759 85C0  
                                 l18687 7630                                   l18943 8540  
                                 l19743 8442                                   l19663 8106  
                                 l18863 78F0                                   l19497 695A  
                                 l19841 7038                                   l19833 701C  
                                 l19649 9240                                   l18697 76A0  
                                 l18929 84FA                                   l18881 797A  
                                 l18873 7948                                   l18865 790C  
                                 l17979 61DE                                   l19587 9530  
                                 l18795 9F06                                   l18787 9EF0  
                                 l19675 8142                                   l19837 702C  
                                 l19829 700E                                   l18981 51B0  
                                 l18973 516C                                   l19757 84C6  
                                 l19933 35F4                                   l17999 6252  
                                 l18895 9BFA                                   l18799 9F0E  
                                 l18991 521C                                   l18967 513C  
                                 l18959 50F4                                   l19687 816E  
                                 l19679 8156                                   l19863 9124  
                                 l19943 37CE                                   l18985 51E6  
                                 l18977 517A                                   l19777 807A  
                                 l19793 80C2                                   l19769 804E  
                                 l19953 399A                                   l19961 39EE  
                                 l19787 80AC                                   l19779 808C  
                                 l19947 3820                                   l18997 5252  
                                 l19885 8F18                                   l19957 39EA  
                                 l19991 4F14                                   l19979 4E98  
                                 ?_main 002D                            ?_initOutputs 002D  
                                 ?_peek 0071                     processEnumeration@i 009A  
                       __end_of___awdiv 8CE4                         __end_of___lbdiv 9F12  
                                 _EEADR 000F74                                   ?_push 0071  
                                 _BSEL0 000E7D                                   u11124 6E7E  
                                 u11125 6E7A                                   u11134 6EB8  
                                 u11135 6EB4                                   u11144 6EF2  
                                 _T0CON 000FD5                                   u11145 6EEE  
                                 u10620 8CA6                         ___awdiv@divisor 0079  
                                 u22100 41D4                                   u10900 4D10  
                                 u11605 9E86                                   u11606 9E88  
                                 u10830 4B10                                   u10840 4B12  
                                 u22050 631C                                   u22204 6358  
                                 u22140 43BA                                   u22205 6354  
                                 u22214 6392                                   u23110 7E94  
                                 u23030 7F6A                                   u22215 638E  
                                 u23015 7F18                                   u21530 7054  
                                 u22234 63D4                                   u23130 7EBE  
                                 u22235 63D0                                   u22244 640E  
                                 u22245 640A                                   u21390 A678  
                                 u21550 7092                                   u21630 83D4  
                                 u23230 9EF4                                   u23070 9580  
                                 u21480 7B6A                                   u24040 6850  
                                 u22264 6450                                   u22265 644C  
                                 u22450 9F5E                                   u22274 648A  
                                 u21810 777A                                   u22275 6486  
                                 u21740 6A98                                   u22620 5C40  
                                 u23260 99B0                                   u24070 68D8  
                                 u22550 7F8A                                   u22470 89F0  
                                 u23334 78E4                                   u23335 78E0  
                                 u22560 7F8C                                   u22800 2CCC  
                                 u23440 853C                                   u23344 7900  
                                 u26000 15A8                                   u22465 9F74  
                                 u23345 78FC                                   u24090 68F8  
                                 u23290 9DAE                                   u22580 7FBC  
                                 u22660 5DC4                                   u25300 5B26  
                                 u24165 7168                                   u22645 5D1A  
                                 u22590 7FBE                                   u22814 2CFA  
                                 u22750 2BE0                                   u21790 7704  
                                 u22646 5D1E                                   u24414 75A6  
                                 u26030 1676                                   u21935 61B4  
                                 u22815 2CF6                                   u24415 75A0  
                                 u21960 61EE                                   u24184 71A2  
                                 u22824 2D34                                   u25240 7CEA  
                                 u26040 1678                                   u24185 719E  
                                 u22825 2D30                                   u23625 5F50  
                                 u25170 A03C                                   u22914 2F02  
                                 u22850 2DB8                                   u24450 9BBC  
                                 u25250 7CEC                                   u22915 2EFE  
                                 u23491 515A                                   u21980 625C  
                                 u22764 2C0E                                   u23740 9B30  
                                 u27100 4626                                   u24700 3640  
                                 u26220 1BF2                                   u26140 1A04  
                                 u22765 2C0A                                   u23581 5312  
                                 u23805 9334                                   u21990 625E  
                                 u22934 2F66                                   u22774 2C48  
                                 u24470 843A                                   u23750 9B32  
                                 u25510 3EC6                                   u27110 4628  
                                 u24710 3642                                   u26310 1D3E  
                                 u26230 1BF4                                   u23655 8B84  
                                 u22935 2F62                                   u22775 2C44  
                                 u22864 2DE6                                   u23680 892C  
                                 u25440 3E44                                   u26320 1D40  
                                 u22865 2DE2                                   u22954 2FC6  
                                 u22890 2EB0                                   u22874 2E20  
                                 u23770 9B46                                   u24810 4EE4  
                                 u26250 1C60                                   u22955 2FC2  
                                 u22875 2E1C                                   u25611 4026  
                                 u25188 A040                                   u27220 3A88  
                                 u27060 45D6                                   u24900 4FF4  
                                 u24820 4EE6                                   u26340 1E18  
                                 u26260 1C62                                   u22974 302C  
                                 u23790 9B52                                   u27070 45D8  
                                 u24910 4FF6                                   u22975 3028  
                                 u24584 6FBA                                   u25640 4084  
                                 u25480 3E9E                                   u27320 3C3A  
                                 u24760 4E3A                                   u24680 35D2  
                                 u26280 1CCE                                   u26360 9024  
                                 u24585 6FB6                                   u25490 3EA0  
                                 u27250 3B1A                                   u27170 475C  
                                 u24770 4E3C                                   u24690 35F4  
                                 u26290 1CD0                                   u26370 9026  
                       __end_of___lwdiv 99E0                                   u27500 67C8  
                                 u27180 475E                                   u24780 4EB2  
                                 u25820 11F4                                   u26380 8FB4  
                                 u27510 67D6                                   u27430 66DE  
                                 u24950 9D88                                   u26630 2690  
                                 u26550 24C4                                   u16870 8BF8  
                                 u24790 4EB4                                   u25830 11F6  
                                 u26390 8FB6                                   u27520 67D8  
                                 u25680 40C0                                   u24960 9D8A  
                                 u26640 2692                                   u27600 7C7C  
                                 u27450 672E                                   u26730 2840  
                                 u18730 8D02                                   u25691 40D8  
                                 u26820 2A2A                                   u26740 2842  
                                 u26580 24E8                                   u18820 88EC  
                                 u27620 5846                                   u25940 145A  
                                 u25950 145C                                   u27800 738A  
                                 u18760 8D3E                                   u25960 1494  
                                 u27560 7C28                                   u26930 57FC  
                                 u25970 1496                    __end_of_factoryReset A6D0  
                                 u18780 88A0                                   u26940 57FE  
                                 u26860 56E0                                   u27900 4934  
                                 u27750 5A2A                                   u26870 56E2  
                                 u25990 15A6                                   u26695 276C  
                                 u27920 4998                         __end_of_canInit 5FB8  
                                 u27930 49F6                       _initTimedResponse A6F4  
                       __end_of___lwmod 9DD6                              i1memcpy@d1 003D  
                     rebuildHashtable@a 0092                         __end_of_canSend A55A  
                            i1memcpy@s1 003F                                   i2l649 97C6  
                       ___awdiv@counter 007B                                   _MSEL0 000E79  
                                 _MSEL1 000E7A                                   _MSEL2 000E7B  
                                 _MSEL3 000E7C                         doNvset@oldValue 00DF  
      __end_of_factoryResetGlobalEvents A720                                   _TMR0H 000FD7  
                                 _TMR1H 000FCF                                   _TMR0L 000FD6  
                                 _TMR1L 000FCE                                   _TMR3H 000FB3  
                                 _TMR3L 000FB2                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                      i2setOutputPin@io 0032                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                       __end_of_doError A4CA                         __end_of_doEvlrn 9250  
                       __end_of_doNenrd 9570                    ?_setExpeditedActions 002D  
                       __end_of_doEvuln A604                           processEvent@e 0094  
                       __end_of_doNnclr A190                         __end_of_ee_read A53E  
                       __end_of_doNnevn 9C84      sendInvertedProducedEvent@happening 00B9  
                       __end_of_doReqev 8184                         __end_of_doReval 80D6  
                          ?_FLiMSWCheck 002D                         __end_of_doRqevn A160  
                       __end_of_doNvset 84CE                         __end_of_doRqnpn 7614  
                     ??_doTimedResponse 00D3                         __end_of_getHash A506  
                   ___lmul@multiplicand 0075                      _canTransmitTimeout 01B4  
                    ?_initTimedResponse 002D                       doAreq@eventNumber 009D  
                       __end_of_configs 0F41                                   _canID 002C  
                                 _doSOD A6A8                                   _canTX 6170  
           ??_sendInvertedProducedEvent 00B9                                   _devId 3FFFFE  
                                 _getEN 9032                                   _doSnn 962A  
                                 _getNN 8750                                   _getEv 7044  
                   _checkIncomingPacket 7150                    _enumerationStartTime 01B0  
             parseCbusEvent@eventNumber 009F                  __end_ofi2_setOutputPin 666E  
                      cbusSendEvent@msg 00A3                                   _numEv 8918  
                      cbusSendOpcNN@opc 0093                        cbusSendOpcNN@msg 0096  
                     ??_writeFlashImage 0081                                   _speed 0100  
                     startOutput@action 00C5                         __end_of_tickISR A61A  
                      cbusSendMsgNN@msg 0091                   _lastTimedResponseTime 01BC  
                      _expeditedReadIdx 01E0                         __end_of_tickGet 9792  
                                 peek@q 0071                       ??_writeFlashShort 0071  
                       __end_of_low_isr 089E                         __end_of_setType 7EC6  
                                 tablat 000FF5                     ??_initTimedResponse 0071  
                      __end_ofi1_doEnum A664            cbusSendEventWithData@datalen 0099  
          cbusSendEventWithData@cbusNum 009D                      _canFillRxFifo$3504 0065  
                                 plusw2 000FDB                                   push@a 0073  
                                 push@q 0071                                   ttemp5 0050  
                                 ttemp6 0053                                   ttemp7 0057  
                          ?_longFlicker 002D                        _setServoPosition A388  
                                 status 000FD8            __end_of_factoryResetGlobalNv 8B4E  
                                 wtemp8 0050                  __end_of_setBounceState 6E24  
                      __end_ofi1_memcpy 9D52             __end_of_writeFlashWithErase A09C  
                       ___lbdiv@divisor 0071                           ?_initAnalogue 002D  
                       __end_of_writeEv 449A            cbusSendEventWithData@onEvent 0097  
                       ___lbdiv@counter 0073                            bounceDown@io 0089  
                     ?_startMultiOutput 0071                        bounceUp@reversed 0078  
                   setStatusLed@FLiMLED 0071                       ?_startServoOutput 0071  
          processEnumeration@enumResult 0098                       doRqnp@copyCounter 0098  
                       __initialization 7A54                         ?_startFLiMFlash 002D  
                    ??_startMultiOutput 0072                    ?_checkIncomingPacket 007B  
                    ??_startServoOutput 0072                            __end_of_main 4AC0  
                          __end_of_peek 8C60                            __end_of_push 7A54  
             __end_of_initTimedResponse A6FA                   __end_of_cbusSendEvent A35E  
                 __end_of_cbusSendOpcNN A420                   __end_of_cbusSendMsgNN 9ED6  
                          ?_setNewCanId 002D                                  ??_main 02E0  
                                ??_peek 0074                                  ??_push 0074  
                           ?_QNNrespond 002D                       __end_of_APP_doSOD 4166  
                         __activetblptr 000003                   ??_setExpeditedActions 0071  
                     _pollsPerStepSpeed 0274                       __end_of_FCUparams 0840  
                       _actionQueueInit A100                   __end_of_setMultiState 6BD8  
                           ?_SLiMRevert 002D                                  ?_doSOD 002D  
                                ?_canTX 007C                   __end_of_setServoState 6CFE  
                                ?_getEN 007D                                  ?_doSnn 009B  
                                ?_getNN 007D                                  ?_getEv 0081  
                    _lastServoStartTime 01C8                                  _CANCON 000F6F  
                                _ADRESH 000FC4                                  _EEADRH 000F75  
                                _ADRESL 000FC3                        __end_of_addEvent 5DF0  
                                _EEDATA 000F73                                  _EECON1 000F7F  
                                _EECON2 000F7E                                  ?_numEv 002D  
                                _ANCON0 000F5D                                  _ANCON1 000F5C  
                      ___awdiv@dividend 0077                         ?i2_setOutputPin 002D  
                                _CIOCON 000F70                    __p_moduleNvDefs_text FF80  
                   insertIntoRxFifo@ptr 007C                      setOutputState@type 0077  
                                i1l1703 9316                                  i1l1608 7E0A  
                                i1l1687 927C                                  _TABLAT 000FF5  
                           _FlashStatus 01D6                                  _TBLPTR 000FF6  
                           i1memcpy@tmp 0043                           _needsStarting 8CE4  
                        ??_initAnalogue 0071                            ?_removeEvent 009F  
                        processEvent@ca 0093                         ?_setBounceState 0071  
                   setServoPosition@pos 0071                          _clearAllEvents 9BF6  
                        processEvent@io 0091                     setServoState@action 0071  
                       setMultiState@io 0075                        __end_of_cbusInit A0CE  
                         _canFillRxFifo 8614                             initTicker@i 0073  
                      _rebuildHashtable 6964                        ??_processActions 00C8  
                         APP_doSOD@step 00C9                        __end_of_ee_write 9A7C  
                     ?_getProducedEvent 002D                   _cbusSendEventWithData 7EC6  
                       completed@action 0071                         setServoState@io 0074  
                 ??_checkIncomingPacket 007D                        __end_of_configIO 303C  
             _sendInvertedProducedEvent 9B16                      _processEnumeration 680C  
                      __end_of_flimInit 9D94                             readInput@io 0075  
                      pollServos@midway 00BF              startDigitalOutput@pinState 00C2  
                      __end_of_high_isr 97EA                      ??_getProducedEvent 0088  
          ??_timer3DoneInterruptHandler 0033                        __end_of_bounceUp 4DC6  
                      pollServos@target 00BD                                  ___lmul 97EA  
       checkRemoveTableEntry@tableIndex 009F                                  _doAreq 6F34  
                                ___wmul A3D4                                  _doEnum A640  
                             ??___awdiv 007B                                  _clkMHz 0017  
                             ??___lbdiv 0072                                  _doNerd A6BC  
                                _doWait 86B4                                  _doNvrd 9BAC  
                                _getEVs 76F4                                  _doRqmn 8EE0  
                                _doRqnp 9110                                  _delete 93EA  
                         _mioEventsInit A62E                               ??___lwdiv 0075  
                             ??_canInit 007C                               ??___lwmod 0075  
                             ??_canSend 008A                       needsStarting@type 0072  
                                _nodeID 0001                                  _memcpy 9CCA  
                             ??_doError 0093                               ??_doEvlrn 00D6  
                             ??_doNenrd 0094                               ??_doEvuln 00A8  
                                getNN@f 0086                               ??_doNnclr 009E  
                         ?_parseCBUSMsg 00E4                               ??_ee_read 0073  
                                clear_0 7A98                                  clear_1 7AAC  
                                clear_2 7AC0                               ??_doNnevn 0094  
                                clear_3 7AD2                                  clear_4 7ADE  
                                clear_5 7AEA                                  clear_6 7AF6  
                                clear_7 7B0A                               ??_doReqev 00A0  
                             ??_doReval 0095                        ___awdiv@quotient 007D  
                                getEv@f 0088                __end_of_setDigitalOutput 8028  
                             ??_doRqevn 0094                               ??_doNvset 00DB  
                     ??_cbusMsgReceived 00A3                                  _thisNN 9320  
                             ??_doRqnpn 0094                     ?_processEnumeration 002D  
                             ??_getHash 008C                                  isa$std 000001  
                      ??_processOutputs 00B5             ?_isSuitableTimeToWriteFlash 002D  
               pollAnalogue@hhysteresis 00B8                           canbusRecv@msg 009B  
                         canbusRecv@ptr 009F                __end_of_setNormalActions A706  
                         ?_parseFLiMCmd 00E1           __end_ofi1_checkIncomingPacket 734A  
                      ??_parseCbusEvent 009D                                  numEv@f 0084  
                                pop@ret 0076                               ??_tickISR 003D  
                      canFillRxFifo@ptr 0068                            __mediumconst 0000  
                             ??_tickGet 0075                      _tableIndexToEvtIdx A6D8  
                             ??_low_isr 006A                               ??_setType 00CD  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                     doEvlrn@nodeNumber 00D0                                  tblptru 000FF8  
                           initialise@i 00D8                           _initInputScan 7C98  
                      __end_of_quantity 9FC2                         _txIndexNextFree 0011  
                          ?_setupTimer1 002D                            ?_setupTimer3 002D  
                   _startFLiMFlash$4941 007D                         _txIndexNextUsed 0010  
                      ___lbdiv@dividend 0072                    __end_of_APP_addEvent 96E2  
                             ??_writeEv 00A3                   _checkRemoveTableEntry 9DD6  
                   addEvent@eventNumber 00B5                       _expeditedQueueBuf 02C4  
                     ??_cbusSendOpcMyNN 0093                       ??_cbusSendMsgMyNN 0090  
                        ?_needsStarting 0071                     ?_tableIndexToEvtIdx 002D  
                __end_of_clearAllEvents 9C3E                       __end_ofi1_tickGet 9896  
                startServoOutput@action 0071                    ??_processEnumeration 0094  
                            _canTX$3451 0084                              __accesstop 0060  
               __end_of__initialization 7B10                           bounceDown@tmp 0087  
                 writeFlashImage@offset 0085                cbusSendEventWithData@msg 0098  
              cbusSendEventWithData@ret 009C                          ?_canFillRxFifo 002D  
                        setOutputPin@io 0076                  checkRemoveTableEntry@e 00A0  
                     _expeditedWriteIdx 01DF                           ___rparam_used 000001  
            __end_ofi1_insertIntoRxFifo 9510                       i1tickGet@IntFlag1 0042  
                     i1tickGet@IntFlag2 0041               ?_factoryResetGlobalEvents 002D  
                       doRqnpn@paramptr 009B                          __pcstackCOMRAM 002D  
                        ?_mioEventsInit 002D                       i1__PointBuffer@pt 0040  
                          __pidataBANK0 A716                            __pidataBANK1 A719  
                         __end_of_doSOD A6B2                           __end_of_canTX 6320  
                         __end_of_getEN 90A2                           __end_of_doSnn 9686  
                         __end_of_getNN 87EC                           __end_of_getEv 7150  
         APP_doSOD@disable_SOD_response 00CC                          ??_parseCBUSMsg 00E6  
                         __end_of_numEv 89AC                     _canInterruptHandler A5D6  
                  ??_tableIndexToEvtIdx 0071                            canTX@hiIndex 0087  
                      ___lbdiv@quotient 0074                 __end_of_actionQueueInit A130  
                          ?_startServos 002D                        ??i1__PointBuffer 003F  
                             ?i1_doEnum 002D                            ?_startOutput 00C5  
               pollAnalogue@lhysteresis 00BA                          ??_parseFLiMCmd 01ED  
                            _canTxError 9250                       ??_actUponNVchange 00D4  
                         ?_setFlashWord 0087                    _factoryResetGlobalNv 8AC4  
                            _canQueueRx A664                               ?i1_memcpy 003D  
        requestNodeNumber@local_cbusMsg 0098                          ?_initInputScan 002D  
            rebuildHashtable@tableIndex 0097            __end_of_deleteHappeningRange 82DC  
                        _factoryResetEE 9C84                           ??_doFLiMFlash 007B  
                               ??_doSOD 0071                                 ??_canTX 007D  
                         completed@type 0072                                 ??_getEN 007F  
                               ??_doSnn 009D                                 ??_getNN 007F  
                               ??_getEv 0083           i1checkIncomingPacket@msgFound 004D  
               startDigitalOutput@state 00BD                ?_getDefaultProducedEvent 002D  
                               ??_numEv 0081               processEvent@masked_action 0092  
                     doNvset@flashIndex 00DD                              _canbusRecv 77CE  
                  ?_canInterruptHandler 002D                       initTicker@divider 0072  
                            __pbssBANK0 00E6                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                            loadNvCache@i 0082  
                       ?_clearAllEvents 002D                 writeFlashByte@flashAddr 0087  
               writeFlashByte@flashData 008A                              _defaultNVs 1E4E  
                   getParFlags@paramptr 0071                       ??_SaveNodeDetails 009B  
                   setNewCanId@newCanId 0079                       ??_checkCANTimeout 004B  
                ?_cbusSendEventWithData 0093                              _delayCount 0284  
                          _factoryReset A6C6                      initAnaloguePort@io 0071  
                         addEvent@evVal 00B8                           addEvent@evNum 00B7  
                         addEvent@error 00C4                  processActions@ioAction 00D1  
                   APP_doSOD@send_on_ok 00CA                                 ?___lmul 0071  
                               ?_doAreq 009B                                 ?___wmul 0071  
                        __PointBuffer@b 0073                            initBounce@io 0071  
                               ?_doEnum 002D                                 ?_doNerd 002D  
                               ?_doWait 007D                         _doTimedResponse 8A3A  
                               ?_doNvrd 002D                                 ?_getEVs 002D  
                               ?_doRqmn 002D                                 ?_doRqnp 002D  
                               ?_delete 0071                   SaveNodeDetails@nodeID 0098  
                               ?_memcpy 0071                               ?_addEvent 00B3  
                               _ECANCON 000F72                          _ee_write_short A2DA  
                        ___lmul@product 0079                     setOutputPosition@io 0080  
                               ?_thisNN 0071                                 _BRGCON1 000E43  
                               _BRGCON2 000E44                                 _BRGCON3 000E45  
                            canSend@msg 0088                  processActions@peekItem 00CB  
                       _writeFlashImage 8384                __end_of_setServoPosition A3AE  
                        ??_setFlashWord 008C                              _doneAction A6E8  
                            ??i1_doEnum 003D                   ?_factoryResetGlobalNv 002D  
                    _startDigitalOutput 4DC6                    __end_of_initAnalogue A030  
                       _writeFlashShort 8DEA                              _flashFlags 0005  
                               i1l20121 7DFE                                 i1l20119 7DFA  
                               i1l20323 950C                                 i1l20315 94F6  
                               i1l20931 867A                                 i1l20907 8616  
                               i1l20919 864A                                 i1l20935 86AC  
                               i1l20929 866C                                 i1l20961 92AC  
                               i1l20953 9288                                 i1l15451 984A  
                               i1l15471 987A                                 i1l15943 72E8  
                               i1l15935 72C0                                 i1l15961 92C0  
                               i1l15953 7346                                 i1l15971 92DC  
                               i1l15963 92C8                  __end_of_factoryResetEE 9CCA  
                               i1l15973 92E0                                 i1l15965 92D0  
                               i1l15949 7312                                 i2l12143 64D2  
                               i1l15967 92D4                                 i1l15959 92BC  
                               i2l12153 6588                                 i1l15969 92D8  
                               i1l15977 92E8                                 i2l12155 65C2  
                               i2l12147 6510                                 i2l12163 663A  
                               i2l12149 654A                                 i2l12159 6600  
                               i1l19909 9D20                                 i1l19917 9D40  
                               i2l12963 97BC                     sendProducedEvent@on 00AE  
                        _setOutputState 9896                              ??i1_memcpy 0043  
                            _flashState 01D3                  processActions@nextType 00CD  
                            _flashblock 01F6                               ?_cbusInit 007E  
                         ?__PointBuffer 0071                               ?_ee_write 0073  
                               _TBLPTRU 000FF8                           ?_setStatusLed 002D  
                               _RXB0CON 000F60                                 _RXB1CON 000F30  
                         ?_pollAnalogue 002D                        _insertIntoRxFifo 944C  
                               _TXB0DLC 000F25                                 _TXB1DLC 000F15  
                               _TXB0CON 000F20                       __end_of_checkCBUS 8DEA  
                               _TXB2DLC 000F05                                 _TXB1CON 000F10  
                               _TXB2CON 000F00                           ?_setOutputPin 0071  
                   ?_startDigitalOutput 00BD                  ?_checkRemoveTableEntry 002D  
                       ??_needsStarting 0073                               ?_configIO 002D  
                             ?_flimInit 002D                              _bounceDown 3522  
                 ??_canInterruptHandler 004F                               ?_high_isr 002D  
                        inputScan@input 00BA                               ?_bounceUp 002D  
                       processEvent@opc 008D                         processEvent@msg 0088  
                    __end_of_FLiMparams 0834                         ??_canFillRxFifo 0060  
              ee_write@interruptEnabled 0076                          APP_doSOD@flags 00CF  
                     _sendProducedEvent 78A8                     __end_of_doFLiMFlash A066  
                       _timerExtension1 0004                          APP_doSOD@value 00D0  
                       _timerExtension2 0003                        ??_startFLiMFlash 007C  
                     __end_of_getAction A6D8                      ?_sendProducedEvent 00AE  
                     __end_of_findEvent 8A3A                                 __Hparam 0000  
                          initServos@io 0085                   setOutputPosition@type 007D  
                       ??_mioEventsInit 0071                                 __Lparam 0000  
    __end_of_timer3DoneInterruptHandler A100              _timer3DoneInterruptHandler A0CE  
                            _initBounce A250                              _eventTable 00E9  
                  ??_startDigitalOutput 00BE                           doNvrd@NVindex 0096  
                __end_of_ee_write_short A308                              _initTicker 9E5A  
                               ___awdiv 8C60                              _initRomOps A684  
                               ___lbdiv 9ED6                              _initServos 5A40  
                            _eventsInit A6EE                               ?_quantity 0071  
                   ??_sendProducedEvent 00AF                       __end_of_completed 8918  
                               ___lwdiv 998E                             validStart@f 0080  
                               _canInit 5DF0                                 ___lwmod 9D94  
                               _canSend A53E                       _factoryResetFlash A2AC  
                          __psmallconst 0F00                             setType@addr 00CF  
                  startDigitalOutput@io 00C4                              ??_addEvent 00BA  
                            _currentPos 0180                                 _doError A4AC  
                               _doEvlrn 91E8                                 _doNenrd 9510  
                               _doEvuln A5EE                                 _doNnclr A160  
                               _ee_read A522                                 _doNnevn 9C3E  
                               _doReqev 80D6                                 _doReval 8028  
                               __pcinit 7A54                             setType@type 00CC  
                               _cbusMsg 001C                                 _doRqevn A130  
                               _doNvset 842A                                 _doRqnpn 7534  
                               __ramtop 0F00                              _initialise 39F2  
                               _getHash A4E8                              _setFLiMLed A69C  
                    doEvlrn@eventNumber 00D2                      ?_factoryResetFlash 002D  
                         ??_checkTxFifo 0048                                 __ptext0 47B2  
                      ?_actionQueueInit 002D                                 __ptext1 7BDA  
                               __ptext2 8F52                                 __ptext3 8FC2  
                               __ptext4 0F4E                                 __ptext5 A250  
                               __ptext6 4AC0                                 __ptext7 3522  
                               __ptext8 8C60                                 __ptext9 55EE  
                __end_of_setOutputState 98EA                                 _configs 0F01  
                          ??_QNNrespond 0093                               _T0CONbits 000FD5  
                     __end_of_mioNvInit A71E                         getEv@tableIndex 0089  
                           ?_canTxError 002D                    peekActionQueue@index 0077  
                               _nvCache 0400                         ??_initInputScan 0076  
                             _T1CONbits 000FCD                             ?_canQueueRx 007F  
                     __end_of_readInput 6F34                                 getEN@hi 0082  
                               getEN@lo 0084                         ?_factoryResetEE 002D  
              __end_of_rebuildHashtable 6AA2                        ??i2_setOutputPin 002E  
                             _T3CONbits 000FB1                                 getNN@hi 0082  
                               getNN@lo 0084                                 getEVs@f 0084  
                    doReqev@eventNumber 009D                          ??__PointBuffer 0073  
                               delete@q 0071                                 _tickISR A604  
                        ??_setStatusLed 0071                              ??_cbusInit 0080  
                               _tickGet 973A                          ??_pollAnalogue 00B5  
                     doNenrd@tableIndex 0095                              _setSLiMLed A690  
                               _low_isr 0858                                 _setType 7E10  
                            ??_ee_write 0076                          ??_setOutputPin 0072  
                          ??_SLiMRevert 0098                     ??_factoryResetFlash 00D2  
                             _APP_doSOD 3DB8                              _inputState 0294  
                               _setupIo 001A                processActions@nextAction 00D2  
                     __end_of_inputScan 47B2                         defaultEvents@en 00C9  
                 cbusSendEvent@eventNum 00A0                         defaultEvents@io 00CB  
                               _started 0015                              ??_configIO 007C  
                            ??_flimInit 0098                        ??_setBounceState 0072  
                            ??_high_isr 0035                       __end_of_popAction A444  
                        __pintcode_body 9792                             ?_canbusRecv 009B  
                               _writeEv 4166               __end_of_sendProducedEvent 797E  
                            ??_bounceUp 0071                    end_of_initialization 7B10  
                         startOutput@io 00C7                              doRqnpn@idx 009E  
                             _FCUparams 0838                    __end_of_parseCBUSMsg 9BAC  
                          doAreq@status 00A5                              getEv@evNum 0081  
                               memcpy@d 0078                                 memcpy@n 0075  
                               memcpy@s 007A                             ?_defaultNVs 008B  
                         ??_clearEvents 00BD                           ??_cbusSendMsg 008C  
                               int_func 9792                      cbusSendMsg@cbusNum 008E  
                     __end_of_setclkMHz A700                               i1u2641_20 9ABA  
                             i2u1301_44 657E                               i2u1301_45 657A  
                             i2u1302_44 65B6                               i2u1302_45 65B2  
                             i1u1847_25 7266                               i2u1304_44 65F6  
                             i2u1304_45 65F2                               i1u1849_24 72A0  
                             i1u1849_25 729C                               i2u1305_44 662E  
                             i2u1305_45 662A                 __end_of_doTimedResponse 8AC4  
                             i2u1298_44 6506                               i2u1298_45 6502  
                             i2u1299_44 653E                               i2u1299_45 653A  
                             _FLiMFlash 01D7                    __end_of_parseFLiMCmd 3522  
                       _cbusMsgReceived A506                          _readFlashBlock 7B1A  
                      _initAnaloguePort A3AE                              _validStart A1F0  
                         _checkFlashing 734A                            writeEv@evVal 00A2  
                          writeEv@evNum 00A1                              _validateNV 84CE  
                    __end_of_QNNrespond 993C                         pollAnalogue@adc 00C0  
                          writeEv@nextF 00AE                            _flickerState 01D2  
                          initialise@en 00DC                            initialise@ev 00DA  
                  APP_doSOD@disable_off 00CD                              _pollServos 0F4E  
             __end_of_factoryResetFlash A2DA                  pollServos@beforeMidway 00BE  
               __end_of_writeFlashImage 842A                      cbusSendOpcMyNN@opc 0091  
                    cbusSendOpcMyNN@msg 0092                    _deleteHappeningRange 8230  
                      initialise@action 00D6                           ?_shortFlicker 002D  
                               postdec1 000FE5                                 postdec2 000FDD  
                            _txErrCount 01DD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
               __end_of_writeFlashShort 8E6C                         ?_ee_write_short 0077  
                            ??_quantity 0073                      _FLiMparams_absaddr 000820  
           __end_of_setExpeditedActions A70C                      __end_of_SLiMRevert A5D6  
                          _APP_addEvent 9686                       ??_isNoServoPulses 0071  
                    cbusSendMsgMyNN@msg 008F                           ??_getParFlags 0071  
                ??_factoryResetGlobalNv 008B                          checkTxFifo@ptr 0049  
                          _maxCanRxFifo 000A                  processEvent@tableIndex 008C  
                            _servoState 0140                            _maxCanTxFifo 000B  
                             _PORTAbits 000F80                       ?_setDigitalOutput 0077  
                       ?_setOutputState 0076                             ?_doneAction 002D  
                         ?_processEvent 0088                              _setupState 0019  
                       _cbusSendOpcMyNN A4CA                         _cbusSendMsgMyNN A308  
        deleteHappeningRange@tableIndex 00BB                       ?_setNormalActions 002D  
                    setDigitalOutput@io 007B                      ??_setDigitalOutput 0078  
                processEvent@nextAction 008E                              _pushAction A190  
                    deleteActionRange@e 00BB                      _lastActionPollTime 01C0  
     __end_of_sendInvertedProducedEvent 9B62                        setupTimer1@ticks 0079  
                             _TRISBbits 000F93                               _TXBIEbits 000E7F  
                    ??_setNormalActions 0071                        setupTimer3@ticks 0079  
                            ?_APP_doSOD 002D                             _doFLiMFlash A030  
                   __end_of_checkTxFifo 7E10                         doAreq@happening 00AD  
                      doNvrd@flashIndex 0094                  cbusSendOpcMyNN@cbusNum 0093  
                           ?_bounceDown 002D                           clearEvents@io 00BD  
            deleteHappeningRange@action 00B9             __end_of_checkIncomingPacket 724E  
                __end_of_readFlashBlock 7BDA                       ??_flushFlashImage 0076  
sendInvertedProducedEvent@state_to_send 00BC              deleteHappeningRange@number 00B3  
                  __end_of_setFlashWord 9F4E                        doTimedResponse@n 00D3  
                        ?_checkFlashing 002D                            checkCBUS@msg 02CC  
              parseFLiMCmd@cmdProcessed 00E3                               i1_tickGet 9840  
                     removeTableEntry@f 009D                          bounceUp@midway 0079  
                        _normalQueueBuf 0388                              bounceUp@io 007A  
              sendProducedEvent@thisBit 00B2                             ?_initBounce 002D  
                       _actUponNVchange 50AC                          ??_shortFlicker 007B  
                 ?_deleteHappeningRange 00B3                              _switchTime 01AC  
          ??_timer1DoneInterruptHandler 0033                     __end_of_clearEvents 9FFA  
                   __end_of_cbusSendMsg 9F8A                    __end_of_moduleNvDefs 0000  
                     _canTransmitFailed 000C                           _io@main$F1444 00E6  
                           ?_initTicker 002D                             ?_initRomOps 002D  
                        _normalWriteIdx 01E1                             ?_initServos 002D  
                           ?_eventsInit 002D                           _ee_read_short 99E0  
                           pushAction@a 007C                          __end_of___lmul 9840  
                         _defaultEvents 5FB8                               i1memcpy@d 0044  
                             i1memcpy@n 0041                          __end_of_doAreq 7044  
                             i1memcpy@s 0046                          __end_of___wmul A3FA  
                        __end_of_doEnum A652                          __end_of_doNerd A6C6  
            removeTableEntry@tableIndex 009E                          __end_of_doWait 8750  
                        __end_of_doNvrd 9BF6                          __end_of_getEVs 77CE  
                        __end_of_doRqmn 8F52                          __end_of_doRqnp 917E  
                        __end_of_delete 944C                             ?_initialise 002D  
                        ??_processEvent 008A                             ?_setFLiMLed 002D  
                    i1_insertIntoRxFifo 94AE                        _removeTableEntry 7442  
                       needsStarting@io 0075                          _initStatusLeds A48C  
                        __end_of_memcpy 9D0E                             _doAreq$4586 00A6  
                           _doAreq$4587 00A8                          __end_of_thisNN 9386  
                   writeFlashImage@addr 007D                     writeFlashImage@data 0080  
                   start_initialization 7A54                         _SaveNodeDetails A35E  
                           ?_setSLiMLed 002D                     __end_of_getParFlags 998E  
                     ??_peekActionQueue 0077                        ??_clearAllEvents 0098  
                       _checkCANTimeout 9A7C                     ?i1_insertIntoRxFifo 0048  
                 i1_checkIncomingPacket 724E                             __end_of_pop 8882  
                             _NvBytePtr 01F3                 __end_of_cbusMsgReceived A522  
                  setBounceState@action 0071                setDigitalOutput@pinState 007A  
               ??_cbusSendEventWithData 009A                             _CANSTATbits 000F6E  
                         ??_readCPUType 0073                        doEnum@sendResult 0071  
                    parseFLiMCmd@rx_ptr 00E1                        writeFlashShort@i 0075  
                       ?_readFlashBlock 0076                           ??_mioFlimInit 0098  
                     actUponNVchange@io 00D9                            _initAnalogue 9FFA  
                         ??_loadNvCache 007F                        ?_doTimedResponse 002D  
                            ?i1_tickGet 003D                             ?_validStart 002D  
                    setServoPosition@io 0072                             ?_validateNV 0078  
                          doEvlrn@evVal 00D5                            doEvlrn@evNum 00D4  
                       numEv@tableIndex 0085                    ??i1_insertIntoRxFifo 004A  
                  __end_of__PointBuffer 91E8                    __end_of_setStatusLed A5A6  
                          doEvlrn@error 00D6                    __end_of_pollAnalogue 2A62  
                           ?_pollServos 002D                __end_of_insertIntoRxFifo 94AE  
            __end_of_evtIdxToTableIndex A6E8                rebuildHashtable@chainIdx 0096  
                  __end_of_setOutputPin 64CE                                ??___lmul 0079  
                      ?_writeFlashImage 007D                                ??_doAreq 009F  
                              ??___wmul 0075                                ??_doEnum 0071  
                          doNenrd@index 0094                 __end_of_cbusSendOpcMyNN A4E8  
                        ?_ee_read_short 0073                                ??_doNerd 0071  
               __end_of_cbusSendMsgMyNN A334                                ??_doWait 007F  
                              ??_doNvrd 0094                                ??_getEVs 0081  
                        ?_defaultEvents 00C8                                ??_doRqmn 008F  
                              ??_doRqnp 008F                                ??_delete 0074  
                      ?_writeFlashShort 002D                      addEvent@forceOwnNN 00B9  
                           __pdataBANK0 00E9                             __pdataBANK1 01F3  
                __end_of_initStatusLeds A4AC                                ??_memcpy 0077  
                              ??_thisNN 0073                           ??_initOutputs 0071  
                pollAnalogue@hthreshold 00BC                             _checkTxFifo 7D56  
                         _cbusSendEvent A334                           _cbusSendOpcNN A3FA  
                         _cbusSendMsgNN 9E98                        _startMultiOutput 8572  
                     ?_setServoPosition 0071                      startMultiOutput@io 0073  
                      _startServoOutput 7614                             __pbssBIGRAM 0700  
                         loadNvCache@np 0080                 ??_checkRemoveTableEntry 009F  
                           ?_pushAction 002D                           ??_FLiMSWCheck 00A1  
                         _analogueState 0190                             __pbssCOMRAM 0001  
                    ??_setServoPosition 0072                           __pcstackBANK0 0060  
                         __pcstackBANK1 01ED                           __pcstackBANK2 02CC  
             getProducedEvent@happening 0089                             ??_APP_doSOD 00BD  
                      i1__PointBuffer@b 003F                           _setMultiState 6AA2  
                       _happening2Event 0300                           _setServoState 6BD8  
                    startServoOutput@io 0074                      addEvent@tableIndex 00C7  
                cbusSendMsgMyNN@cbusNum 0090                   i1insertIntoRxFifo@ptr 0048  
                             _canRxFifo 0500                          canSend@success 008A  
               APP_doSOD@event_inverted 00CE                               _canTxFifo 0600  
                             addEvent@e 00C6                               addEvent@f 00C5  
                    addEvent@nodeNumber 00B3                             canTX@fullUp 0086  
              _factoryResetGlobalEvents A71E                               _checkCBUS 8D68  
                       ??_checkFlashing 007C                           ??_longFlicker 007B  
               __end_of_actUponNVchange 5366                      initInputScan@input 0078  
                pollAnalogue@lthreshold 00BE   sendInvertedProducedEvent@can_send_off 00B8  
                    initTicker@priority 0071                             _clearEvents 9FC2  
                           _cbusSendMsg 9F4E                    canFillRxFifo@hiIndex 0067  
                             __pnvBANK0 00EC                               __pnvBANK1 01F6  
             sendProducedEvent@thisByte 00B3                        setBounceState@io 0074  
                ??_deleteHappeningRange 00B4                            doNnevn@count 0097  
                  ee_read_short@ee_addr 0078                        ___lwdiv@dividend 0071  
                    validateNV@oldValue 0078                               _getAction A6D0  
              i1checkIncomingPacket@ptr 0047             ?_timer3DoneInterruptHandler 002D  
                   __end_of_readCPUType A574                         tickGet@IntFlag1 0076  
                       tickGet@IntFlag2 0075                               __pintcode 0848  
                     _lastInputScanTime 01C4                    i1tickGet@currentTime 0043  
                      getEVs@tableIndex 0086                     __end_of_mioFlimInit A6BC  
                  APP_doSOD@send_off_ok 00CB                                ?___awdiv 0077  
                             __ptext100 993C                               __ptext101 8184  
                              ?___lbdiv 0071                               __ptext110 A6C6  
                             __ptext102 5366                               __ptext111 A2AC  
                             __ptext103 A700                               __ptext120 5C1E  
                             __ptext112 7E10                               __ptext104 A706  
                             __ptext121 4166                               __ptext113 A3AE  
                             __ptext105 A190                               __ptext130 8AC4  
                             __ptext122 9F12                               __ptext114 1E4E  
                             __ptext106 797E                               __ptext131 9E18  
                             __ptext123 9DD6                               __ptext115 A3D4  
                             __ptext107 9D94                               __ptext140 8B4E  
                             __ptext132 A71E                               __ptext124 7442  
                             __ptext116 5FB8                               __ptext108 998E  
                             __ptext141 A4AC                               __ptext133 9BF6  
                             __ptext125 76F4                               __ptext117 9FC2  
                             __ptext109 A1C0                            popAction@ret 0077  
                             __ptext150 A58E                               __ptext142 A4CA  
                             __ptext134 A574                               __ptext126 89AC  
                             __ptext118 8230                               __ptext151 A690  
                             __ptext143 A308                               __ptext135 8384  
                             __ptext127 2A62                               __ptext119 82DC  
                             __ptext160 9032                               __ptext152 A69C  
                             __ptext144 7150                               __ptext136 9C84  
                             __ptext128 7F78                               __ptext161 7B1A  
                             __ptext153 A5A6                               __ptext145 A640  
                             __ptext137 A506                               __ptext129 6320  
                             __ptext170 A5BE                               __ptext162 A61A  
                             __ptext154 A35E                               __ptext146 917E  
                             __ptext138 77CE                               __ptext171 A3FA  
                             __ptext163 A066                               __ptext155 6964  
                             __ptext147 666E                               __ptext139 680C  
                             __ptext180 A5D6                               __ptext172 9E98  
                             __ptext164 8DEA                               __ptext156 8750  
                             __ptext148 A468                               __ptext181 9A7C  
                             __ptext173 9F4E                               __ptext165 A70C  
                             __ptext157 A4E8                               __ptext149 A030  
                             __ptext190 92B8                               __ptext182 9250  
                             __ptext174 A53E                               __ptext166 A674  
                             __ptext158 7044                               __ptext183 7D56  
                             __ptext175 6170                               __ptext167 A2DA  
                             __ptext159 A1F0                               __ptext192 A0CE  
                             __ptext184 8614                               __ptext176 973A  
                             __ptext168 9A2E                               __ptext193 A220  
                             __ptext185 94AE                               __ptext177 9CCA  
                             __ptext169 A522                               __ptext194 64CE  
                             __ptext186 9D0E                               __ptext187 724E  
                             __ptext179 A604                               __ptext188 9840  
                             __ptext189 A652                               _findEvent 89AC  
                _startDigitalOutput$680 00C0                                ?___lwdiv 0071  
                              ?_canInit 007B                          _writeFlashByte A574  
                              ?___lwmod 0071                     __end_of_loadNvCache 9E5A  
                          doReqev@evVal 00A2                            doReqev@evNum 009F  
                      processActions@io 00CE                         getNN@tableIndex 0087  
                              ?_canSend 0088                            doReval@enNum 0097  
                      ??_factoryResetEE 007D                         ?_initStatusLeds 002D  
                             doAreq@ev0 00AB                            doReval@evVal 0098  
                          doReval@evNum 0094                         __PointBuffer@pt 0074  
                             _flashTime 01A4                                ?_doError 002D  
                              ?_doEvlrn 00D0                                ?_doNenrd 002D  
                              ?_doEvuln 00A4                             __pintcodelo 0858  
        cbusSendEventWithData@eventNode 0093                                ?_doNnclr 002D  
                              ?_ee_read 0071                                ?_doNnevn 002D  
               __end_of_SaveNodeDetails A388                                ?_doReqev 009B  
                              ?_doReval 0094                                ?_doRqevn 002D  
                              ?_doNvset 00DA                            _parseCBUSMsg 9B62  
                              ?_doRqnpn 002D                                ?_getHash 0088  
              deleteActionRange@updated 00B9                               _flimState 0016  
                           _getParFlags 993C                 __end_of_checkCANTimeout 9ACA  
                         ??_setNewCanId 0077                          _resultRequired 0008  
                        ?_cbusSendEvent 009E                          ?_cbusSendOpcNN 0093  
                        ?_cbusSendMsgNN 008F                               _larbCount 01DE  
                     __p_FCUparams_text 0838                            ??_canTxError 004B  
                             _completed 8882                        _getProducedEvent 9570  
                          ??_canQueueRx 0080                             __smallconst 0F00  
           __end_of_canInterruptHandler A5EE                             _COMSTATbits 000F71  
              __end_of_initAnaloguePort A3D4                            _parseFLiMCmd 303C  
                     ?_rebuildHashtable 002D                                ?_tickISR 002D  
                ?i1_checkIncomingPacket 0047                    setOutputPosition@pos 007C  
                              ?_tickGet 0071                         _rxIndexNextFree 000F  
                              ?_low_isr 002D                    setOutputState@action 0076  
                              ?_setType 00CC                         _rxIndexNextUsed 000E  
                             _mioNvInit A71C                          defaultNVs@type 008B  
                        ?_setMultiState 0071                 startBounceOutput@action 0071  
                          _nodeVarTable 00FF80                     __end_of_initOutputs A2AC  
                        ?_setServoState 0071                    __end_of_shortFlicker 9110  
                             _readInput 6E24                      ??_rebuildHashtable 008E  
                      ___lwdiv@quotient 0076                         validateNV@index 007D  
                   _writeFlashWithErase A066                       ee_read_short@addr 0073  
                          ??_canbusRecv 009D                                ?_writeEv 00A1  
                       validateNV@value 0079                    cbusSendEvent@cbusNum 00AD  
                       startServos@type 00C3                             _flashDelays 0160  
                    processActions@type 00CC                               _expedited 001B  
                      ?_cbusMsgReceived 00A1                     __end_of_FLiMSWCheck 680C  
                 __end_of_needsStarting 8D68                          doReval@evIndex 0096  
                            ?_checkCBUS 002D                    actUponNVchange@index 00D8  
                          ??_defaultNVs 008C                               _inputScan 449A  
                  cbusSendEvent@onEvent 00A2                    cbusSendOpcNN@cbusNum 0097  
                  actUponNVchange@value 00D3                          ___wmul@product 0075  
                             _loopCount 0264                           ??_removeEvent 00A3  
                              _LATBbits 000F8A                    __end_of_processEvent 55EE  
                 __end_of_canFillRxFifo 86B4                               _popAction A420  
                     findEvent@chainIdx 0099                         _isNoServoPulses A674  
                        _portInProgress 00E8                                _PIE1bits 000F9D  
                      ??_ee_write_short 007B                                _PIE2bits 000FA0  
                  rebuildHashtable@hash 0094                                _PIE5bits 000F76  
                           ??i1_tickGet 0041                               getHash@en 008A  
                             getHash@nn 0088                SaveNodeDetails@flimState 009A  
                      _haveRequestedAdc 0018                               _targetPos 0170  
    __end_of_timer1DoneInterruptHandler A250              _timer1DoneInterruptHandler A220  
                    __end_of_canTxError 92B8                               _pollCount 0120  
                              _PIR1bits 000F9E                                _PIR2bits 000FA1  
                           _flickerTime 01A0                         ??_ee_read_short 0075  
                            ?_getAction 002D                                _PIR4bits 000FB7  
                              _PIR5bits 000F77                      __end_of_canQueueRx A674  
                         canInit@busNum 002D                               _setclkMHz A6FA  
                     doReqev@tableIndex 00A1                         ??_defaultEvents 00C9  
               actUponNVchange@oldValue 00D2                  __end_of_writeFlashByte A58E  
                   __end_of_longFlicker A1F0                                _RCONbits 000FD0  
                 __end_of_mioEventsInit A640                       doReqev@nodeNumber 009B  
                      ??_setOutputState 0078                                _RXF0SIDL 000EE1  
                  ?_writeFlashWithErase 002D           startDigitalOutput@actionState 00C3  
                              _RXM0EIDH 000EFA                                _RXM0EIDL 000EFB  
                            ?_findEvent 008E                                _TXB0SIDH 000F21  
                              _RXM1EIDH 000EFE                        ?_cbusSendOpcMyNN 0091  
                              _TXB0SIDL 000F22                                _RXM1EIDL 000EFF  
                              _TXB1SIDH 000F11                                _TXB1SIDL 000F12  
                              _TXB2SIDH 000F01                        ?_cbusSendMsgMyNN 008F  
                              _TXB2SIDL 000F02                                _RXFBCON0 000E71  
                              _RXFBCON1 000E72                                _RXFBCON2 000E73  
                              _RXFBCON3 000E74                                _RXFBCON4 000E75  
                              _RXFBCON5 000E76                                _RXFBCON6 000E77  
                              _RXFBCON7 000E78                                _RXM0SIDH 000EF8  
                              _RXM0SIDL 000EF9                                _RXM1SIDH 000EFC  
                              _RXM1SIDL 000EFD                         inputScan@change 00B9  
                     _requestNodeNumber A5A6                            doRqmn@namadr 008F  
                   i2setOutputPin@state 002D                       _stepsPerPollSpeed 0130  
                          doRqmn@namptr 0093                      ee_write_short@addr 0077  
                    ee_write_short@data 0079                      __end_of_canbusRecv 78A8  
                             configIO@i 0083                             _bounceState 02B4  
                  cbusSendMsgNN@cbusNum 0092                            ??_doneAction 0078  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                         _normalReadIdx 01E2                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0071                       _timedResponseStep 0013  
                    ?_requestNodeNumber 002D                                i1_doEnum A652  
                             _startWait 01B8                               _startTime 01CC  
                            ?_completed 0071            ??_isSuitableTimeToWriteFlash 0071  
                          doRqevn@count 0094                       defaultEvents@type 00C8  
                    __end_of_defaultNVs 2470                            _setFlashWord 9F12  
                         _prevFlimState 0006                                i1_memcpy 9D0E  
                 __end_of_initInputScan 7D56                         _flushFlashImage A61A  
                    i1doEnum@sendResult 003D              processActions@simultaneous 00CA  
                            ?_mioNvInit 002D                     __end_of_setNewCanId 8BD8  
                          ?_doFLiMFlash 002D                 sendProducedEvent@status 00B1  
                   ??_requestNodeNumber 0098                              ?_readInput 002D  
                        doWait@duration 007D                           ??_setupTimer1 0077  
                         ??_setupTimer3 0077                            ??_bounceDown 007F  
                          _moduleNvDefs FF80                       ___lmul@multiplier 0071  
                           _INTCON2bits 000FF1                     __end_of_module_type 0F4D  
              parseCbusEvent@tableIndex 009E                          doAreq@thisByte 00A4  
                        _expeditedQueue 01E3                         startOutput@type 00C6  
              parseCbusEvent@nodeNumber 00A1                              ?_inputScan 002D  
                           _readCPUType A55A                        ?_actUponNVchange 00D2  
              __end_of_removeTableEntry 7534                              ?_popAction 002D  
                           _mioFlimInit A6B2                              _EECON1bits 000F7F  
                             peek@index 0073                             doError@code 0093  
                   startBounceOutput@io 0072                             _loadNvCache 9E18  
                    __end_of_doneAction A6EE                 _getDefaultProducedEvent A712  
                              __Hrparam 0000                           _timedResponse 0014  
                          ee_write@addr 0073                             _eventChains 0700  
                          ee_write@data 0075                evtIdxToTableIndex@evtIdx 0071  
                          ??_initBounce 0071                 APP_addEvent@eventNumber 00CA  
                            ?_setclkMHz 002D                               memcpy@tmp 0077  
                              __Lrparam 0000                       doReval@tableIndex 009A  
                       ?_writeFlashByte 0087                   ??_writeFlashWithErase 0076  
             __end_of_requestNodeNumber A5BE                            ??_initTicker 0071  
                   __end_of_removeEvent A468                            ??_initRomOps 0071  
                removeEvent@eventNumber 00A1                            ??_initServos 0081  
                          ??_eventsInit 0098                            thisNN@rx_ptr 0071  
                       _peekActionQueue 95CE                         ??_cbusSendEvent 00A3  
                       ??_cbusSendOpcNN 0097                         ??_cbusSendMsgNN 0092  
                              _addEvent 5C1E                       _startBounceOutput 9386  
                        _processActions 583A                      __end_of_bounceDown 39F2  
                          ??_initialise 00D2                        ?_SaveNodeDetails 0098  
                         canSend@msgLen 0089                            ??_setFLiMLed 0071  
                         ??_startServos 00C1                        ?_checkCANTimeout 002D  
                         ??_startOutput 00C7                             _initOutputs A27E  
                    ?_startBounceOutput 0071               rebuildHashtable@happening 0095  
                           ee_read@addr 0071                         ??_setMultiState 0072  
                       ??_setServoState 0072                             _FLiMSWCheck 666E  
               deleteActionRange@action 00BA                            ??_setSLiMLed 0071  
    i1checkIncomingPacket@incomingCanId 004E        checkIncomingPacket@incomingCanId 0082  
                              canTX@msg 007C                                _cbusInit A09C  
                              canTX@ptr 0082                           initOutputs@io 0071  
                  processActions@action 00D0                                _ee_write 9A2E  
                       ___lwdiv@divisor 0073              ?_sendInvertedProducedEvent 00B5  
                          __PointBuffer 917E                            _setStatusLed A58E  
                       ___lwdiv@counter 0075                     needsStarting@action 0071  
                          _pollAnalogue 2470                                __ptext10 583A  
                              _deviceid 01D0                                __ptext11 96E2  
                              __ptext20 A420                                __ptext12 4DC6  
                              __ptext21 87EC                                __ptext13 9896  
                            _T1GCONbits 000FAA                                __ptext30 39F2  
                              __ptext22 97EA                                __ptext14 8CE4  
                              __ptext31 A6B2                                __ptext23 A6A8  
                              __ptext15 A6D0                             defaultNVs@i 008E  
                              __ptext40 9E5A                                __ptext32 A71C  
                              __ptext24 9ACA                                __ptext16 95CE  
                              __ptext41 A6FA                                __ptext33 9D52  
                              __ptext25 9F8A                                __ptext17 8BD8  
                              __ptext50 A48C                                __ptext42 5A40  
                              __ptext34 A6EE                                __ptext26 93EA  
                              __ptext18 86B4                                __ptext51 A684  
                              __ptext43 8E6C                                __ptext35 A09C  
                              __ptext27 8882                                __ptext19 A6E8  
                              __ptext60 7EC6                                __ptext52 8A3A  
                              __ptext44 A388                                __ptext36 99E0  
                              __ptext28 2470                                __ptext61 A664  
                              __ptext53 A6D8                                __ptext45 A27E  
                              __ptext37 5DF0                                __ptext29 449A  
                              __ptext70 7534                                __ptext62 944C  
                              __ptext54 3DB8                                __ptext46 7C98  
                              __ptext38 A62E                                __ptext71 A55A  
                              __ptext63 734A                                __ptext55 9B16  
                              __ptext47 6E24                                __ptext39 A6F4  
                              __ptext80 50AC                                __ptext72 9110  
                              __ptext64 8D68                                __ptext56 78A8  
                              __ptext48 9FFA                                __ptext81 7614  
                              __ptext73 8EE0                                __ptext65 90A2  
                              __ptext57 9570                                __ptext49 A100  
                              __ptext90 A160                                __ptext82 8572  
                              __ptext74 A130                                __ptext66 9B62  
                              __ptext58 A712                                __ptext91 A6BC  
                              __ptext83 9386                                __ptext75 8028  
                              __ptext67 303C                                __ptext59 A334  
                              __ptext92 9510                                __ptext84 6BD8  
                              __ptext76 80D6                                __ptext68 9320  
                              __ptext93 A6E0                                __ptext85 6AA2  
                              __ptext77 8918                                __ptext69 962A  
                              __ptext94 A5EE                                __ptext86 6CFE  
                              __ptext78 842A                                __ptext95 A444  
                              __ptext87 9ED6                                __ptext79 84CE  
                              __ptext96 91E8                                __ptext88 9BAC  
                              __ptext97 9686                                __ptext89 9C3E  
                              __ptext98 6F34                                __ptext99 98EA  
                   ??_startBounceOutput 0072                            validateNV@io 007C  
                      ??_readFlashBlock 0078                 __end_of_isNoServoPulses A684  
                          _setOutputPin 6320                    processActions@nextIo 00CF  
                              _configIO 2A62                                _flimInit 9D52  
               deleteActionRange@number 00B3                          _processOutputs 55EE  
         cbusSendEventWithData@eventNum 0095                                _flashbuf 0348  
                              _flashidx 01D4                      __end_of_initBounce A27E  
                              _high_isr 0848                                _bounceUp 4AC0  
                            _T3GCONbits 000FB0                  initialise@simultaneous 00D7  
                    __end_of_initTicker 9E98                      __end_of_initRomOps A690  
                           ??_checkCBUS 00E6                      __end_of_initServos 5C1E  
                        _parseCbusEvent 8184                      __end_of_eventsInit A6F4  
                              doNenrd@n 0096                             doSnn@rx_ptr 009B  
                             setType@io 00D1                             _longFlicker A1C0  
         __end_of_cbusSendEventWithData 7F78                                doNnevn@f 0096  
                              doNnevn@i 0098              sendProducedEvent@happening 00B4  
                      ee_read_short@ret 007A                           _configIO$1531 0080  
                   __end_of_setupTimer1 9032                     __end_of_setupTimer3 8FC2  
                         ?_factoryReset 002D                __end_of_startMultiOutput 8614  
                    __end_of_initialise 3DB8                           findEvent@hash 0098  
              __end_of_startServoOutput 76F4                      __end_of_setFLiMLed A6A8  
                          ??_validStart 007D                                doRqevn@i 0095  
                     doRqmn@copyCounter 0096                            ??_validateNV 007A  
                        writeEv@nextIdx 00B2                             getEVs@evIdx 0085  
                           getEVs@evNum 0087                     cbusSendOpcNN@nodeID 0094  
                   __end_of_spareparams 0F45                             ??_getAction 0078  
                          ??_pollServos 00B5                                isa$xinst 000000  
               readFlashBlock@flashAddr 0076               __end_of_startBounceOutput 93EA  
                     ?_insertIntoRxFifo 007C                      __end_of_setSLiMLed A69C  
                __end_of_processActions 5A40                clearAllEvents@tableIndex 009D  
                              int$flags 004F                             ??_findEvent 0092  
                              _quantity 9F8A                        canInit@initCanID 007B  
                cbusSendEvent@eventNode 009E                             delete@index 0073  
                          _rxOflowCount 01DA                      ??_insertIntoRxFifo 007E  
                     writeEv@tableIndex 00B1                 __end_of_flushFlashImage A62E  
                     _setOutputPosition 8E6C                        processOutputs@io 00B8  
            processEnumeration@newCanId 0099                  APP_addEvent@forceOwnNN 00CE  
                           _setNewCanId 8B4E                            ?_checkTxFifo 002D  
                          pollServos@io 00C0                             ??_completed 0073  
                         doAreq@thisBit 00A3                      ?_setOutputPosition 007C  
                             quantity@q 0071                            ??_pushAction 007C  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                           _module_type 0F45              ??_factoryResetGlobalEvents 0071  
                    _evtIdxToTableIndex A6E0                             _rxFifoUsage 01D8  
                              memcpy@d1 0071                                memcpy@s1 0073  
                __end_of_processOutputs 583A                             ??_mioNvInit 0071  
                        _APP_doSOD$1818 00C7                          _APP_doSOD$1819 00C8  
                     APP_addEvent@evVal 00CD           __end_of_checkRemoveTableEntry 9E18  
                     APP_addEvent@evNum 00CC                      __end_of_validStart A220  
                   __end_of_startServos 7C98                      startFLiMFlash@fast 007C  
                           ??_readInput 0071                      __end_of_validateNV 8572  
                   __end_of_startOutput 973A                       parseCbusEvent@msg 009B  
                   ??_setOutputPosition 007E                  __end_of_parseCbusEvent 8230  
            __end_of_processEnumeration 6964                          i1__PointBuffer 92B8  
                           getHash@hash 008D                      __end_of_pollServos 1E4E  
                              intlevel1 0000                                intlevel2 0000  
                   ?_evtIdxToTableIndex 002D                             ??_inputScan 00B5  
                          _servoInBlock 0012             checkIncomingPacket@msgFound 0081  
                    __p_FLiMparams_text 0820               ??_getDefaultProducedEvent 0071  
                      ___lwmod@dividend 0071                  APP_addEvent@tableIndex 00CF  
                              numEv@num 0083         sendInvertedProducedEvent@invert 00B6  
                        ??_factoryReset 00D2                             ??_popAction 0077  
                          ?_clearEvents 002D                         readFlashBlock@i 007C  
                          ?_cbusSendMsg 008B                   removeEvent@tableIndex 00A3  
                           _removeEvent A444                       ??_actionQueueInit 0071  
                APP_addEvent@nodeNumber 00C8                             _TXB0CONbits 000F20  
              __end_of_getProducedEvent 95CE                   removeEvent@nodeNumber 009F  
                           _TXB1CONbits 000F10                 __end_of_peekActionQueue 962A  
                           _TXB2CONbits 000F00                        ??_initStatusLeds 0071  
                           _txFifoUsage 01D9                             ??_setclkMHz 0071  
           deleteActionRange@tableIndex 00BC                      __end_of_pushAction A1C0  
            __end_of_tableIndexToEvtIdx A6E0                              _FLiMparams 0820  
                          _shortFlicker 90A2                           canQueueRx@msg 007F  
                    tickGet@currentTime 0077                         ?_processActions 002D  
                           _normalQueue 01E8               __end_of_setOutputPosition 8EE0  
                  ??_evtIdxToTableIndex 0071                       initialise@evIndex 00D9  
                         _producedEvent 01A8                            _txOflowCount 01DB  
                 setDigitalOutput@state 0077                            ?_getParFlags 002D  
                checkIncomingPacket@ptr 007B      __end_of_isSuitableTimeToWriteFlash A712  
            _isSuitableTimeToWriteFlash A70C                 ??i1_checkIncomingPacket 0049  
                     initialise@paction 00DE                 APP_doSOD@happeningIndex 00D1  
                          _processEvent 5366                        _ticksWhenStopped 0200  
                       ___lwmod@divisor 0073          sendInvertedProducedEvent@state 00B5  
                       ___lwmod@counter 0075                       _deleteActionRange 82DC  
                           findEvent@en 0096                       ?_initAnaloguePort 002D  
                           findEvent@nn 0094                       writeEv@startIndex 00AD  
                     _deleteActionQueue 9ACA                    findEvent@eventNumber 0090  
                              writeEv@e 00AF                                writeEv@f 00B0  
                       ?_processOutputs 002D                  __end_ofi1__PointBuffer 9320  
                    ?_deleteActionRange 00B3                      ??_initAnaloguePort 0071  
                    QNNrespond@paramptr 0093                      ?_deleteActionQueue 002D  
                           _setupTimer1 8FC2                             _setupTimer3 8F52  
                      ?_isNoServoPulses 002D                         ?_parseCbusEvent 009B  
                startMultiOutput@action 0071                        _setDigitalOutput 7F78  
                    cbusInit@initNodeID 007E                             _spareparams 0F41  
                   ??_deleteActionRange 00B4                        _setNormalActions A700  
                   ??_deleteActionQueue 0077                   __end_of_checkFlashing 7442  
                 ee_write_short@ee_addr 007B                    validStart@tableIndex 007F  
           ?_timer1DoneInterruptHandler 002D                             _pulseDelays 02A4  
